getfenv(0).sourceMap={}local _93e9833fd9ee8d362f5ef506d3c82588=Instance.new(
'Model')_93e9833fd9ee8d362f5ef506d3c82588.Name='DataModel'local
_f145f6f157167e0e1cda3f500bceead8=Instance.new('Model')
_f145f6f157167e0e1cda3f500bceead8.Name='roblox-rs'
_f145f6f157167e0e1cda3f500bceead8.Parent=_93e9833fd9ee8d362f5ef506d3c82588 local
_c74059b4194a15f07e05845f854df742=Instance.new('Script')
_c74059b4194a15f07e05845f854df742.Name='RS'sourceMap[
_c74059b4194a15f07e05845f854df742]=
' local rt = require(script.runtime)\nlocal wasm, memory, util\nlocal createPointer, getPointer, dropPointer, invokeOnce, readString, writeStringReturn\n\nlocal function wrapConstructorNumber(constructor)\n\treturn function(...)\n\t\treturn createPointer(constructor(...))\n\tend\nend\n\nlocal function wrapConstructorString(constructor)\n\treturn function(addr, len)\n\t\treturn createPointer(constructor(addr, len))\n\tend\nend\n\nlocal env = {\n\t-- lbiraries\n\tlib_task_delay = function(delay, stack, fn_ptr)\n\t\ttask.delay(delay, invokeOnce, stack, fn_ptr)\n\tend,\n\n\tlib_task_defer = function(stack, fn_ptr)\n\t\ttask.defer(invokeOnce, stack, fn_ptr)\n\tend,\n\n\tlib_task_spawn = function(stack, fn_ptr)\n\t\ttask.spawn(invokeOnce, stack, fn_ptr)\n\tend,\n\n\tlib_task_wait = function(delay)\n\t\ttask.wait(delay)\n\tend,\n\n\t-- pointers\n\tdrop_pointer = function(ptr)\n\t\tdropPointer(ptr)\n\tend,\n\n\tclone_pointer = function(ptr)\n\t\treturn createPointer(getPointer(ptr))\n\tend,\n\n\t-- Instances\n\n\tget_game = function()\n\t\treturn createPointer(game)\n\tend,\n\n\t-- testing/logging\n\tprint = function(addr, len)\n\t\ttask.defer(print, readString(addr, len))\n\tend,\n\terror = function(addr, len)\n\t\terror(readString(addr, len))\n\tend,\n}\n\nlocal abi = require(script.abi)\nfor i, v in pairs(abi.ffi) do\n\tenv[i] = v\nend\n\nwasm = require(script.wasm)({\n\tenv = {\n\t\tfunc_list = env,\n\t},\n})\n\nmemory = wasm.memory_list.memory\nutil = require(script.util)(rt, wasm, memory)\n\nabi.load(wasm, rt, util)\n\ncreatePointer, getPointer, dropPointer, invokeOnce, readString =\n\tutil.createPointer, util.getPointer, util.dropPointer, util.invokeOnce, util.readString\n\nprint("start wasm")\n\nlocal start = os.clock()\nwasm.func_list.hook()\nwasm.func_list.main()\nprint("Wasm took " .. (os.clock() - start) * 1000 .. " ms to execute")\n '
_c74059b4194a15f07e05845f854df742.Parent=_f145f6f157167e0e1cda3f500bceead8 local
_1d676e0792d362a6f550eb714bc6d053=Instance.new('ModuleScript')
_1d676e0792d362a6f550eb714bc6d053.Name='abi'sourceMap[
_1d676e0792d362a6f550eb714bc6d053]=
' local abi = { ffi = {} };\nlocal getPointer, createPointer, memory, storeU8, storeU32, storeFloat, loadU8, loadU32, loadFloat, loadString, allocString, allocVec, functions, invokeFunction, dropFunctionRef;\nlocal connections = {};\nlocal function createConnection(stack, vtable, connection)\n\tlocal id = createPointer(connection);\n\tconnections[id] = { stack, vtable };\n\treturn id;\nend\nfunction abi.load(wasm, rt, util)\n\tgetPointer, createPointer, memory, storeU8, storeU32, storeFloat, loadU8, loadU32, loadFloat, loadString, allocString, allocVec, functions, invokeFunction, dropFunctionRef = util.getPointer, util.createPointer, wasm.memory_list.memory, rt.store.i32_n8, rt.store.i32, rt.store.f64, rt.load.i32_u8, rt.load.i32, rt.load.f64, rt.load.string, wasm.func_list.__heap_alloc_string, wasm.func_list.__heap_alloc_vec, wasm.table_list.__indirect_function_table, util.invokeFunction, util.dropFunctionRef;\nend\nfunction abi.ffi.disconnect_connection(connection)\n\tlocal func = connections[connection];\n\tif not func then return end\n\n\tgetPointer(connection):Disconnect();\n\tdropFunctionRef(func[1], func[2]);\n\tconnections[connection] = nil;\nend\nfunction abi.ffi.property_getter_instance_archivable(self)\n\tlocal result_0 = getPointer(self).Archivable;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_instance_archivable_set_archivable(self, value)\n\tgetPointer(self).Archivable = value == 1;\nend\nfunction abi.ffi.property_getter_instance_class_name(self)\n\tlocal result_0 = getPointer(self).ClassName;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_instance_name(self)\n\tlocal result_0 = getPointer(self).Name;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_instance_name_set_name(self, value_addr, value_len)\n\tgetPointer(self).Name = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.method_instance_clear_all_children(self)\n\tgetPointer(self):ClearAllChildren()\nend\nfunction abi.ffi.method_instance_clone_fn_clone(self)\n\tlocal result_0 = getPointer(self):Clone();\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_instance_destroy(self)\n\tgetPointer(self):Destroy()\nend\nfunction abi.ffi.method_instance_find_first_ancestor(self, name_addr, name_len)\n\tlocal result_0 = getPointer(self):FindFirstAncestor(loadString(memory, name_addr, name_len));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_instance_find_first_ancestor_of_class(self, class_name_addr, class_name_len)\n\tlocal result_0 = getPointer(self):FindFirstAncestorOfClass(loadString(memory, class_name_addr, class_name_len));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_instance_find_first_ancestor_which_is_a(self, class_name_addr, class_name_len)\n\tlocal result_0 = getPointer(self):FindFirstAncestorWhichIsA(loadString(memory, class_name_addr, class_name_len));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_instance_find_first_child(self, name_addr, name_len, recursive)\n\tlocal result_0 = getPointer(self):FindFirstChild(loadString(memory, name_addr, name_len), recursive == 1);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_instance_find_first_child_of_class(self, class_name_addr, class_name_len)\n\tlocal result_0 = getPointer(self):FindFirstChildOfClass(loadString(memory, class_name_addr, class_name_len));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_instance_find_first_child_which_is_a(self, class_name_addr, class_name_len, recursive)\n\tlocal result_0 = getPointer(self):FindFirstChildWhichIsA(loadString(memory, class_name_addr, class_name_len), recursive == 1);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_instance_find_first_descendant(self, name_addr, name_len)\n\tlocal result_0 = getPointer(self):FindFirstDescendant(loadString(memory, name_addr, name_len));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_instance_get_actor(self)\n\tlocal result_0 = getPointer(self):GetActor();\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_instance_get_full_name(self)\n\tlocal result_0 = getPointer(self):GetFullName();\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.method_instance_is_a(self, class_name_addr, class_name_len)\n\tlocal result_0 = getPointer(self):IsA(loadString(memory, class_name_addr, class_name_len));\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_instance_is_ancestor_of(self, descendant)\n\tlocal result_0 = getPointer(self):IsAncestorOf(getPointer(descendant));\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_instance_is_descendant_of(self, ancestor)\n\tlocal result_0 = getPointer(self):IsDescendantOf(getPointer(ancestor));\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_instance_wait_for_child(self, child_name_addr, child_name_len, time_out)\n\tlocal result_0 = getPointer(self):WaitForChild(loadString(memory, child_name_addr, child_name_len), time_out);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.event_instance_ancestry_changed_on_ancestry_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).AncestryChanged:Connect(function(child, parent)\n\t\tlocal child_optional, child_optional_0 = 0, 0;\n\t\tif (child ~= nil) then\n\t\t\tchild_optional, child_optional_0 = 1, createPointer(child);\n\t\tend\n\t\tlocal parent_optional, parent_optional_0 = 0, 0;\n\t\tif (parent ~= nil) then\n\t\t\tparent_optional, parent_optional_0 = 1, createPointer(parent);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, child_optional, child_optional_0, parent_optional, parent_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_instance_attribute_changed_on_attribute_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).AttributeChanged:Connect(function(attribute)\n\t\tlocal attribute_len = #attribute;\n\t\tlocal attribute_content = allocString(attribute_len);\n\t\tfor i = 1, attribute_len do\n\t\t\tstoreU8(memory, attribute_content + (i - 1), string.byte(attribute:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, attribute_content, attribute_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_instance_child_added_on_child_added(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).ChildAdded:Connect(function(child)\n\t\tlocal child_optional, child_optional_0 = 0, 0;\n\t\tif (child ~= nil) then\n\t\t\tchild_optional, child_optional_0 = 1, createPointer(child);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, child_optional, child_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_instance_child_removed_on_child_removed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).ChildRemoved:Connect(function(child)\n\t\tlocal child_optional, child_optional_0 = 0, 0;\n\t\tif (child ~= nil) then\n\t\t\tchild_optional, child_optional_0 = 1, createPointer(child);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, child_optional, child_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_instance_descendant_added_on_descendant_added(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).DescendantAdded:Connect(function(descendant)\n\t\tlocal descendant_optional, descendant_optional_0 = 0, 0;\n\t\tif (descendant ~= nil) then\n\t\t\tdescendant_optional, descendant_optional_0 = 1, createPointer(descendant);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, descendant_optional, descendant_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_instance_descendant_removing_on_descendant_removing(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).DescendantRemoving:Connect(function(descendant)\n\t\tlocal descendant_optional, descendant_optional_0 = 0, 0;\n\t\tif (descendant ~= nil) then\n\t\t\tdescendant_optional, descendant_optional_0 = 1, createPointer(descendant);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, descendant_optional, descendant_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_instance_destroying_on_destroying(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Destroying:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_instance_parent_set_parent(self, value_kind, value)\n\tlocal value_optional;\n\tif (value_kind == 1) then\n\t\tvalue_optional = getPointer(value);\n\tend\n\tgetPointer(self).Parent = value_optional;\nend\nfunction abi.ffi.event_instance_changed_on_instance_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Changed:Connect(function(property)\n\t\tlocal property_len = #property;\n\t\tlocal property_content = allocString(property_len);\n\t\tfor i = 1, property_len do\n\t\t\tstoreU8(memory, property_content + (i - 1), string.byte(property:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, property_content, property_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_accoutrement_attachment_forward(self)\n\tlocal result_0 = getPointer(self).AttachmentForward;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_accoutrement_attachment_forward_set_attachment_forward(self, value)\n\tgetPointer(self).AttachmentForward = getPointer(value);\nend\nfunction abi.ffi.property_getter_accoutrement_attachment_point(self)\n\tlocal result_0 = getPointer(self).AttachmentPoint;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_accoutrement_attachment_point_set_attachment_point(self, value)\n\tgetPointer(self).AttachmentPoint = getPointer(value);\nend\nfunction abi.ffi.property_getter_accoutrement_attachment_pos(self)\n\tlocal result_0 = getPointer(self).AttachmentPos;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_accoutrement_attachment_pos_set_attachment_pos(self, value)\n\tgetPointer(self).AttachmentPos = getPointer(value);\nend\nfunction abi.ffi.property_getter_accoutrement_attachment_right(self)\n\tlocal result_0 = getPointer(self).AttachmentRight;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_accoutrement_attachment_right_set_attachment_right(self, value)\n\tgetPointer(self).AttachmentRight = getPointer(value);\nend\nfunction abi.ffi.property_getter_accoutrement_attachment_up(self)\n\tlocal result_0 = getPointer(self).AttachmentUp;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_accoutrement_attachment_up_set_attachment_up(self, value)\n\tgetPointer(self).AttachmentUp = getPointer(value);\nend\nfunction abi.ffi.property_getter_accessory_accessory_type(self)\n\tlocal result_0 = getPointer(self).AccessoryType;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_accessory_accessory_type_set_accessory_type(self, value)\n\tgetPointer(self).AccessoryType = value;\nend\nfunction abi.ffi.property_getter_ad_portal_portal_status(self)\n\tlocal result_0 = getPointer(self).PortalStatus;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_ad_portal_portal_type(self)\n\tlocal result_0 = getPointer(self).PortalType;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ad_portal_portal_type_set_portal_type(self, value)\n\tgetPointer(self).PortalType = value;\nend\nfunction abi.ffi.property_getter_animation_animation_id(self)\n\tlocal result_0 = getPointer(self).AnimationId;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_animation_animation_id_set_animation_id(self, value)\n\tgetPointer(self).AnimationId = getPointer(value);\nend\nfunction abi.ffi.property_getter_animation_clip_loop(self)\n\tlocal result_0 = getPointer(self).Loop;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_animation_clip_loop_set_loop(self, value)\n\tgetPointer(self).Loop = value == 1;\nend\nfunction abi.ffi.property_getter_animation_clip_priority(self)\n\tlocal result_0 = getPointer(self).Priority;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_animation_clip_priority_set_priority(self, value)\n\tgetPointer(self).Priority = value;\nend\nfunction abi.ffi.method_keyframe_sequence_add_keyframe(self, keyframe)\n\tgetPointer(self):AddKeyframe(getPointer(keyframe))\nend\nfunction abi.ffi.method_keyframe_sequence_remove_keyframe(self, keyframe)\n\tgetPointer(self):RemoveKeyframe(getPointer(keyframe))\nend\nfunction abi.ffi.method_animation_clip_provider_register_active_animation_clip(self, animation_clip)\n\tlocal result_0 = getPointer(self):RegisterActiveAnimationClip(getPointer(animation_clip));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_animation_clip_provider_register_animation_clip(self, animation_clip)\n\tlocal result_0 = getPointer(self):RegisterAnimationClip(getPointer(animation_clip));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_animation_clip_provider_get_animation_clip_async(self, asset_id)\n\tlocal result_0 = getPointer(self):GetAnimationClipAsync(getPointer(asset_id));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_animation_clip_provider_get_animations(self, user_id)\n\tlocal result_0 = getPointer(self):GetAnimations(user_id);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_getter_animation_stream_track_is_playing(self)\n\tlocal result_0 = getPointer(self).IsPlaying;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_animation_stream_track_priority(self)\n\tlocal result_0 = getPointer(self).Priority;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_animation_stream_track_priority_set_priority(self, value)\n\tgetPointer(self).Priority = value;\nend\nfunction abi.ffi.property_getter_animation_stream_track_weight_current(self)\n\tlocal result_0 = getPointer(self).WeightCurrent;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_animation_stream_track_weight_target(self)\n\tlocal result_0 = getPointer(self).WeightTarget;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_animation_track_animation(self)\n\tlocal result_0 = getPointer(self).Animation;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_getter_animation_track_is_playing(self)\n\tlocal result_0 = getPointer(self).IsPlaying;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_animation_track_length(self)\n\tlocal result_0 = getPointer(self).Length;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_animation_track_looped(self)\n\tlocal result_0 = getPointer(self).Looped;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_animation_track_looped_set_looped(self, value)\n\tgetPointer(self).Looped = value == 1;\nend\nfunction abi.ffi.property_getter_animation_track_priority(self)\n\tlocal result_0 = getPointer(self).Priority;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_animation_track_priority_set_priority(self, value)\n\tgetPointer(self).Priority = value;\nend\nfunction abi.ffi.property_getter_animation_track_speed(self)\n\tlocal result_0 = getPointer(self).Speed;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_animation_track_time_position(self)\n\tlocal result_0 = getPointer(self).TimePosition;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_animation_track_time_position_set_time_position(self, value)\n\tgetPointer(self).TimePosition = value;\nend\nfunction abi.ffi.property_getter_animation_track_weight_current(self)\n\tlocal result_0 = getPointer(self).WeightCurrent;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_animation_track_weight_target(self)\n\tlocal result_0 = getPointer(self).WeightTarget;\n\treturn result_0;\nend\nfunction abi.ffi.method_animation_track_adjust_speed(self, speed)\n\tgetPointer(self):AdjustSpeed(speed)\nend\nfunction abi.ffi.method_animation_track_adjust_weight(self, weight, fade_time)\n\tgetPointer(self):AdjustWeight(weight, fade_time)\nend\nfunction abi.ffi.method_animation_track_get_time_of_keyframe(self, keyframe_name_addr, keyframe_name_len)\n\tlocal result_0 = getPointer(self):GetTimeOfKeyframe(loadString(memory, keyframe_name_addr, keyframe_name_len));\n\treturn result_0;\nend\nfunction abi.ffi.method_animation_track_play(self, fade_time, weight, speed)\n\tgetPointer(self):Play(fade_time, weight, speed)\nend\nfunction abi.ffi.method_animation_track_stop(self, fade_time)\n\tgetPointer(self):Stop(fade_time)\nend\nfunction abi.ffi.event_animation_track_did_loop_on_did_loop(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).DidLoop:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_animation_track_keyframe_reached_on_keyframe_reached(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).KeyframeReached:Connect(function(keyframe_name)\n\t\tlocal keyframe_name_len = #keyframe_name;\n\t\tlocal keyframe_name_content = allocString(keyframe_name_len);\n\t\tfor i = 1, keyframe_name_len do\n\t\t\tstoreU8(memory, keyframe_name_content + (i - 1), string.byte(keyframe_name:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, keyframe_name_content, keyframe_name_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_animation_track_stopped_on_stopped(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Stopped:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_animator_prefer_lod_enabled(self)\n\tlocal result_0 = getPointer(self).PreferLodEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_animator_prefer_lod_enabled_set_prefer_lod_enabled(self, value)\n\tgetPointer(self).PreferLodEnabled = value == 1;\nend\nfunction abi.ffi.method_animator_load_animation(self, animation)\n\tlocal result_0 = getPointer(self):LoadAnimation(getPointer(animation));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.event_animator_animation_played_on_animation_played(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).AnimationPlayed:Connect(function(animation_track)\n\t\tlocal animation_track_optional, animation_track_optional_0 = 0, 0;\n\t\tif (animation_track ~= nil) then\n\t\t\tanimation_track_optional, animation_track_optional_0 = 1, createPointer(animation_track);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, animation_track_optional, animation_track_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_asset_import_session_upload_progress_on_upload_progress(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).UploadProgress:Connect(function(progress_ratio)\n\t\tinvokeFunction(callback_data, callback_vtable, progress_ratio)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_asset_patch_settings_content_id(self)\n\tlocal result_0 = getPointer(self).ContentId;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_asset_patch_settings_content_id_set_content_id(self, value_addr, value_len)\n\tgetPointer(self).ContentId = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_asset_patch_settings_output_path(self)\n\tlocal result_0 = getPointer(self).OutputPath;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_asset_patch_settings_output_path_set_output_path(self, value_addr, value_len)\n\tgetPointer(self).OutputPath = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_asset_patch_settings_patch_id(self)\n\tlocal result_0 = getPointer(self).PatchId;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_asset_patch_settings_patch_id_set_patch_id(self, value_addr, value_len)\n\tgetPointer(self).PatchId = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.method_asset_service_create_place_async(self, place_name_addr, place_name_len, template_place_id, description_addr, description_len)\n\tlocal result_0 = getPointer(self):CreatePlaceAsync(loadString(memory, place_name_addr, place_name_len), template_place_id, loadString(memory, description_addr, description_len));\n\treturn result_0;\nend\nfunction abi.ffi.method_asset_service_create_place_in_player_inventory_async(self, player, place_name_addr, place_name_len, template_place_id, description_addr, description_len)\n\tlocal result_0 = getPointer(self):CreatePlaceInPlayerInventoryAsync(getPointer(player), loadString(memory, place_name_addr, place_name_len), template_place_id, loadString(memory, description_addr, description_len));\n\treturn result_0;\nend\nfunction abi.ffi.method_asset_service_get_game_places_async(self)\n\tlocal result_0 = getPointer(self):GetGamePlacesAsync();\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_asset_service_save_place_async(self)\n\tgetPointer(self):SavePlaceAsync()\nend\nfunction abi.ffi.property_getter_atmosphere_color(self)\n\tlocal result_0 = getPointer(self).Color;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_atmosphere_color_set_color(self, value)\n\tgetPointer(self).Color = getPointer(value);\nend\nfunction abi.ffi.property_getter_atmosphere_decay(self)\n\tlocal result_0 = getPointer(self).Decay;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_atmosphere_decay_set_decay(self, value)\n\tgetPointer(self).Decay = getPointer(value);\nend\nfunction abi.ffi.property_getter_atmosphere_density(self)\n\tlocal result_0 = getPointer(self).Density;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_atmosphere_density_set_density(self, value)\n\tgetPointer(self).Density = value;\nend\nfunction abi.ffi.property_getter_atmosphere_glare(self)\n\tlocal result_0 = getPointer(self).Glare;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_atmosphere_glare_set_glare(self, value)\n\tgetPointer(self).Glare = value;\nend\nfunction abi.ffi.property_getter_atmosphere_haze(self)\n\tlocal result_0 = getPointer(self).Haze;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_atmosphere_haze_set_haze(self, value)\n\tgetPointer(self).Haze = value;\nend\nfunction abi.ffi.property_getter_atmosphere_offset(self)\n\tlocal result_0 = getPointer(self).Offset;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_atmosphere_offset_set_offset(self, value)\n\tgetPointer(self).Offset = value;\nend\nfunction abi.ffi.property_getter_attachment_axis(self)\n\tlocal result_0 = getPointer(self).Axis;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_attachment_axis_set_axis(self, value)\n\tgetPointer(self).Axis = getPointer(value);\nend\nfunction abi.ffi.property_getter_attachment_c_frame(self)\n\tlocal result_0 = getPointer(self).CFrame;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_attachment_c_frame_set_c_frame(self, value)\n\tgetPointer(self).CFrame = getPointer(value);\nend\nfunction abi.ffi.property_getter_attachment_orientation(self)\n\tlocal result_0 = getPointer(self).Orientation;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_attachment_orientation_set_orientation(self, value)\n\tgetPointer(self).Orientation = getPointer(value);\nend\nfunction abi.ffi.property_getter_attachment_position(self)\n\tlocal result_0 = getPointer(self).Position;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_attachment_position_set_position(self, value)\n\tgetPointer(self).Position = getPointer(value);\nend\nfunction abi.ffi.property_getter_attachment_secondary_axis(self)\n\tlocal result_0 = getPointer(self).SecondaryAxis;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_attachment_secondary_axis_set_secondary_axis(self, value)\n\tgetPointer(self).SecondaryAxis = getPointer(value);\nend\nfunction abi.ffi.property_getter_attachment_visible(self)\n\tlocal result_0 = getPointer(self).Visible;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_attachment_visible_set_visible(self, value)\n\tgetPointer(self).Visible = value == 1;\nend\nfunction abi.ffi.property_getter_attachment_world_axis(self)\n\tlocal result_0 = getPointer(self).WorldAxis;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_attachment_world_axis_set_world_axis(self, value)\n\tgetPointer(self).WorldAxis = getPointer(value);\nend\nfunction abi.ffi.property_getter_attachment_world_c_frame(self)\n\tlocal result_0 = getPointer(self).WorldCFrame;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_attachment_world_c_frame_set_world_c_frame(self, value)\n\tgetPointer(self).WorldCFrame = getPointer(value);\nend\nfunction abi.ffi.property_getter_attachment_world_orientation(self)\n\tlocal result_0 = getPointer(self).WorldOrientation;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_attachment_world_orientation_set_world_orientation(self, value)\n\tgetPointer(self).WorldOrientation = getPointer(value);\nend\nfunction abi.ffi.property_getter_attachment_world_position(self)\n\tlocal result_0 = getPointer(self).WorldPosition;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_attachment_world_position_set_world_position(self, value)\n\tgetPointer(self).WorldPosition = getPointer(value);\nend\nfunction abi.ffi.property_getter_attachment_world_secondary_axis(self)\n\tlocal result_0 = getPointer(self).WorldSecondaryAxis;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_attachment_world_secondary_axis_set_world_secondary_axis(self, value)\n\tgetPointer(self).WorldSecondaryAxis = getPointer(value);\nend\nfunction abi.ffi.property_getter_bone_transform(self)\n\tlocal result_0 = getPointer(self).Transform;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_bone_transform_set_transform(self, value)\n\tgetPointer(self).Transform = getPointer(value);\nend\nfunction abi.ffi.property_getter_bone_transformed_c_frame(self)\n\tlocal result_0 = getPointer(self).TransformedCFrame;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_bone_transformed_world_c_frame(self)\n\tlocal result_0 = getPointer(self).TransformedWorldCFrame;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_avatar_editor_service_get_accessory_type(self, avatar_asset_type)\n\tlocal result_0 = getPointer(self):GetAccessoryType(avatar_asset_type);\n\treturn result_0;\nend\nfunction abi.ffi.method_avatar_editor_service_prompt_allow_inventory_read_access(self)\n\tgetPointer(self):PromptAllowInventoryReadAccess()\nend\nfunction abi.ffi.method_avatar_editor_service_prompt_create_outfit(self, outfit, rig_type)\n\tgetPointer(self):PromptCreateOutfit(getPointer(outfit), rig_type)\nend\nfunction abi.ffi.method_avatar_editor_service_prompt_delete_outfit(self, outfit_id)\n\tgetPointer(self):PromptDeleteOutfit(outfit_id)\nend\nfunction abi.ffi.method_avatar_editor_service_prompt_rename_outfit(self, outfit_id)\n\tgetPointer(self):PromptRenameOutfit(outfit_id)\nend\nfunction abi.ffi.method_avatar_editor_service_prompt_save_avatar(self, humanoid_description, rig_type)\n\tgetPointer(self):PromptSaveAvatar(getPointer(humanoid_description), rig_type)\nend\nfunction abi.ffi.method_avatar_editor_service_prompt_set_favorite(self, item_id, item_type, should_favorite)\n\tgetPointer(self):PromptSetFavorite(item_id, item_type, should_favorite == 1)\nend\nfunction abi.ffi.method_avatar_editor_service_prompt_update_outfit(self, outfit_id, updated_outfit, rig_type)\n\tgetPointer(self):PromptUpdateOutfit(outfit_id, getPointer(updated_outfit), rig_type)\nend\nfunction abi.ffi.method_avatar_editor_service_check_apply_default_clothing(self, humanoid_description)\n\tlocal result_0 = getPointer(self):CheckApplyDefaultClothing(getPointer(humanoid_description));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_avatar_editor_service_conform_to_avatar_rules(self, humanoid_description)\n\tlocal result_0 = getPointer(self):ConformToAvatarRules(getPointer(humanoid_description));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_avatar_editor_service_get_favorite(self, item_id, item_type)\n\tlocal result_0 = getPointer(self):GetFavorite(item_id, item_type);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_avatar_editor_service_get_outfits(self, outfit_source, outfit_type)\n\tlocal result_0 = getPointer(self):GetOutfits(outfit_source, outfit_type);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_avatar_editor_service_search_catalog(self, search_parameters)\n\tlocal result_0 = getPointer(self):SearchCatalog(getPointer(search_parameters));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.event_avatar_editor_service_prompt_allow_inventory_read_access_completed_on_prompt_allow_inventory_read_access_completed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptAllowInventoryReadAccessCompleted:Connect(function(result)\n\t\tinvokeFunction(callback_data, callback_vtable, result)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_avatar_editor_service_prompt_delete_outfit_completed_on_prompt_delete_outfit_completed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptDeleteOutfitCompleted:Connect(function(result)\n\t\tinvokeFunction(callback_data, callback_vtable, result)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_avatar_editor_service_prompt_rename_outfit_completed_on_prompt_rename_outfit_completed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptRenameOutfitCompleted:Connect(function(result)\n\t\tinvokeFunction(callback_data, callback_vtable, result)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_avatar_editor_service_prompt_save_avatar_completed_on_prompt_save_avatar_completed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptSaveAvatarCompleted:Connect(function(result, humanoid_description)\n\t\tlocal humanoid_description_optional, humanoid_description_optional_0 = 0, 0;\n\t\tif (humanoid_description ~= nil) then\n\t\t\thumanoid_description_optional, humanoid_description_optional_0 = 1, createPointer(humanoid_description);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, result, humanoid_description_optional, humanoid_description_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_avatar_editor_service_prompt_set_favorite_completed_on_prompt_set_favorite_completed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptSetFavoriteCompleted:Connect(function(result)\n\t\tinvokeFunction(callback_data, callback_vtable, result)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_avatar_editor_service_prompt_update_outfit_completed_on_prompt_update_outfit_completed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptUpdateOutfitCompleted:Connect(function(result)\n\t\tinvokeFunction(callback_data, callback_vtable, result)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_backpack_item_texture_id(self)\n\tlocal result_0 = getPointer(self).TextureId;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_backpack_item_texture_id_set_texture_id(self, value)\n\tgetPointer(self).TextureId = getPointer(value);\nend\nfunction abi.ffi.property_getter_tool_can_be_dropped(self)\n\tlocal result_0 = getPointer(self).CanBeDropped;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_tool_can_be_dropped_set_can_be_dropped(self, value)\n\tgetPointer(self).CanBeDropped = value == 1;\nend\nfunction abi.ffi.property_getter_tool_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_tool_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_tool_grip(self)\n\tlocal result_0 = getPointer(self).Grip;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_tool_grip_set_grip(self, value)\n\tgetPointer(self).Grip = getPointer(value);\nend\nfunction abi.ffi.property_getter_tool_grip_forward(self)\n\tlocal result_0 = getPointer(self).GripForward;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_tool_grip_forward_set_grip_forward(self, value)\n\tgetPointer(self).GripForward = getPointer(value);\nend\nfunction abi.ffi.property_getter_tool_grip_pos(self)\n\tlocal result_0 = getPointer(self).GripPos;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_tool_grip_pos_set_grip_pos(self, value)\n\tgetPointer(self).GripPos = getPointer(value);\nend\nfunction abi.ffi.property_getter_tool_grip_right(self)\n\tlocal result_0 = getPointer(self).GripRight;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_tool_grip_right_set_grip_right(self, value)\n\tgetPointer(self).GripRight = getPointer(value);\nend\nfunction abi.ffi.property_getter_tool_grip_up(self)\n\tlocal result_0 = getPointer(self).GripUp;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_tool_grip_up_set_grip_up(self, value)\n\tgetPointer(self).GripUp = getPointer(value);\nend\nfunction abi.ffi.property_getter_tool_manual_activation_only(self)\n\tlocal result_0 = getPointer(self).ManualActivationOnly;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_tool_manual_activation_only_set_manual_activation_only(self, value)\n\tgetPointer(self).ManualActivationOnly = value == 1;\nend\nfunction abi.ffi.property_getter_tool_requires_handle(self)\n\tlocal result_0 = getPointer(self).RequiresHandle;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_tool_requires_handle_set_requires_handle(self, value)\n\tgetPointer(self).RequiresHandle = value == 1;\nend\nfunction abi.ffi.property_getter_tool_tool_tip(self)\n\tlocal result_0 = getPointer(self).ToolTip;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_tool_tool_tip_set_tool_tip(self, value_addr, value_len)\n\tgetPointer(self).ToolTip = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.method_tool_activate(self)\n\tgetPointer(self):Activate()\nend\nfunction abi.ffi.method_tool_deactivate(self)\n\tgetPointer(self):Deactivate()\nend\nfunction abi.ffi.event_tool_activated_on_activated(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Activated:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_tool_deactivated_on_deactivated(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Deactivated:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_tool_equipped_on_equipped(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Equipped:Connect(function(mouse)\n\t\tlocal mouse_optional, mouse_optional_0 = 0, 0;\n\t\tif (mouse ~= nil) then\n\t\t\tmouse_optional, mouse_optional_0 = 1, createPointer(mouse);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, mouse_optional, mouse_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_tool_unequipped_on_unequipped(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Unequipped:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_badge_service_award_badge(self, user_id, badge_id)\n\tlocal result_0 = getPointer(self):AwardBadge(user_id, badge_id);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_badge_service_user_has_badge_async(self, user_id, badge_id)\n\tlocal result_0 = getPointer(self):UserHasBadgeAsync(user_id, badge_id);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_player_gui_current_screen_orientation(self)\n\tlocal result_0 = getPointer(self).CurrentScreenOrientation;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_player_gui_screen_orientation(self)\n\tlocal result_0 = getPointer(self).ScreenOrientation;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_player_gui_screen_orientation_set_screen_orientation(self, value)\n\tgetPointer(self).ScreenOrientation = value;\nend\nfunction abi.ffi.property_getter_player_gui_selection_image_object(self)\n\tlocal result_0 = getPointer(self).SelectionImageObject;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_player_gui_selection_image_object_set_selection_image_object(self, value)\n\tgetPointer(self).SelectionImageObject = getPointer(value);\nend\nfunction abi.ffi.property_getter_starter_gui_screen_orientation(self)\n\tlocal result_0 = getPointer(self).ScreenOrientation;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_starter_gui_screen_orientation_set_screen_orientation(self, value)\n\tgetPointer(self).ScreenOrientation = value;\nend\nfunction abi.ffi.property_getter_starter_gui_show_development_gui(self)\n\tlocal result_0 = getPointer(self).ShowDevelopmentGui;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_starter_gui_show_development_gui_set_show_development_gui(self, value)\n\tgetPointer(self).ShowDevelopmentGui = value == 1;\nend\nfunction abi.ffi.method_starter_gui_get_core_gui_enabled(self, core_gui_type)\n\tlocal result_0 = getPointer(self):GetCoreGuiEnabled(core_gui_type);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_starter_gui_set_core_gui_enabled(self, core_gui_type, enabled)\n\tgetPointer(self):SetCoreGuiEnabled(core_gui_type, enabled == 1)\nend\nfunction abi.ffi.property_getter_base_wrap_cage_mesh_id(self)\n\tlocal result_0 = getPointer(self).CageMeshId;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_base_wrap_cage_mesh_id_set_cage_mesh_id(self, value)\n\tgetPointer(self).CageMeshId = getPointer(value);\nend\nfunction abi.ffi.property_getter_base_wrap_cage_origin(self)\n\tlocal result_0 = getPointer(self).CageOrigin;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_base_wrap_cage_origin_set_cage_origin(self, value)\n\tgetPointer(self).CageOrigin = getPointer(value);\nend\nfunction abi.ffi.property_getter_base_wrap_cage_origin_world(self)\n\tlocal result_0 = getPointer(self).CageOriginWorld;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_base_wrap_import_origin(self)\n\tlocal result_0 = getPointer(self).ImportOrigin;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_base_wrap_import_origin_set_import_origin(self, value)\n\tgetPointer(self).ImportOrigin = getPointer(value);\nend\nfunction abi.ffi.property_getter_base_wrap_import_origin_world(self)\n\tlocal result_0 = getPointer(self).ImportOriginWorld;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_wrap_layer_auto_skin(self)\n\tlocal result_0 = getPointer(self).AutoSkin;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_wrap_layer_auto_skin_set_auto_skin(self, value)\n\tgetPointer(self).AutoSkin = value;\nend\nfunction abi.ffi.property_getter_wrap_layer_bind_offset(self)\n\tlocal result_0 = getPointer(self).BindOffset;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_wrap_layer_bind_offset_set_bind_offset(self, value)\n\tgetPointer(self).BindOffset = getPointer(value);\nend\nfunction abi.ffi.property_getter_wrap_layer_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_wrap_layer_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_wrap_layer_order(self)\n\tlocal result_0 = getPointer(self).Order;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_wrap_layer_order_set_order(self, value)\n\tgetPointer(self).Order = value;\nend\nfunction abi.ffi.property_getter_wrap_layer_puffiness(self)\n\tlocal result_0 = getPointer(self).Puffiness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_wrap_layer_puffiness_set_puffiness(self, value)\n\tgetPointer(self).Puffiness = value;\nend\nfunction abi.ffi.property_getter_wrap_layer_reference_mesh_id(self)\n\tlocal result_0 = getPointer(self).ReferenceMeshId;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_wrap_layer_reference_mesh_id_set_reference_mesh_id(self, value)\n\tgetPointer(self).ReferenceMeshId = getPointer(value);\nend\nfunction abi.ffi.property_getter_wrap_layer_reference_origin(self)\n\tlocal result_0 = getPointer(self).ReferenceOrigin;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_wrap_layer_reference_origin_set_reference_origin(self, value)\n\tgetPointer(self).ReferenceOrigin = getPointer(value);\nend\nfunction abi.ffi.property_getter_wrap_layer_reference_origin_world(self)\n\tlocal result_0 = getPointer(self).ReferenceOriginWorld;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_wrap_layer_shrink_factor(self)\n\tlocal result_0 = getPointer(self).ShrinkFactor;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_wrap_layer_shrink_factor_set_shrink_factor(self, value)\n\tgetPointer(self).ShrinkFactor = value;\nend\nfunction abi.ffi.property_getter_wrap_target_stiffness(self)\n\tlocal result_0 = getPointer(self).Stiffness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_wrap_target_stiffness_set_stiffness(self, value)\n\tgetPointer(self).Stiffness = value;\nend\nfunction abi.ffi.property_getter_beam_attachment_0(self)\n\tlocal result_0 = getPointer(self).Attachment0;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_beam_attachment_0_set_attachment_0(self, value)\n\tgetPointer(self).Attachment0 = getPointer(value);\nend\nfunction abi.ffi.property_getter_beam_attachment_1(self)\n\tlocal result_0 = getPointer(self).Attachment1;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_beam_attachment_1_set_attachment_1(self, value)\n\tgetPointer(self).Attachment1 = getPointer(value);\nend\nfunction abi.ffi.property_getter_beam_brightness(self)\n\tlocal result_0 = getPointer(self).Brightness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_beam_brightness_set_brightness(self, value)\n\tgetPointer(self).Brightness = value;\nend\nfunction abi.ffi.property_getter_beam_color(self)\n\tlocal result_0 = getPointer(self).Color;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_beam_color_set_color(self, value)\n\tgetPointer(self).Color = getPointer(value);\nend\nfunction abi.ffi.property_getter_beam_curve_size_0(self)\n\tlocal result_0 = getPointer(self).CurveSize0;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_beam_curve_size_0_set_curve_size_0(self, value)\n\tgetPointer(self).CurveSize0 = value;\nend\nfunction abi.ffi.property_getter_beam_curve_size_1(self)\n\tlocal result_0 = getPointer(self).CurveSize1;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_beam_curve_size_1_set_curve_size_1(self, value)\n\tgetPointer(self).CurveSize1 = value;\nend\nfunction abi.ffi.property_getter_beam_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_beam_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_beam_face_camera(self)\n\tlocal result_0 = getPointer(self).FaceCamera;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_beam_face_camera_set_face_camera(self, value)\n\tgetPointer(self).FaceCamera = value == 1;\nend\nfunction abi.ffi.property_getter_beam_light_emission(self)\n\tlocal result_0 = getPointer(self).LightEmission;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_beam_light_emission_set_light_emission(self, value)\n\tgetPointer(self).LightEmission = value;\nend\nfunction abi.ffi.property_getter_beam_light_influence(self)\n\tlocal result_0 = getPointer(self).LightInfluence;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_beam_light_influence_set_light_influence(self, value)\n\tgetPointer(self).LightInfluence = value;\nend\nfunction abi.ffi.property_getter_beam_segments(self)\n\tlocal result_0 = getPointer(self).Segments;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_beam_segments_set_segments(self, value)\n\tgetPointer(self).Segments = value;\nend\nfunction abi.ffi.property_getter_beam_texture(self)\n\tlocal result_0 = getPointer(self).Texture;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_beam_texture_set_texture(self, value)\n\tgetPointer(self).Texture = getPointer(value);\nend\nfunction abi.ffi.property_getter_beam_texture_length(self)\n\tlocal result_0 = getPointer(self).TextureLength;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_beam_texture_length_set_texture_length(self, value)\n\tgetPointer(self).TextureLength = value;\nend\nfunction abi.ffi.property_getter_beam_texture_mode(self)\n\tlocal result_0 = getPointer(self).TextureMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_beam_texture_mode_set_texture_mode(self, value)\n\tgetPointer(self).TextureMode = value;\nend\nfunction abi.ffi.property_getter_beam_texture_speed(self)\n\tlocal result_0 = getPointer(self).TextureSpeed;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_beam_texture_speed_set_texture_speed(self, value)\n\tgetPointer(self).TextureSpeed = value;\nend\nfunction abi.ffi.property_getter_beam_transparency(self)\n\tlocal result_0 = getPointer(self).Transparency;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_beam_transparency_set_transparency(self, value)\n\tgetPointer(self).Transparency = getPointer(value);\nend\nfunction abi.ffi.property_getter_beam_width_0(self)\n\tlocal result_0 = getPointer(self).Width0;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_beam_width_0_set_width_0(self, value)\n\tgetPointer(self).Width0 = value;\nend\nfunction abi.ffi.property_getter_beam_width_1(self)\n\tlocal result_0 = getPointer(self).Width1;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_beam_width_1_set_width_1(self, value)\n\tgetPointer(self).Width1 = value;\nend\nfunction abi.ffi.property_getter_beam_z_offset(self)\n\tlocal result_0 = getPointer(self).ZOffset;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_beam_z_offset_set_z_offset(self, value)\n\tgetPointer(self).ZOffset = value;\nend\nfunction abi.ffi.method_beam_set_texture_offset(self, offset)\n\tgetPointer(self):SetTextureOffset(offset)\nend\nfunction abi.ffi.event_bindable_event_event(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Event:Connect(function(...)\n\t\tlocal values_tuple = { ... };\n\t\tlocal values_len = select("#", ...);\n\t\tlocal values_tuple_vec = allocVec(values_len * 4)\n\t\tfor i = 1, values_len do\n\t\t\tlocal values_tuple_vec_value = values_tuple[i];\n\t\t\tstoreU32(memory, values_tuple_vec + (i - 1) * 4 + 0, createPointer(values_tuple_vec_value));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, values_tuple_vec, values_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_bindable_event_fire(self, values_addr, values_len)\n\tlocal values_vec = table.create(values_len);\n\tfor i = 1, values_len do\n\t\tlocal vecElement_0 = loadU32(memory, values_addr + (i - 1) * 4 + 0)\n\t\tvalues_vec[i] = getPointer(vecElement_0);\n\tend\n\tgetPointer(self):Fire(unpack(values_vec, 1, values_len))\nend\nfunction abi.ffi.property_getter_body_angular_velocity_angular_velocity(self)\n\tlocal result_0 = getPointer(self).AngularVelocity;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_angular_velocity_angular_velocity_set_angular_velocity(self, value)\n\tgetPointer(self).AngularVelocity = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_angular_velocity_max_torque(self)\n\tlocal result_0 = getPointer(self).MaxTorque;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_angular_velocity_max_torque_set_max_torque(self, value)\n\tgetPointer(self).MaxTorque = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_angular_velocity_p(self)\n\tlocal result_0 = getPointer(self).P;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_body_angular_velocity_p_set_p(self, value)\n\tgetPointer(self).P = value;\nend\nfunction abi.ffi.property_getter_body_force_force(self)\n\tlocal result_0 = getPointer(self).Force;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_force_force_set_force(self, value)\n\tgetPointer(self).Force = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_gyro_c_frame(self)\n\tlocal result_0 = getPointer(self).CFrame;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_gyro_c_frame_set_c_frame(self, value)\n\tgetPointer(self).CFrame = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_gyro_d(self)\n\tlocal result_0 = getPointer(self).D;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_body_gyro_d_set_d(self, value)\n\tgetPointer(self).D = value;\nend\nfunction abi.ffi.property_getter_body_gyro_max_torque(self)\n\tlocal result_0 = getPointer(self).MaxTorque;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_gyro_max_torque_set_max_torque(self, value)\n\tgetPointer(self).MaxTorque = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_gyro_p(self)\n\tlocal result_0 = getPointer(self).P;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_body_gyro_p_set_p(self, value)\n\tgetPointer(self).P = value;\nend\nfunction abi.ffi.property_getter_body_position_d(self)\n\tlocal result_0 = getPointer(self).D;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_body_position_d_set_d(self, value)\n\tgetPointer(self).D = value;\nend\nfunction abi.ffi.property_getter_body_position_max_force(self)\n\tlocal result_0 = getPointer(self).MaxForce;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_position_max_force_set_max_force(self, value)\n\tgetPointer(self).MaxForce = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_position_p(self)\n\tlocal result_0 = getPointer(self).P;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_body_position_p_set_p(self, value)\n\tgetPointer(self).P = value;\nend\nfunction abi.ffi.property_getter_body_position_position(self)\n\tlocal result_0 = getPointer(self).Position;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_position_position_set_position(self, value)\n\tgetPointer(self).Position = getPointer(value);\nend\nfunction abi.ffi.method_body_position_get_last_force(self)\n\tlocal result_0 = getPointer(self):GetLastForce();\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_body_position_reached_target_on_reached_target(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).ReachedTarget:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_body_thrust_force(self)\n\tlocal result_0 = getPointer(self).Force;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_thrust_force_set_force(self, value)\n\tgetPointer(self).Force = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_thrust_location(self)\n\tlocal result_0 = getPointer(self).Location;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_thrust_location_set_location(self, value)\n\tgetPointer(self).Location = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_velocity_max_force(self)\n\tlocal result_0 = getPointer(self).MaxForce;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_velocity_max_force_set_max_force(self, value)\n\tgetPointer(self).MaxForce = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_velocity_p(self)\n\tlocal result_0 = getPointer(self).P;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_body_velocity_p_set_p(self, value)\n\tgetPointer(self).P = value;\nend\nfunction abi.ffi.property_getter_body_velocity_velocity(self)\n\tlocal result_0 = getPointer(self).Velocity;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_velocity_velocity_set_velocity(self, value)\n\tgetPointer(self).Velocity = getPointer(value);\nend\nfunction abi.ffi.method_body_velocity_get_last_force(self)\n\tlocal result_0 = getPointer(self):GetLastForce();\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_rocket_propulsion_cartoon_factor(self)\n\tlocal result_0 = getPointer(self).CartoonFactor;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_rocket_propulsion_cartoon_factor_set_cartoon_factor(self, value)\n\tgetPointer(self).CartoonFactor = value;\nend\nfunction abi.ffi.property_getter_rocket_propulsion_max_speed(self)\n\tlocal result_0 = getPointer(self).MaxSpeed;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_rocket_propulsion_max_speed_set_max_speed(self, value)\n\tgetPointer(self).MaxSpeed = value;\nend\nfunction abi.ffi.property_getter_rocket_propulsion_max_thrust(self)\n\tlocal result_0 = getPointer(self).MaxThrust;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_rocket_propulsion_max_thrust_set_max_thrust(self, value)\n\tgetPointer(self).MaxThrust = value;\nend\nfunction abi.ffi.property_getter_rocket_propulsion_max_torque(self)\n\tlocal result_0 = getPointer(self).MaxTorque;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_rocket_propulsion_max_torque_set_max_torque(self, value)\n\tgetPointer(self).MaxTorque = getPointer(value);\nend\nfunction abi.ffi.property_getter_rocket_propulsion_target(self)\n\tlocal result_0 = getPointer(self).Target;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_rocket_propulsion_target_set_target(self, value)\n\tgetPointer(self).Target = getPointer(value);\nend\nfunction abi.ffi.property_getter_rocket_propulsion_target_offset(self)\n\tlocal result_0 = getPointer(self).TargetOffset;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_rocket_propulsion_target_offset_set_target_offset(self, value)\n\tgetPointer(self).TargetOffset = getPointer(value);\nend\nfunction abi.ffi.property_getter_rocket_propulsion_target_radius(self)\n\tlocal result_0 = getPointer(self).TargetRadius;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_rocket_propulsion_target_radius_set_target_radius(self, value)\n\tgetPointer(self).TargetRadius = value;\nend\nfunction abi.ffi.property_getter_rocket_propulsion_thrust_d(self)\n\tlocal result_0 = getPointer(self).ThrustD;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_rocket_propulsion_thrust_d_set_thrust_d(self, value)\n\tgetPointer(self).ThrustD = value;\nend\nfunction abi.ffi.property_getter_rocket_propulsion_thrust_p(self)\n\tlocal result_0 = getPointer(self).ThrustP;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_rocket_propulsion_thrust_p_set_thrust_p(self, value)\n\tgetPointer(self).ThrustP = value;\nend\nfunction abi.ffi.property_getter_rocket_propulsion_turn_d(self)\n\tlocal result_0 = getPointer(self).TurnD;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_rocket_propulsion_turn_d_set_turn_d(self, value)\n\tgetPointer(self).TurnD = value;\nend\nfunction abi.ffi.property_getter_rocket_propulsion_turn_p(self)\n\tlocal result_0 = getPointer(self).TurnP;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_rocket_propulsion_turn_p_set_turn_p(self, value)\n\tgetPointer(self).TurnP = value;\nend\nfunction abi.ffi.method_rocket_propulsion_abort(self)\n\tgetPointer(self):Abort()\nend\nfunction abi.ffi.method_rocket_propulsion_fire(self)\n\tgetPointer(self):Fire()\nend\nfunction abi.ffi.event_rocket_propulsion_reached_target_on_reached_target(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).ReachedTarget:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_camera_c_frame(self)\n\tlocal result_0 = getPointer(self).CFrame;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_camera_c_frame_set_c_frame(self, value)\n\tgetPointer(self).CFrame = getPointer(value);\nend\nfunction abi.ffi.property_getter_camera_camera_subject(self)\n\tlocal result_0 = getPointer(self).CameraSubject;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_camera_camera_subject_set_camera_subject(self, value)\n\tgetPointer(self).CameraSubject = getPointer(value);\nend\nfunction abi.ffi.property_getter_camera_camera_type(self)\n\tlocal result_0 = getPointer(self).CameraType;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_camera_camera_type_set_camera_type(self, value)\n\tgetPointer(self).CameraType = value;\nend\nfunction abi.ffi.property_getter_camera_diagonal_field_of_view(self)\n\tlocal result_0 = getPointer(self).DiagonalFieldOfView;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_camera_diagonal_field_of_view_set_diagonal_field_of_view(self, value)\n\tgetPointer(self).DiagonalFieldOfView = value;\nend\nfunction abi.ffi.property_getter_camera_field_of_view(self)\n\tlocal result_0 = getPointer(self).FieldOfView;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_camera_field_of_view_set_field_of_view(self, value)\n\tgetPointer(self).FieldOfView = value;\nend\nfunction abi.ffi.property_getter_camera_field_of_view_mode(self)\n\tlocal result_0 = getPointer(self).FieldOfViewMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_camera_field_of_view_mode_set_field_of_view_mode(self, value)\n\tgetPointer(self).FieldOfViewMode = value;\nend\nfunction abi.ffi.property_getter_camera_focus(self)\n\tlocal result_0 = getPointer(self).Focus;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_camera_focus_set_focus(self, value)\n\tgetPointer(self).Focus = getPointer(value);\nend\nfunction abi.ffi.property_getter_camera_head_locked(self)\n\tlocal result_0 = getPointer(self).HeadLocked;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_camera_head_locked_set_head_locked(self, value)\n\tgetPointer(self).HeadLocked = value == 1;\nend\nfunction abi.ffi.property_getter_camera_head_scale(self)\n\tlocal result_0 = getPointer(self).HeadScale;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_camera_head_scale_set_head_scale(self, value)\n\tgetPointer(self).HeadScale = value;\nend\nfunction abi.ffi.property_getter_camera_max_axis_field_of_view(self)\n\tlocal result_0 = getPointer(self).MaxAxisFieldOfView;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_camera_max_axis_field_of_view_set_max_axis_field_of_view(self, value)\n\tgetPointer(self).MaxAxisFieldOfView = value;\nend\nfunction abi.ffi.property_getter_camera_near_plane_z(self)\n\tlocal result_0 = getPointer(self).NearPlaneZ;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_camera_viewport_size(self)\n\tlocal result_0 = getPointer(self).ViewportSize;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_camera_get_pan_speed(self)\n\tlocal result_0 = getPointer(self):GetPanSpeed();\n\treturn result_0;\nend\nfunction abi.ffi.method_camera_get_render_c_frame(self)\n\tlocal result_0 = getPointer(self):GetRenderCFrame();\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_camera_get_roll(self)\n\tlocal result_0 = getPointer(self):GetRoll();\n\treturn result_0;\nend\nfunction abi.ffi.method_camera_get_tilt_speed(self)\n\tlocal result_0 = getPointer(self):GetTiltSpeed();\n\treturn result_0;\nend\nfunction abi.ffi.method_camera_screen_point_to_ray(self, x, y, depth)\n\tlocal result_0 = getPointer(self):ScreenPointToRay(x, y, depth);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_camera_set_camera_pan_mode(self, mode)\n\tgetPointer(self):SetCameraPanMode(mode)\nend\nfunction abi.ffi.method_camera_set_roll(self, roll_angle)\n\tgetPointer(self):SetRoll(roll_angle)\nend\nfunction abi.ffi.method_camera_viewport_point_to_ray(self, x, y, depth)\n\tlocal result_0 = getPointer(self):ViewportPointToRay(x, y, depth);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_camera_interpolation_finished_on_interpolation_finished(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).InterpolationFinished:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_body_colors_head_color(self)\n\tlocal result_0 = getPointer(self).HeadColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_colors_head_color_set_head_color(self, value)\n\tgetPointer(self).HeadColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_colors_head_color_3(self)\n\tlocal result_0 = getPointer(self).HeadColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_colors_head_color_3_set_head_color_3(self, value)\n\tgetPointer(self).HeadColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_colors_left_arm_color(self)\n\tlocal result_0 = getPointer(self).LeftArmColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_colors_left_arm_color_set_left_arm_color(self, value)\n\tgetPointer(self).LeftArmColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_colors_left_arm_color_3(self)\n\tlocal result_0 = getPointer(self).LeftArmColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_colors_left_arm_color_3_set_left_arm_color_3(self, value)\n\tgetPointer(self).LeftArmColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_colors_left_leg_color(self)\n\tlocal result_0 = getPointer(self).LeftLegColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_colors_left_leg_color_set_left_leg_color(self, value)\n\tgetPointer(self).LeftLegColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_colors_left_leg_color_3(self)\n\tlocal result_0 = getPointer(self).LeftLegColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_colors_left_leg_color_3_set_left_leg_color_3(self, value)\n\tgetPointer(self).LeftLegColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_colors_right_arm_color(self)\n\tlocal result_0 = getPointer(self).RightArmColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_colors_right_arm_color_set_right_arm_color(self, value)\n\tgetPointer(self).RightArmColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_colors_right_arm_color_3(self)\n\tlocal result_0 = getPointer(self).RightArmColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_colors_right_arm_color_3_set_right_arm_color_3(self, value)\n\tgetPointer(self).RightArmColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_colors_right_leg_color(self)\n\tlocal result_0 = getPointer(self).RightLegColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_colors_right_leg_color_set_right_leg_color(self, value)\n\tgetPointer(self).RightLegColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_colors_right_leg_color_3(self)\n\tlocal result_0 = getPointer(self).RightLegColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_colors_right_leg_color_3_set_right_leg_color_3(self, value)\n\tgetPointer(self).RightLegColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_colors_torso_color(self)\n\tlocal result_0 = getPointer(self).TorsoColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_colors_torso_color_set_torso_color(self, value)\n\tgetPointer(self).TorsoColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_body_colors_torso_color_3(self)\n\tlocal result_0 = getPointer(self).TorsoColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_body_colors_torso_color_3_set_torso_color_3(self, value)\n\tgetPointer(self).TorsoColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_character_mesh_base_texture_id(self)\n\tlocal result_0 = getPointer(self).BaseTextureId;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_character_mesh_base_texture_id_set_base_texture_id(self, value)\n\tgetPointer(self).BaseTextureId = value;\nend\nfunction abi.ffi.property_getter_character_mesh_body_part(self)\n\tlocal result_0 = getPointer(self).BodyPart;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_character_mesh_body_part_set_body_part(self, value)\n\tgetPointer(self).BodyPart = value;\nend\nfunction abi.ffi.property_getter_character_mesh_mesh_id(self)\n\tlocal result_0 = getPointer(self).MeshId;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_character_mesh_mesh_id_set_mesh_id(self, value)\n\tgetPointer(self).MeshId = value;\nend\nfunction abi.ffi.property_getter_character_mesh_overlay_texture_id(self)\n\tlocal result_0 = getPointer(self).OverlayTextureId;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_character_mesh_overlay_texture_id_set_overlay_texture_id(self, value)\n\tgetPointer(self).OverlayTextureId = value;\nend\nfunction abi.ffi.property_getter_clothing_color_3(self)\n\tlocal result_0 = getPointer(self).Color3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_clothing_color_3_set_color_3(self, value)\n\tgetPointer(self).Color3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_pants_pants_template(self)\n\tlocal result_0 = getPointer(self).PantsTemplate;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_pants_pants_template_set_pants_template(self, value)\n\tgetPointer(self).PantsTemplate = getPointer(value);\nend\nfunction abi.ffi.property_getter_shirt_shirt_template(self)\n\tlocal result_0 = getPointer(self).ShirtTemplate;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_shirt_shirt_template_set_shirt_template(self, value)\n\tgetPointer(self).ShirtTemplate = getPointer(value);\nend\nfunction abi.ffi.property_getter_shirt_graphic_color_3(self)\n\tlocal result_0 = getPointer(self).Color3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_shirt_graphic_color_3_set_color_3(self, value)\n\tgetPointer(self).Color3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_shirt_graphic_graphic(self)\n\tlocal result_0 = getPointer(self).Graphic;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_shirt_graphic_graphic_set_graphic(self, value)\n\tgetPointer(self).Graphic = getPointer(value);\nend\nfunction abi.ffi.property_getter_chat_bubble_chat_enabled(self)\n\tlocal result_0 = getPointer(self).BubbleChatEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_chat_bubble_chat_enabled_set_bubble_chat_enabled(self, value)\n\tgetPointer(self).BubbleChatEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_chat_load_default_chat(self)\n\tlocal result_0 = getPointer(self).LoadDefaultChat;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_chat_load_default_chat_set_load_default_chat(self, value)\n\tgetPointer(self).LoadDefaultChat = value == 1;\nend\nfunction abi.ffi.method_chat_chat(self, part_or_character, message_addr, message_len, color)\n\tgetPointer(self):Chat(getPointer(part_or_character), loadString(memory, message_addr, message_len), color)\nend\nfunction abi.ffi.method_chat_can_user_chat_async(self, user_id)\n\tlocal result_0 = getPointer(self):CanUserChatAsync(user_id);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_chat_can_users_chat_async(self, user_id_from, user_id_to)\n\tlocal result_0 = getPointer(self):CanUsersChatAsync(user_id_from, user_id_to);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_chat_filter_string_async(self, string_to_filter_addr, string_to_filter_len, player_from, player_to)\n\tlocal result_0 = getPointer(self):FilterStringAsync(loadString(memory, string_to_filter_addr, string_to_filter_len), getPointer(player_from), getPointer(player_to));\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.method_chat_filter_string_for_broadcast(self, string_to_filter_addr, string_to_filter_len, player_from)\n\tlocal result_0 = getPointer(self):FilterStringForBroadcast(loadString(memory, string_to_filter_addr, string_to_filter_len), getPointer(player_from));\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.event_chat_chatted_on_chatted(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Chatted:Connect(function(part, message, color)\n\t\tlocal part_optional, part_optional_0 = 0, 0;\n\t\tif (part ~= nil) then\n\t\t\tpart_optional, part_optional_0 = 1, createPointer(part);\n\t\tend\n\t\tlocal message_len = #message;\n\t\tlocal message_content = allocString(message_len);\n\t\tfor i = 1, message_len do\n\t\t\tstoreU8(memory, message_content + (i - 1), string.byte(message:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, part_optional, part_optional_0, message_content, message_len, color)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_click_detector_cursor_icon(self)\n\tlocal result_0 = getPointer(self).CursorIcon;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_click_detector_cursor_icon_set_cursor_icon(self, value)\n\tgetPointer(self).CursorIcon = getPointer(value);\nend\nfunction abi.ffi.property_getter_click_detector_max_activation_distance(self)\n\tlocal result_0 = getPointer(self).MaxActivationDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_click_detector_max_activation_distance_set_max_activation_distance(self, value)\n\tgetPointer(self).MaxActivationDistance = value;\nend\nfunction abi.ffi.event_click_detector_mouse_click_on_mouse_click(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseClick:Connect(function(player_who_clicked)\n\t\tlocal player_who_clicked_optional, player_who_clicked_optional_0 = 0, 0;\n\t\tif (player_who_clicked ~= nil) then\n\t\t\tplayer_who_clicked_optional, player_who_clicked_optional_0 = 1, createPointer(player_who_clicked);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_who_clicked_optional, player_who_clicked_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_click_detector_mouse_hover_enter_on_mouse_hover_enter(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseHoverEnter:Connect(function(player_who_hovered)\n\t\tlocal player_who_hovered_optional, player_who_hovered_optional_0 = 0, 0;\n\t\tif (player_who_hovered ~= nil) then\n\t\t\tplayer_who_hovered_optional, player_who_hovered_optional_0 = 1, createPointer(player_who_hovered);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_who_hovered_optional, player_who_hovered_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_click_detector_mouse_hover_leave_on_mouse_hover_leave(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseHoverLeave:Connect(function(player_who_hovered)\n\t\tlocal player_who_hovered_optional, player_who_hovered_optional_0 = 0, 0;\n\t\tif (player_who_hovered ~= nil) then\n\t\t\tplayer_who_hovered_optional, player_who_hovered_optional_0 = 1, createPointer(player_who_hovered);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_who_hovered_optional, player_who_hovered_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_click_detector_right_mouse_click_on_right_mouse_click(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).RightMouseClick:Connect(function(player_who_clicked)\n\t\tlocal player_who_clicked_optional, player_who_clicked_optional_0 = 0, 0;\n\t\tif (player_who_clicked ~= nil) then\n\t\t\tplayer_who_clicked_optional, player_who_clicked_optional_0 = 1, createPointer(player_who_clicked);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_who_clicked_optional, player_who_clicked_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_clouds_color(self)\n\tlocal result_0 = getPointer(self).Color;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_clouds_color_set_color(self, value)\n\tgetPointer(self).Color = getPointer(value);\nend\nfunction abi.ffi.property_getter_clouds_cover(self)\n\tlocal result_0 = getPointer(self).Cover;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_clouds_cover_set_cover(self, value)\n\tgetPointer(self).Cover = value;\nend\nfunction abi.ffi.property_getter_clouds_density(self)\n\tlocal result_0 = getPointer(self).Density;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_clouds_density_set_density(self, value)\n\tgetPointer(self).Density = value;\nend\nfunction abi.ffi.property_getter_clouds_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_clouds_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.method_collection_service_add_tag(self, instance, tag_addr, tag_len)\n\tgetPointer(self):AddTag(getPointer(instance), loadString(memory, tag_addr, tag_len))\nend\nfunction abi.ffi.method_collection_service_has_tag(self, instance, tag_addr, tag_len)\n\tlocal result_0 = getPointer(self):HasTag(getPointer(instance), loadString(memory, tag_addr, tag_len));\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_collection_service_remove_tag(self, instance, tag_addr, tag_len)\n\tgetPointer(self):RemoveTag(getPointer(instance), loadString(memory, tag_addr, tag_len))\nend\nfunction abi.ffi.event_collection_service_tag_added_on_tag_added(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).TagAdded:Connect(function(tag)\n\t\tlocal tag_len = #tag;\n\t\tlocal tag_content = allocString(tag_len);\n\t\tfor i = 1, tag_len do\n\t\t\tstoreU8(memory, tag_content + (i - 1), string.byte(tag:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, tag_content, tag_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_collection_service_tag_removed_on_tag_removed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).TagRemoved:Connect(function(tag)\n\t\tlocal tag_len = #tag;\n\t\tlocal tag_content = allocString(tag_len);\n\t\tfor i = 1, tag_len do\n\t\t\tstoreU8(memory, tag_content + (i - 1), string.byte(tag:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, tag_content, tag_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_collection_service_get_tags(self, instance)\n\tlocal result_0 = getPointer(self):GetTags(getPointer(instance));\n\tlocal result_0_len = #result_0;\n\tlocal result_0_vec = allocVec(result_0_len * 8)\n\tfor i = 1, result_0_len do\n\t\tlocal result_0_vec_value = result_0[i];\n\t\tlocal result_0_vec_value_len = #result_0_vec_value;\n\t\tlocal result_0_vec_value_content = allocString(result_0_vec_value_len);\n\t\tfor i = 1, result_0_vec_value_len do\n\t\t\tstoreU8(memory, result_0_vec_value_content + (i - 1), string.byte(result_0_vec_value:sub(i, i)));\n\t\tend\n\t\tstoreU32(memory, result_0_vec + (i - 1) * 8 + 0, result_0_vec_value_content);\n\t\tstoreU32(memory, result_0_vec + (i - 1) * 8 + 4, result_0_vec_value_len);\n\tend\n\treturn result_0_vec, result_0_len;\nend\nfunction abi.ffi.property_getter_command_instance_allow_gui_access_points(self)\n\tlocal result_0 = getPointer(self).AllowGUIAccessPoints;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_command_instance_display_name(self)\n\tlocal result_0 = getPointer(self).DisplayName;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_command_instance_display_name_set_display_name(self, value_addr, value_len)\n\tgetPointer(self).DisplayName = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_constraint_active(self)\n\tlocal result_0 = getPointer(self).Active;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_constraint_attachment_0(self)\n\tlocal result_0 = getPointer(self).Attachment0;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_constraint_attachment_0_set_attachment_0(self, value)\n\tgetPointer(self).Attachment0 = getPointer(value);\nend\nfunction abi.ffi.property_getter_constraint_attachment_1(self)\n\tlocal result_0 = getPointer(self).Attachment1;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_constraint_attachment_1_set_attachment_1(self, value)\n\tgetPointer(self).Attachment1 = getPointer(value);\nend\nfunction abi.ffi.property_getter_constraint_color(self)\n\tlocal result_0 = getPointer(self).Color;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_constraint_color_set_color(self, value)\n\tgetPointer(self).Color = getPointer(value);\nend\nfunction abi.ffi.property_getter_constraint_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_constraint_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_constraint_visible(self)\n\tlocal result_0 = getPointer(self).Visible;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_constraint_visible_set_visible(self, value)\n\tgetPointer(self).Visible = value == 1;\nend\nfunction abi.ffi.property_getter_align_orientation_align_type(self)\n\tlocal result_0 = getPointer(self).AlignType;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_align_orientation_align_type_set_align_type(self, value)\n\tgetPointer(self).AlignType = value;\nend\nfunction abi.ffi.property_getter_align_orientation_c_frame(self)\n\tlocal result_0 = getPointer(self).CFrame;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_align_orientation_c_frame_set_c_frame(self, value)\n\tgetPointer(self).CFrame = getPointer(value);\nend\nfunction abi.ffi.property_getter_align_orientation_max_angular_velocity(self)\n\tlocal result_0 = getPointer(self).MaxAngularVelocity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_align_orientation_max_angular_velocity_set_max_angular_velocity(self, value)\n\tgetPointer(self).MaxAngularVelocity = value;\nend\nfunction abi.ffi.property_getter_align_orientation_max_torque(self)\n\tlocal result_0 = getPointer(self).MaxTorque;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_align_orientation_max_torque_set_max_torque(self, value)\n\tgetPointer(self).MaxTorque = value;\nend\nfunction abi.ffi.property_getter_align_orientation_mode(self)\n\tlocal result_0 = getPointer(self).Mode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_align_orientation_mode_set_mode(self, value)\n\tgetPointer(self).Mode = value;\nend\nfunction abi.ffi.property_getter_align_orientation_primary_axis(self)\n\tlocal result_0 = getPointer(self).PrimaryAxis;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_align_orientation_primary_axis_set_primary_axis(self, value)\n\tgetPointer(self).PrimaryAxis = getPointer(value);\nend\nfunction abi.ffi.property_getter_align_orientation_primary_axis_only(self)\n\tlocal result_0 = getPointer(self).PrimaryAxisOnly;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_align_orientation_primary_axis_only_set_primary_axis_only(self, value)\n\tgetPointer(self).PrimaryAxisOnly = value == 1;\nend\nfunction abi.ffi.property_getter_align_orientation_reaction_torque_enabled(self)\n\tlocal result_0 = getPointer(self).ReactionTorqueEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_align_orientation_reaction_torque_enabled_set_reaction_torque_enabled(self, value)\n\tgetPointer(self).ReactionTorqueEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_align_orientation_responsiveness(self)\n\tlocal result_0 = getPointer(self).Responsiveness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_align_orientation_responsiveness_set_responsiveness(self, value)\n\tgetPointer(self).Responsiveness = value;\nend\nfunction abi.ffi.property_getter_align_orientation_rigidity_enabled(self)\n\tlocal result_0 = getPointer(self).RigidityEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_align_orientation_rigidity_enabled_set_rigidity_enabled(self, value)\n\tgetPointer(self).RigidityEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_align_orientation_secondary_axis(self)\n\tlocal result_0 = getPointer(self).SecondaryAxis;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_align_orientation_secondary_axis_set_secondary_axis(self, value)\n\tgetPointer(self).SecondaryAxis = getPointer(value);\nend\nfunction abi.ffi.property_getter_align_position_apply_at_center_of_mass(self)\n\tlocal result_0 = getPointer(self).ApplyAtCenterOfMass;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_align_position_apply_at_center_of_mass_set_apply_at_center_of_mass(self, value)\n\tgetPointer(self).ApplyAtCenterOfMass = value == 1;\nend\nfunction abi.ffi.property_getter_align_position_max_force(self)\n\tlocal result_0 = getPointer(self).MaxForce;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_align_position_max_force_set_max_force(self, value)\n\tgetPointer(self).MaxForce = value;\nend\nfunction abi.ffi.property_getter_align_position_max_velocity(self)\n\tlocal result_0 = getPointer(self).MaxVelocity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_align_position_max_velocity_set_max_velocity(self, value)\n\tgetPointer(self).MaxVelocity = value;\nend\nfunction abi.ffi.property_getter_align_position_mode(self)\n\tlocal result_0 = getPointer(self).Mode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_align_position_mode_set_mode(self, value)\n\tgetPointer(self).Mode = value;\nend\nfunction abi.ffi.property_getter_align_position_position(self)\n\tlocal result_0 = getPointer(self).Position;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_align_position_position_set_position(self, value)\n\tgetPointer(self).Position = getPointer(value);\nend\nfunction abi.ffi.property_getter_align_position_reaction_force_enabled(self)\n\tlocal result_0 = getPointer(self).ReactionForceEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_align_position_reaction_force_enabled_set_reaction_force_enabled(self, value)\n\tgetPointer(self).ReactionForceEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_align_position_responsiveness(self)\n\tlocal result_0 = getPointer(self).Responsiveness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_align_position_responsiveness_set_responsiveness(self, value)\n\tgetPointer(self).Responsiveness = value;\nend\nfunction abi.ffi.property_getter_align_position_rigidity_enabled(self)\n\tlocal result_0 = getPointer(self).RigidityEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_align_position_rigidity_enabled_set_rigidity_enabled(self, value)\n\tgetPointer(self).RigidityEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_angular_velocity_angular_velocity(self)\n\tlocal result_0 = getPointer(self).AngularVelocity;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_angular_velocity_angular_velocity_set_angular_velocity(self, value)\n\tgetPointer(self).AngularVelocity = getPointer(value);\nend\nfunction abi.ffi.property_getter_angular_velocity_max_torque(self)\n\tlocal result_0 = getPointer(self).MaxTorque;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_angular_velocity_max_torque_set_max_torque(self, value)\n\tgetPointer(self).MaxTorque = value;\nend\nfunction abi.ffi.property_getter_angular_velocity_reaction_torque_enabled(self)\n\tlocal result_0 = getPointer(self).ReactionTorqueEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_angular_velocity_reaction_torque_enabled_set_reaction_torque_enabled(self, value)\n\tgetPointer(self).ReactionTorqueEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_angular_velocity_relative_to(self)\n\tlocal result_0 = getPointer(self).RelativeTo;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_angular_velocity_relative_to_set_relative_to(self, value)\n\tgetPointer(self).RelativeTo = value;\nend\nfunction abi.ffi.property_getter_animation_constraint_max_force(self)\n\tlocal result_0 = getPointer(self).MaxForce;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_animation_constraint_max_force_set_max_force(self, value)\n\tgetPointer(self).MaxForce = value;\nend\nfunction abi.ffi.property_getter_animation_constraint_max_torque(self)\n\tlocal result_0 = getPointer(self).MaxTorque;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_animation_constraint_max_torque_set_max_torque(self, value)\n\tgetPointer(self).MaxTorque = value;\nend\nfunction abi.ffi.property_getter_animation_constraint_transform(self)\n\tlocal result_0 = getPointer(self).Transform;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_animation_constraint_transform_set_transform(self, value)\n\tgetPointer(self).Transform = getPointer(value);\nend\nfunction abi.ffi.property_getter_ball_socket_constraint_limits_enabled(self)\n\tlocal result_0 = getPointer(self).LimitsEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_ball_socket_constraint_limits_enabled_set_limits_enabled(self, value)\n\tgetPointer(self).LimitsEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_ball_socket_constraint_max_friction_torque(self)\n\tlocal result_0 = getPointer(self).MaxFrictionTorque;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ball_socket_constraint_max_friction_torque_set_max_friction_torque(self, value)\n\tgetPointer(self).MaxFrictionTorque = value;\nend\nfunction abi.ffi.property_getter_ball_socket_constraint_radius(self)\n\tlocal result_0 = getPointer(self).Radius;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ball_socket_constraint_radius_set_radius(self, value)\n\tgetPointer(self).Radius = value;\nend\nfunction abi.ffi.property_getter_ball_socket_constraint_restitution(self)\n\tlocal result_0 = getPointer(self).Restitution;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ball_socket_constraint_restitution_set_restitution(self, value)\n\tgetPointer(self).Restitution = value;\nend\nfunction abi.ffi.property_getter_ball_socket_constraint_twist_limits_enabled(self)\n\tlocal result_0 = getPointer(self).TwistLimitsEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_ball_socket_constraint_twist_limits_enabled_set_twist_limits_enabled(self, value)\n\tgetPointer(self).TwistLimitsEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_ball_socket_constraint_twist_lower_angle(self)\n\tlocal result_0 = getPointer(self).TwistLowerAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ball_socket_constraint_twist_lower_angle_set_twist_lower_angle(self, value)\n\tgetPointer(self).TwistLowerAngle = value;\nend\nfunction abi.ffi.property_getter_ball_socket_constraint_twist_upper_angle(self)\n\tlocal result_0 = getPointer(self).TwistUpperAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ball_socket_constraint_twist_upper_angle_set_twist_upper_angle(self, value)\n\tgetPointer(self).TwistUpperAngle = value;\nend\nfunction abi.ffi.property_getter_ball_socket_constraint_upper_angle(self)\n\tlocal result_0 = getPointer(self).UpperAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ball_socket_constraint_upper_angle_set_upper_angle(self, value)\n\tgetPointer(self).UpperAngle = value;\nend\nfunction abi.ffi.property_getter_hinge_constraint_actuator_type(self)\n\tlocal result_0 = getPointer(self).ActuatorType;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_hinge_constraint_actuator_type_set_actuator_type(self, value)\n\tgetPointer(self).ActuatorType = value;\nend\nfunction abi.ffi.property_getter_hinge_constraint_angular_responsiveness(self)\n\tlocal result_0 = getPointer(self).AngularResponsiveness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_hinge_constraint_angular_responsiveness_set_angular_responsiveness(self, value)\n\tgetPointer(self).AngularResponsiveness = value;\nend\nfunction abi.ffi.property_getter_hinge_constraint_angular_speed(self)\n\tlocal result_0 = getPointer(self).AngularSpeed;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_hinge_constraint_angular_speed_set_angular_speed(self, value)\n\tgetPointer(self).AngularSpeed = value;\nend\nfunction abi.ffi.property_getter_hinge_constraint_angular_velocity(self)\n\tlocal result_0 = getPointer(self).AngularVelocity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_hinge_constraint_angular_velocity_set_angular_velocity(self, value)\n\tgetPointer(self).AngularVelocity = value;\nend\nfunction abi.ffi.property_getter_hinge_constraint_current_angle(self)\n\tlocal result_0 = getPointer(self).CurrentAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_hinge_constraint_limits_enabled(self)\n\tlocal result_0 = getPointer(self).LimitsEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_hinge_constraint_limits_enabled_set_limits_enabled(self, value)\n\tgetPointer(self).LimitsEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_hinge_constraint_lower_angle(self)\n\tlocal result_0 = getPointer(self).LowerAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_hinge_constraint_lower_angle_set_lower_angle(self, value)\n\tgetPointer(self).LowerAngle = value;\nend\nfunction abi.ffi.property_getter_hinge_constraint_motor_max_acceleration(self)\n\tlocal result_0 = getPointer(self).MotorMaxAcceleration;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_hinge_constraint_motor_max_acceleration_set_motor_max_acceleration(self, value)\n\tgetPointer(self).MotorMaxAcceleration = value;\nend\nfunction abi.ffi.property_getter_hinge_constraint_motor_max_torque(self)\n\tlocal result_0 = getPointer(self).MotorMaxTorque;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_hinge_constraint_motor_max_torque_set_motor_max_torque(self, value)\n\tgetPointer(self).MotorMaxTorque = value;\nend\nfunction abi.ffi.property_getter_hinge_constraint_radius(self)\n\tlocal result_0 = getPointer(self).Radius;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_hinge_constraint_radius_set_radius(self, value)\n\tgetPointer(self).Radius = value;\nend\nfunction abi.ffi.property_getter_hinge_constraint_restitution(self)\n\tlocal result_0 = getPointer(self).Restitution;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_hinge_constraint_restitution_set_restitution(self, value)\n\tgetPointer(self).Restitution = value;\nend\nfunction abi.ffi.property_getter_hinge_constraint_servo_max_torque(self)\n\tlocal result_0 = getPointer(self).ServoMaxTorque;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_hinge_constraint_servo_max_torque_set_servo_max_torque(self, value)\n\tgetPointer(self).ServoMaxTorque = value;\nend\nfunction abi.ffi.property_getter_hinge_constraint_target_angle(self)\n\tlocal result_0 = getPointer(self).TargetAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_hinge_constraint_target_angle_set_target_angle(self, value)\n\tgetPointer(self).TargetAngle = value;\nend\nfunction abi.ffi.property_getter_hinge_constraint_upper_angle(self)\n\tlocal result_0 = getPointer(self).UpperAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_hinge_constraint_upper_angle_set_upper_angle(self, value)\n\tgetPointer(self).UpperAngle = value;\nend\nfunction abi.ffi.property_getter_line_force_apply_at_center_of_mass(self)\n\tlocal result_0 = getPointer(self).ApplyAtCenterOfMass;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_line_force_apply_at_center_of_mass_set_apply_at_center_of_mass(self, value)\n\tgetPointer(self).ApplyAtCenterOfMass = value == 1;\nend\nfunction abi.ffi.property_getter_line_force_inverse_square_law(self)\n\tlocal result_0 = getPointer(self).InverseSquareLaw;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_line_force_inverse_square_law_set_inverse_square_law(self, value)\n\tgetPointer(self).InverseSquareLaw = value == 1;\nend\nfunction abi.ffi.property_getter_line_force_magnitude(self)\n\tlocal result_0 = getPointer(self).Magnitude;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_line_force_magnitude_set_magnitude(self, value)\n\tgetPointer(self).Magnitude = value;\nend\nfunction abi.ffi.property_getter_line_force_max_force(self)\n\tlocal result_0 = getPointer(self).MaxForce;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_line_force_max_force_set_max_force(self, value)\n\tgetPointer(self).MaxForce = value;\nend\nfunction abi.ffi.property_getter_line_force_reaction_force_enabled(self)\n\tlocal result_0 = getPointer(self).ReactionForceEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_line_force_reaction_force_enabled_set_reaction_force_enabled(self, value)\n\tgetPointer(self).ReactionForceEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_linear_velocity_line_direction(self)\n\tlocal result_0 = getPointer(self).LineDirection;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_linear_velocity_line_direction_set_line_direction(self, value)\n\tgetPointer(self).LineDirection = getPointer(value);\nend\nfunction abi.ffi.property_getter_linear_velocity_line_velocity(self)\n\tlocal result_0 = getPointer(self).LineVelocity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_linear_velocity_line_velocity_set_line_velocity(self, value)\n\tgetPointer(self).LineVelocity = value;\nend\nfunction abi.ffi.property_getter_linear_velocity_max_force(self)\n\tlocal result_0 = getPointer(self).MaxForce;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_linear_velocity_max_force_set_max_force(self, value)\n\tgetPointer(self).MaxForce = value;\nend\nfunction abi.ffi.property_getter_linear_velocity_plane_velocity(self)\n\tlocal result_0 = getPointer(self).PlaneVelocity;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_linear_velocity_plane_velocity_set_plane_velocity(self, value)\n\tgetPointer(self).PlaneVelocity = getPointer(value);\nend\nfunction abi.ffi.property_getter_linear_velocity_primary_tangent_axis(self)\n\tlocal result_0 = getPointer(self).PrimaryTangentAxis;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_linear_velocity_primary_tangent_axis_set_primary_tangent_axis(self, value)\n\tgetPointer(self).PrimaryTangentAxis = getPointer(value);\nend\nfunction abi.ffi.property_getter_linear_velocity_relative_to(self)\n\tlocal result_0 = getPointer(self).RelativeTo;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_linear_velocity_relative_to_set_relative_to(self, value)\n\tgetPointer(self).RelativeTo = value;\nend\nfunction abi.ffi.property_getter_linear_velocity_secondary_tangent_axis(self)\n\tlocal result_0 = getPointer(self).SecondaryTangentAxis;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_linear_velocity_secondary_tangent_axis_set_secondary_tangent_axis(self, value)\n\tgetPointer(self).SecondaryTangentAxis = getPointer(value);\nend\nfunction abi.ffi.property_getter_linear_velocity_vector_velocity(self)\n\tlocal result_0 = getPointer(self).VectorVelocity;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_linear_velocity_vector_velocity_set_vector_velocity(self, value)\n\tgetPointer(self).VectorVelocity = getPointer(value);\nend\nfunction abi.ffi.property_getter_linear_velocity_velocity_constraint_mode(self)\n\tlocal result_0 = getPointer(self).VelocityConstraintMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_linear_velocity_velocity_constraint_mode_set_velocity_constraint_mode(self, value)\n\tgetPointer(self).VelocityConstraintMode = value;\nend\nfunction abi.ffi.property_getter_rod_constraint_current_distance(self)\n\tlocal result_0 = getPointer(self).CurrentDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_rod_constraint_length(self)\n\tlocal result_0 = getPointer(self).Length;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_rod_constraint_length_set_length(self, value)\n\tgetPointer(self).Length = value;\nend\nfunction abi.ffi.property_getter_rod_constraint_limit_angle_0(self)\n\tlocal result_0 = getPointer(self).LimitAngle0;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_rod_constraint_limit_angle_0_set_limit_angle_0(self, value)\n\tgetPointer(self).LimitAngle0 = value;\nend\nfunction abi.ffi.property_getter_rod_constraint_limit_angle_1(self)\n\tlocal result_0 = getPointer(self).LimitAngle1;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_rod_constraint_limit_angle_1_set_limit_angle_1(self, value)\n\tgetPointer(self).LimitAngle1 = value;\nend\nfunction abi.ffi.property_getter_rod_constraint_limits_enabled(self)\n\tlocal result_0 = getPointer(self).LimitsEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_rod_constraint_limits_enabled_set_limits_enabled(self, value)\n\tgetPointer(self).LimitsEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_rod_constraint_thickness(self)\n\tlocal result_0 = getPointer(self).Thickness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_rod_constraint_thickness_set_thickness(self, value)\n\tgetPointer(self).Thickness = value;\nend\nfunction abi.ffi.property_getter_rope_constraint_current_distance(self)\n\tlocal result_0 = getPointer(self).CurrentDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_rope_constraint_length(self)\n\tlocal result_0 = getPointer(self).Length;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_rope_constraint_length_set_length(self, value)\n\tgetPointer(self).Length = value;\nend\nfunction abi.ffi.property_getter_rope_constraint_restitution(self)\n\tlocal result_0 = getPointer(self).Restitution;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_rope_constraint_restitution_set_restitution(self, value)\n\tgetPointer(self).Restitution = value;\nend\nfunction abi.ffi.property_getter_rope_constraint_thickness(self)\n\tlocal result_0 = getPointer(self).Thickness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_rope_constraint_thickness_set_thickness(self, value)\n\tgetPointer(self).Thickness = value;\nend\nfunction abi.ffi.property_getter_rope_constraint_winch_enabled(self)\n\tlocal result_0 = getPointer(self).WinchEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_rope_constraint_winch_enabled_set_winch_enabled(self, value)\n\tgetPointer(self).WinchEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_rope_constraint_winch_force(self)\n\tlocal result_0 = getPointer(self).WinchForce;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_rope_constraint_winch_force_set_winch_force(self, value)\n\tgetPointer(self).WinchForce = value;\nend\nfunction abi.ffi.property_getter_rope_constraint_winch_responsiveness(self)\n\tlocal result_0 = getPointer(self).WinchResponsiveness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_rope_constraint_winch_responsiveness_set_winch_responsiveness(self, value)\n\tgetPointer(self).WinchResponsiveness = value;\nend\nfunction abi.ffi.property_getter_rope_constraint_winch_speed(self)\n\tlocal result_0 = getPointer(self).WinchSpeed;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_rope_constraint_winch_speed_set_winch_speed(self, value)\n\tgetPointer(self).WinchSpeed = value;\nend\nfunction abi.ffi.property_getter_rope_constraint_winch_target(self)\n\tlocal result_0 = getPointer(self).WinchTarget;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_rope_constraint_winch_target_set_winch_target(self, value)\n\tgetPointer(self).WinchTarget = value;\nend\nfunction abi.ffi.property_getter_sliding_ball_constraint_actuator_type(self)\n\tlocal result_0 = getPointer(self).ActuatorType;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sliding_ball_constraint_actuator_type_set_actuator_type(self, value)\n\tgetPointer(self).ActuatorType = value;\nend\nfunction abi.ffi.property_getter_sliding_ball_constraint_current_position(self)\n\tlocal result_0 = getPointer(self).CurrentPosition;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_sliding_ball_constraint_limits_enabled(self)\n\tlocal result_0 = getPointer(self).LimitsEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_sliding_ball_constraint_limits_enabled_set_limits_enabled(self, value)\n\tgetPointer(self).LimitsEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_sliding_ball_constraint_linear_responsiveness(self)\n\tlocal result_0 = getPointer(self).LinearResponsiveness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sliding_ball_constraint_linear_responsiveness_set_linear_responsiveness(self, value)\n\tgetPointer(self).LinearResponsiveness = value;\nend\nfunction abi.ffi.property_getter_sliding_ball_constraint_lower_limit(self)\n\tlocal result_0 = getPointer(self).LowerLimit;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sliding_ball_constraint_lower_limit_set_lower_limit(self, value)\n\tgetPointer(self).LowerLimit = value;\nend\nfunction abi.ffi.property_getter_sliding_ball_constraint_motor_max_acceleration(self)\n\tlocal result_0 = getPointer(self).MotorMaxAcceleration;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sliding_ball_constraint_motor_max_acceleration_set_motor_max_acceleration(self, value)\n\tgetPointer(self).MotorMaxAcceleration = value;\nend\nfunction abi.ffi.property_getter_sliding_ball_constraint_motor_max_force(self)\n\tlocal result_0 = getPointer(self).MotorMaxForce;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sliding_ball_constraint_motor_max_force_set_motor_max_force(self, value)\n\tgetPointer(self).MotorMaxForce = value;\nend\nfunction abi.ffi.property_getter_sliding_ball_constraint_restitution(self)\n\tlocal result_0 = getPointer(self).Restitution;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sliding_ball_constraint_restitution_set_restitution(self, value)\n\tgetPointer(self).Restitution = value;\nend\nfunction abi.ffi.property_getter_sliding_ball_constraint_servo_max_force(self)\n\tlocal result_0 = getPointer(self).ServoMaxForce;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sliding_ball_constraint_servo_max_force_set_servo_max_force(self, value)\n\tgetPointer(self).ServoMaxForce = value;\nend\nfunction abi.ffi.property_getter_sliding_ball_constraint_size(self)\n\tlocal result_0 = getPointer(self).Size;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sliding_ball_constraint_size_set_size(self, value)\n\tgetPointer(self).Size = value;\nend\nfunction abi.ffi.property_getter_sliding_ball_constraint_speed(self)\n\tlocal result_0 = getPointer(self).Speed;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sliding_ball_constraint_speed_set_speed(self, value)\n\tgetPointer(self).Speed = value;\nend\nfunction abi.ffi.property_getter_sliding_ball_constraint_target_position(self)\n\tlocal result_0 = getPointer(self).TargetPosition;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sliding_ball_constraint_target_position_set_target_position(self, value)\n\tgetPointer(self).TargetPosition = value;\nend\nfunction abi.ffi.property_getter_sliding_ball_constraint_upper_limit(self)\n\tlocal result_0 = getPointer(self).UpperLimit;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sliding_ball_constraint_upper_limit_set_upper_limit(self, value)\n\tgetPointer(self).UpperLimit = value;\nend\nfunction abi.ffi.property_getter_sliding_ball_constraint_velocity(self)\n\tlocal result_0 = getPointer(self).Velocity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sliding_ball_constraint_velocity_set_velocity(self, value)\n\tgetPointer(self).Velocity = value;\nend\nfunction abi.ffi.property_getter_cylindrical_constraint_angular_actuator_type(self)\n\tlocal result_0 = getPointer(self).AngularActuatorType;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_cylindrical_constraint_angular_actuator_type_set_angular_actuator_type(self, value)\n\tgetPointer(self).AngularActuatorType = value;\nend\nfunction abi.ffi.property_getter_cylindrical_constraint_angular_limits_enabled(self)\n\tlocal result_0 = getPointer(self).AngularLimitsEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_cylindrical_constraint_angular_limits_enabled_set_angular_limits_enabled(self, value)\n\tgetPointer(self).AngularLimitsEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_cylindrical_constraint_angular_responsiveness(self)\n\tlocal result_0 = getPointer(self).AngularResponsiveness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_cylindrical_constraint_angular_responsiveness_set_angular_responsiveness(self, value)\n\tgetPointer(self).AngularResponsiveness = value;\nend\nfunction abi.ffi.property_getter_cylindrical_constraint_angular_restitution(self)\n\tlocal result_0 = getPointer(self).AngularRestitution;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_cylindrical_constraint_angular_restitution_set_angular_restitution(self, value)\n\tgetPointer(self).AngularRestitution = value;\nend\nfunction abi.ffi.property_getter_cylindrical_constraint_angular_speed(self)\n\tlocal result_0 = getPointer(self).AngularSpeed;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_cylindrical_constraint_angular_speed_set_angular_speed(self, value)\n\tgetPointer(self).AngularSpeed = value;\nend\nfunction abi.ffi.property_getter_cylindrical_constraint_angular_velocity(self)\n\tlocal result_0 = getPointer(self).AngularVelocity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_cylindrical_constraint_angular_velocity_set_angular_velocity(self, value)\n\tgetPointer(self).AngularVelocity = value;\nend\nfunction abi.ffi.property_getter_cylindrical_constraint_current_angle(self)\n\tlocal result_0 = getPointer(self).CurrentAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_cylindrical_constraint_inclination_angle(self)\n\tlocal result_0 = getPointer(self).InclinationAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_cylindrical_constraint_inclination_angle_set_inclination_angle(self, value)\n\tgetPointer(self).InclinationAngle = value;\nend\nfunction abi.ffi.property_getter_cylindrical_constraint_lower_angle(self)\n\tlocal result_0 = getPointer(self).LowerAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_cylindrical_constraint_lower_angle_set_lower_angle(self, value)\n\tgetPointer(self).LowerAngle = value;\nend\nfunction abi.ffi.property_getter_cylindrical_constraint_motor_max_angular_acceleration(self)\n\tlocal result_0 = getPointer(self).MotorMaxAngularAcceleration;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_cylindrical_constraint_motor_max_angular_acceleration_set_motor_max_angular_acceleration(self, value)\n\tgetPointer(self).MotorMaxAngularAcceleration = value;\nend\nfunction abi.ffi.property_getter_cylindrical_constraint_motor_max_torque(self)\n\tlocal result_0 = getPointer(self).MotorMaxTorque;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_cylindrical_constraint_motor_max_torque_set_motor_max_torque(self, value)\n\tgetPointer(self).MotorMaxTorque = value;\nend\nfunction abi.ffi.property_getter_cylindrical_constraint_rotation_axis_visible(self)\n\tlocal result_0 = getPointer(self).RotationAxisVisible;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_cylindrical_constraint_rotation_axis_visible_set_rotation_axis_visible(self, value)\n\tgetPointer(self).RotationAxisVisible = value == 1;\nend\nfunction abi.ffi.property_getter_cylindrical_constraint_servo_max_torque(self)\n\tlocal result_0 = getPointer(self).ServoMaxTorque;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_cylindrical_constraint_servo_max_torque_set_servo_max_torque(self, value)\n\tgetPointer(self).ServoMaxTorque = value;\nend\nfunction abi.ffi.property_getter_cylindrical_constraint_target_angle(self)\n\tlocal result_0 = getPointer(self).TargetAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_cylindrical_constraint_target_angle_set_target_angle(self, value)\n\tgetPointer(self).TargetAngle = value;\nend\nfunction abi.ffi.property_getter_cylindrical_constraint_upper_angle(self)\n\tlocal result_0 = getPointer(self).UpperAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_cylindrical_constraint_upper_angle_set_upper_angle(self, value)\n\tgetPointer(self).UpperAngle = value;\nend\nfunction abi.ffi.property_getter_cylindrical_constraint_world_rotation_axis(self)\n\tlocal result_0 = getPointer(self).WorldRotationAxis;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_spring_constraint_coils(self)\n\tlocal result_0 = getPointer(self).Coils;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_spring_constraint_coils_set_coils(self, value)\n\tgetPointer(self).Coils = value;\nend\nfunction abi.ffi.property_getter_spring_constraint_current_length(self)\n\tlocal result_0 = getPointer(self).CurrentLength;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_spring_constraint_damping(self)\n\tlocal result_0 = getPointer(self).Damping;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_spring_constraint_damping_set_damping(self, value)\n\tgetPointer(self).Damping = value;\nend\nfunction abi.ffi.property_getter_spring_constraint_free_length(self)\n\tlocal result_0 = getPointer(self).FreeLength;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_spring_constraint_free_length_set_free_length(self, value)\n\tgetPointer(self).FreeLength = value;\nend\nfunction abi.ffi.property_getter_spring_constraint_limits_enabled(self)\n\tlocal result_0 = getPointer(self).LimitsEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_spring_constraint_limits_enabled_set_limits_enabled(self, value)\n\tgetPointer(self).LimitsEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_spring_constraint_max_force(self)\n\tlocal result_0 = getPointer(self).MaxForce;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_spring_constraint_max_force_set_max_force(self, value)\n\tgetPointer(self).MaxForce = value;\nend\nfunction abi.ffi.property_getter_spring_constraint_max_length(self)\n\tlocal result_0 = getPointer(self).MaxLength;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_spring_constraint_max_length_set_max_length(self, value)\n\tgetPointer(self).MaxLength = value;\nend\nfunction abi.ffi.property_getter_spring_constraint_min_length(self)\n\tlocal result_0 = getPointer(self).MinLength;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_spring_constraint_min_length_set_min_length(self, value)\n\tgetPointer(self).MinLength = value;\nend\nfunction abi.ffi.property_getter_spring_constraint_radius(self)\n\tlocal result_0 = getPointer(self).Radius;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_spring_constraint_radius_set_radius(self, value)\n\tgetPointer(self).Radius = value;\nend\nfunction abi.ffi.property_getter_spring_constraint_stiffness(self)\n\tlocal result_0 = getPointer(self).Stiffness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_spring_constraint_stiffness_set_stiffness(self, value)\n\tgetPointer(self).Stiffness = value;\nend\nfunction abi.ffi.property_getter_spring_constraint_thickness(self)\n\tlocal result_0 = getPointer(self).Thickness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_spring_constraint_thickness_set_thickness(self, value)\n\tgetPointer(self).Thickness = value;\nend\nfunction abi.ffi.property_getter_torque_relative_to(self)\n\tlocal result_0 = getPointer(self).RelativeTo;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_torque_relative_to_set_relative_to(self, value)\n\tgetPointer(self).RelativeTo = value;\nend\nfunction abi.ffi.property_getter_torque_torque(self)\n\tlocal result_0 = getPointer(self).Torque;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_torque_torque_set_torque(self, value)\n\tgetPointer(self).Torque = getPointer(value);\nend\nfunction abi.ffi.property_getter_torsion_spring_constraint_coils(self)\n\tlocal result_0 = getPointer(self).Coils;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_torsion_spring_constraint_coils_set_coils(self, value)\n\tgetPointer(self).Coils = value;\nend\nfunction abi.ffi.property_getter_torsion_spring_constraint_current_angle(self)\n\tlocal result_0 = getPointer(self).CurrentAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_torsion_spring_constraint_damping(self)\n\tlocal result_0 = getPointer(self).Damping;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_torsion_spring_constraint_damping_set_damping(self, value)\n\tgetPointer(self).Damping = value;\nend\nfunction abi.ffi.property_getter_torsion_spring_constraint_limits_enabled(self)\n\tlocal result_0 = getPointer(self).LimitsEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_torsion_spring_constraint_limits_enabled_set_limits_enabled(self, value)\n\tgetPointer(self).LimitsEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_torsion_spring_constraint_max_angle(self)\n\tlocal result_0 = getPointer(self).MaxAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_torsion_spring_constraint_max_angle_set_max_angle(self, value)\n\tgetPointer(self).MaxAngle = value;\nend\nfunction abi.ffi.property_getter_torsion_spring_constraint_max_torque(self)\n\tlocal result_0 = getPointer(self).MaxTorque;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_torsion_spring_constraint_max_torque_set_max_torque(self, value)\n\tgetPointer(self).MaxTorque = value;\nend\nfunction abi.ffi.property_getter_torsion_spring_constraint_radius(self)\n\tlocal result_0 = getPointer(self).Radius;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_torsion_spring_constraint_radius_set_radius(self, value)\n\tgetPointer(self).Radius = value;\nend\nfunction abi.ffi.property_getter_torsion_spring_constraint_restitution(self)\n\tlocal result_0 = getPointer(self).Restitution;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_torsion_spring_constraint_restitution_set_restitution(self, value)\n\tgetPointer(self).Restitution = value;\nend\nfunction abi.ffi.property_getter_torsion_spring_constraint_stiffness(self)\n\tlocal result_0 = getPointer(self).Stiffness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_torsion_spring_constraint_stiffness_set_stiffness(self, value)\n\tgetPointer(self).Stiffness = value;\nend\nfunction abi.ffi.property_getter_universal_constraint_limits_enabled(self)\n\tlocal result_0 = getPointer(self).LimitsEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_universal_constraint_limits_enabled_set_limits_enabled(self, value)\n\tgetPointer(self).LimitsEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_universal_constraint_max_angle(self)\n\tlocal result_0 = getPointer(self).MaxAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_universal_constraint_max_angle_set_max_angle(self, value)\n\tgetPointer(self).MaxAngle = value;\nend\nfunction abi.ffi.property_getter_universal_constraint_radius(self)\n\tlocal result_0 = getPointer(self).Radius;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_universal_constraint_radius_set_radius(self, value)\n\tgetPointer(self).Radius = value;\nend\nfunction abi.ffi.property_getter_universal_constraint_restitution(self)\n\tlocal result_0 = getPointer(self).Restitution;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_universal_constraint_restitution_set_restitution(self, value)\n\tgetPointer(self).Restitution = value;\nend\nfunction abi.ffi.property_getter_vector_force_apply_at_center_of_mass(self)\n\tlocal result_0 = getPointer(self).ApplyAtCenterOfMass;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_vector_force_apply_at_center_of_mass_set_apply_at_center_of_mass(self, value)\n\tgetPointer(self).ApplyAtCenterOfMass = value == 1;\nend\nfunction abi.ffi.property_getter_vector_force_force(self)\n\tlocal result_0 = getPointer(self).Force;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_vector_force_force_set_force(self, value)\n\tgetPointer(self).Force = getPointer(value);\nend\nfunction abi.ffi.property_getter_vector_force_relative_to(self)\n\tlocal result_0 = getPointer(self).RelativeTo;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_vector_force_relative_to_set_relative_to(self, value)\n\tgetPointer(self).RelativeTo = value;\nend\nfunction abi.ffi.property_getter_content_provider_base_url(self)\n\tlocal result_0 = getPointer(self).BaseUrl;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_content_provider_request_queue_size(self)\n\tlocal result_0 = getPointer(self).RequestQueueSize;\n\treturn result_0;\nend\nfunction abi.ffi.method_content_provider_register_default_encryption_key(self, encryption_key_addr, encryption_key_len)\n\tgetPointer(self):RegisterDefaultEncryptionKey(loadString(memory, encryption_key_addr, encryption_key_len))\nend\nfunction abi.ffi.method_content_provider_register_default_session_key(self, session_key_addr, session_key_len)\n\tgetPointer(self):RegisterDefaultSessionKey(loadString(memory, session_key_addr, session_key_len))\nend\nfunction abi.ffi.method_content_provider_register_encrypted_asset(self, asset_id, encryption_key_addr, encryption_key_len)\n\tgetPointer(self):RegisterEncryptedAsset(getPointer(asset_id), loadString(memory, encryption_key_addr, encryption_key_len))\nend\nfunction abi.ffi.method_content_provider_register_session_encrypted_asset(self, content_id, session_key_addr, session_key_len)\n\tgetPointer(self):RegisterSessionEncryptedAsset(getPointer(content_id), loadString(memory, session_key_addr, session_key_len))\nend\nfunction abi.ffi.method_content_provider_unregister_default_encryption_key(self)\n\tgetPointer(self):UnregisterDefaultEncryptionKey()\nend\nfunction abi.ffi.method_content_provider_unregister_encrypted_asset(self, asset_id)\n\tgetPointer(self):UnregisterEncryptedAsset(getPointer(asset_id))\nend\nfunction abi.ffi.event_content_provider_asset_fetch_failed_on_asset_fetch_failed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).AssetFetchFailed:Connect(function(asset_id)\n\t\tinvokeFunction(callback_data, callback_vtable, createPointer(asset_id))\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_context_action_service_get_current_local_tool_icon(self)\n\tlocal result_0 = getPointer(self):GetCurrentLocalToolIcon();\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.method_context_action_service_set_description(self, action_name_addr, action_name_len, description_addr, description_len)\n\tgetPointer(self):SetDescription(loadString(memory, action_name_addr, action_name_len), loadString(memory, description_addr, description_len))\nend\nfunction abi.ffi.method_context_action_service_set_image(self, action_name_addr, action_name_len, image_addr, image_len)\n\tgetPointer(self):SetImage(loadString(memory, action_name_addr, action_name_len), loadString(memory, image_addr, image_len))\nend\nfunction abi.ffi.method_context_action_service_set_position(self, action_name_addr, action_name_len, position)\n\tgetPointer(self):SetPosition(loadString(memory, action_name_addr, action_name_len), getPointer(position))\nend\nfunction abi.ffi.method_context_action_service_set_title(self, action_name_addr, action_name_len, title_addr, title_len)\n\tgetPointer(self):SetTitle(loadString(memory, action_name_addr, action_name_len), loadString(memory, title_addr, title_len))\nend\nfunction abi.ffi.method_context_action_service_unbind_action(self, action_name_addr, action_name_len)\n\tgetPointer(self):UnbindAction(loadString(memory, action_name_addr, action_name_len))\nend\nfunction abi.ffi.method_context_action_service_unbind_activate(self, user_input_type_for_activation, key_code_for_activation)\n\tgetPointer(self):UnbindActivate(user_input_type_for_activation, key_code_for_activation)\nend\nfunction abi.ffi.method_context_action_service_unbind_all_actions(self)\n\tgetPointer(self):UnbindAllActions()\nend\nfunction abi.ffi.method_context_action_service_get_button(self, action_name_addr, action_name_len)\n\tlocal result_0 = getPointer(self):GetButton(loadString(memory, action_name_addr, action_name_len));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.event_context_action_service_local_tool_equipped_on_local_tool_equipped(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).LocalToolEquipped:Connect(function(tool_equipped)\n\t\tlocal tool_equipped_optional, tool_equipped_optional_0 = 0, 0;\n\t\tif (tool_equipped ~= nil) then\n\t\t\ttool_equipped_optional, tool_equipped_optional_0 = 1, createPointer(tool_equipped);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, tool_equipped_optional, tool_equipped_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_context_action_service_local_tool_unequipped_on_local_tool_unequipped(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).LocalToolUnequipped:Connect(function(tool_unequipped)\n\t\tlocal tool_unequipped_optional, tool_unequipped_optional_0 = 0, 0;\n\t\tif (tool_unequipped ~= nil) then\n\t\t\ttool_unequipped_optional, tool_unequipped_optional_0 = 1, createPointer(tool_unequipped);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, tool_unequipped_optional, tool_unequipped_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_controller_bind_button(self, button, caption_addr, caption_len)\n\tgetPointer(self):BindButton(button, loadString(memory, caption_addr, caption_len))\nend\nfunction abi.ffi.method_controller_get_button(self, button)\n\tlocal result_0 = getPointer(self):GetButton(button);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_controller_unbind_button(self, button)\n\tgetPointer(self):UnbindButton(button)\nend\nfunction abi.ffi.event_controller_button_changed_on_button_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).ButtonChanged:Connect(function(button)\n\t\tinvokeFunction(callback_data, callback_vtable, button)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_skateboard_controller_steer(self)\n\tlocal result_0 = getPointer(self).Steer;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_skateboard_controller_throttle(self)\n\tlocal result_0 = getPointer(self).Throttle;\n\treturn result_0;\nend\nfunction abi.ffi.event_skateboard_controller_axis_changed_on_axis_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).AxisChanged:Connect(function(axis)\n\t\tlocal axis_len = #axis;\n\t\tlocal axis_content = allocString(axis_len);\n\t\tfor i = 1, axis_len do\n\t\t\tstoreU8(memory, axis_content + (i - 1), string.byte(axis:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, axis_content, axis_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_controller_base_move_speed_factor(self)\n\tlocal result_0 = getPointer(self).MoveSpeedFactor;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_controller_base_move_speed_factor_set_move_speed_factor(self, value)\n\tgetPointer(self).MoveSpeedFactor = value;\nend\nfunction abi.ffi.property_getter_controller_base_rigidity_enabled(self)\n\tlocal result_0 = getPointer(self).RigidityEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_controller_base_rigidity_enabled_set_rigidity_enabled(self, value)\n\tgetPointer(self).RigidityEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_air_controller_cancel_air_momentum(self)\n\tlocal result_0 = getPointer(self).CancelAirMomentum;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_air_controller_cancel_air_momentum_set_cancel_air_momentum(self, value)\n\tgetPointer(self).CancelAirMomentum = value == 1;\nend\nfunction abi.ffi.property_getter_air_controller_move_max_force(self)\n\tlocal result_0 = getPointer(self).MoveMaxForce;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_air_controller_move_max_force_set_move_max_force(self, value)\n\tgetPointer(self).MoveMaxForce = value;\nend\nfunction abi.ffi.property_getter_air_controller_orientation_max_torque(self)\n\tlocal result_0 = getPointer(self).OrientationMaxTorque;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_air_controller_orientation_max_torque_set_orientation_max_torque(self, value)\n\tgetPointer(self).OrientationMaxTorque = value;\nend\nfunction abi.ffi.property_getter_air_controller_orientation_speed_factor(self)\n\tlocal result_0 = getPointer(self).OrientationSpeedFactor;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_air_controller_orientation_speed_factor_set_orientation_speed_factor(self, value)\n\tgetPointer(self).OrientationSpeedFactor = value;\nend\nfunction abi.ffi.property_getter_air_controller_vector_force(self)\n\tlocal result_0 = getPointer(self).VectorForce;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_air_controller_vector_force_set_vector_force(self, value)\n\tgetPointer(self).VectorForce = getPointer(value);\nend\nfunction abi.ffi.property_getter_climb_controller_acceleration_time(self)\n\tlocal result_0 = getPointer(self).AccelerationTime;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_climb_controller_acceleration_time_set_acceleration_time(self, value)\n\tgetPointer(self).AccelerationTime = value;\nend\nfunction abi.ffi.property_getter_climb_controller_move_max_force(self)\n\tlocal result_0 = getPointer(self).MoveMaxForce;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_climb_controller_move_max_force_set_move_max_force(self, value)\n\tgetPointer(self).MoveMaxForce = value;\nend\nfunction abi.ffi.property_getter_climb_controller_orientation_max_torque(self)\n\tlocal result_0 = getPointer(self).OrientationMaxTorque;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_climb_controller_orientation_max_torque_set_orientation_max_torque(self, value)\n\tgetPointer(self).OrientationMaxTorque = value;\nend\nfunction abi.ffi.property_getter_climb_controller_orientation_speed_factor(self)\n\tlocal result_0 = getPointer(self).OrientationSpeedFactor;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_climb_controller_orientation_speed_factor_set_orientation_speed_factor(self, value)\n\tgetPointer(self).OrientationSpeedFactor = value;\nend\nfunction abi.ffi.property_getter_ground_controller_acceleration_lean(self)\n\tlocal result_0 = getPointer(self).AccelerationLean;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ground_controller_acceleration_lean_set_acceleration_lean(self, value)\n\tgetPointer(self).AccelerationLean = value;\nend\nfunction abi.ffi.property_getter_ground_controller_acceleration_time(self)\n\tlocal result_0 = getPointer(self).AccelerationTime;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ground_controller_acceleration_time_set_acceleration_time(self, value)\n\tgetPointer(self).AccelerationTime = value;\nend\nfunction abi.ffi.property_getter_ground_controller_align_speed(self)\n\tlocal result_0 = getPointer(self).AlignSpeed;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ground_controller_align_speed_set_align_speed(self, value)\n\tgetPointer(self).AlignSpeed = value;\nend\nfunction abi.ffi.property_getter_ground_controller_align_torque(self)\n\tlocal result_0 = getPointer(self).AlignTorque;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ground_controller_align_torque_set_align_torque(self, value)\n\tgetPointer(self).AlignTorque = value;\nend\nfunction abi.ffi.property_getter_ground_controller_deceleration_time(self)\n\tlocal result_0 = getPointer(self).DecelerationTime;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ground_controller_deceleration_time_set_deceleration_time(self, value)\n\tgetPointer(self).DecelerationTime = value;\nend\nfunction abi.ffi.property_getter_ground_controller_friction(self)\n\tlocal result_0 = getPointer(self).Friction;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ground_controller_friction_set_friction(self, value)\n\tgetPointer(self).Friction = value;\nend\nfunction abi.ffi.property_getter_ground_controller_friction_weight(self)\n\tlocal result_0 = getPointer(self).FrictionWeight;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ground_controller_friction_weight_set_friction_weight(self, value)\n\tgetPointer(self).FrictionWeight = value;\nend\nfunction abi.ffi.property_getter_ground_controller_ground_offset(self)\n\tlocal result_0 = getPointer(self).GroundOffset;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ground_controller_ground_offset_set_ground_offset(self, value)\n\tgetPointer(self).GroundOffset = value;\nend\nfunction abi.ffi.property_getter_ground_controller_max_slope_angle(self)\n\tlocal result_0 = getPointer(self).MaxSlopeAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ground_controller_max_slope_angle_set_max_slope_angle(self, value)\n\tgetPointer(self).MaxSlopeAngle = value;\nend\nfunction abi.ffi.property_getter_ground_controller_stand_force(self)\n\tlocal result_0 = getPointer(self).StandForce;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ground_controller_stand_force_set_stand_force(self, value)\n\tgetPointer(self).StandForce = value;\nend\nfunction abi.ffi.property_getter_ground_controller_stand_speed(self)\n\tlocal result_0 = getPointer(self).StandSpeed;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ground_controller_stand_speed_set_stand_speed(self, value)\n\tgetPointer(self).StandSpeed = value;\nend\nfunction abi.ffi.property_getter_ground_controller_turning_factor(self)\n\tlocal result_0 = getPointer(self).TurningFactor;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ground_controller_turning_factor_set_turning_factor(self, value)\n\tgetPointer(self).TurningFactor = value;\nend\nfunction abi.ffi.property_getter_swim_controller_acceleration_time(self)\n\tlocal result_0 = getPointer(self).AccelerationTime;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_swim_controller_acceleration_time_set_acceleration_time(self, value)\n\tgetPointer(self).AccelerationTime = value;\nend\nfunction abi.ffi.property_getter_swim_controller_pitch_max_torque(self)\n\tlocal result_0 = getPointer(self).PitchMaxTorque;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_swim_controller_pitch_max_torque_set_pitch_max_torque(self, value)\n\tgetPointer(self).PitchMaxTorque = value;\nend\nfunction abi.ffi.property_getter_swim_controller_pitch_speed_factor(self)\n\tlocal result_0 = getPointer(self).PitchSpeedFactor;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_swim_controller_pitch_speed_factor_set_pitch_speed_factor(self, value)\n\tgetPointer(self).PitchSpeedFactor = value;\nend\nfunction abi.ffi.property_getter_swim_controller_roll_max_torque(self)\n\tlocal result_0 = getPointer(self).RollMaxTorque;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_swim_controller_roll_max_torque_set_roll_max_torque(self, value)\n\tgetPointer(self).RollMaxTorque = value;\nend\nfunction abi.ffi.property_getter_swim_controller_roll_speed_factor(self)\n\tlocal result_0 = getPointer(self).RollSpeedFactor;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_swim_controller_roll_speed_factor_set_roll_speed_factor(self, value)\n\tgetPointer(self).RollSpeedFactor = value;\nend\nfunction abi.ffi.property_getter_controller_manager_active_controller(self)\n\tlocal result_0 = getPointer(self).ActiveController;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_getter_controller_manager_base_move_speed(self)\n\tlocal result_0 = getPointer(self).BaseMoveSpeed;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_controller_manager_base_move_speed_set_base_move_speed(self, value)\n\tgetPointer(self).BaseMoveSpeed = value;\nend\nfunction abi.ffi.property_getter_controller_manager_base_turn_speed(self)\n\tlocal result_0 = getPointer(self).BaseTurnSpeed;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_controller_manager_base_turn_speed_set_base_turn_speed(self, value)\n\tgetPointer(self).BaseTurnSpeed = value;\nend\nfunction abi.ffi.property_getter_controller_manager_facing_direction(self)\n\tlocal result_0 = getPointer(self).FacingDirection;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_controller_manager_facing_direction_set_facing_direction(self, value)\n\tgetPointer(self).FacingDirection = getPointer(value);\nend\nfunction abi.ffi.property_getter_controller_manager_hip_height(self)\n\tlocal result_0 = getPointer(self).HipHeight;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_controller_manager_hip_height_set_hip_height(self, value)\n\tgetPointer(self).HipHeight = value;\nend\nfunction abi.ffi.property_getter_controller_manager_moving_direction(self)\n\tlocal result_0 = getPointer(self).MovingDirection;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_controller_manager_moving_direction_set_moving_direction(self, value)\n\tgetPointer(self).MovingDirection = getPointer(value);\nend\nfunction abi.ffi.property_getter_data_model_mesh_offset(self)\n\tlocal result_0 = getPointer(self).Offset;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_data_model_mesh_offset_set_offset(self, value)\n\tgetPointer(self).Offset = getPointer(value);\nend\nfunction abi.ffi.property_getter_data_model_mesh_scale(self)\n\tlocal result_0 = getPointer(self).Scale;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_data_model_mesh_scale_set_scale(self, value)\n\tgetPointer(self).Scale = getPointer(value);\nend\nfunction abi.ffi.property_getter_data_model_mesh_vertex_color(self)\n\tlocal result_0 = getPointer(self).VertexColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_data_model_mesh_vertex_color_set_vertex_color(self, value)\n\tgetPointer(self).VertexColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_file_mesh_mesh_id(self)\n\tlocal result_0 = getPointer(self).MeshId;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_file_mesh_mesh_id_set_mesh_id(self, value)\n\tgetPointer(self).MeshId = getPointer(value);\nend\nfunction abi.ffi.property_getter_file_mesh_texture_id(self)\n\tlocal result_0 = getPointer(self).TextureId;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_file_mesh_texture_id_set_texture_id(self, value)\n\tgetPointer(self).TextureId = getPointer(value);\nend\nfunction abi.ffi.property_getter_special_mesh_mesh_type(self)\n\tlocal result_0 = getPointer(self).MeshType;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_special_mesh_mesh_type_set_mesh_type(self, value)\n\tgetPointer(self).MeshType = value;\nend\nfunction abi.ffi.property_getter_data_store_info_created_time(self)\n\tlocal result_0 = getPointer(self).CreatedTime;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_data_store_info_data_store_name(self)\n\tlocal result_0 = getPointer(self).DataStoreName;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_data_store_info_updated_time(self)\n\tlocal result_0 = getPointer(self).UpdatedTime;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_data_store_key_key_name(self)\n\tlocal result_0 = getPointer(self).KeyName;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_data_store_key_info_created_time(self)\n\tlocal result_0 = getPointer(self).CreatedTime;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_data_store_key_info_updated_time(self)\n\tlocal result_0 = getPointer(self).UpdatedTime;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_data_store_key_info_version(self)\n\tlocal result_0 = getPointer(self).Version;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_data_store_object_version_info_created_time(self)\n\tlocal result_0 = getPointer(self).CreatedTime;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_data_store_object_version_info_is_deleted(self)\n\tlocal result_0 = getPointer(self).IsDeleted;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_data_store_object_version_info_version(self)\n\tlocal result_0 = getPointer(self).Version;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_data_store_options_all_scopes(self)\n\tlocal result_0 = getPointer(self).AllScopes;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_data_store_options_all_scopes_set_all_scopes(self, value)\n\tgetPointer(self).AllScopes = value == 1;\nend\nfunction abi.ffi.method_data_store_service_get_data_store(self, name_addr, name_len, scope_addr, scope_len, options)\n\tlocal result_0 = getPointer(self):GetDataStore(loadString(memory, name_addr, name_len), loadString(memory, scope_addr, scope_len), getPointer(options));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_data_store_service_get_global_data_store(self)\n\tlocal result_0 = getPointer(self):GetGlobalDataStore();\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_data_store_service_get_ordered_data_store(self, name_addr, name_len, scope_addr, scope_len)\n\tlocal result_0 = getPointer(self):GetOrderedDataStore(loadString(memory, name_addr, name_len), loadString(memory, scope_addr, scope_len));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_data_store_service_get_request_budget_for_request_type(self, request_type)\n\tlocal result_0 = getPointer(self):GetRequestBudgetForRequestType(request_type);\n\treturn result_0;\nend\nfunction abi.ffi.method_data_store_service_list_data_stores_async(self, prefix_addr, prefix_len, page_size, cursor_addr, cursor_len)\n\tlocal result_0 = getPointer(self):ListDataStoresAsync(loadString(memory, prefix_addr, prefix_len), page_size, loadString(memory, cursor_addr, cursor_len));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_debris_add_item(self, item, lifetime)\n\tgetPointer(self):AddItem(getPointer(item), lifetime)\nend\nfunction abi.ffi.property_getter_dialog_behavior_type(self)\n\tlocal result_0 = getPointer(self).BehaviorType;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_dialog_behavior_type_set_behavior_type(self, value)\n\tgetPointer(self).BehaviorType = value;\nend\nfunction abi.ffi.property_getter_dialog_conversation_distance(self)\n\tlocal result_0 = getPointer(self).ConversationDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_dialog_conversation_distance_set_conversation_distance(self, value)\n\tgetPointer(self).ConversationDistance = value;\nend\nfunction abi.ffi.property_getter_dialog_goodbye_choice_active(self)\n\tlocal result_0 = getPointer(self).GoodbyeChoiceActive;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_dialog_goodbye_choice_active_set_goodbye_choice_active(self, value)\n\tgetPointer(self).GoodbyeChoiceActive = value == 1;\nend\nfunction abi.ffi.property_getter_dialog_goodbye_dialog(self)\n\tlocal result_0 = getPointer(self).GoodbyeDialog;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_dialog_goodbye_dialog_set_goodbye_dialog(self, value_addr, value_len)\n\tgetPointer(self).GoodbyeDialog = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_dialog_in_use(self)\n\tlocal result_0 = getPointer(self).InUse;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_dialog_in_use_set_in_use(self, value)\n\tgetPointer(self).InUse = value == 1;\nend\nfunction abi.ffi.property_getter_dialog_initial_prompt(self)\n\tlocal result_0 = getPointer(self).InitialPrompt;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_dialog_initial_prompt_set_initial_prompt(self, value_addr, value_len)\n\tgetPointer(self).InitialPrompt = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_dialog_purpose(self)\n\tlocal result_0 = getPointer(self).Purpose;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_dialog_purpose_set_purpose(self, value)\n\tgetPointer(self).Purpose = value;\nend\nfunction abi.ffi.property_getter_dialog_tone(self)\n\tlocal result_0 = getPointer(self).Tone;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_dialog_tone_set_tone(self, value)\n\tgetPointer(self).Tone = value;\nend\nfunction abi.ffi.property_getter_dialog_trigger_distance(self)\n\tlocal result_0 = getPointer(self).TriggerDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_dialog_trigger_distance_set_trigger_distance(self, value)\n\tgetPointer(self).TriggerDistance = value;\nend\nfunction abi.ffi.property_getter_dialog_trigger_offset(self)\n\tlocal result_0 = getPointer(self).TriggerOffset;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_dialog_trigger_offset_set_trigger_offset(self, value)\n\tgetPointer(self).TriggerOffset = getPointer(value);\nend\nfunction abi.ffi.event_dialog_dialog_choice_selected_on_dialog_choice_selected(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).DialogChoiceSelected:Connect(function(player, dialog_choice)\n\t\tlocal player_optional, player_optional_0 = 0, 0;\n\t\tif (player ~= nil) then\n\t\t\tplayer_optional, player_optional_0 = 1, createPointer(player);\n\t\tend\n\t\tlocal dialog_choice_optional, dialog_choice_optional_0 = 0, 0;\n\t\tif (dialog_choice ~= nil) then\n\t\t\tdialog_choice_optional, dialog_choice_optional_0 = 1, createPointer(dialog_choice);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_optional, player_optional_0, dialog_choice_optional, dialog_choice_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_dialog_choice_goodbye_choice_active(self)\n\tlocal result_0 = getPointer(self).GoodbyeChoiceActive;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_dialog_choice_goodbye_choice_active_set_goodbye_choice_active(self, value)\n\tgetPointer(self).GoodbyeChoiceActive = value == 1;\nend\nfunction abi.ffi.property_getter_dialog_choice_goodbye_dialog(self)\n\tlocal result_0 = getPointer(self).GoodbyeDialog;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_dialog_choice_goodbye_dialog_set_goodbye_dialog(self, value_addr, value_len)\n\tgetPointer(self).GoodbyeDialog = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_dialog_choice_response_dialog(self)\n\tlocal result_0 = getPointer(self).ResponseDialog;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_dialog_choice_response_dialog_set_response_dialog(self, value_addr, value_len)\n\tgetPointer(self).ResponseDialog = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_dialog_choice_user_dialog(self)\n\tlocal result_0 = getPointer(self).UserDialog;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_dialog_choice_user_dialog_set_user_dialog(self, value_addr, value_len)\n\tgetPointer(self).UserDialog = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.method_dragger_axis_rotate(self, axis)\n\tgetPointer(self):AxisRotate(axis)\nend\nfunction abi.ffi.method_dragger_mouse_move(self, mouse_ray)\n\tgetPointer(self):MouseMove(getPointer(mouse_ray))\nend\nfunction abi.ffi.method_dragger_mouse_up(self)\n\tgetPointer(self):MouseUp()\nend\nfunction abi.ffi.property_getter_dragger_service_align_dragged_objects(self)\n\tlocal result_0 = getPointer(self).AlignDraggedObjects;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_dragger_service_angle_snap_enabled(self)\n\tlocal result_0 = getPointer(self).AngleSnapEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_dragger_service_angle_snap_increment(self)\n\tlocal result_0 = getPointer(self).AngleSnapIncrement;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_dragger_service_animate_hover(self)\n\tlocal result_0 = getPointer(self).AnimateHover;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_dragger_service_collisions_enabled(self)\n\tlocal result_0 = getPointer(self).CollisionsEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_dragger_service_dragger_coordinate_space(self)\n\tlocal result_0 = getPointer(self).DraggerCoordinateSpace;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_dragger_service_dragger_movement_mode(self)\n\tlocal result_0 = getPointer(self).DraggerMovementMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_dragger_service_geometry_snap_color(self)\n\tlocal result_0 = getPointer(self).GeometrySnapColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_dragger_service_hover_animate_frequency(self)\n\tlocal result_0 = getPointer(self).HoverAnimateFrequency;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_dragger_service_hover_thickness(self)\n\tlocal result_0 = getPointer(self).HoverThickness;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_dragger_service_joints_enabled(self)\n\tlocal result_0 = getPointer(self).JointsEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_dragger_service_linear_snap_enabled(self)\n\tlocal result_0 = getPointer(self).LinearSnapEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_dragger_service_linear_snap_increment(self)\n\tlocal result_0 = getPointer(self).LinearSnapIncrement;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_dragger_service_show_hover(self)\n\tlocal result_0 = getPointer(self).ShowHover;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_dragger_service_show_pivot_indicator(self)\n\tlocal result_0 = getPointer(self).ShowPivotIndicator;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_dragger_service_show_pivot_indicator_set_show_pivot_indicator(self, value)\n\tgetPointer(self).ShowPivotIndicator = value == 1;\nend\nfunction abi.ffi.property_getter_euler_rotation_curve_rotation_order(self)\n\tlocal result_0 = getPointer(self).RotationOrder;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_euler_rotation_curve_rotation_order_set_rotation_order(self, value)\n\tgetPointer(self).RotationOrder = value;\nend\nfunction abi.ffi.method_euler_rotation_curve_get_rotation_at_time(self, time)\n\tlocal result_0 = getPointer(self):GetRotationAtTime(time);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_euler_rotation_curve_x(self)\n\tlocal result_0 = getPointer(self):X();\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_euler_rotation_curve_y(self)\n\tlocal result_0 = getPointer(self):Y();\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_euler_rotation_curve_z(self)\n\tlocal result_0 = getPointer(self):Z();\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_getter_experience_invite_options_invite_message_id(self)\n\tlocal result_0 = getPointer(self).InviteMessageId;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_experience_invite_options_invite_message_id_set_invite_message_id(self, value)\n\tgetPointer(self).InviteMessageId = value;\nend\nfunction abi.ffi.property_getter_experience_invite_options_invite_user(self)\n\tlocal result_0 = getPointer(self).InviteUser;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_experience_invite_options_invite_user_set_invite_user(self, value)\n\tgetPointer(self).InviteUser = value;\nend\nfunction abi.ffi.property_getter_experience_invite_options_launch_data(self)\n\tlocal result_0 = getPointer(self).LaunchData;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_experience_invite_options_launch_data_set_launch_data(self, value_addr, value_len)\n\tgetPointer(self).LaunchData = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_experience_invite_options_prompt_message(self)\n\tlocal result_0 = getPointer(self).PromptMessage;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_experience_invite_options_prompt_message_set_prompt_message(self, value_addr, value_len)\n\tgetPointer(self).PromptMessage = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_explosion_blast_pressure(self)\n\tlocal result_0 = getPointer(self).BlastPressure;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_explosion_blast_pressure_set_blast_pressure(self, value)\n\tgetPointer(self).BlastPressure = value;\nend\nfunction abi.ffi.property_getter_explosion_blast_radius(self)\n\tlocal result_0 = getPointer(self).BlastRadius;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_explosion_blast_radius_set_blast_radius(self, value)\n\tgetPointer(self).BlastRadius = value;\nend\nfunction abi.ffi.property_getter_explosion_destroy_joint_radius_percent(self)\n\tlocal result_0 = getPointer(self).DestroyJointRadiusPercent;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_explosion_destroy_joint_radius_percent_set_destroy_joint_radius_percent(self, value)\n\tgetPointer(self).DestroyJointRadiusPercent = value;\nend\nfunction abi.ffi.property_getter_explosion_explosion_type(self)\n\tlocal result_0 = getPointer(self).ExplosionType;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_explosion_explosion_type_set_explosion_type(self, value)\n\tgetPointer(self).ExplosionType = value;\nend\nfunction abi.ffi.property_getter_explosion_position(self)\n\tlocal result_0 = getPointer(self).Position;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_explosion_position_set_position(self, value)\n\tgetPointer(self).Position = getPointer(value);\nend\nfunction abi.ffi.property_getter_explosion_time_scale(self)\n\tlocal result_0 = getPointer(self).TimeScale;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_explosion_time_scale_set_time_scale(self, value)\n\tgetPointer(self).TimeScale = value;\nend\nfunction abi.ffi.property_getter_explosion_visible(self)\n\tlocal result_0 = getPointer(self).Visible;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_explosion_visible_set_visible(self, value)\n\tgetPointer(self).Visible = value == 1;\nend\nfunction abi.ffi.event_explosion_hit_on_hit(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Hit:Connect(function(part, distance)\n\t\tlocal part_optional, part_optional_0 = 0, 0;\n\t\tif (part ~= nil) then\n\t\t\tpart_optional, part_optional_0 = 1, createPointer(part);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, part_optional, part_optional_0, distance)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_face_instance_face(self)\n\tlocal result_0 = getPointer(self).Face;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_face_instance_face_set_face(self, value)\n\tgetPointer(self).Face = value;\nend\nfunction abi.ffi.property_getter_decal_color_3(self)\n\tlocal result_0 = getPointer(self).Color3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_decal_color_3_set_color_3(self, value)\n\tgetPointer(self).Color3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_decal_local_transparency_modifier(self)\n\tlocal result_0 = getPointer(self).LocalTransparencyModifier;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_decal_local_transparency_modifier_set_local_transparency_modifier(self, value)\n\tgetPointer(self).LocalTransparencyModifier = value;\nend\nfunction abi.ffi.property_getter_decal_texture(self)\n\tlocal result_0 = getPointer(self).Texture;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_decal_texture_set_texture(self, value)\n\tgetPointer(self).Texture = getPointer(value);\nend\nfunction abi.ffi.property_getter_decal_transparency(self)\n\tlocal result_0 = getPointer(self).Transparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_decal_transparency_set_transparency(self, value)\n\tgetPointer(self).Transparency = value;\nend\nfunction abi.ffi.property_getter_decal_z_index(self)\n\tlocal result_0 = getPointer(self).ZIndex;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_decal_z_index_set_z_index(self, value)\n\tgetPointer(self).ZIndex = value;\nend\nfunction abi.ffi.property_getter_texture_offset_studs_u(self)\n\tlocal result_0 = getPointer(self).OffsetStudsU;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_texture_offset_studs_u_set_offset_studs_u(self, value)\n\tgetPointer(self).OffsetStudsU = value;\nend\nfunction abi.ffi.property_getter_texture_offset_studs_v(self)\n\tlocal result_0 = getPointer(self).OffsetStudsV;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_texture_offset_studs_v_set_offset_studs_v(self, value)\n\tgetPointer(self).OffsetStudsV = value;\nend\nfunction abi.ffi.property_getter_texture_studs_per_tile_u(self)\n\tlocal result_0 = getPointer(self).StudsPerTileU;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_texture_studs_per_tile_u_set_studs_per_tile_u(self, value)\n\tgetPointer(self).StudsPerTileU = value;\nend\nfunction abi.ffi.property_getter_texture_studs_per_tile_v(self)\n\tlocal result_0 = getPointer(self).StudsPerTileV;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_texture_studs_per_tile_v_set_studs_per_tile_v(self, value)\n\tgetPointer(self).StudsPerTileV = value;\nend\nfunction abi.ffi.property_getter_feature_face_id(self)\n\tlocal result_0 = getPointer(self).FaceId;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_feature_face_id_set_face_id(self, value)\n\tgetPointer(self).FaceId = value;\nend\nfunction abi.ffi.property_getter_feature_in_out(self)\n\tlocal result_0 = getPointer(self).InOut;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_feature_in_out_set_in_out(self, value)\n\tgetPointer(self).InOut = value;\nend\nfunction abi.ffi.property_getter_feature_left_right(self)\n\tlocal result_0 = getPointer(self).LeftRight;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_feature_left_right_set_left_right(self, value)\n\tgetPointer(self).LeftRight = value;\nend\nfunction abi.ffi.property_getter_feature_top_bottom(self)\n\tlocal result_0 = getPointer(self).TopBottom;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_feature_top_bottom_set_top_bottom(self, value)\n\tgetPointer(self).TopBottom = value;\nend\nfunction abi.ffi.property_getter_fire_color(self)\n\tlocal result_0 = getPointer(self).Color;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_fire_color_set_color(self, value)\n\tgetPointer(self).Color = getPointer(value);\nend\nfunction abi.ffi.property_getter_fire_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_fire_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_fire_heat(self)\n\tlocal result_0 = getPointer(self).Heat;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_fire_heat_set_heat(self, value)\n\tgetPointer(self).Heat = value;\nend\nfunction abi.ffi.property_getter_fire_secondary_color(self)\n\tlocal result_0 = getPointer(self).SecondaryColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_fire_secondary_color_set_secondary_color(self, value)\n\tgetPointer(self).SecondaryColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_fire_size(self)\n\tlocal result_0 = getPointer(self).Size;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_fire_size_set_size(self, value)\n\tgetPointer(self).Size = value;\nend\nfunction abi.ffi.property_getter_fire_time_scale(self)\n\tlocal result_0 = getPointer(self).TimeScale;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_fire_time_scale_set_time_scale(self, value)\n\tgetPointer(self).TimeScale = value;\nend\nfunction abi.ffi.property_getter_float_curve_length(self)\n\tlocal result_0 = getPointer(self).Length;\n\treturn result_0;\nend\nfunction abi.ffi.method_float_curve_get_key_at_index(self, index)\n\tlocal result_0 = getPointer(self):GetKeyAtIndex(index);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_float_curve_get_value_at_time(self, time)\n\tlocal result_0 = getPointer(self):GetValueAtTime(time);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, result_0;\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_float_curve_remove_key_at_index(self, starting_index, count)\n\tlocal result_0 = getPointer(self):RemoveKeyAtIndex(starting_index, count);\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_force_field_visible(self)\n\tlocal result_0 = getPointer(self).Visible;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_force_field_visible_set_visible(self, value)\n\tgetPointer(self).Visible = value == 1;\nend\nfunction abi.ffi.property_getter_get_text_bounds_params_font(self)\n\tlocal result_0 = getPointer(self).Font;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_get_text_bounds_params_font_set_font(self, value)\n\tgetPointer(self).Font = getPointer(value);\nend\nfunction abi.ffi.property_getter_get_text_bounds_params_size(self)\n\tlocal result_0 = getPointer(self).Size;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_get_text_bounds_params_size_set_size(self, value)\n\tgetPointer(self).Size = value;\nend\nfunction abi.ffi.property_getter_get_text_bounds_params_text(self)\n\tlocal result_0 = getPointer(self).Text;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_get_text_bounds_params_text_set_text(self, value_addr, value_len)\n\tgetPointer(self).Text = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_get_text_bounds_params_width(self)\n\tlocal result_0 = getPointer(self).Width;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_get_text_bounds_params_width_set_width(self, value)\n\tgetPointer(self).Width = value;\nend\nfunction abi.ffi.method_data_store_list_keys_async(self, prefix_addr, prefix_len, page_size, cursor_addr, cursor_len)\n\tlocal result_0 = getPointer(self):ListKeysAsync(loadString(memory, prefix_addr, prefix_len), page_size, loadString(memory, cursor_addr, cursor_len));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_data_store_list_versions_async(self, key_addr, key_len, sort_direction, min_date, max_date, page_size)\n\tlocal result_0 = getPointer(self):ListVersionsAsync(loadString(memory, key_addr, key_len), sort_direction, min_date, max_date, page_size);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_data_store_remove_version_async(self, key_addr, key_len, version_addr, version_len)\n\tgetPointer(self):RemoveVersionAsync(loadString(memory, key_addr, key_len), loadString(memory, version_addr, version_len))\nend\nfunction abi.ffi.method_group_service_get_allies_async(self, group_id)\n\tlocal result_0 = getPointer(self):GetAlliesAsync(group_id);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_group_service_get_enemies_async(self, group_id)\n\tlocal result_0 = getPointer(self):GetEnemiesAsync(group_id);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_getter_gui_base_2_d_absolute_position(self)\n\tlocal result_0 = getPointer(self).AbsolutePosition;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_gui_base_2_d_absolute_rotation(self)\n\tlocal result_0 = getPointer(self).AbsoluteRotation;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_gui_base_2_d_absolute_size(self)\n\tlocal result_0 = getPointer(self).AbsoluteSize;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_gui_base_2_d_auto_localize(self)\n\tlocal result_0 = getPointer(self).AutoLocalize;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_gui_base_2_d_auto_localize_set_auto_localize(self, value)\n\tgetPointer(self).AutoLocalize = value == 1;\nend\nfunction abi.ffi.property_getter_gui_base_2_d_root_localization_table(self)\n\tlocal result_0 = getPointer(self).RootLocalizationTable;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_gui_base_2_d_root_localization_table_set_root_localization_table(self, value)\n\tgetPointer(self).RootLocalizationTable = getPointer(value);\nend\nfunction abi.ffi.property_getter_gui_base_2_d_selection_behavior_down(self)\n\tlocal result_0 = getPointer(self).SelectionBehaviorDown;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_gui_base_2_d_selection_behavior_down_set_selection_behavior_down(self, value)\n\tgetPointer(self).SelectionBehaviorDown = value;\nend\nfunction abi.ffi.property_getter_gui_base_2_d_selection_behavior_left(self)\n\tlocal result_0 = getPointer(self).SelectionBehaviorLeft;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_gui_base_2_d_selection_behavior_left_set_selection_behavior_left(self, value)\n\tgetPointer(self).SelectionBehaviorLeft = value;\nend\nfunction abi.ffi.property_getter_gui_base_2_d_selection_behavior_right(self)\n\tlocal result_0 = getPointer(self).SelectionBehaviorRight;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_gui_base_2_d_selection_behavior_right_set_selection_behavior_right(self, value)\n\tgetPointer(self).SelectionBehaviorRight = value;\nend\nfunction abi.ffi.property_getter_gui_base_2_d_selection_behavior_up(self)\n\tlocal result_0 = getPointer(self).SelectionBehaviorUp;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_gui_base_2_d_selection_behavior_up_set_selection_behavior_up(self, value)\n\tgetPointer(self).SelectionBehaviorUp = value;\nend\nfunction abi.ffi.property_getter_gui_base_2_d_selection_group(self)\n\tlocal result_0 = getPointer(self).SelectionGroup;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_gui_base_2_d_selection_group_set_selection_group(self, value)\n\tgetPointer(self).SelectionGroup = value == 1;\nend\nfunction abi.ffi.event_gui_base_2_d_selection_changed_on_selection_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).SelectionChanged:Connect(function(am_i_selected, previous_selection, new_selection)\n\t\tlocal previous_selection_optional, previous_selection_optional_0 = 0, 0;\n\t\tif (previous_selection ~= nil) then\n\t\t\tprevious_selection_optional, previous_selection_optional_0 = 1, createPointer(previous_selection);\n\t\tend\n\t\tlocal new_selection_optional, new_selection_optional_0 = 0, 0;\n\t\tif (new_selection ~= nil) then\n\t\t\tnew_selection_optional, new_selection_optional_0 = 1, createPointer(new_selection);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, am_i_selected and 1 or 0, previous_selection_optional, previous_selection_optional_0, new_selection_optional, new_selection_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_gui_object_active(self)\n\tlocal result_0 = getPointer(self).Active;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_gui_object_active_set_active(self, value)\n\tgetPointer(self).Active = value == 1;\nend\nfunction abi.ffi.property_getter_gui_object_anchor_point(self)\n\tlocal result_0 = getPointer(self).AnchorPoint;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_gui_object_anchor_point_set_anchor_point(self, value)\n\tgetPointer(self).AnchorPoint = getPointer(value);\nend\nfunction abi.ffi.property_getter_gui_object_automatic_size(self)\n\tlocal result_0 = getPointer(self).AutomaticSize;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_gui_object_automatic_size_set_automatic_size(self, value)\n\tgetPointer(self).AutomaticSize = value;\nend\nfunction abi.ffi.property_getter_gui_object_background_color_3(self)\n\tlocal result_0 = getPointer(self).BackgroundColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_gui_object_background_color_3_set_background_color_3(self, value)\n\tgetPointer(self).BackgroundColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_gui_object_background_transparency(self)\n\tlocal result_0 = getPointer(self).BackgroundTransparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_gui_object_background_transparency_set_background_transparency(self, value)\n\tgetPointer(self).BackgroundTransparency = value;\nend\nfunction abi.ffi.property_getter_gui_object_border_color_3(self)\n\tlocal result_0 = getPointer(self).BorderColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_gui_object_border_color_3_set_border_color_3(self, value)\n\tgetPointer(self).BorderColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_gui_object_border_mode(self)\n\tlocal result_0 = getPointer(self).BorderMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_gui_object_border_mode_set_border_mode(self, value)\n\tgetPointer(self).BorderMode = value;\nend\nfunction abi.ffi.property_getter_gui_object_border_size_pixel(self)\n\tlocal result_0 = getPointer(self).BorderSizePixel;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_gui_object_border_size_pixel_set_border_size_pixel(self, value)\n\tgetPointer(self).BorderSizePixel = value;\nend\nfunction abi.ffi.property_getter_gui_object_clips_descendants(self)\n\tlocal result_0 = getPointer(self).ClipsDescendants;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_gui_object_clips_descendants_set_clips_descendants(self, value)\n\tgetPointer(self).ClipsDescendants = value == 1;\nend\nfunction abi.ffi.property_getter_gui_object_layout_order(self)\n\tlocal result_0 = getPointer(self).LayoutOrder;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_gui_object_layout_order_set_layout_order(self, value)\n\tgetPointer(self).LayoutOrder = value;\nend\nfunction abi.ffi.property_getter_gui_object_next_selection_down(self)\n\tlocal result_0 = getPointer(self).NextSelectionDown;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_gui_object_next_selection_down_set_next_selection_down(self, value)\n\tgetPointer(self).NextSelectionDown = getPointer(value);\nend\nfunction abi.ffi.property_getter_gui_object_next_selection_left(self)\n\tlocal result_0 = getPointer(self).NextSelectionLeft;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_gui_object_next_selection_left_set_next_selection_left(self, value)\n\tgetPointer(self).NextSelectionLeft = getPointer(value);\nend\nfunction abi.ffi.property_getter_gui_object_next_selection_right(self)\n\tlocal result_0 = getPointer(self).NextSelectionRight;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_gui_object_next_selection_right_set_next_selection_right(self, value)\n\tgetPointer(self).NextSelectionRight = getPointer(value);\nend\nfunction abi.ffi.property_getter_gui_object_next_selection_up(self)\n\tlocal result_0 = getPointer(self).NextSelectionUp;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_gui_object_next_selection_up_set_next_selection_up(self, value)\n\tgetPointer(self).NextSelectionUp = getPointer(value);\nend\nfunction abi.ffi.property_getter_gui_object_position(self)\n\tlocal result_0 = getPointer(self).Position;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_gui_object_position_set_position(self, value)\n\tgetPointer(self).Position = getPointer(value);\nend\nfunction abi.ffi.property_getter_gui_object_rotation(self)\n\tlocal result_0 = getPointer(self).Rotation;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_gui_object_rotation_set_rotation(self, value)\n\tgetPointer(self).Rotation = value;\nend\nfunction abi.ffi.property_getter_gui_object_selectable(self)\n\tlocal result_0 = getPointer(self).Selectable;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_gui_object_selectable_set_selectable(self, value)\n\tgetPointer(self).Selectable = value == 1;\nend\nfunction abi.ffi.property_getter_gui_object_selection_image_object(self)\n\tlocal result_0 = getPointer(self).SelectionImageObject;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_gui_object_selection_image_object_set_selection_image_object(self, value)\n\tgetPointer(self).SelectionImageObject = getPointer(value);\nend\nfunction abi.ffi.property_getter_gui_object_selection_order(self)\n\tlocal result_0 = getPointer(self).SelectionOrder;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_gui_object_selection_order_set_selection_order(self, value)\n\tgetPointer(self).SelectionOrder = value;\nend\nfunction abi.ffi.property_getter_gui_object_size(self)\n\tlocal result_0 = getPointer(self).Size;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_gui_object_size_set_size(self, value)\n\tgetPointer(self).Size = getPointer(value);\nend\nfunction abi.ffi.property_getter_gui_object_size_constraint(self)\n\tlocal result_0 = getPointer(self).SizeConstraint;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_gui_object_size_constraint_set_size_constraint(self, value)\n\tgetPointer(self).SizeConstraint = value;\nend\nfunction abi.ffi.property_getter_gui_object_transparency(self)\n\tlocal result_0 = getPointer(self).Transparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_gui_object_transparency_set_transparency(self, value)\n\tgetPointer(self).Transparency = value;\nend\nfunction abi.ffi.property_getter_gui_object_visible(self)\n\tlocal result_0 = getPointer(self).Visible;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_gui_object_visible_set_visible(self, value)\n\tgetPointer(self).Visible = value == 1;\nend\nfunction abi.ffi.property_getter_gui_object_z_index(self)\n\tlocal result_0 = getPointer(self).ZIndex;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_gui_object_z_index_set_z_index(self, value)\n\tgetPointer(self).ZIndex = value;\nend\nfunction abi.ffi.event_gui_object_input_began_on_input_began(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).InputBegan:Connect(function(input)\n\t\tlocal input_optional, input_optional_0 = 0, 0;\n\t\tif (input ~= nil) then\n\t\t\tinput_optional, input_optional_0 = 1, createPointer(input);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, input_optional, input_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_gui_object_input_changed_on_input_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).InputChanged:Connect(function(input)\n\t\tlocal input_optional, input_optional_0 = 0, 0;\n\t\tif (input ~= nil) then\n\t\t\tinput_optional, input_optional_0 = 1, createPointer(input);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, input_optional, input_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_gui_object_input_ended_on_input_ended(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).InputEnded:Connect(function(input)\n\t\tlocal input_optional, input_optional_0 = 0, 0;\n\t\tif (input ~= nil) then\n\t\t\tinput_optional, input_optional_0 = 1, createPointer(input);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, input_optional, input_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_gui_object_mouse_enter_on_mouse_enter(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseEnter:Connect(function(x, y)\n\t\tinvokeFunction(callback_data, callback_vtable, x, y)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_gui_object_mouse_leave_on_mouse_leave(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseLeave:Connect(function(x, y)\n\t\tinvokeFunction(callback_data, callback_vtable, x, y)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_gui_object_mouse_moved_on_mouse_moved(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseMoved:Connect(function(x, y)\n\t\tinvokeFunction(callback_data, callback_vtable, x, y)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_gui_object_mouse_wheel_backward_on_mouse_wheel_backward(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseWheelBackward:Connect(function(x, y)\n\t\tinvokeFunction(callback_data, callback_vtable, x, y)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_gui_object_mouse_wheel_forward_on_mouse_wheel_forward(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseWheelForward:Connect(function(x, y)\n\t\tinvokeFunction(callback_data, callback_vtable, x, y)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_gui_object_selection_gained_on_selection_gained(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).SelectionGained:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_gui_object_selection_lost_on_selection_lost(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).SelectionLost:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_gui_object_touch_swipe_on_touch_swipe(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).TouchSwipe:Connect(function(swipe_direction, number_of_touches)\n\t\tinvokeFunction(callback_data, callback_vtable, swipe_direction, number_of_touches)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_canvas_group_group_color_3(self)\n\tlocal result_0 = getPointer(self).GroupColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_canvas_group_group_color_3_set_group_color_3(self, value)\n\tgetPointer(self).GroupColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_canvas_group_group_transparency(self)\n\tlocal result_0 = getPointer(self).GroupTransparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_canvas_group_group_transparency_set_group_transparency(self, value)\n\tgetPointer(self).GroupTransparency = value;\nend\nfunction abi.ffi.property_getter_frame_style(self)\n\tlocal result_0 = getPointer(self).Style;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_frame_style_set_style(self, value)\n\tgetPointer(self).Style = value;\nend\nfunction abi.ffi.property_getter_gui_button_auto_button_color(self)\n\tlocal result_0 = getPointer(self).AutoButtonColor;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_gui_button_auto_button_color_set_auto_button_color(self, value)\n\tgetPointer(self).AutoButtonColor = value == 1;\nend\nfunction abi.ffi.property_getter_gui_button_modal(self)\n\tlocal result_0 = getPointer(self).Modal;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_gui_button_modal_set_modal(self, value)\n\tgetPointer(self).Modal = value == 1;\nend\nfunction abi.ffi.property_getter_gui_button_selected(self)\n\tlocal result_0 = getPointer(self).Selected;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_gui_button_selected_set_selected(self, value)\n\tgetPointer(self).Selected = value == 1;\nend\nfunction abi.ffi.property_getter_gui_button_style(self)\n\tlocal result_0 = getPointer(self).Style;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_gui_button_style_set_style(self, value)\n\tgetPointer(self).Style = value;\nend\nfunction abi.ffi.event_gui_button_activated_on_activated(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Activated:Connect(function(input_object, click_count)\n\t\tlocal input_object_optional, input_object_optional_0 = 0, 0;\n\t\tif (input_object ~= nil) then\n\t\t\tinput_object_optional, input_object_optional_0 = 1, createPointer(input_object);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, input_object_optional, input_object_optional_0, click_count)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_gui_button_mouse_button_1_click_on_mouse_button_1_click(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseButton1Click:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_gui_button_mouse_button_1_down_on_mouse_button_1_down(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseButton1Down:Connect(function(x, y)\n\t\tinvokeFunction(callback_data, callback_vtable, x, y)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_gui_button_mouse_button_1_up_on_mouse_button_1_up(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseButton1Up:Connect(function(x, y)\n\t\tinvokeFunction(callback_data, callback_vtable, x, y)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_gui_button_mouse_button_2_click_on_mouse_button_2_click(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseButton2Click:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_gui_button_mouse_button_2_down_on_mouse_button_2_down(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseButton2Down:Connect(function(x, y)\n\t\tinvokeFunction(callback_data, callback_vtable, x, y)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_gui_button_mouse_button_2_up_on_mouse_button_2_up(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseButton2Up:Connect(function(x, y)\n\t\tinvokeFunction(callback_data, callback_vtable, x, y)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_image_button_hover_image(self)\n\tlocal result_0 = getPointer(self).HoverImage;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_image_button_hover_image_set_hover_image(self, value)\n\tgetPointer(self).HoverImage = getPointer(value);\nend\nfunction abi.ffi.property_getter_image_button_image(self)\n\tlocal result_0 = getPointer(self).Image;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_image_button_image_set_image(self, value)\n\tgetPointer(self).Image = getPointer(value);\nend\nfunction abi.ffi.property_getter_image_button_image_color_3(self)\n\tlocal result_0 = getPointer(self).ImageColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_image_button_image_color_3_set_image_color_3(self, value)\n\tgetPointer(self).ImageColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_image_button_image_rect_offset(self)\n\tlocal result_0 = getPointer(self).ImageRectOffset;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_image_button_image_rect_offset_set_image_rect_offset(self, value)\n\tgetPointer(self).ImageRectOffset = getPointer(value);\nend\nfunction abi.ffi.property_getter_image_button_image_rect_size(self)\n\tlocal result_0 = getPointer(self).ImageRectSize;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_image_button_image_rect_size_set_image_rect_size(self, value)\n\tgetPointer(self).ImageRectSize = getPointer(value);\nend\nfunction abi.ffi.property_getter_image_button_image_transparency(self)\n\tlocal result_0 = getPointer(self).ImageTransparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_image_button_image_transparency_set_image_transparency(self, value)\n\tgetPointer(self).ImageTransparency = value;\nend\nfunction abi.ffi.property_getter_image_button_is_loaded(self)\n\tlocal result_0 = getPointer(self).IsLoaded;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_image_button_pressed_image(self)\n\tlocal result_0 = getPointer(self).PressedImage;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_image_button_pressed_image_set_pressed_image(self, value)\n\tgetPointer(self).PressedImage = getPointer(value);\nend\nfunction abi.ffi.property_getter_image_button_resample_mode(self)\n\tlocal result_0 = getPointer(self).ResampleMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_image_button_resample_mode_set_resample_mode(self, value)\n\tgetPointer(self).ResampleMode = value;\nend\nfunction abi.ffi.property_getter_image_button_scale_type(self)\n\tlocal result_0 = getPointer(self).ScaleType;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_image_button_scale_type_set_scale_type(self, value)\n\tgetPointer(self).ScaleType = value;\nend\nfunction abi.ffi.property_getter_image_button_slice_center(self)\n\tlocal result_0 = getPointer(self).SliceCenter;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_image_button_slice_center_set_slice_center(self, value)\n\tgetPointer(self).SliceCenter = getPointer(value);\nend\nfunction abi.ffi.property_getter_image_button_slice_scale(self)\n\tlocal result_0 = getPointer(self).SliceScale;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_image_button_slice_scale_set_slice_scale(self, value)\n\tgetPointer(self).SliceScale = value;\nend\nfunction abi.ffi.property_getter_image_button_tile_size(self)\n\tlocal result_0 = getPointer(self).TileSize;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_image_button_tile_size_set_tile_size(self, value)\n\tgetPointer(self).TileSize = getPointer(value);\nend\nfunction abi.ffi.property_getter_text_button_content_text(self)\n\tlocal result_0 = getPointer(self).ContentText;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_text_button_font(self)\n\tlocal result_0 = getPointer(self).Font;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_button_font_set_font(self, value)\n\tgetPointer(self).Font = value;\nend\nfunction abi.ffi.property_getter_text_button_font_face(self)\n\tlocal result_0 = getPointer(self).FontFace;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_text_button_font_face_set_font_face(self, value)\n\tgetPointer(self).FontFace = getPointer(value);\nend\nfunction abi.ffi.property_getter_text_button_line_height(self)\n\tlocal result_0 = getPointer(self).LineHeight;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_button_line_height_set_line_height(self, value)\n\tgetPointer(self).LineHeight = value;\nend\nfunction abi.ffi.property_getter_text_button_localized_text(self)\n\tlocal result_0 = getPointer(self).LocalizedText;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_text_button_max_visible_graphemes(self)\n\tlocal result_0 = getPointer(self).MaxVisibleGraphemes;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_button_max_visible_graphemes_set_max_visible_graphemes(self, value)\n\tgetPointer(self).MaxVisibleGraphemes = value;\nend\nfunction abi.ffi.property_getter_text_button_rich_text(self)\n\tlocal result_0 = getPointer(self).RichText;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_text_button_rich_text_set_rich_text(self, value)\n\tgetPointer(self).RichText = value == 1;\nend\nfunction abi.ffi.property_getter_text_button_text(self)\n\tlocal result_0 = getPointer(self).Text;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_text_button_text_set_text(self, value_addr, value_len)\n\tgetPointer(self).Text = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_text_button_text_bounds(self)\n\tlocal result_0 = getPointer(self).TextBounds;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_text_button_text_color_3(self)\n\tlocal result_0 = getPointer(self).TextColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_text_button_text_color_3_set_text_color_3(self, value)\n\tgetPointer(self).TextColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_text_button_text_fits(self)\n\tlocal result_0 = getPointer(self).TextFits;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_text_button_text_scaled(self)\n\tlocal result_0 = getPointer(self).TextScaled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_text_button_text_scaled_set_text_scaled(self, value)\n\tgetPointer(self).TextScaled = value == 1;\nend\nfunction abi.ffi.property_getter_text_button_text_size(self)\n\tlocal result_0 = getPointer(self).TextSize;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_button_text_size_set_text_size(self, value)\n\tgetPointer(self).TextSize = value;\nend\nfunction abi.ffi.property_getter_text_button_text_stroke_color_3(self)\n\tlocal result_0 = getPointer(self).TextStrokeColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_text_button_text_stroke_color_3_set_text_stroke_color_3(self, value)\n\tgetPointer(self).TextStrokeColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_text_button_text_stroke_transparency(self)\n\tlocal result_0 = getPointer(self).TextStrokeTransparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_button_text_stroke_transparency_set_text_stroke_transparency(self, value)\n\tgetPointer(self).TextStrokeTransparency = value;\nend\nfunction abi.ffi.property_getter_text_button_text_transparency(self)\n\tlocal result_0 = getPointer(self).TextTransparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_button_text_transparency_set_text_transparency(self, value)\n\tgetPointer(self).TextTransparency = value;\nend\nfunction abi.ffi.property_getter_text_button_text_truncate(self)\n\tlocal result_0 = getPointer(self).TextTruncate;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_button_text_truncate_set_text_truncate(self, value)\n\tgetPointer(self).TextTruncate = value;\nend\nfunction abi.ffi.property_getter_text_button_text_wrapped(self)\n\tlocal result_0 = getPointer(self).TextWrapped;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_text_button_text_wrapped_set_text_wrapped(self, value)\n\tgetPointer(self).TextWrapped = value == 1;\nend\nfunction abi.ffi.property_getter_text_button_text_x_alignment(self)\n\tlocal result_0 = getPointer(self).TextXAlignment;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_button_text_x_alignment_set_text_x_alignment(self, value)\n\tgetPointer(self).TextXAlignment = value;\nend\nfunction abi.ffi.property_getter_text_button_text_y_alignment(self)\n\tlocal result_0 = getPointer(self).TextYAlignment;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_button_text_y_alignment_set_text_y_alignment(self, value)\n\tgetPointer(self).TextYAlignment = value;\nend\nfunction abi.ffi.property_getter_image_label_image(self)\n\tlocal result_0 = getPointer(self).Image;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_image_label_image_set_image(self, value)\n\tgetPointer(self).Image = getPointer(value);\nend\nfunction abi.ffi.property_getter_image_label_image_color_3(self)\n\tlocal result_0 = getPointer(self).ImageColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_image_label_image_color_3_set_image_color_3(self, value)\n\tgetPointer(self).ImageColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_image_label_image_rect_offset(self)\n\tlocal result_0 = getPointer(self).ImageRectOffset;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_image_label_image_rect_offset_set_image_rect_offset(self, value)\n\tgetPointer(self).ImageRectOffset = getPointer(value);\nend\nfunction abi.ffi.property_getter_image_label_image_rect_size(self)\n\tlocal result_0 = getPointer(self).ImageRectSize;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_image_label_image_rect_size_set_image_rect_size(self, value)\n\tgetPointer(self).ImageRectSize = getPointer(value);\nend\nfunction abi.ffi.property_getter_image_label_image_transparency(self)\n\tlocal result_0 = getPointer(self).ImageTransparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_image_label_image_transparency_set_image_transparency(self, value)\n\tgetPointer(self).ImageTransparency = value;\nend\nfunction abi.ffi.property_getter_image_label_is_loaded(self)\n\tlocal result_0 = getPointer(self).IsLoaded;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_image_label_resample_mode(self)\n\tlocal result_0 = getPointer(self).ResampleMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_image_label_resample_mode_set_resample_mode(self, value)\n\tgetPointer(self).ResampleMode = value;\nend\nfunction abi.ffi.property_getter_image_label_scale_type(self)\n\tlocal result_0 = getPointer(self).ScaleType;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_image_label_scale_type_set_scale_type(self, value)\n\tgetPointer(self).ScaleType = value;\nend\nfunction abi.ffi.property_getter_image_label_slice_center(self)\n\tlocal result_0 = getPointer(self).SliceCenter;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_image_label_slice_center_set_slice_center(self, value)\n\tgetPointer(self).SliceCenter = getPointer(value);\nend\nfunction abi.ffi.property_getter_image_label_slice_scale(self)\n\tlocal result_0 = getPointer(self).SliceScale;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_image_label_slice_scale_set_slice_scale(self, value)\n\tgetPointer(self).SliceScale = value;\nend\nfunction abi.ffi.property_getter_image_label_tile_size(self)\n\tlocal result_0 = getPointer(self).TileSize;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_image_label_tile_size_set_tile_size(self, value)\n\tgetPointer(self).TileSize = getPointer(value);\nend\nfunction abi.ffi.property_getter_text_label_content_text(self)\n\tlocal result_0 = getPointer(self).ContentText;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_text_label_font(self)\n\tlocal result_0 = getPointer(self).Font;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_label_font_set_font(self, value)\n\tgetPointer(self).Font = value;\nend\nfunction abi.ffi.property_getter_text_label_font_face(self)\n\tlocal result_0 = getPointer(self).FontFace;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_text_label_font_face_set_font_face(self, value)\n\tgetPointer(self).FontFace = getPointer(value);\nend\nfunction abi.ffi.property_getter_text_label_line_height(self)\n\tlocal result_0 = getPointer(self).LineHeight;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_label_line_height_set_line_height(self, value)\n\tgetPointer(self).LineHeight = value;\nend\nfunction abi.ffi.property_getter_text_label_localized_text(self)\n\tlocal result_0 = getPointer(self).LocalizedText;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_text_label_max_visible_graphemes(self)\n\tlocal result_0 = getPointer(self).MaxVisibleGraphemes;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_label_max_visible_graphemes_set_max_visible_graphemes(self, value)\n\tgetPointer(self).MaxVisibleGraphemes = value;\nend\nfunction abi.ffi.property_getter_text_label_rich_text(self)\n\tlocal result_0 = getPointer(self).RichText;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_text_label_rich_text_set_rich_text(self, value)\n\tgetPointer(self).RichText = value == 1;\nend\nfunction abi.ffi.property_getter_text_label_text(self)\n\tlocal result_0 = getPointer(self).Text;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_text_label_text_set_text(self, value_addr, value_len)\n\tgetPointer(self).Text = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_text_label_text_bounds(self)\n\tlocal result_0 = getPointer(self).TextBounds;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_text_label_text_color_3(self)\n\tlocal result_0 = getPointer(self).TextColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_text_label_text_color_3_set_text_color_3(self, value)\n\tgetPointer(self).TextColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_text_label_text_fits(self)\n\tlocal result_0 = getPointer(self).TextFits;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_text_label_text_scaled(self)\n\tlocal result_0 = getPointer(self).TextScaled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_text_label_text_scaled_set_text_scaled(self, value)\n\tgetPointer(self).TextScaled = value == 1;\nend\nfunction abi.ffi.property_getter_text_label_text_size(self)\n\tlocal result_0 = getPointer(self).TextSize;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_label_text_size_set_text_size(self, value)\n\tgetPointer(self).TextSize = value;\nend\nfunction abi.ffi.property_getter_text_label_text_stroke_color_3(self)\n\tlocal result_0 = getPointer(self).TextStrokeColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_text_label_text_stroke_color_3_set_text_stroke_color_3(self, value)\n\tgetPointer(self).TextStrokeColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_text_label_text_stroke_transparency(self)\n\tlocal result_0 = getPointer(self).TextStrokeTransparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_label_text_stroke_transparency_set_text_stroke_transparency(self, value)\n\tgetPointer(self).TextStrokeTransparency = value;\nend\nfunction abi.ffi.property_getter_text_label_text_transparency(self)\n\tlocal result_0 = getPointer(self).TextTransparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_label_text_transparency_set_text_transparency(self, value)\n\tgetPointer(self).TextTransparency = value;\nend\nfunction abi.ffi.property_getter_text_label_text_truncate(self)\n\tlocal result_0 = getPointer(self).TextTruncate;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_label_text_truncate_set_text_truncate(self, value)\n\tgetPointer(self).TextTruncate = value;\nend\nfunction abi.ffi.property_getter_text_label_text_wrapped(self)\n\tlocal result_0 = getPointer(self).TextWrapped;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_text_label_text_wrapped_set_text_wrapped(self, value)\n\tgetPointer(self).TextWrapped = value == 1;\nend\nfunction abi.ffi.property_getter_text_label_text_x_alignment(self)\n\tlocal result_0 = getPointer(self).TextXAlignment;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_label_text_x_alignment_set_text_x_alignment(self, value)\n\tgetPointer(self).TextXAlignment = value;\nend\nfunction abi.ffi.property_getter_text_label_text_y_alignment(self)\n\tlocal result_0 = getPointer(self).TextYAlignment;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_label_text_y_alignment_set_text_y_alignment(self, value)\n\tgetPointer(self).TextYAlignment = value;\nend\nfunction abi.ffi.property_getter_scrolling_frame_absolute_canvas_size(self)\n\tlocal result_0 = getPointer(self).AbsoluteCanvasSize;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_scrolling_frame_absolute_window_size(self)\n\tlocal result_0 = getPointer(self).AbsoluteWindowSize;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_scrolling_frame_automatic_canvas_size(self)\n\tlocal result_0 = getPointer(self).AutomaticCanvasSize;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_scrolling_frame_automatic_canvas_size_set_automatic_canvas_size(self, value)\n\tgetPointer(self).AutomaticCanvasSize = value;\nend\nfunction abi.ffi.property_getter_scrolling_frame_bottom_image(self)\n\tlocal result_0 = getPointer(self).BottomImage;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_scrolling_frame_bottom_image_set_bottom_image(self, value)\n\tgetPointer(self).BottomImage = getPointer(value);\nend\nfunction abi.ffi.property_getter_scrolling_frame_canvas_position(self)\n\tlocal result_0 = getPointer(self).CanvasPosition;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_scrolling_frame_canvas_position_set_canvas_position(self, value)\n\tgetPointer(self).CanvasPosition = getPointer(value);\nend\nfunction abi.ffi.property_getter_scrolling_frame_canvas_size(self)\n\tlocal result_0 = getPointer(self).CanvasSize;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_scrolling_frame_canvas_size_set_canvas_size(self, value)\n\tgetPointer(self).CanvasSize = getPointer(value);\nend\nfunction abi.ffi.property_getter_scrolling_frame_elastic_behavior(self)\n\tlocal result_0 = getPointer(self).ElasticBehavior;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_scrolling_frame_elastic_behavior_set_elastic_behavior(self, value)\n\tgetPointer(self).ElasticBehavior = value;\nend\nfunction abi.ffi.property_getter_scrolling_frame_horizontal_scroll_bar_inset(self)\n\tlocal result_0 = getPointer(self).HorizontalScrollBarInset;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_scrolling_frame_horizontal_scroll_bar_inset_set_horizontal_scroll_bar_inset(self, value)\n\tgetPointer(self).HorizontalScrollBarInset = value;\nend\nfunction abi.ffi.property_getter_scrolling_frame_mid_image(self)\n\tlocal result_0 = getPointer(self).MidImage;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_scrolling_frame_mid_image_set_mid_image(self, value)\n\tgetPointer(self).MidImage = getPointer(value);\nend\nfunction abi.ffi.property_getter_scrolling_frame_scroll_bar_image_color_3(self)\n\tlocal result_0 = getPointer(self).ScrollBarImageColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_scrolling_frame_scroll_bar_image_color_3_set_scroll_bar_image_color_3(self, value)\n\tgetPointer(self).ScrollBarImageColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_scrolling_frame_scroll_bar_image_transparency(self)\n\tlocal result_0 = getPointer(self).ScrollBarImageTransparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_scrolling_frame_scroll_bar_image_transparency_set_scroll_bar_image_transparency(self, value)\n\tgetPointer(self).ScrollBarImageTransparency = value;\nend\nfunction abi.ffi.property_getter_scrolling_frame_scroll_bar_thickness(self)\n\tlocal result_0 = getPointer(self).ScrollBarThickness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_scrolling_frame_scroll_bar_thickness_set_scroll_bar_thickness(self, value)\n\tgetPointer(self).ScrollBarThickness = value;\nend\nfunction abi.ffi.property_getter_scrolling_frame_scrolling_direction(self)\n\tlocal result_0 = getPointer(self).ScrollingDirection;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_scrolling_frame_scrolling_direction_set_scrolling_direction(self, value)\n\tgetPointer(self).ScrollingDirection = value;\nend\nfunction abi.ffi.property_getter_scrolling_frame_scrolling_enabled(self)\n\tlocal result_0 = getPointer(self).ScrollingEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_scrolling_frame_scrolling_enabled_set_scrolling_enabled(self, value)\n\tgetPointer(self).ScrollingEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_scrolling_frame_top_image(self)\n\tlocal result_0 = getPointer(self).TopImage;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_scrolling_frame_top_image_set_top_image(self, value)\n\tgetPointer(self).TopImage = getPointer(value);\nend\nfunction abi.ffi.property_getter_scrolling_frame_vertical_scroll_bar_inset(self)\n\tlocal result_0 = getPointer(self).VerticalScrollBarInset;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_scrolling_frame_vertical_scroll_bar_inset_set_vertical_scroll_bar_inset(self, value)\n\tgetPointer(self).VerticalScrollBarInset = value;\nend\nfunction abi.ffi.property_getter_scrolling_frame_vertical_scroll_bar_position(self)\n\tlocal result_0 = getPointer(self).VerticalScrollBarPosition;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_scrolling_frame_vertical_scroll_bar_position_set_vertical_scroll_bar_position(self, value)\n\tgetPointer(self).VerticalScrollBarPosition = value;\nend\nfunction abi.ffi.property_getter_text_box_clear_text_on_focus(self)\n\tlocal result_0 = getPointer(self).ClearTextOnFocus;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_text_box_clear_text_on_focus_set_clear_text_on_focus(self, value)\n\tgetPointer(self).ClearTextOnFocus = value == 1;\nend\nfunction abi.ffi.property_getter_text_box_content_text(self)\n\tlocal result_0 = getPointer(self).ContentText;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_text_box_cursor_position(self)\n\tlocal result_0 = getPointer(self).CursorPosition;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_box_cursor_position_set_cursor_position(self, value)\n\tgetPointer(self).CursorPosition = value;\nend\nfunction abi.ffi.property_getter_text_box_font(self)\n\tlocal result_0 = getPointer(self).Font;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_box_font_set_font(self, value)\n\tgetPointer(self).Font = value;\nend\nfunction abi.ffi.property_getter_text_box_font_face(self)\n\tlocal result_0 = getPointer(self).FontFace;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_text_box_font_face_set_font_face(self, value)\n\tgetPointer(self).FontFace = getPointer(value);\nend\nfunction abi.ffi.property_getter_text_box_line_height(self)\n\tlocal result_0 = getPointer(self).LineHeight;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_box_line_height_set_line_height(self, value)\n\tgetPointer(self).LineHeight = value;\nend\nfunction abi.ffi.property_getter_text_box_max_visible_graphemes(self)\n\tlocal result_0 = getPointer(self).MaxVisibleGraphemes;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_box_max_visible_graphemes_set_max_visible_graphemes(self, value)\n\tgetPointer(self).MaxVisibleGraphemes = value;\nend\nfunction abi.ffi.property_getter_text_box_multi_line(self)\n\tlocal result_0 = getPointer(self).MultiLine;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_text_box_multi_line_set_multi_line(self, value)\n\tgetPointer(self).MultiLine = value == 1;\nend\nfunction abi.ffi.property_getter_text_box_placeholder_color_3(self)\n\tlocal result_0 = getPointer(self).PlaceholderColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_text_box_placeholder_color_3_set_placeholder_color_3(self, value)\n\tgetPointer(self).PlaceholderColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_text_box_placeholder_text(self)\n\tlocal result_0 = getPointer(self).PlaceholderText;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_text_box_placeholder_text_set_placeholder_text(self, value_addr, value_len)\n\tgetPointer(self).PlaceholderText = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_text_box_rich_text(self)\n\tlocal result_0 = getPointer(self).RichText;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_text_box_rich_text_set_rich_text(self, value)\n\tgetPointer(self).RichText = value == 1;\nend\nfunction abi.ffi.property_getter_text_box_selection_start(self)\n\tlocal result_0 = getPointer(self).SelectionStart;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_box_selection_start_set_selection_start(self, value)\n\tgetPointer(self).SelectionStart = value;\nend\nfunction abi.ffi.property_getter_text_box_show_native_input(self)\n\tlocal result_0 = getPointer(self).ShowNativeInput;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_text_box_show_native_input_set_show_native_input(self, value)\n\tgetPointer(self).ShowNativeInput = value == 1;\nend\nfunction abi.ffi.property_getter_text_box_text(self)\n\tlocal result_0 = getPointer(self).Text;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_text_box_text_set_text(self, value_addr, value_len)\n\tgetPointer(self).Text = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_text_box_text_bounds(self)\n\tlocal result_0 = getPointer(self).TextBounds;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_text_box_text_color_3(self)\n\tlocal result_0 = getPointer(self).TextColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_text_box_text_color_3_set_text_color_3(self, value)\n\tgetPointer(self).TextColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_text_box_text_editable(self)\n\tlocal result_0 = getPointer(self).TextEditable;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_text_box_text_editable_set_text_editable(self, value)\n\tgetPointer(self).TextEditable = value == 1;\nend\nfunction abi.ffi.property_getter_text_box_text_fits(self)\n\tlocal result_0 = getPointer(self).TextFits;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_text_box_text_scaled(self)\n\tlocal result_0 = getPointer(self).TextScaled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_text_box_text_scaled_set_text_scaled(self, value)\n\tgetPointer(self).TextScaled = value == 1;\nend\nfunction abi.ffi.property_getter_text_box_text_size(self)\n\tlocal result_0 = getPointer(self).TextSize;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_box_text_size_set_text_size(self, value)\n\tgetPointer(self).TextSize = value;\nend\nfunction abi.ffi.property_getter_text_box_text_stroke_color_3(self)\n\tlocal result_0 = getPointer(self).TextStrokeColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_text_box_text_stroke_color_3_set_text_stroke_color_3(self, value)\n\tgetPointer(self).TextStrokeColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_text_box_text_stroke_transparency(self)\n\tlocal result_0 = getPointer(self).TextStrokeTransparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_box_text_stroke_transparency_set_text_stroke_transparency(self, value)\n\tgetPointer(self).TextStrokeTransparency = value;\nend\nfunction abi.ffi.property_getter_text_box_text_transparency(self)\n\tlocal result_0 = getPointer(self).TextTransparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_box_text_transparency_set_text_transparency(self, value)\n\tgetPointer(self).TextTransparency = value;\nend\nfunction abi.ffi.property_getter_text_box_text_truncate(self)\n\tlocal result_0 = getPointer(self).TextTruncate;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_box_text_truncate_set_text_truncate(self, value)\n\tgetPointer(self).TextTruncate = value;\nend\nfunction abi.ffi.property_getter_text_box_text_wrapped(self)\n\tlocal result_0 = getPointer(self).TextWrapped;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_text_box_text_wrapped_set_text_wrapped(self, value)\n\tgetPointer(self).TextWrapped = value == 1;\nend\nfunction abi.ffi.property_getter_text_box_text_x_alignment(self)\n\tlocal result_0 = getPointer(self).TextXAlignment;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_box_text_x_alignment_set_text_x_alignment(self, value)\n\tgetPointer(self).TextXAlignment = value;\nend\nfunction abi.ffi.property_getter_text_box_text_y_alignment(self)\n\tlocal result_0 = getPointer(self).TextYAlignment;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_box_text_y_alignment_set_text_y_alignment(self, value)\n\tgetPointer(self).TextYAlignment = value;\nend\nfunction abi.ffi.method_text_box_capture_focus(self)\n\tgetPointer(self):CaptureFocus()\nend\nfunction abi.ffi.method_text_box_is_focused(self)\n\tlocal result_0 = getPointer(self):IsFocused();\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_text_box_release_focus(self, submitted)\n\tgetPointer(self):ReleaseFocus(submitted == 1)\nend\nfunction abi.ffi.event_text_box_focus_lost_on_focus_lost(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).FocusLost:Connect(function(enter_pressed, input_that_caused_focus_loss)\n\t\tlocal input_that_caused_focus_loss_optional, input_that_caused_focus_loss_optional_0 = 0, 0;\n\t\tif (input_that_caused_focus_loss ~= nil) then\n\t\t\tinput_that_caused_focus_loss_optional, input_that_caused_focus_loss_optional_0 = 1, createPointer(input_that_caused_focus_loss);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, enter_pressed and 1 or 0, input_that_caused_focus_loss_optional, input_that_caused_focus_loss_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_text_box_focused_on_focused(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Focused:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_text_box_return_pressed_from_on_screen_keyboard_on_return_pressed_from_on_screen_keyboard(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).ReturnPressedFromOnScreenKeyboard:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_video_frame_is_loaded(self)\n\tlocal result_0 = getPointer(self).IsLoaded;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_video_frame_looped(self)\n\tlocal result_0 = getPointer(self).Looped;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_video_frame_looped_set_looped(self, value)\n\tgetPointer(self).Looped = value == 1;\nend\nfunction abi.ffi.property_getter_video_frame_playing(self)\n\tlocal result_0 = getPointer(self).Playing;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_video_frame_playing_set_playing(self, value)\n\tgetPointer(self).Playing = value == 1;\nend\nfunction abi.ffi.property_getter_video_frame_resolution(self)\n\tlocal result_0 = getPointer(self).Resolution;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_video_frame_time_length(self)\n\tlocal result_0 = getPointer(self).TimeLength;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_video_frame_time_position(self)\n\tlocal result_0 = getPointer(self).TimePosition;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_video_frame_time_position_set_time_position(self, value)\n\tgetPointer(self).TimePosition = value;\nend\nfunction abi.ffi.property_getter_video_frame_video(self)\n\tlocal result_0 = getPointer(self).Video;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_video_frame_video_set_video(self, value)\n\tgetPointer(self).Video = getPointer(value);\nend\nfunction abi.ffi.property_getter_video_frame_volume(self)\n\tlocal result_0 = getPointer(self).Volume;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_video_frame_volume_set_volume(self, value)\n\tgetPointer(self).Volume = value;\nend\nfunction abi.ffi.method_video_frame_pause(self)\n\tgetPointer(self):Pause()\nend\nfunction abi.ffi.method_video_frame_play(self)\n\tgetPointer(self):Play()\nend\nfunction abi.ffi.event_video_frame_did_loop_on_did_loop(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).DidLoop:Connect(function(video)\n\t\tlocal video_len = #video;\n\t\tlocal video_content = allocString(video_len);\n\t\tfor i = 1, video_len do\n\t\t\tstoreU8(memory, video_content + (i - 1), string.byte(video:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, video_content, video_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_video_frame_ended_on_ended(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Ended:Connect(function(video)\n\t\tlocal video_len = #video;\n\t\tlocal video_content = allocString(video_len);\n\t\tfor i = 1, video_len do\n\t\t\tstoreU8(memory, video_content + (i - 1), string.byte(video:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, video_content, video_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_video_frame_loaded_on_loaded(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Loaded:Connect(function(video)\n\t\tlocal video_len = #video;\n\t\tlocal video_content = allocString(video_len);\n\t\tfor i = 1, video_len do\n\t\t\tstoreU8(memory, video_content + (i - 1), string.byte(video:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, video_content, video_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_video_frame_paused_on_paused(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Paused:Connect(function(video)\n\t\tlocal video_len = #video;\n\t\tlocal video_content = allocString(video_len);\n\t\tfor i = 1, video_len do\n\t\t\tstoreU8(memory, video_content + (i - 1), string.byte(video:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, video_content, video_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_video_frame_played_on_played(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Played:Connect(function(video)\n\t\tlocal video_len = #video;\n\t\tlocal video_content = allocString(video_len);\n\t\tfor i = 1, video_len do\n\t\t\tstoreU8(memory, video_content + (i - 1), string.byte(video:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, video_content, video_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_viewport_frame_ambient(self)\n\tlocal result_0 = getPointer(self).Ambient;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_viewport_frame_ambient_set_ambient(self, value)\n\tgetPointer(self).Ambient = getPointer(value);\nend\nfunction abi.ffi.property_getter_viewport_frame_current_camera(self)\n\tlocal result_0 = getPointer(self).CurrentCamera;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_viewport_frame_current_camera_set_current_camera(self, value)\n\tgetPointer(self).CurrentCamera = getPointer(value);\nend\nfunction abi.ffi.property_getter_viewport_frame_image_color_3(self)\n\tlocal result_0 = getPointer(self).ImageColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_viewport_frame_image_color_3_set_image_color_3(self, value)\n\tgetPointer(self).ImageColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_viewport_frame_image_transparency(self)\n\tlocal result_0 = getPointer(self).ImageTransparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_viewport_frame_image_transparency_set_image_transparency(self, value)\n\tgetPointer(self).ImageTransparency = value;\nend\nfunction abi.ffi.property_getter_viewport_frame_light_color(self)\n\tlocal result_0 = getPointer(self).LightColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_viewport_frame_light_color_set_light_color(self, value)\n\tgetPointer(self).LightColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_viewport_frame_light_direction(self)\n\tlocal result_0 = getPointer(self).LightDirection;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_viewport_frame_light_direction_set_light_direction(self, value)\n\tgetPointer(self).LightDirection = getPointer(value);\nend\nfunction abi.ffi.property_getter_layer_collector_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_layer_collector_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_layer_collector_reset_on_spawn(self)\n\tlocal result_0 = getPointer(self).ResetOnSpawn;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_layer_collector_reset_on_spawn_set_reset_on_spawn(self, value)\n\tgetPointer(self).ResetOnSpawn = value == 1;\nend\nfunction abi.ffi.property_getter_layer_collector_z_index_behavior(self)\n\tlocal result_0 = getPointer(self).ZIndexBehavior;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_layer_collector_z_index_behavior_set_z_index_behavior(self, value)\n\tgetPointer(self).ZIndexBehavior = value;\nend\nfunction abi.ffi.property_getter_billboard_gui_active(self)\n\tlocal result_0 = getPointer(self).Active;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_billboard_gui_active_set_active(self, value)\n\tgetPointer(self).Active = value == 1;\nend\nfunction abi.ffi.property_getter_billboard_gui_adornee(self)\n\tlocal result_0 = getPointer(self).Adornee;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_billboard_gui_adornee_set_adornee(self, value)\n\tgetPointer(self).Adornee = getPointer(value);\nend\nfunction abi.ffi.property_getter_billboard_gui_always_on_top(self)\n\tlocal result_0 = getPointer(self).AlwaysOnTop;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_billboard_gui_always_on_top_set_always_on_top(self, value)\n\tgetPointer(self).AlwaysOnTop = value == 1;\nend\nfunction abi.ffi.property_getter_billboard_gui_brightness(self)\n\tlocal result_0 = getPointer(self).Brightness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_billboard_gui_brightness_set_brightness(self, value)\n\tgetPointer(self).Brightness = value;\nend\nfunction abi.ffi.property_getter_billboard_gui_clips_descendants(self)\n\tlocal result_0 = getPointer(self).ClipsDescendants;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_billboard_gui_clips_descendants_set_clips_descendants(self, value)\n\tgetPointer(self).ClipsDescendants = value == 1;\nend\nfunction abi.ffi.property_getter_billboard_gui_current_distance(self)\n\tlocal result_0 = getPointer(self).CurrentDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_billboard_gui_distance_lower_limit(self)\n\tlocal result_0 = getPointer(self).DistanceLowerLimit;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_billboard_gui_distance_lower_limit_set_distance_lower_limit(self, value)\n\tgetPointer(self).DistanceLowerLimit = value;\nend\nfunction abi.ffi.property_getter_billboard_gui_distance_step(self)\n\tlocal result_0 = getPointer(self).DistanceStep;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_billboard_gui_distance_step_set_distance_step(self, value)\n\tgetPointer(self).DistanceStep = value;\nend\nfunction abi.ffi.property_getter_billboard_gui_distance_upper_limit(self)\n\tlocal result_0 = getPointer(self).DistanceUpperLimit;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_billboard_gui_distance_upper_limit_set_distance_upper_limit(self, value)\n\tgetPointer(self).DistanceUpperLimit = value;\nend\nfunction abi.ffi.property_getter_billboard_gui_extents_offset(self)\n\tlocal result_0 = getPointer(self).ExtentsOffset;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_billboard_gui_extents_offset_set_extents_offset(self, value)\n\tgetPointer(self).ExtentsOffset = getPointer(value);\nend\nfunction abi.ffi.property_getter_billboard_gui_extents_offset_world_space(self)\n\tlocal result_0 = getPointer(self).ExtentsOffsetWorldSpace;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_billboard_gui_extents_offset_world_space_set_extents_offset_world_space(self, value)\n\tgetPointer(self).ExtentsOffsetWorldSpace = getPointer(value);\nend\nfunction abi.ffi.property_getter_billboard_gui_light_influence(self)\n\tlocal result_0 = getPointer(self).LightInfluence;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_billboard_gui_light_influence_set_light_influence(self, value)\n\tgetPointer(self).LightInfluence = value;\nend\nfunction abi.ffi.property_getter_billboard_gui_max_distance(self)\n\tlocal result_0 = getPointer(self).MaxDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_billboard_gui_max_distance_set_max_distance(self, value)\n\tgetPointer(self).MaxDistance = value;\nend\nfunction abi.ffi.property_getter_billboard_gui_player_to_hide_from(self)\n\tlocal result_0 = getPointer(self).PlayerToHideFrom;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_billboard_gui_player_to_hide_from_set_player_to_hide_from(self, value)\n\tgetPointer(self).PlayerToHideFrom = getPointer(value);\nend\nfunction abi.ffi.property_getter_billboard_gui_size(self)\n\tlocal result_0 = getPointer(self).Size;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_billboard_gui_size_set_size(self, value)\n\tgetPointer(self).Size = getPointer(value);\nend\nfunction abi.ffi.property_getter_billboard_gui_size_offset(self)\n\tlocal result_0 = getPointer(self).SizeOffset;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_billboard_gui_size_offset_set_size_offset(self, value)\n\tgetPointer(self).SizeOffset = getPointer(value);\nend\nfunction abi.ffi.property_getter_billboard_gui_studs_offset(self)\n\tlocal result_0 = getPointer(self).StudsOffset;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_billboard_gui_studs_offset_set_studs_offset(self, value)\n\tgetPointer(self).StudsOffset = getPointer(value);\nend\nfunction abi.ffi.property_getter_billboard_gui_studs_offset_world_space(self)\n\tlocal result_0 = getPointer(self).StudsOffsetWorldSpace;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_billboard_gui_studs_offset_world_space_set_studs_offset_world_space(self, value)\n\tgetPointer(self).StudsOffsetWorldSpace = getPointer(value);\nend\nfunction abi.ffi.property_getter_screen_gui_clip_to_device_safe_area(self)\n\tlocal result_0 = getPointer(self).ClipToDeviceSafeArea;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_screen_gui_clip_to_device_safe_area_set_clip_to_device_safe_area(self, value)\n\tgetPointer(self).ClipToDeviceSafeArea = value == 1;\nend\nfunction abi.ffi.property_getter_screen_gui_display_order(self)\n\tlocal result_0 = getPointer(self).DisplayOrder;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_screen_gui_display_order_set_display_order(self, value)\n\tgetPointer(self).DisplayOrder = value;\nend\nfunction abi.ffi.property_getter_screen_gui_ignore_gui_inset(self)\n\tlocal result_0 = getPointer(self).IgnoreGuiInset;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_screen_gui_ignore_gui_inset_set_ignore_gui_inset(self, value)\n\tgetPointer(self).IgnoreGuiInset = value == 1;\nend\nfunction abi.ffi.property_getter_screen_gui_safe_area_compatibility(self)\n\tlocal result_0 = getPointer(self).SafeAreaCompatibility;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_screen_gui_safe_area_compatibility_set_safe_area_compatibility(self, value)\n\tgetPointer(self).SafeAreaCompatibility = value;\nend\nfunction abi.ffi.property_getter_surface_gui_base_active(self)\n\tlocal result_0 = getPointer(self).Active;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_surface_gui_base_active_set_active(self, value)\n\tgetPointer(self).Active = value == 1;\nend\nfunction abi.ffi.property_getter_surface_gui_base_adornee(self)\n\tlocal result_0 = getPointer(self).Adornee;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_surface_gui_base_adornee_set_adornee(self, value)\n\tgetPointer(self).Adornee = getPointer(value);\nend\nfunction abi.ffi.property_getter_surface_gui_base_face(self)\n\tlocal result_0 = getPointer(self).Face;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_surface_gui_base_face_set_face(self, value)\n\tgetPointer(self).Face = value;\nend\nfunction abi.ffi.property_getter_ad_gui_ad_shape(self)\n\tlocal result_0 = getPointer(self).AdShape;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ad_gui_ad_shape_set_ad_shape(self, value)\n\tgetPointer(self).AdShape = value;\nend\nfunction abi.ffi.property_getter_surface_gui_always_on_top(self)\n\tlocal result_0 = getPointer(self).AlwaysOnTop;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_surface_gui_always_on_top_set_always_on_top(self, value)\n\tgetPointer(self).AlwaysOnTop = value == 1;\nend\nfunction abi.ffi.property_getter_surface_gui_brightness(self)\n\tlocal result_0 = getPointer(self).Brightness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_surface_gui_brightness_set_brightness(self, value)\n\tgetPointer(self).Brightness = value;\nend\nfunction abi.ffi.property_getter_surface_gui_canvas_size(self)\n\tlocal result_0 = getPointer(self).CanvasSize;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_surface_gui_canvas_size_set_canvas_size(self, value)\n\tgetPointer(self).CanvasSize = getPointer(value);\nend\nfunction abi.ffi.property_getter_surface_gui_clips_descendants(self)\n\tlocal result_0 = getPointer(self).ClipsDescendants;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_surface_gui_clips_descendants_set_clips_descendants(self, value)\n\tgetPointer(self).ClipsDescendants = value == 1;\nend\nfunction abi.ffi.property_getter_surface_gui_light_influence(self)\n\tlocal result_0 = getPointer(self).LightInfluence;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_surface_gui_light_influence_set_light_influence(self, value)\n\tgetPointer(self).LightInfluence = value;\nend\nfunction abi.ffi.property_getter_surface_gui_pixels_per_stud(self)\n\tlocal result_0 = getPointer(self).PixelsPerStud;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_surface_gui_pixels_per_stud_set_pixels_per_stud(self, value)\n\tgetPointer(self).PixelsPerStud = value;\nend\nfunction abi.ffi.property_getter_surface_gui_sizing_mode(self)\n\tlocal result_0 = getPointer(self).SizingMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_surface_gui_sizing_mode_set_sizing_mode(self, value)\n\tgetPointer(self).SizingMode = value;\nend\nfunction abi.ffi.property_getter_surface_gui_tool_punch_through_distance(self)\n\tlocal result_0 = getPointer(self).ToolPunchThroughDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_surface_gui_tool_punch_through_distance_set_tool_punch_through_distance(self, value)\n\tgetPointer(self).ToolPunchThroughDistance = value;\nend\nfunction abi.ffi.property_getter_surface_gui_z_offset(self)\n\tlocal result_0 = getPointer(self).ZOffset;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_surface_gui_z_offset_set_z_offset(self, value)\n\tgetPointer(self).ZOffset = value;\nend\nfunction abi.ffi.property_getter_gui_base_3_d_color_3(self)\n\tlocal result_0 = getPointer(self).Color3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_gui_base_3_d_color_3_set_color_3(self, value)\n\tgetPointer(self).Color3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_gui_base_3_d_transparency(self)\n\tlocal result_0 = getPointer(self).Transparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_gui_base_3_d_transparency_set_transparency(self, value)\n\tgetPointer(self).Transparency = value;\nend\nfunction abi.ffi.property_getter_gui_base_3_d_visible(self)\n\tlocal result_0 = getPointer(self).Visible;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_gui_base_3_d_visible_set_visible(self, value)\n\tgetPointer(self).Visible = value == 1;\nend\nfunction abi.ffi.property_getter_instance_adornment_adornee(self)\n\tlocal result_0 = getPointer(self).Adornee;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_instance_adornment_adornee_set_adornee(self, value)\n\tgetPointer(self).Adornee = getPointer(value);\nend\nfunction abi.ffi.property_getter_selection_box_line_thickness(self)\n\tlocal result_0 = getPointer(self).LineThickness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_selection_box_line_thickness_set_line_thickness(self, value)\n\tgetPointer(self).LineThickness = value;\nend\nfunction abi.ffi.property_getter_selection_box_surface_color_3(self)\n\tlocal result_0 = getPointer(self).SurfaceColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_selection_box_surface_color_3_set_surface_color_3(self, value)\n\tgetPointer(self).SurfaceColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_selection_box_surface_transparency(self)\n\tlocal result_0 = getPointer(self).SurfaceTransparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_selection_box_surface_transparency_set_surface_transparency(self, value)\n\tgetPointer(self).SurfaceTransparency = value;\nend\nfunction abi.ffi.property_getter_pv_adornment_adornee(self)\n\tlocal result_0 = getPointer(self).Adornee;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_pv_adornment_adornee_set_adornee(self, value)\n\tgetPointer(self).Adornee = getPointer(value);\nend\nfunction abi.ffi.property_getter_handle_adornment_adorn_culling_mode(self)\n\tlocal result_0 = getPointer(self).AdornCullingMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_handle_adornment_adorn_culling_mode_set_adorn_culling_mode(self, value)\n\tgetPointer(self).AdornCullingMode = value;\nend\nfunction abi.ffi.property_getter_handle_adornment_always_on_top(self)\n\tlocal result_0 = getPointer(self).AlwaysOnTop;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_handle_adornment_always_on_top_set_always_on_top(self, value)\n\tgetPointer(self).AlwaysOnTop = value == 1;\nend\nfunction abi.ffi.property_getter_handle_adornment_c_frame(self)\n\tlocal result_0 = getPointer(self).CFrame;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_handle_adornment_c_frame_set_c_frame(self, value)\n\tgetPointer(self).CFrame = getPointer(value);\nend\nfunction abi.ffi.property_getter_handle_adornment_size_relative_offset(self)\n\tlocal result_0 = getPointer(self).SizeRelativeOffset;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_handle_adornment_size_relative_offset_set_size_relative_offset(self, value)\n\tgetPointer(self).SizeRelativeOffset = getPointer(value);\nend\nfunction abi.ffi.property_getter_handle_adornment_z_index(self)\n\tlocal result_0 = getPointer(self).ZIndex;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_handle_adornment_z_index_set_z_index(self, value)\n\tgetPointer(self).ZIndex = value;\nend\nfunction abi.ffi.event_handle_adornment_mouse_button_1_down_on_mouse_button_1_down(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseButton1Down:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_handle_adornment_mouse_button_1_up_on_mouse_button_1_up(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseButton1Up:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_handle_adornment_mouse_enter_on_mouse_enter(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseEnter:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_handle_adornment_mouse_leave_on_mouse_leave(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseLeave:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_box_handle_adornment_size(self)\n\tlocal result_0 = getPointer(self).Size;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_box_handle_adornment_size_set_size(self, value)\n\tgetPointer(self).Size = getPointer(value);\nend\nfunction abi.ffi.property_getter_cone_handle_adornment_height(self)\n\tlocal result_0 = getPointer(self).Height;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_cone_handle_adornment_height_set_height(self, value)\n\tgetPointer(self).Height = value;\nend\nfunction abi.ffi.property_getter_cone_handle_adornment_radius(self)\n\tlocal result_0 = getPointer(self).Radius;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_cone_handle_adornment_radius_set_radius(self, value)\n\tgetPointer(self).Radius = value;\nend\nfunction abi.ffi.property_getter_cylinder_handle_adornment_angle(self)\n\tlocal result_0 = getPointer(self).Angle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_cylinder_handle_adornment_angle_set_angle(self, value)\n\tgetPointer(self).Angle = value;\nend\nfunction abi.ffi.property_getter_cylinder_handle_adornment_height(self)\n\tlocal result_0 = getPointer(self).Height;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_cylinder_handle_adornment_height_set_height(self, value)\n\tgetPointer(self).Height = value;\nend\nfunction abi.ffi.property_getter_cylinder_handle_adornment_inner_radius(self)\n\tlocal result_0 = getPointer(self).InnerRadius;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_cylinder_handle_adornment_inner_radius_set_inner_radius(self, value)\n\tgetPointer(self).InnerRadius = value;\nend\nfunction abi.ffi.property_getter_cylinder_handle_adornment_radius(self)\n\tlocal result_0 = getPointer(self).Radius;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_cylinder_handle_adornment_radius_set_radius(self, value)\n\tgetPointer(self).Radius = value;\nend\nfunction abi.ffi.property_getter_image_handle_adornment_image(self)\n\tlocal result_0 = getPointer(self).Image;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_image_handle_adornment_image_set_image(self, value)\n\tgetPointer(self).Image = getPointer(value);\nend\nfunction abi.ffi.property_getter_image_handle_adornment_size(self)\n\tlocal result_0 = getPointer(self).Size;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_image_handle_adornment_size_set_size(self, value)\n\tgetPointer(self).Size = getPointer(value);\nend\nfunction abi.ffi.property_getter_line_handle_adornment_length(self)\n\tlocal result_0 = getPointer(self).Length;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_line_handle_adornment_length_set_length(self, value)\n\tgetPointer(self).Length = value;\nend\nfunction abi.ffi.property_getter_line_handle_adornment_thickness(self)\n\tlocal result_0 = getPointer(self).Thickness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_line_handle_adornment_thickness_set_thickness(self, value)\n\tgetPointer(self).Thickness = value;\nend\nfunction abi.ffi.property_getter_sphere_handle_adornment_radius(self)\n\tlocal result_0 = getPointer(self).Radius;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sphere_handle_adornment_radius_set_radius(self, value)\n\tgetPointer(self).Radius = value;\nend\nfunction abi.ffi.method_wireframe_handle_adornment_add_line(self, from, to)\n\tgetPointer(self):AddLine(getPointer(from), getPointer(to))\nend\nfunction abi.ffi.method_wireframe_handle_adornment_clear(self)\n\tgetPointer(self):Clear()\nend\nfunction abi.ffi.property_getter_selection_sphere_surface_color_3(self)\n\tlocal result_0 = getPointer(self).SurfaceColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_selection_sphere_surface_color_3_set_surface_color_3(self, value)\n\tgetPointer(self).SurfaceColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_selection_sphere_surface_transparency(self)\n\tlocal result_0 = getPointer(self).SurfaceTransparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_selection_sphere_surface_transparency_set_surface_transparency(self, value)\n\tgetPointer(self).SurfaceTransparency = value;\nend\nfunction abi.ffi.property_getter_part_adornment_adornee(self)\n\tlocal result_0 = getPointer(self).Adornee;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_part_adornment_adornee_set_adornee(self, value)\n\tgetPointer(self).Adornee = getPointer(value);\nend\nfunction abi.ffi.property_getter_arc_handles_axes(self)\n\tlocal result_0 = getPointer(self).Axes;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_arc_handles_axes_set_axes(self, value)\n\tgetPointer(self).Axes = getPointer(value);\nend\nfunction abi.ffi.event_arc_handles_mouse_button_1_down_on_mouse_button_1_down(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseButton1Down:Connect(function(axis)\n\t\tinvokeFunction(callback_data, callback_vtable, axis)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_arc_handles_mouse_button_1_up_on_mouse_button_1_up(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseButton1Up:Connect(function(axis)\n\t\tinvokeFunction(callback_data, callback_vtable, axis)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_arc_handles_mouse_drag_on_mouse_drag(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseDrag:Connect(function(axis, relative_angle, delta_radius)\n\t\tinvokeFunction(callback_data, callback_vtable, axis, relative_angle, delta_radius)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_arc_handles_mouse_enter_on_mouse_enter(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseEnter:Connect(function(axis)\n\t\tinvokeFunction(callback_data, callback_vtable, axis)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_arc_handles_mouse_leave_on_mouse_leave(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseLeave:Connect(function(axis)\n\t\tinvokeFunction(callback_data, callback_vtable, axis)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_handles_faces(self)\n\tlocal result_0 = getPointer(self).Faces;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_handles_faces_set_faces(self, value)\n\tgetPointer(self).Faces = getPointer(value);\nend\nfunction abi.ffi.property_getter_handles_style(self)\n\tlocal result_0 = getPointer(self).Style;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_handles_style_set_style(self, value)\n\tgetPointer(self).Style = value;\nend\nfunction abi.ffi.event_handles_mouse_button_1_down_on_mouse_button_1_down(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseButton1Down:Connect(function(face)\n\t\tinvokeFunction(callback_data, callback_vtable, face)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_handles_mouse_button_1_up_on_mouse_button_1_up(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseButton1Up:Connect(function(face)\n\t\tinvokeFunction(callback_data, callback_vtable, face)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_handles_mouse_drag_on_mouse_drag(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseDrag:Connect(function(face, distance)\n\t\tinvokeFunction(callback_data, callback_vtable, face, distance)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_handles_mouse_enter_on_mouse_enter(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseEnter:Connect(function(face)\n\t\tinvokeFunction(callback_data, callback_vtable, face)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_handles_mouse_leave_on_mouse_leave(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MouseLeave:Connect(function(face)\n\t\tinvokeFunction(callback_data, callback_vtable, face)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_surface_selection_target_surface(self)\n\tlocal result_0 = getPointer(self).TargetSurface;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_surface_selection_target_surface_set_target_surface(self, value)\n\tgetPointer(self).TargetSurface = value;\nend\nfunction abi.ffi.property_getter_selection_lasso_humanoid(self)\n\tlocal result_0 = getPointer(self).Humanoid;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_selection_lasso_humanoid_set_humanoid(self, value)\n\tgetPointer(self).Humanoid = getPointer(value);\nend\nfunction abi.ffi.property_getter_gui_service_auto_select_gui_enabled(self)\n\tlocal result_0 = getPointer(self).AutoSelectGuiEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_gui_service_auto_select_gui_enabled_set_auto_select_gui_enabled(self, value)\n\tgetPointer(self).AutoSelectGuiEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_gui_service_core_gui_navigation_enabled(self)\n\tlocal result_0 = getPointer(self).CoreGuiNavigationEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_gui_service_core_gui_navigation_enabled_set_core_gui_navigation_enabled(self, value)\n\tgetPointer(self).CoreGuiNavigationEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_gui_service_gui_navigation_enabled(self)\n\tlocal result_0 = getPointer(self).GuiNavigationEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_gui_service_gui_navigation_enabled_set_gui_navigation_enabled(self, value)\n\tgetPointer(self).GuiNavigationEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_gui_service_menu_is_open(self)\n\tlocal result_0 = getPointer(self).MenuIsOpen;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_gui_service_selected_object(self)\n\tlocal result_0 = getPointer(self).SelectedObject;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_gui_service_selected_object_set_selected_object(self, value)\n\tgetPointer(self).SelectedObject = getPointer(value);\nend\nfunction abi.ffi.property_getter_gui_service_touch_controls_enabled(self)\n\tlocal result_0 = getPointer(self).TouchControlsEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_gui_service_touch_controls_enabled_set_touch_controls_enabled(self, value)\n\tgetPointer(self).TouchControlsEnabled = value == 1;\nend\nfunction abi.ffi.method_gui_service_add_selection_parent(self, selection_name_addr, selection_name_len, selection_parent)\n\tgetPointer(self):AddSelectionParent(loadString(memory, selection_name_addr, selection_name_len), getPointer(selection_parent))\nend\nfunction abi.ffi.method_gui_service_close_inspect_menu(self)\n\tgetPointer(self):CloseInspectMenu()\nend\nfunction abi.ffi.method_gui_service_get_emotes_menu_open(self)\n\tlocal result_0 = getPointer(self):GetEmotesMenuOpen();\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_gui_service_get_gameplay_paused_notification_enabled(self)\n\tlocal result_0 = getPointer(self):GetGameplayPausedNotificationEnabled();\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_gui_service_get_inspect_menu_enabled(self)\n\tlocal result_0 = getPointer(self):GetInspectMenuEnabled();\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_gui_service_inspect_player_from_humanoid_description(self, humanoid_description, name_addr, name_len)\n\tgetPointer(self):InspectPlayerFromHumanoidDescription(getPointer(humanoid_description), loadString(memory, name_addr, name_len))\nend\nfunction abi.ffi.method_gui_service_inspect_player_from_user_id(self, user_id)\n\tgetPointer(self):InspectPlayerFromUserId(user_id)\nend\nfunction abi.ffi.method_gui_service_is_ten_foot_interface(self)\n\tlocal result_0 = getPointer(self):IsTenFootInterface();\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_gui_service_remove_selection_group(self, selection_name_addr, selection_name_len)\n\tgetPointer(self):RemoveSelectionGroup(loadString(memory, selection_name_addr, selection_name_len))\nend\nfunction abi.ffi.method_gui_service_select(self, selection_parent)\n\tgetPointer(self):Select(getPointer(selection_parent))\nend\nfunction abi.ffi.method_gui_service_set_emotes_menu_open(self, is_open)\n\tgetPointer(self):SetEmotesMenuOpen(is_open == 1)\nend\nfunction abi.ffi.method_gui_service_set_gameplay_paused_notification_enabled(self, enabled)\n\tgetPointer(self):SetGameplayPausedNotificationEnabled(enabled == 1)\nend\nfunction abi.ffi.method_gui_service_set_inspect_menu_enabled(self, enabled)\n\tgetPointer(self):SetInspectMenuEnabled(enabled == 1)\nend\nfunction abi.ffi.event_gui_service_menu_closed_on_menu_closed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MenuClosed:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_gui_service_menu_opened_on_menu_opened(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MenuOpened:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_haptic_service_is_motor_supported(self, input_type, vibration_motor)\n\tlocal result_0 = getPointer(self):IsMotorSupported(input_type, vibration_motor);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_haptic_service_is_vibration_supported(self, input_type)\n\tlocal result_0 = getPointer(self):IsVibrationSupported(input_type);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_highlight_adornee(self)\n\tlocal result_0 = getPointer(self).Adornee;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_highlight_adornee_set_adornee(self, value)\n\tgetPointer(self).Adornee = getPointer(value);\nend\nfunction abi.ffi.property_getter_highlight_depth_mode(self)\n\tlocal result_0 = getPointer(self).DepthMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_highlight_depth_mode_set_depth_mode(self, value)\n\tgetPointer(self).DepthMode = value;\nend\nfunction abi.ffi.property_getter_highlight_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_highlight_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_highlight_fill_color(self)\n\tlocal result_0 = getPointer(self).FillColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_highlight_fill_color_set_fill_color(self, value)\n\tgetPointer(self).FillColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_highlight_fill_transparency(self)\n\tlocal result_0 = getPointer(self).FillTransparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_highlight_fill_transparency_set_fill_transparency(self, value)\n\tgetPointer(self).FillTransparency = value;\nend\nfunction abi.ffi.property_getter_highlight_outline_color(self)\n\tlocal result_0 = getPointer(self).OutlineColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_highlight_outline_color_set_outline_color(self, value)\n\tgetPointer(self).OutlineColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_highlight_outline_transparency(self)\n\tlocal result_0 = getPointer(self).OutlineTransparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_highlight_outline_transparency_set_outline_transparency(self, value)\n\tgetPointer(self).OutlineTransparency = value;\nend\nfunction abi.ffi.method_http_service_generate_guid(self, wrap_in_curly_braces)\n\tlocal result_0 = getPointer(self):GenerateGUID(wrap_in_curly_braces == 1);\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.method_http_service_url_encode(self, input_addr, input_len)\n\tlocal result_0 = getPointer(self):UrlEncode(loadString(memory, input_addr, input_len));\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.method_http_service_get_async(self, url_addr, url_len, nocache)\n\tlocal result_0 = getPointer(self):GetAsync(loadString(memory, url_addr, url_len), nocache == 1);\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_humanoid_auto_jump_enabled(self)\n\tlocal result_0 = getPointer(self).AutoJumpEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_humanoid_auto_jump_enabled_set_auto_jump_enabled(self, value)\n\tgetPointer(self).AutoJumpEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_humanoid_auto_rotate(self)\n\tlocal result_0 = getPointer(self).AutoRotate;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_humanoid_auto_rotate_set_auto_rotate(self, value)\n\tgetPointer(self).AutoRotate = value == 1;\nend\nfunction abi.ffi.property_getter_humanoid_automatic_scaling_enabled(self)\n\tlocal result_0 = getPointer(self).AutomaticScalingEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_humanoid_automatic_scaling_enabled_set_automatic_scaling_enabled(self, value)\n\tgetPointer(self).AutomaticScalingEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_humanoid_break_joints_on_death(self)\n\tlocal result_0 = getPointer(self).BreakJointsOnDeath;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_humanoid_break_joints_on_death_set_break_joints_on_death(self, value)\n\tgetPointer(self).BreakJointsOnDeath = value == 1;\nend\nfunction abi.ffi.property_getter_humanoid_camera_offset(self)\n\tlocal result_0 = getPointer(self).CameraOffset;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_humanoid_camera_offset_set_camera_offset(self, value)\n\tgetPointer(self).CameraOffset = getPointer(value);\nend\nfunction abi.ffi.property_getter_humanoid_display_distance_type(self)\n\tlocal result_0 = getPointer(self).DisplayDistanceType;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_display_distance_type_set_display_distance_type(self, value)\n\tgetPointer(self).DisplayDistanceType = value;\nend\nfunction abi.ffi.property_getter_humanoid_display_name(self)\n\tlocal result_0 = getPointer(self).DisplayName;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_humanoid_display_name_set_display_name(self, value_addr, value_len)\n\tgetPointer(self).DisplayName = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_humanoid_evaluate_state_machine(self)\n\tlocal result_0 = getPointer(self).EvaluateStateMachine;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_humanoid_evaluate_state_machine_set_evaluate_state_machine(self, value)\n\tgetPointer(self).EvaluateStateMachine = value == 1;\nend\nfunction abi.ffi.property_getter_humanoid_floor_material(self)\n\tlocal result_0 = getPointer(self).FloorMaterial;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_humanoid_health(self)\n\tlocal result_0 = getPointer(self).Health;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_health_set_health(self, value)\n\tgetPointer(self).Health = value;\nend\nfunction abi.ffi.property_getter_humanoid_health_display_distance(self)\n\tlocal result_0 = getPointer(self).HealthDisplayDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_health_display_distance_set_health_display_distance(self, value)\n\tgetPointer(self).HealthDisplayDistance = value;\nend\nfunction abi.ffi.property_getter_humanoid_health_display_type(self)\n\tlocal result_0 = getPointer(self).HealthDisplayType;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_health_display_type_set_health_display_type(self, value)\n\tgetPointer(self).HealthDisplayType = value;\nend\nfunction abi.ffi.property_getter_humanoid_hip_height(self)\n\tlocal result_0 = getPointer(self).HipHeight;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_hip_height_set_hip_height(self, value)\n\tgetPointer(self).HipHeight = value;\nend\nfunction abi.ffi.property_getter_humanoid_jump(self)\n\tlocal result_0 = getPointer(self).Jump;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_humanoid_jump_set_jump(self, value)\n\tgetPointer(self).Jump = value == 1;\nend\nfunction abi.ffi.property_getter_humanoid_jump_height(self)\n\tlocal result_0 = getPointer(self).JumpHeight;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_jump_height_set_jump_height(self, value)\n\tgetPointer(self).JumpHeight = value;\nend\nfunction abi.ffi.property_getter_humanoid_jump_power(self)\n\tlocal result_0 = getPointer(self).JumpPower;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_jump_power_set_jump_power(self, value)\n\tgetPointer(self).JumpPower = value;\nend\nfunction abi.ffi.property_getter_humanoid_max_health(self)\n\tlocal result_0 = getPointer(self).MaxHealth;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_max_health_set_max_health(self, value)\n\tgetPointer(self).MaxHealth = value;\nend\nfunction abi.ffi.property_getter_humanoid_max_slope_angle(self)\n\tlocal result_0 = getPointer(self).MaxSlopeAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_max_slope_angle_set_max_slope_angle(self, value)\n\tgetPointer(self).MaxSlopeAngle = value;\nend\nfunction abi.ffi.property_getter_humanoid_move_direction(self)\n\tlocal result_0 = getPointer(self).MoveDirection;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_humanoid_name_display_distance(self)\n\tlocal result_0 = getPointer(self).NameDisplayDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_name_display_distance_set_name_display_distance(self, value)\n\tgetPointer(self).NameDisplayDistance = value;\nend\nfunction abi.ffi.property_getter_humanoid_name_occlusion(self)\n\tlocal result_0 = getPointer(self).NameOcclusion;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_name_occlusion_set_name_occlusion(self, value)\n\tgetPointer(self).NameOcclusion = value;\nend\nfunction abi.ffi.property_getter_humanoid_platform_stand(self)\n\tlocal result_0 = getPointer(self).PlatformStand;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_humanoid_platform_stand_set_platform_stand(self, value)\n\tgetPointer(self).PlatformStand = value == 1;\nend\nfunction abi.ffi.property_getter_humanoid_requires_neck(self)\n\tlocal result_0 = getPointer(self).RequiresNeck;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_humanoid_requires_neck_set_requires_neck(self, value)\n\tgetPointer(self).RequiresNeck = value == 1;\nend\nfunction abi.ffi.property_getter_humanoid_rig_type(self)\n\tlocal result_0 = getPointer(self).RigType;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_rig_type_set_rig_type(self, value)\n\tgetPointer(self).RigType = value;\nend\nfunction abi.ffi.property_getter_humanoid_root_part(self)\n\tlocal result_0 = getPointer(self).RootPart;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_getter_humanoid_seat_part(self)\n\tlocal result_0 = getPointer(self).SeatPart;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_getter_humanoid_sit(self)\n\tlocal result_0 = getPointer(self).Sit;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_humanoid_sit_set_sit(self, value)\n\tgetPointer(self).Sit = value == 1;\nend\nfunction abi.ffi.property_getter_humanoid_target_point(self)\n\tlocal result_0 = getPointer(self).TargetPoint;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_humanoid_target_point_set_target_point(self, value)\n\tgetPointer(self).TargetPoint = getPointer(value);\nend\nfunction abi.ffi.property_getter_humanoid_use_jump_power(self)\n\tlocal result_0 = getPointer(self).UseJumpPower;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_humanoid_use_jump_power_set_use_jump_power(self, value)\n\tgetPointer(self).UseJumpPower = value == 1;\nend\nfunction abi.ffi.property_getter_humanoid_walk_speed(self)\n\tlocal result_0 = getPointer(self).WalkSpeed;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_walk_speed_set_walk_speed(self, value)\n\tgetPointer(self).WalkSpeed = value;\nend\nfunction abi.ffi.property_getter_humanoid_walk_to_part(self)\n\tlocal result_0 = getPointer(self).WalkToPart;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_humanoid_walk_to_part_set_walk_to_part(self, value)\n\tgetPointer(self).WalkToPart = getPointer(value);\nend\nfunction abi.ffi.property_getter_humanoid_walk_to_point(self)\n\tlocal result_0 = getPointer(self).WalkToPoint;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_humanoid_walk_to_point_set_walk_to_point(self, value)\n\tgetPointer(self).WalkToPoint = getPointer(value);\nend\nfunction abi.ffi.method_humanoid_add_accessory(self, accessory)\n\tgetPointer(self):AddAccessory(getPointer(accessory))\nend\nfunction abi.ffi.method_humanoid_build_rig_from_attachments(self)\n\tgetPointer(self):BuildRigFromAttachments()\nend\nfunction abi.ffi.method_humanoid_change_state(self, state)\n\tgetPointer(self):ChangeState(state)\nend\nfunction abi.ffi.method_humanoid_equip_tool(self, tool)\n\tgetPointer(self):EquipTool(getPointer(tool))\nend\nfunction abi.ffi.method_humanoid_get_applied_description(self)\n\tlocal result_0 = getPointer(self):GetAppliedDescription();\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_humanoid_get_body_part_r_15(self, part)\n\tlocal result_0 = getPointer(self):GetBodyPartR15(getPointer(part));\n\treturn result_0;\nend\nfunction abi.ffi.method_humanoid_get_limb(self, part)\n\tlocal result_0 = getPointer(self):GetLimb(getPointer(part));\n\treturn result_0;\nend\nfunction abi.ffi.method_humanoid_get_state(self)\n\tlocal result_0 = getPointer(self):GetState();\n\treturn result_0;\nend\nfunction abi.ffi.method_humanoid_get_state_enabled(self, state)\n\tlocal result_0 = getPointer(self):GetStateEnabled(state);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_humanoid_move(self, move_direction, relative_to_camera)\n\tgetPointer(self):Move(getPointer(move_direction), relative_to_camera == 1)\nend\nfunction abi.ffi.method_humanoid_move_to(self, location, part)\n\tgetPointer(self):MoveTo(getPointer(location), getPointer(part))\nend\nfunction abi.ffi.method_humanoid_remove_accessories(self)\n\tgetPointer(self):RemoveAccessories()\nend\nfunction abi.ffi.method_humanoid_replace_body_part_r_15(self, body_part, part)\n\tlocal result_0 = getPointer(self):ReplaceBodyPartR15(body_part, getPointer(part));\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_humanoid_set_state_enabled(self, state, enabled)\n\tgetPointer(self):SetStateEnabled(state, enabled == 1)\nend\nfunction abi.ffi.method_humanoid_take_damage(self, amount)\n\tgetPointer(self):TakeDamage(amount)\nend\nfunction abi.ffi.method_humanoid_unequip_tools(self)\n\tgetPointer(self):UnequipTools()\nend\nfunction abi.ffi.method_humanoid_apply_description(self, humanoid_description, asset_type_verification)\n\tgetPointer(self):ApplyDescription(getPointer(humanoid_description), asset_type_verification)\nend\nfunction abi.ffi.method_humanoid_apply_description_reset(self, humanoid_description, asset_type_verification)\n\tgetPointer(self):ApplyDescriptionReset(getPointer(humanoid_description), asset_type_verification)\nend\nfunction abi.ffi.method_humanoid_play_emote(self, emote_name_addr, emote_name_len)\n\tlocal result_0 = getPointer(self):PlayEmote(loadString(memory, emote_name_addr, emote_name_len));\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.event_humanoid_climbing_on_climbing(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Climbing:Connect(function(speed)\n\t\tinvokeFunction(callback_data, callback_vtable, speed)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_humanoid_died_on_died(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Died:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_humanoid_falling_down_on_falling_down(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).FallingDown:Connect(function(active)\n\t\tinvokeFunction(callback_data, callback_vtable, active and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_humanoid_free_falling_on_free_falling(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).FreeFalling:Connect(function(active)\n\t\tinvokeFunction(callback_data, callback_vtable, active and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_humanoid_getting_up_on_getting_up(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).GettingUp:Connect(function(active)\n\t\tinvokeFunction(callback_data, callback_vtable, active and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_humanoid_health_changed_on_health_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).HealthChanged:Connect(function(health)\n\t\tinvokeFunction(callback_data, callback_vtable, health)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_humanoid_jumping_on_jumping(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Jumping:Connect(function(active)\n\t\tinvokeFunction(callback_data, callback_vtable, active and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_humanoid_move_to_finished_on_move_to_finished(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MoveToFinished:Connect(function(reached)\n\t\tinvokeFunction(callback_data, callback_vtable, reached and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_humanoid_platform_standing_on_platform_standing(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PlatformStanding:Connect(function(active)\n\t\tinvokeFunction(callback_data, callback_vtable, active and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_humanoid_ragdoll_on_ragdoll(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Ragdoll:Connect(function(active)\n\t\tinvokeFunction(callback_data, callback_vtable, active and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_humanoid_running_on_running(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Running:Connect(function(speed)\n\t\tinvokeFunction(callback_data, callback_vtable, speed)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_humanoid_seated_on_seated(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Seated:Connect(function(active, current_seat_part)\n\t\tlocal current_seat_part_optional, current_seat_part_optional_0 = 0, 0;\n\t\tif (current_seat_part ~= nil) then\n\t\t\tcurrent_seat_part_optional, current_seat_part_optional_0 = 1, createPointer(current_seat_part);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, active and 1 or 0, current_seat_part_optional, current_seat_part_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_humanoid_state_changed_on_state_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).StateChanged:Connect(function(old, new)\n\t\tinvokeFunction(callback_data, callback_vtable, old, new)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_humanoid_state_enabled_changed_on_state_enabled_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).StateEnabledChanged:Connect(function(state, is_enabled)\n\t\tinvokeFunction(callback_data, callback_vtable, state, is_enabled and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_humanoid_strafing_on_strafing(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Strafing:Connect(function(active)\n\t\tinvokeFunction(callback_data, callback_vtable, active and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_humanoid_swimming_on_swimming(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Swimming:Connect(function(speed)\n\t\tinvokeFunction(callback_data, callback_vtable, speed)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_humanoid_touched_on_humanoid_touched(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Touched:Connect(function(part, limb)\n\t\tinvokeFunction(callback_data, callback_vtable, createPointer(part), createPointer(limb))\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_humanoid_description_back_accessory(self)\n\tlocal result_0 = getPointer(self).BackAccessory;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_humanoid_description_back_accessory_set_back_accessory(self, value_addr, value_len)\n\tgetPointer(self).BackAccessory = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_humanoid_description_body_type_scale(self)\n\tlocal result_0 = getPointer(self).BodyTypeScale;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_body_type_scale_set_body_type_scale(self, value)\n\tgetPointer(self).BodyTypeScale = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_climb_animation(self)\n\tlocal result_0 = getPointer(self).ClimbAnimation;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_climb_animation_set_climb_animation(self, value)\n\tgetPointer(self).ClimbAnimation = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_depth_scale(self)\n\tlocal result_0 = getPointer(self).DepthScale;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_depth_scale_set_depth_scale(self, value)\n\tgetPointer(self).DepthScale = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_face(self)\n\tlocal result_0 = getPointer(self).Face;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_face_set_face(self, value)\n\tgetPointer(self).Face = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_face_accessory(self)\n\tlocal result_0 = getPointer(self).FaceAccessory;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_humanoid_description_face_accessory_set_face_accessory(self, value_addr, value_len)\n\tgetPointer(self).FaceAccessory = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_humanoid_description_fall_animation(self)\n\tlocal result_0 = getPointer(self).FallAnimation;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_fall_animation_set_fall_animation(self, value)\n\tgetPointer(self).FallAnimation = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_front_accessory(self)\n\tlocal result_0 = getPointer(self).FrontAccessory;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_humanoid_description_front_accessory_set_front_accessory(self, value_addr, value_len)\n\tgetPointer(self).FrontAccessory = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_humanoid_description_graphic_t_shirt(self)\n\tlocal result_0 = getPointer(self).GraphicTShirt;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_graphic_t_shirt_set_graphic_t_shirt(self, value)\n\tgetPointer(self).GraphicTShirt = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_hair_accessory(self)\n\tlocal result_0 = getPointer(self).HairAccessory;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_humanoid_description_hair_accessory_set_hair_accessory(self, value_addr, value_len)\n\tgetPointer(self).HairAccessory = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_humanoid_description_hat_accessory(self)\n\tlocal result_0 = getPointer(self).HatAccessory;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_humanoid_description_hat_accessory_set_hat_accessory(self, value_addr, value_len)\n\tgetPointer(self).HatAccessory = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_humanoid_description_head(self)\n\tlocal result_0 = getPointer(self).Head;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_head_set_head(self, value)\n\tgetPointer(self).Head = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_head_color(self)\n\tlocal result_0 = getPointer(self).HeadColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_humanoid_description_head_color_set_head_color(self, value)\n\tgetPointer(self).HeadColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_humanoid_description_head_scale(self)\n\tlocal result_0 = getPointer(self).HeadScale;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_head_scale_set_head_scale(self, value)\n\tgetPointer(self).HeadScale = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_height_scale(self)\n\tlocal result_0 = getPointer(self).HeightScale;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_height_scale_set_height_scale(self, value)\n\tgetPointer(self).HeightScale = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_idle_animation(self)\n\tlocal result_0 = getPointer(self).IdleAnimation;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_idle_animation_set_idle_animation(self, value)\n\tgetPointer(self).IdleAnimation = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_jump_animation(self)\n\tlocal result_0 = getPointer(self).JumpAnimation;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_jump_animation_set_jump_animation(self, value)\n\tgetPointer(self).JumpAnimation = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_left_arm(self)\n\tlocal result_0 = getPointer(self).LeftArm;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_left_arm_set_left_arm(self, value)\n\tgetPointer(self).LeftArm = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_left_arm_color(self)\n\tlocal result_0 = getPointer(self).LeftArmColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_humanoid_description_left_arm_color_set_left_arm_color(self, value)\n\tgetPointer(self).LeftArmColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_humanoid_description_left_leg(self)\n\tlocal result_0 = getPointer(self).LeftLeg;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_left_leg_set_left_leg(self, value)\n\tgetPointer(self).LeftLeg = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_left_leg_color(self)\n\tlocal result_0 = getPointer(self).LeftLegColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_humanoid_description_left_leg_color_set_left_leg_color(self, value)\n\tgetPointer(self).LeftLegColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_humanoid_description_mood_animation(self)\n\tlocal result_0 = getPointer(self).MoodAnimation;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_mood_animation_set_mood_animation(self, value)\n\tgetPointer(self).MoodAnimation = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_neck_accessory(self)\n\tlocal result_0 = getPointer(self).NeckAccessory;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_humanoid_description_neck_accessory_set_neck_accessory(self, value_addr, value_len)\n\tgetPointer(self).NeckAccessory = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_humanoid_description_pants(self)\n\tlocal result_0 = getPointer(self).Pants;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_pants_set_pants(self, value)\n\tgetPointer(self).Pants = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_proportion_scale(self)\n\tlocal result_0 = getPointer(self).ProportionScale;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_proportion_scale_set_proportion_scale(self, value)\n\tgetPointer(self).ProportionScale = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_right_arm(self)\n\tlocal result_0 = getPointer(self).RightArm;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_right_arm_set_right_arm(self, value)\n\tgetPointer(self).RightArm = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_right_arm_color(self)\n\tlocal result_0 = getPointer(self).RightArmColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_humanoid_description_right_arm_color_set_right_arm_color(self, value)\n\tgetPointer(self).RightArmColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_humanoid_description_right_leg(self)\n\tlocal result_0 = getPointer(self).RightLeg;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_right_leg_set_right_leg(self, value)\n\tgetPointer(self).RightLeg = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_right_leg_color(self)\n\tlocal result_0 = getPointer(self).RightLegColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_humanoid_description_right_leg_color_set_right_leg_color(self, value)\n\tgetPointer(self).RightLegColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_humanoid_description_run_animation(self)\n\tlocal result_0 = getPointer(self).RunAnimation;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_run_animation_set_run_animation(self, value)\n\tgetPointer(self).RunAnimation = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_shirt(self)\n\tlocal result_0 = getPointer(self).Shirt;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_shirt_set_shirt(self, value)\n\tgetPointer(self).Shirt = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_shoulders_accessory(self)\n\tlocal result_0 = getPointer(self).ShouldersAccessory;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_humanoid_description_shoulders_accessory_set_shoulders_accessory(self, value_addr, value_len)\n\tgetPointer(self).ShouldersAccessory = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_humanoid_description_swim_animation(self)\n\tlocal result_0 = getPointer(self).SwimAnimation;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_swim_animation_set_swim_animation(self, value)\n\tgetPointer(self).SwimAnimation = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_torso(self)\n\tlocal result_0 = getPointer(self).Torso;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_torso_set_torso(self, value)\n\tgetPointer(self).Torso = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_torso_color(self)\n\tlocal result_0 = getPointer(self).TorsoColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_humanoid_description_torso_color_set_torso_color(self, value)\n\tgetPointer(self).TorsoColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_humanoid_description_waist_accessory(self)\n\tlocal result_0 = getPointer(self).WaistAccessory;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_humanoid_description_waist_accessory_set_waist_accessory(self, value_addr, value_len)\n\tgetPointer(self).WaistAccessory = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_humanoid_description_walk_animation(self)\n\tlocal result_0 = getPointer(self).WalkAnimation;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_walk_animation_set_walk_animation(self, value)\n\tgetPointer(self).WalkAnimation = value;\nend\nfunction abi.ffi.property_getter_humanoid_description_width_scale(self)\n\tlocal result_0 = getPointer(self).WidthScale;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_humanoid_description_width_scale_set_width_scale(self, value)\n\tgetPointer(self).WidthScale = value;\nend\nfunction abi.ffi.method_humanoid_description_add_emote(self, name_addr, name_len, asset_id)\n\tgetPointer(self):AddEmote(loadString(memory, name_addr, name_len), asset_id)\nend\nfunction abi.ffi.method_humanoid_description_remove_emote(self, name_addr, name_len)\n\tgetPointer(self):RemoveEmote(loadString(memory, name_addr, name_len))\nend\nfunction abi.ffi.property_getter_ik_control_alignment_offset(self)\n\tlocal result_0 = getPointer(self).AlignmentOffset;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_ik_control_alignment_offset_set_alignment_offset(self, value)\n\tgetPointer(self).AlignmentOffset = getPointer(value);\nend\nfunction abi.ffi.property_getter_ik_control_chain_root(self)\n\tlocal result_0 = getPointer(self).ChainRoot;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_ik_control_chain_root_set_chain_root(self, value)\n\tgetPointer(self).ChainRoot = getPointer(value);\nend\nfunction abi.ffi.property_getter_ik_control_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_ik_control_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_ik_control_end_effector(self)\n\tlocal result_0 = getPointer(self).EndEffector;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_ik_control_end_effector_set_end_effector(self, value)\n\tgetPointer(self).EndEffector = getPointer(value);\nend\nfunction abi.ffi.property_getter_ik_control_offset(self)\n\tlocal result_0 = getPointer(self).Offset;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_ik_control_offset_set_offset(self, value)\n\tgetPointer(self).Offset = getPointer(value);\nend\nfunction abi.ffi.property_getter_ik_control_pole(self)\n\tlocal result_0 = getPointer(self).Pole;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_ik_control_pole_set_pole(self, value)\n\tgetPointer(self).Pole = getPointer(value);\nend\nfunction abi.ffi.property_getter_ik_control_priority(self)\n\tlocal result_0 = getPointer(self).Priority;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ik_control_priority_set_priority(self, value)\n\tgetPointer(self).Priority = value;\nend\nfunction abi.ffi.property_getter_ik_control_target(self)\n\tlocal result_0 = getPointer(self).Target;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_ik_control_target_set_target(self, value)\n\tgetPointer(self).Target = getPointer(value);\nend\nfunction abi.ffi.property_getter_ik_control_type(self)\n\tlocal result_0 = getPointer(self).Type;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ik_control_type_set_type(self, value)\n\tgetPointer(self).Type = value;\nend\nfunction abi.ffi.property_getter_ik_control_weight(self)\n\tlocal result_0 = getPointer(self).Weight;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ik_control_weight_set_weight(self, value)\n\tgetPointer(self).Weight = value;\nend\nfunction abi.ffi.property_getter_importer_base_settings_id(self)\n\tlocal result_0 = getPointer(self).Id;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_importer_base_settings_import_name(self)\n\tlocal result_0 = getPointer(self).ImportName;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_importer_base_settings_import_name_set_import_name(self, value_addr, value_len)\n\tgetPointer(self).ImportName = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_importer_base_settings_should_import(self)\n\tlocal result_0 = getPointer(self).ShouldImport;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_base_settings_should_import_set_should_import(self, value)\n\tgetPointer(self).ShouldImport = value == 1;\nend\nfunction abi.ffi.property_getter_importer_group_settings_anchored(self)\n\tlocal result_0 = getPointer(self).Anchored;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_group_settings_anchored_set_anchored(self, value)\n\tgetPointer(self).Anchored = value == 1;\nend\nfunction abi.ffi.property_getter_importer_group_settings_import_as_model_asset(self)\n\tlocal result_0 = getPointer(self).ImportAsModelAsset;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_group_settings_import_as_model_asset_set_import_as_model_asset(self, value)\n\tgetPointer(self).ImportAsModelAsset = value == 1;\nend\nfunction abi.ffi.property_getter_importer_group_settings_insert_in_workspace(self)\n\tlocal result_0 = getPointer(self).InsertInWorkspace;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_group_settings_insert_in_workspace_set_insert_in_workspace(self, value)\n\tgetPointer(self).InsertInWorkspace = value == 1;\nend\nfunction abi.ffi.property_getter_importer_material_settings_diffuse_file_path(self)\n\tlocal result_0 = getPointer(self).DiffuseFilePath;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_importer_material_settings_diffuse_file_path_set_diffuse_file_path(self, value_addr, value_len)\n\tgetPointer(self).DiffuseFilePath = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_importer_material_settings_is_pbr(self)\n\tlocal result_0 = getPointer(self).IsPbr;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_importer_material_settings_metalness_file_path(self)\n\tlocal result_0 = getPointer(self).MetalnessFilePath;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_importer_material_settings_metalness_file_path_set_metalness_file_path(self, value_addr, value_len)\n\tgetPointer(self).MetalnessFilePath = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_importer_material_settings_normal_file_path(self)\n\tlocal result_0 = getPointer(self).NormalFilePath;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_importer_material_settings_normal_file_path_set_normal_file_path(self, value_addr, value_len)\n\tgetPointer(self).NormalFilePath = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_importer_material_settings_roughness_file_path(self)\n\tlocal result_0 = getPointer(self).RoughnessFilePath;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_importer_material_settings_roughness_file_path_set_roughness_file_path(self, value_addr, value_len)\n\tgetPointer(self).RoughnessFilePath = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_anchored(self)\n\tlocal result_0 = getPointer(self).Anchored;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_mesh_settings_anchored_set_anchored(self, value)\n\tgetPointer(self).Anchored = value == 1;\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_cage_manifold(self)\n\tlocal result_0 = getPointer(self).CageManifold;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_cage_mesh_intersected_preview(self)\n\tlocal result_0 = getPointer(self).CageMeshIntersectedPreview;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_mesh_settings_cage_mesh_intersected_preview_set_cage_mesh_intersected_preview(self, value)\n\tgetPointer(self).CageMeshIntersectedPreview = value == 1;\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_cage_mesh_not_intersected(self)\n\tlocal result_0 = getPointer(self).CageMeshNotIntersected;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_cage_no_overlapping_vertices(self)\n\tlocal result_0 = getPointer(self).CageNoOverlappingVertices;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_cage_non_manifold_preview(self)\n\tlocal result_0 = getPointer(self).CageNonManifoldPreview;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_mesh_settings_cage_non_manifold_preview_set_cage_non_manifold_preview(self, value)\n\tgetPointer(self).CageNonManifoldPreview = value == 1;\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_cage_overlapping_vertices_preview(self)\n\tlocal result_0 = getPointer(self).CageOverlappingVerticesPreview;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_mesh_settings_cage_overlapping_vertices_preview_set_cage_overlapping_vertices_preview(self, value)\n\tgetPointer(self).CageOverlappingVerticesPreview = value == 1;\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_cage_uv_matched(self)\n\tlocal result_0 = getPointer(self).CageUVMatched;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_cage_uv_mis_matched_preview(self)\n\tlocal result_0 = getPointer(self).CageUVMisMatchedPreview;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_mesh_settings_cage_uv_mis_matched_preview_set_cage_uv_mis_matched_preview(self, value)\n\tgetPointer(self).CageUVMisMatchedPreview = value == 1;\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_dimensions(self)\n\tlocal result_0 = getPointer(self).Dimensions;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_double_sided(self)\n\tlocal result_0 = getPointer(self).DoubleSided;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_mesh_settings_double_sided_set_double_sided(self, value)\n\tgetPointer(self).DoubleSided = value == 1;\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_ignore_vertex_colors(self)\n\tlocal result_0 = getPointer(self).IgnoreVertexColors;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_mesh_settings_ignore_vertex_colors_set_ignore_vertex_colors(self, value)\n\tgetPointer(self).IgnoreVertexColors = value == 1;\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_irrelevant_cage_modified_preview(self)\n\tlocal result_0 = getPointer(self).IrrelevantCageModifiedPreview;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_mesh_settings_irrelevant_cage_modified_preview_set_irrelevant_cage_modified_preview(self, value)\n\tgetPointer(self).IrrelevantCageModifiedPreview = value == 1;\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_mesh_hole_detected_preview(self)\n\tlocal result_0 = getPointer(self).MeshHoleDetectedPreview;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_mesh_settings_mesh_hole_detected_preview_set_mesh_hole_detected_preview(self, value)\n\tgetPointer(self).MeshHoleDetectedPreview = value == 1;\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_mesh_no_hole_detected(self)\n\tlocal result_0 = getPointer(self).MeshNoHoleDetected;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_no_irrelevant_cage_modified(self)\n\tlocal result_0 = getPointer(self).NoIrrelevantCageModified;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_no_outer_cage_far_extended_from_mesh(self)\n\tlocal result_0 = getPointer(self).NoOuterCageFarExtendedFromMesh;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_outer_cage_far_extended_from_mesh_preview(self)\n\tlocal result_0 = getPointer(self).OuterCageFarExtendedFromMeshPreview;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_mesh_settings_outer_cage_far_extended_from_mesh_preview_set_outer_cage_far_extended_from_mesh_preview(self, value)\n\tgetPointer(self).OuterCageFarExtendedFromMeshPreview = value == 1;\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_polygon_count(self)\n\tlocal result_0 = getPointer(self).PolygonCount;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_importer_mesh_settings_use_imported_pivot(self)\n\tlocal result_0 = getPointer(self).UseImportedPivot;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_mesh_settings_use_imported_pivot_set_use_imported_pivot(self, value)\n\tgetPointer(self).UseImportedPivot = value == 1;\nend\nfunction abi.ffi.property_getter_importer_root_settings_anchored(self)\n\tlocal result_0 = getPointer(self).Anchored;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_root_settings_anchored_set_anchored(self, value)\n\tgetPointer(self).Anchored = value == 1;\nend\nfunction abi.ffi.property_getter_importer_root_settings_file_dimensions(self)\n\tlocal result_0 = getPointer(self).FileDimensions;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_importer_root_settings_import_as_model_asset(self)\n\tlocal result_0 = getPointer(self).ImportAsModelAsset;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_root_settings_import_as_model_asset_set_import_as_model_asset(self, value)\n\tgetPointer(self).ImportAsModelAsset = value == 1;\nend\nfunction abi.ffi.property_getter_importer_root_settings_insert_in_workspace(self)\n\tlocal result_0 = getPointer(self).InsertInWorkspace;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_root_settings_insert_in_workspace_set_insert_in_workspace(self, value)\n\tgetPointer(self).InsertInWorkspace = value == 1;\nend\nfunction abi.ffi.property_getter_importer_root_settings_insert_with_scene_position(self)\n\tlocal result_0 = getPointer(self).InsertWithScenePosition;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_root_settings_insert_with_scene_position_set_insert_with_scene_position(self, value)\n\tgetPointer(self).InsertWithScenePosition = value == 1;\nend\nfunction abi.ffi.property_getter_importer_root_settings_invert_negative_faces(self)\n\tlocal result_0 = getPointer(self).InvertNegativeFaces;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_root_settings_invert_negative_faces_set_invert_negative_faces(self, value)\n\tgetPointer(self).InvertNegativeFaces = value == 1;\nend\nfunction abi.ffi.property_getter_importer_root_settings_merge_meshes(self)\n\tlocal result_0 = getPointer(self).MergeMeshes;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_root_settings_merge_meshes_set_merge_meshes(self, value)\n\tgetPointer(self).MergeMeshes = value == 1;\nend\nfunction abi.ffi.property_getter_importer_root_settings_polygon_count(self)\n\tlocal result_0 = getPointer(self).PolygonCount;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_importer_root_settings_rig_type(self)\n\tlocal result_0 = getPointer(self).RigType;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_importer_root_settings_rig_type_set_rig_type(self, value)\n\tgetPointer(self).RigType = value;\nend\nfunction abi.ffi.property_getter_importer_root_settings_scale_unit(self)\n\tlocal result_0 = getPointer(self).ScaleUnit;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_importer_root_settings_scale_unit_set_scale_unit(self, value)\n\tgetPointer(self).ScaleUnit = value;\nend\nfunction abi.ffi.property_getter_importer_root_settings_use_scene_origin_as_pivot(self)\n\tlocal result_0 = getPointer(self).UseSceneOriginAsPivot;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_importer_root_settings_use_scene_origin_as_pivot_set_use_scene_origin_as_pivot(self, value)\n\tgetPointer(self).UseSceneOriginAsPivot = value == 1;\nend\nfunction abi.ffi.property_getter_importer_root_settings_world_forward(self)\n\tlocal result_0 = getPointer(self).WorldForward;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_importer_root_settings_world_forward_set_world_forward(self, value)\n\tgetPointer(self).WorldForward = value;\nend\nfunction abi.ffi.property_getter_importer_root_settings_world_up(self)\n\tlocal result_0 = getPointer(self).WorldUp;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_importer_root_settings_world_up_set_world_up(self, value)\n\tgetPointer(self).WorldUp = value;\nend\nfunction abi.ffi.property_getter_input_object_delta(self)\n\tlocal result_0 = getPointer(self).Delta;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_input_object_delta_set_delta(self, value)\n\tgetPointer(self).Delta = getPointer(value);\nend\nfunction abi.ffi.property_getter_input_object_key_code(self)\n\tlocal result_0 = getPointer(self).KeyCode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_input_object_key_code_set_key_code(self, value)\n\tgetPointer(self).KeyCode = value;\nend\nfunction abi.ffi.property_getter_input_object_position(self)\n\tlocal result_0 = getPointer(self).Position;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_input_object_position_set_position(self, value)\n\tgetPointer(self).Position = getPointer(value);\nend\nfunction abi.ffi.property_getter_input_object_user_input_state(self)\n\tlocal result_0 = getPointer(self).UserInputState;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_input_object_user_input_state_set_user_input_state(self, value)\n\tgetPointer(self).UserInputState = value;\nend\nfunction abi.ffi.property_getter_input_object_user_input_type(self)\n\tlocal result_0 = getPointer(self).UserInputType;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_input_object_user_input_type_set_user_input_type(self, value)\n\tgetPointer(self).UserInputType = value;\nend\nfunction abi.ffi.method_input_object_is_modifier_key_down(self, modifier_key)\n\tlocal result_0 = getPointer(self):IsModifierKeyDown(modifier_key);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_insert_service_get_latest_asset_version_async(self, asset_id)\n\tlocal result_0 = getPointer(self):GetLatestAssetVersionAsync(asset_id);\n\treturn result_0;\nend\nfunction abi.ffi.method_insert_service_load_asset(self, asset_id)\n\tlocal result_0 = getPointer(self):LoadAsset(asset_id);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_insert_service_load_asset_version(self, asset_version_id)\n\tlocal result_0 = getPointer(self):LoadAssetVersion(asset_version_id);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_getter_joint_instance_active(self)\n\tlocal result_0 = getPointer(self).Active;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_joint_instance_c_0(self)\n\tlocal result_0 = getPointer(self).C0;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_joint_instance_c_0_set_c_0(self, value)\n\tgetPointer(self).C0 = getPointer(value);\nend\nfunction abi.ffi.property_getter_joint_instance_c_1(self)\n\tlocal result_0 = getPointer(self).C1;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_joint_instance_c_1_set_c_1(self, value)\n\tgetPointer(self).C1 = getPointer(value);\nend\nfunction abi.ffi.property_getter_joint_instance_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_joint_instance_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_joint_instance_part_0(self)\n\tlocal result_0 = getPointer(self).Part0;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_joint_instance_part_0_set_part_0(self, value)\n\tgetPointer(self).Part0 = getPointer(value);\nend\nfunction abi.ffi.property_getter_joint_instance_part_1(self)\n\tlocal result_0 = getPointer(self).Part1;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_joint_instance_part_1_set_part_1(self, value)\n\tgetPointer(self).Part1 = getPointer(value);\nend\nfunction abi.ffi.property_getter_dynamic_rotate_base_angle(self)\n\tlocal result_0 = getPointer(self).BaseAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_dynamic_rotate_base_angle_set_base_angle(self, value)\n\tgetPointer(self).BaseAngle = value;\nend\nfunction abi.ffi.property_getter_motor_current_angle(self)\n\tlocal result_0 = getPointer(self).CurrentAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_motor_current_angle_set_current_angle(self, value)\n\tgetPointer(self).CurrentAngle = value;\nend\nfunction abi.ffi.property_getter_motor_desired_angle(self)\n\tlocal result_0 = getPointer(self).DesiredAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_motor_desired_angle_set_desired_angle(self, value)\n\tgetPointer(self).DesiredAngle = value;\nend\nfunction abi.ffi.property_getter_motor_max_velocity(self)\n\tlocal result_0 = getPointer(self).MaxVelocity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_motor_max_velocity_set_max_velocity(self, value)\n\tgetPointer(self).MaxVelocity = value;\nend\nfunction abi.ffi.method_motor_set_desired_angle_fn_set_desired_angle(self, value)\n\tgetPointer(self):SetDesiredAngle(value)\nend\nfunction abi.ffi.property_getter_motor_6_d_transform(self)\n\tlocal result_0 = getPointer(self).Transform;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_motor_6_d_transform_set_transform(self, value)\n\tgetPointer(self).Transform = getPointer(value);\nend\nfunction abi.ffi.property_getter_velocity_motor_current_angle(self)\n\tlocal result_0 = getPointer(self).CurrentAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_velocity_motor_current_angle_set_current_angle(self, value)\n\tgetPointer(self).CurrentAngle = value;\nend\nfunction abi.ffi.property_getter_velocity_motor_desired_angle(self)\n\tlocal result_0 = getPointer(self).DesiredAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_velocity_motor_desired_angle_set_desired_angle(self, value)\n\tgetPointer(self).DesiredAngle = value;\nend\nfunction abi.ffi.property_getter_velocity_motor_max_velocity(self)\n\tlocal result_0 = getPointer(self).MaxVelocity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_velocity_motor_max_velocity_set_max_velocity(self, value)\n\tgetPointer(self).MaxVelocity = value;\nend\nfunction abi.ffi.property_getter_keyframe_time(self)\n\tlocal result_0 = getPointer(self).Time;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_keyframe_time_set_time(self, value)\n\tgetPointer(self).Time = value;\nend\nfunction abi.ffi.method_keyframe_add_marker(self, marker)\n\tgetPointer(self):AddMarker(getPointer(marker))\nend\nfunction abi.ffi.method_keyframe_add_pose(self, pose)\n\tgetPointer(self):AddPose(getPointer(pose))\nend\nfunction abi.ffi.method_keyframe_remove_marker(self, marker)\n\tgetPointer(self):RemoveMarker(getPointer(marker))\nend\nfunction abi.ffi.method_keyframe_remove_pose(self, pose)\n\tgetPointer(self):RemovePose(getPointer(pose))\nend\nfunction abi.ffi.property_getter_keyframe_marker_value(self)\n\tlocal result_0 = getPointer(self).Value;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_keyframe_marker_value_set_value(self, value_addr, value_len)\n\tgetPointer(self).Value = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.method_keyframe_sequence_provider_register_active_keyframe_sequence(self, keyframe_sequence)\n\tlocal result_0 = getPointer(self):RegisterActiveKeyframeSequence(getPointer(keyframe_sequence));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_keyframe_sequence_provider_register_keyframe_sequence(self, keyframe_sequence)\n\tlocal result_0 = getPointer(self):RegisterKeyframeSequence(getPointer(keyframe_sequence));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_keyframe_sequence_provider_get_animations(self, user_id)\n\tlocal result_0 = getPointer(self):GetAnimations(user_id);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_keyframe_sequence_provider_get_keyframe_sequence_async(self, asset_id)\n\tlocal result_0 = getPointer(self):GetKeyframeSequenceAsync(getPointer(asset_id));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_getter_light_brightness(self)\n\tlocal result_0 = getPointer(self).Brightness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_light_brightness_set_brightness(self, value)\n\tgetPointer(self).Brightness = value;\nend\nfunction abi.ffi.property_getter_light_color(self)\n\tlocal result_0 = getPointer(self).Color;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_light_color_set_color(self, value)\n\tgetPointer(self).Color = getPointer(value);\nend\nfunction abi.ffi.property_getter_light_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_light_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_light_shadows(self)\n\tlocal result_0 = getPointer(self).Shadows;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_light_shadows_set_shadows(self, value)\n\tgetPointer(self).Shadows = value == 1;\nend\nfunction abi.ffi.property_getter_point_light_range(self)\n\tlocal result_0 = getPointer(self).Range;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_point_light_range_set_range(self, value)\n\tgetPointer(self).Range = value;\nend\nfunction abi.ffi.property_getter_spot_light_angle(self)\n\tlocal result_0 = getPointer(self).Angle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_spot_light_angle_set_angle(self, value)\n\tgetPointer(self).Angle = value;\nend\nfunction abi.ffi.property_getter_spot_light_face(self)\n\tlocal result_0 = getPointer(self).Face;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_spot_light_face_set_face(self, value)\n\tgetPointer(self).Face = value;\nend\nfunction abi.ffi.property_getter_spot_light_range(self)\n\tlocal result_0 = getPointer(self).Range;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_spot_light_range_set_range(self, value)\n\tgetPointer(self).Range = value;\nend\nfunction abi.ffi.property_getter_surface_light_angle(self)\n\tlocal result_0 = getPointer(self).Angle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_surface_light_angle_set_angle(self, value)\n\tgetPointer(self).Angle = value;\nend\nfunction abi.ffi.property_getter_surface_light_face(self)\n\tlocal result_0 = getPointer(self).Face;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_surface_light_face_set_face(self, value)\n\tgetPointer(self).Face = value;\nend\nfunction abi.ffi.property_getter_surface_light_range(self)\n\tlocal result_0 = getPointer(self).Range;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_surface_light_range_set_range(self, value)\n\tgetPointer(self).Range = value;\nend\nfunction abi.ffi.property_getter_lighting_ambient(self)\n\tlocal result_0 = getPointer(self).Ambient;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_lighting_ambient_set_ambient(self, value)\n\tgetPointer(self).Ambient = getPointer(value);\nend\nfunction abi.ffi.property_getter_lighting_brightness(self)\n\tlocal result_0 = getPointer(self).Brightness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_lighting_brightness_set_brightness(self, value)\n\tgetPointer(self).Brightness = value;\nend\nfunction abi.ffi.property_getter_lighting_clock_time(self)\n\tlocal result_0 = getPointer(self).ClockTime;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_lighting_clock_time_set_clock_time(self, value)\n\tgetPointer(self).ClockTime = value;\nend\nfunction abi.ffi.property_getter_lighting_color_shift_bottom(self)\n\tlocal result_0 = getPointer(self).ColorShift_Bottom;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_lighting_color_shift_bottom_set_color_shift_bottom(self, value)\n\tgetPointer(self).ColorShift_Bottom = getPointer(value);\nend\nfunction abi.ffi.property_getter_lighting_color_shift_top(self)\n\tlocal result_0 = getPointer(self).ColorShift_Top;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_lighting_color_shift_top_set_color_shift_top(self, value)\n\tgetPointer(self).ColorShift_Top = getPointer(value);\nend\nfunction abi.ffi.property_getter_lighting_environment_diffuse_scale(self)\n\tlocal result_0 = getPointer(self).EnvironmentDiffuseScale;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_lighting_environment_diffuse_scale_set_environment_diffuse_scale(self, value)\n\tgetPointer(self).EnvironmentDiffuseScale = value;\nend\nfunction abi.ffi.property_getter_lighting_environment_specular_scale(self)\n\tlocal result_0 = getPointer(self).EnvironmentSpecularScale;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_lighting_environment_specular_scale_set_environment_specular_scale(self, value)\n\tgetPointer(self).EnvironmentSpecularScale = value;\nend\nfunction abi.ffi.property_getter_lighting_exposure_compensation(self)\n\tlocal result_0 = getPointer(self).ExposureCompensation;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_lighting_exposure_compensation_set_exposure_compensation(self, value)\n\tgetPointer(self).ExposureCompensation = value;\nend\nfunction abi.ffi.property_getter_lighting_fog_color(self)\n\tlocal result_0 = getPointer(self).FogColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_lighting_fog_color_set_fog_color(self, value)\n\tgetPointer(self).FogColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_lighting_fog_end(self)\n\tlocal result_0 = getPointer(self).FogEnd;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_lighting_fog_end_set_fog_end(self, value)\n\tgetPointer(self).FogEnd = value;\nend\nfunction abi.ffi.property_getter_lighting_fog_start(self)\n\tlocal result_0 = getPointer(self).FogStart;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_lighting_fog_start_set_fog_start(self, value)\n\tgetPointer(self).FogStart = value;\nend\nfunction abi.ffi.property_getter_lighting_geographic_latitude(self)\n\tlocal result_0 = getPointer(self).GeographicLatitude;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_lighting_geographic_latitude_set_geographic_latitude(self, value)\n\tgetPointer(self).GeographicLatitude = value;\nend\nfunction abi.ffi.property_getter_lighting_global_shadows(self)\n\tlocal result_0 = getPointer(self).GlobalShadows;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_lighting_global_shadows_set_global_shadows(self, value)\n\tgetPointer(self).GlobalShadows = value == 1;\nend\nfunction abi.ffi.property_getter_lighting_outdoor_ambient(self)\n\tlocal result_0 = getPointer(self).OutdoorAmbient;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_lighting_outdoor_ambient_set_outdoor_ambient(self, value)\n\tgetPointer(self).OutdoorAmbient = getPointer(value);\nend\nfunction abi.ffi.property_getter_lighting_shadow_softness(self)\n\tlocal result_0 = getPointer(self).ShadowSoftness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_lighting_shadow_softness_set_shadow_softness(self, value)\n\tgetPointer(self).ShadowSoftness = value;\nend\nfunction abi.ffi.property_getter_lighting_time_of_day(self)\n\tlocal result_0 = getPointer(self).TimeOfDay;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_lighting_time_of_day_set_time_of_day(self, value_addr, value_len)\n\tgetPointer(self).TimeOfDay = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.method_lighting_get_minutes_after_midnight(self)\n\tlocal result_0 = getPointer(self):GetMinutesAfterMidnight();\n\treturn result_0;\nend\nfunction abi.ffi.method_lighting_get_moon_direction(self)\n\tlocal result_0 = getPointer(self):GetMoonDirection();\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_lighting_get_moon_phase(self)\n\tlocal result_0 = getPointer(self):GetMoonPhase();\n\treturn result_0;\nend\nfunction abi.ffi.method_lighting_get_sun_direction(self)\n\tlocal result_0 = getPointer(self):GetSunDirection();\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_lighting_set_minutes_after_midnight(self, minutes)\n\tgetPointer(self):SetMinutesAfterMidnight(minutes)\nend\nfunction abi.ffi.event_lighting_lighting_changed_on_lighting_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).LightingChanged:Connect(function(sky_changed)\n\t\tinvokeFunction(callback_data, callback_vtable, sky_changed and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_localization_service_roblox_locale_id(self)\n\tlocal result_0 = getPointer(self).RobloxLocaleId;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_localization_service_system_locale_id(self)\n\tlocal result_0 = getPointer(self).SystemLocaleId;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.method_localization_service_get_translator_for_player(self, player)\n\tlocal result_0 = getPointer(self):GetTranslatorForPlayer(getPointer(player));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_localization_service_get_country_region_for_player_async(self, player)\n\tlocal result_0 = getPointer(self):GetCountryRegionForPlayerAsync(getPointer(player));\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.method_localization_service_get_translator_for_locale_async(self, locale_addr, locale_len)\n\tlocal result_0 = getPointer(self):GetTranslatorForLocaleAsync(loadString(memory, locale_addr, locale_len));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_localization_service_get_translator_for_player_async(self, player)\n\tlocal result_0 = getPointer(self):GetTranslatorForPlayerAsync(getPointer(player));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_getter_localization_table_source_locale_id(self)\n\tlocal result_0 = getPointer(self).SourceLocaleId;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_localization_table_source_locale_id_set_source_locale_id(self, value_addr, value_len)\n\tgetPointer(self).SourceLocaleId = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.method_localization_table_get_translator(self, locale_id_addr, locale_id_len)\n\tlocal result_0 = getPointer(self):GetTranslator(loadString(memory, locale_id_addr, locale_id_len));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_localization_table_remove_entry(self, key_addr, key_len, source_addr, source_len, context_addr, context_len)\n\tgetPointer(self):RemoveEntry(loadString(memory, key_addr, key_len), loadString(memory, source_addr, source_len), loadString(memory, context_addr, context_len))\nend\nfunction abi.ffi.method_localization_table_remove_entry_value(self, key_addr, key_len, source_addr, source_len, context_addr, context_len, locale_id_addr, locale_id_len)\n\tgetPointer(self):RemoveEntryValue(loadString(memory, key_addr, key_len), loadString(memory, source_addr, source_len), loadString(memory, context_addr, context_len), loadString(memory, locale_id_addr, locale_id_len))\nend\nfunction abi.ffi.method_localization_table_remove_target_locale(self, locale_id_addr, locale_id_len)\n\tgetPointer(self):RemoveTargetLocale(loadString(memory, locale_id_addr, locale_id_len))\nend\nfunction abi.ffi.method_localization_table_set_entry_context(self, key_addr, key_len, source_addr, source_len, context_addr, context_len, new_context_addr, new_context_len)\n\tgetPointer(self):SetEntryContext(loadString(memory, key_addr, key_len), loadString(memory, source_addr, source_len), loadString(memory, context_addr, context_len), loadString(memory, new_context_addr, new_context_len))\nend\nfunction abi.ffi.method_localization_table_set_entry_example(self, key_addr, key_len, source_addr, source_len, context_addr, context_len, example_addr, example_len)\n\tgetPointer(self):SetEntryExample(loadString(memory, key_addr, key_len), loadString(memory, source_addr, source_len), loadString(memory, context_addr, context_len), loadString(memory, example_addr, example_len))\nend\nfunction abi.ffi.method_localization_table_set_entry_key(self, key_addr, key_len, source_addr, source_len, context_addr, context_len, new_key_addr, new_key_len)\n\tgetPointer(self):SetEntryKey(loadString(memory, key_addr, key_len), loadString(memory, source_addr, source_len), loadString(memory, context_addr, context_len), loadString(memory, new_key_addr, new_key_len))\nend\nfunction abi.ffi.method_localization_table_set_entry_source(self, key_addr, key_len, source_addr, source_len, context_addr, context_len, new_source_addr, new_source_len)\n\tgetPointer(self):SetEntrySource(loadString(memory, key_addr, key_len), loadString(memory, source_addr, source_len), loadString(memory, context_addr, context_len), loadString(memory, new_source_addr, new_source_len))\nend\nfunction abi.ffi.method_localization_table_set_entry_value(self, key_addr, key_len, source_addr, source_len, context_addr, context_len, locale_id_addr, locale_id_len, text_addr, text_len)\n\tgetPointer(self):SetEntryValue(loadString(memory, key_addr, key_len), loadString(memory, source_addr, source_len), loadString(memory, context_addr, context_len), loadString(memory, locale_id_addr, locale_id_len), loadString(memory, text_addr, text_len))\nend\nfunction abi.ffi.property_getter_lod_data_entity_entity_lod_enabled(self)\n\tlocal result_0 = getPointer(self).EntityLodEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_lod_data_entity_entity_lod_enabled_set_entity_lod_enabled(self, value)\n\tgetPointer(self).EntityLodEnabled = value == 1;\nend\nfunction abi.ffi.event_log_service_message_out_on_message_out(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MessageOut:Connect(function(message, message_type)\n\t\tlocal message_len = #message;\n\t\tlocal message_content = allocString(message_len);\n\t\tfor i = 1, message_len do\n\t\t\tstoreU8(memory, message_content + (i - 1), string.byte(message:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, message_content, message_len, message_type)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_base_script_disabled(self)\n\tlocal result_0 = getPointer(self).Disabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_base_script_disabled_set_disabled(self, value)\n\tgetPointer(self).Disabled = value == 1;\nend\nfunction abi.ffi.property_getter_base_script_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_base_script_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_base_script_linked_source(self)\n\tlocal result_0 = getPointer(self).LinkedSource;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_base_script_linked_source_set_linked_source(self, value)\n\tgetPointer(self).LinkedSource = getPointer(value);\nend\nfunction abi.ffi.property_getter_module_script_linked_source(self)\n\tlocal result_0 = getPointer(self).LinkedSource;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_module_script_linked_source_set_linked_source(self, value)\n\tgetPointer(self).LinkedSource = getPointer(value);\nend\nfunction abi.ffi.property_getter_marker_curve_length(self)\n\tlocal result_0 = getPointer(self).Length;\n\treturn result_0;\nend\nfunction abi.ffi.method_marker_curve_remove_marker_at_index(self, starting_index, count)\n\tlocal result_0 = getPointer(self):RemoveMarkerAtIndex(starting_index, count);\n\treturn result_0;\nend\nfunction abi.ffi.method_marketplace_service_prompt_bundle_purchase(self, player, bundle_id)\n\tgetPointer(self):PromptBundlePurchase(getPointer(player), bundle_id)\nend\nfunction abi.ffi.method_marketplace_service_prompt_game_pass_purchase(self, player, game_pass_id)\n\tgetPointer(self):PromptGamePassPurchase(getPointer(player), game_pass_id)\nend\nfunction abi.ffi.method_marketplace_service_prompt_premium_purchase(self, player)\n\tgetPointer(self):PromptPremiumPurchase(getPointer(player))\nend\nfunction abi.ffi.method_marketplace_service_prompt_product_purchase(self, player, product_id, equip_if_purchased, currency_type)\n\tgetPointer(self):PromptProductPurchase(getPointer(player), product_id, equip_if_purchased == 1, currency_type)\nend\nfunction abi.ffi.method_marketplace_service_prompt_purchase(self, player, asset_id, equip_if_purchased, currency_type)\n\tgetPointer(self):PromptPurchase(getPointer(player), asset_id, equip_if_purchased == 1, currency_type)\nend\nfunction abi.ffi.method_marketplace_service_prompt_subscription_cancellation(self, player, subscription_id)\n\tgetPointer(self):PromptSubscriptionCancellation(getPointer(player), subscription_id)\nend\nfunction abi.ffi.method_marketplace_service_prompt_subscription_purchase(self, player, subscription_id)\n\tgetPointer(self):PromptSubscriptionPurchase(getPointer(player), subscription_id)\nend\nfunction abi.ffi.method_marketplace_service_get_developer_products_async(self)\n\tlocal result_0 = getPointer(self):GetDeveloperProductsAsync();\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_marketplace_service_is_player_subscribed(self, player, subscription_id)\n\tlocal result_0 = getPointer(self):IsPlayerSubscribed(getPointer(player), subscription_id);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_marketplace_service_player_owns_asset(self, player, asset_id)\n\tlocal result_0 = getPointer(self):PlayerOwnsAsset(getPointer(player), asset_id);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_marketplace_service_player_owns_bundle(self, player, bundle_id)\n\tlocal result_0 = getPointer(self):PlayerOwnsBundle(getPointer(player), bundle_id);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_marketplace_service_user_owns_game_pass_async(self, user_id, game_pass_id)\n\tlocal result_0 = getPointer(self):UserOwnsGamePassAsync(user_id, game_pass_id);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.event_marketplace_service_prompt_bundle_purchase_finished_on_prompt_bundle_purchase_finished(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptBundlePurchaseFinished:Connect(function(player, bundle_id, was_purchased)\n\t\tlocal player_optional, player_optional_0 = 0, 0;\n\t\tif (player ~= nil) then\n\t\t\tplayer_optional, player_optional_0 = 1, createPointer(player);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_optional, player_optional_0, bundle_id, was_purchased and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_marketplace_service_prompt_game_pass_purchase_finished_on_prompt_game_pass_purchase_finished(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptGamePassPurchaseFinished:Connect(function(player, game_pass_id, was_purchased)\n\t\tlocal player_optional, player_optional_0 = 0, 0;\n\t\tif (player ~= nil) then\n\t\t\tplayer_optional, player_optional_0 = 1, createPointer(player);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_optional, player_optional_0, game_pass_id, was_purchased and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_marketplace_service_prompt_premium_purchase_finished_on_prompt_premium_purchase_finished(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptPremiumPurchaseFinished:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_marketplace_service_prompt_purchase_finished_on_prompt_purchase_finished(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptPurchaseFinished:Connect(function(player, asset_id, is_purchased)\n\t\tlocal player_optional, player_optional_0 = 0, 0;\n\t\tif (player ~= nil) then\n\t\t\tplayer_optional, player_optional_0 = 1, createPointer(player);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_optional, player_optional_0, asset_id, is_purchased and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_marketplace_service_prompt_subscription_cancellation_finished_on_prompt_subscription_cancellation_finished(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptSubscriptionCancellationFinished:Connect(function(player, subscription_id, was_canceled)\n\t\tlocal player_optional, player_optional_0 = 0, 0;\n\t\tif (player ~= nil) then\n\t\t\tplayer_optional, player_optional_0 = 1, createPointer(player);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_optional, player_optional_0, subscription_id, was_canceled and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_marketplace_service_prompt_subscription_purchase_finished_on_prompt_subscription_purchase_finished(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptSubscriptionPurchaseFinished:Connect(function(player, subscription_id, was_purchased)\n\t\tlocal player_optional, player_optional_0 = 0, 0;\n\t\tif (player ~= nil) then\n\t\t\tplayer_optional, player_optional_0 = 1, createPointer(player);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_optional, player_optional_0, subscription_id, was_purchased and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_material_service_get_base_material_override(self, material)\n\tlocal result_0 = getPointer(self):GetBaseMaterialOverride(material);\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.method_material_service_get_material_variant(self, material, name_addr, name_len)\n\tlocal result_0 = getPointer(self):GetMaterialVariant(material, loadString(memory, name_addr, name_len));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_material_service_set_base_material_override(self, material, name_addr, name_len)\n\tgetPointer(self):SetBaseMaterialOverride(material, loadString(memory, name_addr, name_len))\nend\nfunction abi.ffi.property_getter_material_variant_custom_physical_properties(self)\n\tlocal result_0 = getPointer(self).CustomPhysicalProperties;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_material_variant_custom_physical_properties_set_custom_physical_properties(self, value)\n\tgetPointer(self).CustomPhysicalProperties = getPointer(value);\nend\nfunction abi.ffi.property_getter_material_variant_material_pattern(self)\n\tlocal result_0 = getPointer(self).MaterialPattern;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_material_variant_material_pattern_set_material_pattern(self, value)\n\tgetPointer(self).MaterialPattern = value;\nend\nfunction abi.ffi.property_getter_material_variant_studs_per_tile(self)\n\tlocal result_0 = getPointer(self).StudsPerTile;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_material_variant_studs_per_tile_set_studs_per_tile(self, value)\n\tgetPointer(self).StudsPerTile = value;\nend\nfunction abi.ffi.method_memory_store_queue_remove_async(self, id_addr, id_len)\n\tgetPointer(self):RemoveAsync(loadString(memory, id_addr, id_len))\nend\nfunction abi.ffi.method_memory_store_service_get_queue(self, name_addr, name_len, invisibility_timeout)\n\tlocal result_0 = getPointer(self):GetQueue(loadString(memory, name_addr, name_len), invisibility_timeout);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_memory_store_service_get_sorted_map(self, name_addr, name_len)\n\tlocal result_0 = getPointer(self):GetSortedMap(loadString(memory, name_addr, name_len));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_memory_store_sorted_map_remove_async(self, key_addr, key_len)\n\tgetPointer(self):RemoveAsync(loadString(memory, key_addr, key_len))\nend\nfunction abi.ffi.property_getter_mouse_hit(self)\n\tlocal result_0 = getPointer(self).Hit;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_mouse_icon(self)\n\tlocal result_0 = getPointer(self).Icon;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_mouse_icon_set_icon(self, value)\n\tgetPointer(self).Icon = getPointer(value);\nend\nfunction abi.ffi.property_getter_mouse_origin(self)\n\tlocal result_0 = getPointer(self).Origin;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_mouse_target(self)\n\tlocal result_0 = getPointer(self).Target;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_getter_mouse_target_filter(self)\n\tlocal result_0 = getPointer(self).TargetFilter;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_mouse_target_filter_set_target_filter(self, value)\n\tgetPointer(self).TargetFilter = getPointer(value);\nend\nfunction abi.ffi.property_getter_mouse_target_surface(self)\n\tlocal result_0 = getPointer(self).TargetSurface;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_mouse_unit_ray(self)\n\tlocal result_0 = getPointer(self).UnitRay;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_mouse_view_size_x(self)\n\tlocal result_0 = getPointer(self).ViewSizeX;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_mouse_view_size_y(self)\n\tlocal result_0 = getPointer(self).ViewSizeY;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_mouse_x(self)\n\tlocal result_0 = getPointer(self).X;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_mouse_y(self)\n\tlocal result_0 = getPointer(self).Y;\n\treturn result_0;\nend\nfunction abi.ffi.event_mouse_button_1_down_on_button_1_down(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Button1Down:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_mouse_button_1_up_on_button_1_up(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Button1Up:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_mouse_button_2_down_on_button_2_down(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Button2Down:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_mouse_button_2_up_on_button_2_up(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Button2Up:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_mouse_idle_on_idle(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Idle:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_mouse_move_on_move(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Move:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_mouse_wheel_backward_on_wheel_backward(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).WheelBackward:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_mouse_wheel_forward_on_wheel_forward(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).WheelForward:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_network_marker_received_on_received(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Received:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_no_collision_constraint_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_no_collision_constraint_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_no_collision_constraint_part_0(self)\n\tlocal result_0 = getPointer(self).Part0;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_no_collision_constraint_part_0_set_part_0(self, value)\n\tgetPointer(self).Part0 = getPointer(value);\nend\nfunction abi.ffi.property_getter_no_collision_constraint_part_1(self)\n\tlocal result_0 = getPointer(self).Part1;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_no_collision_constraint_part_1_set_part_1(self, value)\n\tgetPointer(self).Part1 = getPointer(value);\nend\nfunction abi.ffi.method_pv_instance_get_pivot(self)\n\tlocal result_0 = getPointer(self):GetPivot();\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_pv_instance_pivot_to(self, target_c_frame)\n\tgetPointer(self):PivotTo(getPointer(target_c_frame))\nend\nfunction abi.ffi.property_getter_base_part_anchored(self)\n\tlocal result_0 = getPointer(self).Anchored;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_base_part_anchored_set_anchored(self, value)\n\tgetPointer(self).Anchored = value == 1;\nend\nfunction abi.ffi.property_getter_base_part_assembly_angular_velocity(self)\n\tlocal result_0 = getPointer(self).AssemblyAngularVelocity;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_base_part_assembly_angular_velocity_set_assembly_angular_velocity(self, value)\n\tgetPointer(self).AssemblyAngularVelocity = getPointer(value);\nend\nfunction abi.ffi.property_getter_base_part_assembly_center_of_mass(self)\n\tlocal result_0 = getPointer(self).AssemblyCenterOfMass;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_base_part_assembly_linear_velocity(self)\n\tlocal result_0 = getPointer(self).AssemblyLinearVelocity;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_base_part_assembly_linear_velocity_set_assembly_linear_velocity(self, value)\n\tgetPointer(self).AssemblyLinearVelocity = getPointer(value);\nend\nfunction abi.ffi.property_getter_base_part_assembly_mass(self)\n\tlocal result_0 = getPointer(self).AssemblyMass;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_base_part_assembly_root_part(self)\n\tlocal result_0 = getPointer(self).AssemblyRootPart;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_getter_base_part_back_surface(self)\n\tlocal result_0 = getPointer(self).BackSurface;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_base_part_back_surface_set_back_surface(self, value)\n\tgetPointer(self).BackSurface = value;\nend\nfunction abi.ffi.property_getter_base_part_bottom_surface(self)\n\tlocal result_0 = getPointer(self).BottomSurface;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_base_part_bottom_surface_set_bottom_surface(self, value)\n\tgetPointer(self).BottomSurface = value;\nend\nfunction abi.ffi.property_getter_base_part_brick_color(self)\n\tlocal result_0 = getPointer(self).BrickColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_base_part_brick_color_set_brick_color(self, value)\n\tgetPointer(self).BrickColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_base_part_c_frame(self)\n\tlocal result_0 = getPointer(self).CFrame;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_base_part_c_frame_set_c_frame(self, value)\n\tgetPointer(self).CFrame = getPointer(value);\nend\nfunction abi.ffi.property_getter_base_part_can_collide(self)\n\tlocal result_0 = getPointer(self).CanCollide;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_base_part_can_collide_set_can_collide(self, value)\n\tgetPointer(self).CanCollide = value == 1;\nend\nfunction abi.ffi.property_getter_base_part_can_query(self)\n\tlocal result_0 = getPointer(self).CanQuery;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_base_part_can_query_set_can_query(self, value)\n\tgetPointer(self).CanQuery = value == 1;\nend\nfunction abi.ffi.property_getter_base_part_can_touch(self)\n\tlocal result_0 = getPointer(self).CanTouch;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_base_part_can_touch_set_can_touch(self, value)\n\tgetPointer(self).CanTouch = value == 1;\nend\nfunction abi.ffi.property_getter_base_part_cast_shadow(self)\n\tlocal result_0 = getPointer(self).CastShadow;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_base_part_cast_shadow_set_cast_shadow(self, value)\n\tgetPointer(self).CastShadow = value == 1;\nend\nfunction abi.ffi.property_getter_base_part_center_of_mass(self)\n\tlocal result_0 = getPointer(self).CenterOfMass;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_base_part_collision_group(self)\n\tlocal result_0 = getPointer(self).CollisionGroup;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_base_part_collision_group_set_collision_group(self, value_addr, value_len)\n\tgetPointer(self).CollisionGroup = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_base_part_collision_group_id(self)\n\tlocal result_0 = getPointer(self).CollisionGroupId;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_base_part_collision_group_id_set_collision_group_id(self, value)\n\tgetPointer(self).CollisionGroupId = value;\nend\nfunction abi.ffi.property_getter_base_part_color(self)\n\tlocal result_0 = getPointer(self).Color;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_base_part_color_set_color(self, value)\n\tgetPointer(self).Color = getPointer(value);\nend\nfunction abi.ffi.property_getter_base_part_current_physical_properties(self)\n\tlocal result_0 = getPointer(self).CurrentPhysicalProperties;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_base_part_custom_physical_properties(self)\n\tlocal result_0 = getPointer(self).CustomPhysicalProperties;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_base_part_custom_physical_properties_set_custom_physical_properties(self, value)\n\tgetPointer(self).CustomPhysicalProperties = getPointer(value);\nend\nfunction abi.ffi.property_getter_base_part_front_surface(self)\n\tlocal result_0 = getPointer(self).FrontSurface;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_base_part_front_surface_set_front_surface(self, value)\n\tgetPointer(self).FrontSurface = value;\nend\nfunction abi.ffi.property_getter_base_part_left_surface(self)\n\tlocal result_0 = getPointer(self).LeftSurface;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_base_part_left_surface_set_left_surface(self, value)\n\tgetPointer(self).LeftSurface = value;\nend\nfunction abi.ffi.property_getter_base_part_local_transparency_modifier(self)\n\tlocal result_0 = getPointer(self).LocalTransparencyModifier;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_base_part_local_transparency_modifier_set_local_transparency_modifier(self, value)\n\tgetPointer(self).LocalTransparencyModifier = value;\nend\nfunction abi.ffi.property_getter_base_part_locked(self)\n\tlocal result_0 = getPointer(self).Locked;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_base_part_locked_set_locked(self, value)\n\tgetPointer(self).Locked = value == 1;\nend\nfunction abi.ffi.property_getter_base_part_mass(self)\n\tlocal result_0 = getPointer(self).Mass;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_base_part_massless(self)\n\tlocal result_0 = getPointer(self).Massless;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_base_part_massless_set_massless(self, value)\n\tgetPointer(self).Massless = value == 1;\nend\nfunction abi.ffi.property_getter_base_part_material(self)\n\tlocal result_0 = getPointer(self).Material;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_base_part_material_set_material(self, value)\n\tgetPointer(self).Material = value;\nend\nfunction abi.ffi.property_getter_base_part_material_variant(self)\n\tlocal result_0 = getPointer(self).MaterialVariant;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_base_part_material_variant_set_material_variant(self, value_addr, value_len)\n\tgetPointer(self).MaterialVariant = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_base_part_orientation(self)\n\tlocal result_0 = getPointer(self).Orientation;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_base_part_orientation_set_orientation(self, value)\n\tgetPointer(self).Orientation = getPointer(value);\nend\nfunction abi.ffi.property_getter_base_part_pivot_offset(self)\n\tlocal result_0 = getPointer(self).PivotOffset;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_base_part_pivot_offset_set_pivot_offset(self, value)\n\tgetPointer(self).PivotOffset = getPointer(value);\nend\nfunction abi.ffi.property_getter_base_part_position(self)\n\tlocal result_0 = getPointer(self).Position;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_base_part_position_set_position(self, value)\n\tgetPointer(self).Position = getPointer(value);\nend\nfunction abi.ffi.property_getter_base_part_receive_age(self)\n\tlocal result_0 = getPointer(self).ReceiveAge;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_base_part_reflectance(self)\n\tlocal result_0 = getPointer(self).Reflectance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_base_part_reflectance_set_reflectance(self, value)\n\tgetPointer(self).Reflectance = value;\nend\nfunction abi.ffi.property_getter_base_part_resize_increment(self)\n\tlocal result_0 = getPointer(self).ResizeIncrement;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_base_part_resizeable_faces(self)\n\tlocal result_0 = getPointer(self).ResizeableFaces;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_base_part_right_surface(self)\n\tlocal result_0 = getPointer(self).RightSurface;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_base_part_right_surface_set_right_surface(self, value)\n\tgetPointer(self).RightSurface = value;\nend\nfunction abi.ffi.property_getter_base_part_root_priority(self)\n\tlocal result_0 = getPointer(self).RootPriority;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_base_part_root_priority_set_root_priority(self, value)\n\tgetPointer(self).RootPriority = value;\nend\nfunction abi.ffi.property_getter_base_part_rotation(self)\n\tlocal result_0 = getPointer(self).Rotation;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_base_part_rotation_set_rotation(self, value)\n\tgetPointer(self).Rotation = getPointer(value);\nend\nfunction abi.ffi.property_getter_base_part_size(self)\n\tlocal result_0 = getPointer(self).Size;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_base_part_size_set_size(self, value)\n\tgetPointer(self).Size = getPointer(value);\nend\nfunction abi.ffi.property_getter_base_part_top_surface(self)\n\tlocal result_0 = getPointer(self).TopSurface;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_base_part_top_surface_set_top_surface(self, value)\n\tgetPointer(self).TopSurface = value;\nend\nfunction abi.ffi.property_getter_base_part_transparency(self)\n\tlocal result_0 = getPointer(self).Transparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_base_part_transparency_set_transparency(self, value)\n\tgetPointer(self).Transparency = value;\nend\nfunction abi.ffi.method_base_part_apply_angular_impulse(self, impulse)\n\tgetPointer(self):ApplyAngularImpulse(getPointer(impulse))\nend\nfunction abi.ffi.method_base_part_apply_impulse(self, impulse)\n\tgetPointer(self):ApplyImpulse(getPointer(impulse))\nend\nfunction abi.ffi.method_base_part_apply_impulse_at_position(self, impulse, position)\n\tgetPointer(self):ApplyImpulseAtPosition(getPointer(impulse), getPointer(position))\nend\nfunction abi.ffi.method_base_part_break_joints(self)\n\tgetPointer(self):BreakJoints()\nend\nfunction abi.ffi.method_base_part_can_collide_with(self, part)\n\tlocal result_0 = getPointer(self):CanCollideWith(getPointer(part));\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_base_part_get_mass(self)\n\tlocal result_0 = getPointer(self):GetMass();\n\treturn result_0;\nend\nfunction abi.ffi.method_base_part_get_network_owner(self)\n\tlocal result_0 = getPointer(self):GetNetworkOwner();\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_base_part_get_network_ownership_auto(self)\n\tlocal result_0 = getPointer(self):GetNetworkOwnershipAuto();\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_base_part_get_root_part(self)\n\tlocal result_0 = getPointer(self):GetRootPart();\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_base_part_get_velocity_at_position(self, position)\n\tlocal result_0 = getPointer(self):GetVelocityAtPosition(getPointer(position));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_base_part_is_grounded(self)\n\tlocal result_0 = getPointer(self):IsGrounded();\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_base_part_make_joints(self)\n\tgetPointer(self):MakeJoints()\nend\nfunction abi.ffi.method_base_part_resize(self, normal_id, delta_amount)\n\tlocal result_0 = getPointer(self):Resize(normal_id, delta_amount);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_base_part_set_network_owner(self, player_instance)\n\tgetPointer(self):SetNetworkOwner(getPointer(player_instance))\nend\nfunction abi.ffi.method_base_part_set_network_ownership_auto(self)\n\tgetPointer(self):SetNetworkOwnershipAuto()\nend\nfunction abi.ffi.event_base_part_touch_ended_on_touch_ended(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).TouchEnded:Connect(function(other_part)\n\t\tlocal other_part_optional, other_part_optional_0 = 0, 0;\n\t\tif (other_part ~= nil) then\n\t\t\tother_part_optional, other_part_optional_0 = 1, createPointer(other_part);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, other_part_optional, other_part_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_base_part_touched_on_touched(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Touched:Connect(function(part)\n\t\tinvokeFunction(callback_data, callback_vtable, createPointer(part))\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_part_shape(self)\n\tlocal result_0 = getPointer(self).Shape;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_part_shape_set_shape(self, value)\n\tgetPointer(self).Shape = value;\nend\nfunction abi.ffi.property_getter_seat_disabled(self)\n\tlocal result_0 = getPointer(self).Disabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_seat_disabled_set_disabled(self, value)\n\tgetPointer(self).Disabled = value == 1;\nend\nfunction abi.ffi.property_getter_seat_occupant(self)\n\tlocal result_0 = getPointer(self).Occupant;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_seat_sit(self, humanoid)\n\tgetPointer(self):Sit(getPointer(humanoid))\nend\nfunction abi.ffi.property_getter_spawn_location_allow_team_change_on_touch(self)\n\tlocal result_0 = getPointer(self).AllowTeamChangeOnTouch;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_spawn_location_allow_team_change_on_touch_set_allow_team_change_on_touch(self, value)\n\tgetPointer(self).AllowTeamChangeOnTouch = value == 1;\nend\nfunction abi.ffi.property_getter_spawn_location_duration(self)\n\tlocal result_0 = getPointer(self).Duration;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_spawn_location_duration_set_duration(self, value)\n\tgetPointer(self).Duration = value;\nend\nfunction abi.ffi.property_getter_spawn_location_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_spawn_location_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_spawn_location_neutral(self)\n\tlocal result_0 = getPointer(self).Neutral;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_spawn_location_neutral_set_neutral(self, value)\n\tgetPointer(self).Neutral = value == 1;\nend\nfunction abi.ffi.property_getter_spawn_location_team_color(self)\n\tlocal result_0 = getPointer(self).TeamColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_spawn_location_team_color_set_team_color(self, value)\n\tgetPointer(self).TeamColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_terrain_max_extents(self)\n\tlocal result_0 = getPointer(self).MaxExtents;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_terrain_water_color(self)\n\tlocal result_0 = getPointer(self).WaterColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_terrain_water_color_set_water_color(self, value)\n\tgetPointer(self).WaterColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_terrain_water_reflectance(self)\n\tlocal result_0 = getPointer(self).WaterReflectance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_terrain_water_reflectance_set_water_reflectance(self, value)\n\tgetPointer(self).WaterReflectance = value;\nend\nfunction abi.ffi.property_getter_terrain_water_transparency(self)\n\tlocal result_0 = getPointer(self).WaterTransparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_terrain_water_transparency_set_water_transparency(self, value)\n\tgetPointer(self).WaterTransparency = value;\nend\nfunction abi.ffi.property_getter_terrain_water_wave_size(self)\n\tlocal result_0 = getPointer(self).WaterWaveSize;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_terrain_water_wave_size_set_water_wave_size(self, value)\n\tgetPointer(self).WaterWaveSize = value;\nend\nfunction abi.ffi.property_getter_terrain_water_wave_speed(self)\n\tlocal result_0 = getPointer(self).WaterWaveSpeed;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_terrain_water_wave_speed_set_water_wave_speed(self, value)\n\tgetPointer(self).WaterWaveSpeed = value;\nend\nfunction abi.ffi.method_terrain_cell_center_to_world(self, x, y, z)\n\tlocal result_0 = getPointer(self):CellCenterToWorld(x, y, z);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_terrain_cell_corner_to_world(self, x, y, z)\n\tlocal result_0 = getPointer(self):CellCornerToWorld(x, y, z);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_terrain_clear(self)\n\tgetPointer(self):Clear()\nend\nfunction abi.ffi.method_terrain_copy_region(self, region)\n\tlocal result_0 = getPointer(self):CopyRegion(getPointer(region));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_terrain_count_cells(self)\n\tlocal result_0 = getPointer(self):CountCells();\n\treturn result_0;\nend\nfunction abi.ffi.method_terrain_fill_ball(self, center, radius, material)\n\tgetPointer(self):FillBall(getPointer(center), radius, material)\nend\nfunction abi.ffi.method_terrain_fill_block(self, cframe, size, material)\n\tgetPointer(self):FillBlock(getPointer(cframe), getPointer(size), material)\nend\nfunction abi.ffi.method_terrain_fill_cylinder(self, cframe, height, radius, material)\n\tgetPointer(self):FillCylinder(getPointer(cframe), height, radius, material)\nend\nfunction abi.ffi.method_terrain_fill_region(self, region, resolution, material)\n\tgetPointer(self):FillRegion(getPointer(region), resolution, material)\nend\nfunction abi.ffi.method_terrain_fill_wedge(self, cframe, size, material)\n\tgetPointer(self):FillWedge(getPointer(cframe), getPointer(size), material)\nend\nfunction abi.ffi.method_terrain_get_material_color(self, material)\n\tlocal result_0 = getPointer(self):GetMaterialColor(material);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_terrain_paste_region(self, region, corner, paste_empty_cells)\n\tgetPointer(self):PasteRegion(getPointer(region), getPointer(corner), paste_empty_cells == 1)\nend\nfunction abi.ffi.method_terrain_replace_material(self, region, resolution, source_material, target_material)\n\tgetPointer(self):ReplaceMaterial(getPointer(region), resolution, source_material, target_material)\nend\nfunction abi.ffi.method_terrain_set_material_color(self, material, value)\n\tgetPointer(self):SetMaterialColor(material, getPointer(value))\nend\nfunction abi.ffi.method_terrain_world_to_cell(self, position)\n\tlocal result_0 = getPointer(self):WorldToCell(getPointer(position));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_terrain_world_to_cell_prefer_empty(self, position)\n\tlocal result_0 = getPointer(self):WorldToCellPreferEmpty(getPointer(position));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_terrain_world_to_cell_prefer_solid(self, position)\n\tlocal result_0 = getPointer(self):WorldToCellPreferSolid(getPointer(position));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_triangle_mesh_part_collision_fidelity(self)\n\tlocal result_0 = getPointer(self).CollisionFidelity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_triangle_mesh_part_collision_fidelity_set_collision_fidelity(self, value)\n\tgetPointer(self).CollisionFidelity = value;\nend\nfunction abi.ffi.property_getter_triangle_mesh_part_mesh_size(self)\n\tlocal result_0 = getPointer(self).MeshSize;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_mesh_part_double_sided(self)\n\tlocal result_0 = getPointer(self).DoubleSided;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_mesh_part_double_sided_set_double_sided(self, value)\n\tgetPointer(self).DoubleSided = value == 1;\nend\nfunction abi.ffi.property_getter_mesh_part_has_joint_offset(self)\n\tlocal result_0 = getPointer(self).HasJointOffset;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_mesh_part_has_joint_offset_set_has_joint_offset(self, value)\n\tgetPointer(self).HasJointOffset = value == 1;\nend\nfunction abi.ffi.property_getter_mesh_part_has_skinned_mesh(self)\n\tlocal result_0 = getPointer(self).HasSkinnedMesh;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_mesh_part_has_skinned_mesh_set_has_skinned_mesh(self, value)\n\tgetPointer(self).HasSkinnedMesh = value == 1;\nend\nfunction abi.ffi.property_getter_mesh_part_joint_offset(self)\n\tlocal result_0 = getPointer(self).JointOffset;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_mesh_part_joint_offset_set_joint_offset(self, value)\n\tgetPointer(self).JointOffset = getPointer(value);\nend\nfunction abi.ffi.property_getter_mesh_part_mesh_id(self)\n\tlocal result_0 = getPointer(self).MeshId;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_mesh_part_mesh_id_set_mesh_id(self, value)\n\tgetPointer(self).MeshId = getPointer(value);\nend\nfunction abi.ffi.property_getter_mesh_part_render_fidelity(self)\n\tlocal result_0 = getPointer(self).RenderFidelity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_mesh_part_render_fidelity_set_render_fidelity(self, value)\n\tgetPointer(self).RenderFidelity = value;\nend\nfunction abi.ffi.property_getter_mesh_part_texture_id(self)\n\tlocal result_0 = getPointer(self).TextureID;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_mesh_part_texture_id_set_texture_id(self, value)\n\tgetPointer(self).TextureID = getPointer(value);\nend\nfunction abi.ffi.method_mesh_part_apply_mesh(self, mesh_part)\n\tgetPointer(self):ApplyMesh(getPointer(mesh_part))\nend\nfunction abi.ffi.property_getter_part_operation_render_fidelity(self)\n\tlocal result_0 = getPointer(self).RenderFidelity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_part_operation_render_fidelity_set_render_fidelity(self, value)\n\tgetPointer(self).RenderFidelity = value;\nend\nfunction abi.ffi.property_getter_part_operation_smoothing_angle(self)\n\tlocal result_0 = getPointer(self).SmoothingAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_part_operation_smoothing_angle_set_smoothing_angle(self, value)\n\tgetPointer(self).SmoothingAngle = value;\nend\nfunction abi.ffi.property_getter_part_operation_triangle_count(self)\n\tlocal result_0 = getPointer(self).TriangleCount;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_part_operation_use_part_color(self)\n\tlocal result_0 = getPointer(self).UsePartColor;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_part_operation_use_part_color_set_use_part_color(self, value)\n\tgetPointer(self).UsePartColor = value == 1;\nend\nfunction abi.ffi.property_getter_truss_part_style(self)\n\tlocal result_0 = getPointer(self).Style;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_truss_part_style_set_style(self, value)\n\tgetPointer(self).Style = value;\nend\nfunction abi.ffi.property_getter_vehicle_seat_are_hinges_detected(self)\n\tlocal result_0 = getPointer(self).AreHingesDetected;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_vehicle_seat_disabled(self)\n\tlocal result_0 = getPointer(self).Disabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_vehicle_seat_disabled_set_disabled(self, value)\n\tgetPointer(self).Disabled = value == 1;\nend\nfunction abi.ffi.property_getter_vehicle_seat_heads_up_display(self)\n\tlocal result_0 = getPointer(self).HeadsUpDisplay;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_vehicle_seat_heads_up_display_set_heads_up_display(self, value)\n\tgetPointer(self).HeadsUpDisplay = value == 1;\nend\nfunction abi.ffi.property_getter_vehicle_seat_max_speed(self)\n\tlocal result_0 = getPointer(self).MaxSpeed;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_vehicle_seat_max_speed_set_max_speed(self, value)\n\tgetPointer(self).MaxSpeed = value;\nend\nfunction abi.ffi.property_getter_vehicle_seat_occupant(self)\n\tlocal result_0 = getPointer(self).Occupant;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_getter_vehicle_seat_steer(self)\n\tlocal result_0 = getPointer(self).Steer;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_vehicle_seat_steer_set_steer(self, value)\n\tgetPointer(self).Steer = value;\nend\nfunction abi.ffi.property_getter_vehicle_seat_steer_float(self)\n\tlocal result_0 = getPointer(self).SteerFloat;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_vehicle_seat_steer_float_set_steer_float(self, value)\n\tgetPointer(self).SteerFloat = value;\nend\nfunction abi.ffi.property_getter_vehicle_seat_throttle(self)\n\tlocal result_0 = getPointer(self).Throttle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_vehicle_seat_throttle_set_throttle(self, value)\n\tgetPointer(self).Throttle = value;\nend\nfunction abi.ffi.property_getter_vehicle_seat_throttle_float(self)\n\tlocal result_0 = getPointer(self).ThrottleFloat;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_vehicle_seat_throttle_float_set_throttle_float(self, value)\n\tgetPointer(self).ThrottleFloat = value;\nend\nfunction abi.ffi.property_getter_vehicle_seat_torque(self)\n\tlocal result_0 = getPointer(self).Torque;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_vehicle_seat_torque_set_torque(self, value)\n\tgetPointer(self).Torque = value;\nend\nfunction abi.ffi.property_getter_vehicle_seat_turn_speed(self)\n\tlocal result_0 = getPointer(self).TurnSpeed;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_vehicle_seat_turn_speed_set_turn_speed(self, value)\n\tgetPointer(self).TurnSpeed = value;\nend\nfunction abi.ffi.method_vehicle_seat_sit(self, humanoid)\n\tgetPointer(self):Sit(getPointer(humanoid))\nend\nfunction abi.ffi.property_getter_model_model_streaming_mode(self)\n\tlocal result_0 = getPointer(self).ModelStreamingMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_model_model_streaming_mode_set_model_streaming_mode(self, value)\n\tgetPointer(self).ModelStreamingMode = value;\nend\nfunction abi.ffi.property_getter_model_primary_part(self)\n\tlocal result_0 = getPointer(self).PrimaryPart;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_model_primary_part_set_primary_part(self, value)\n\tgetPointer(self).PrimaryPart = getPointer(value);\nend\nfunction abi.ffi.property_getter_model_world_pivot(self)\n\tlocal result_0 = getPointer(self).WorldPivot;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_model_world_pivot_set_world_pivot(self, value)\n\tgetPointer(self).WorldPivot = getPointer(value);\nend\nfunction abi.ffi.method_model_break_joints(self)\n\tgetPointer(self):BreakJoints()\nend\nfunction abi.ffi.method_model_get_extents_size(self)\n\tlocal result_0 = getPointer(self):GetExtentsSize();\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_model_make_joints(self)\n\tgetPointer(self):MakeJoints()\nend\nfunction abi.ffi.method_model_move_to(self, position)\n\tgetPointer(self):MoveTo(getPointer(position))\nend\nfunction abi.ffi.method_model_translate_by(self, delta)\n\tgetPointer(self):TranslateBy(getPointer(delta))\nend\nfunction abi.ffi.method_world_root_raycast(self, origin, direction, raycast_params)\n\tlocal result_0 = getPointer(self):Raycast(getPointer(origin), getPointer(direction), getPointer(raycast_params));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_workspace_allow_third_party_sales(self)\n\tlocal result_0 = getPointer(self).AllowThirdPartySales;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_workspace_allow_third_party_sales_set_allow_third_party_sales(self, value)\n\tgetPointer(self).AllowThirdPartySales = value == 1;\nend\nfunction abi.ffi.property_getter_workspace_client_animator_throttling(self)\n\tlocal result_0 = getPointer(self).ClientAnimatorThrottling;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_workspace_client_animator_throttling_set_client_animator_throttling(self, value)\n\tgetPointer(self).ClientAnimatorThrottling = value;\nend\nfunction abi.ffi.property_getter_workspace_current_camera(self)\n\tlocal result_0 = getPointer(self).CurrentCamera;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_workspace_current_camera_set_current_camera(self, value)\n\tgetPointer(self).CurrentCamera = getPointer(value);\nend\nfunction abi.ffi.property_getter_workspace_distributed_game_time(self)\n\tlocal result_0 = getPointer(self).DistributedGameTime;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_workspace_distributed_game_time_set_distributed_game_time(self, value)\n\tgetPointer(self).DistributedGameTime = value;\nend\nfunction abi.ffi.property_getter_workspace_fallen_parts_destroy_height(self)\n\tlocal result_0 = getPointer(self).FallenPartsDestroyHeight;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_workspace_fallen_parts_destroy_height_set_fallen_parts_destroy_height(self, value)\n\tgetPointer(self).FallenPartsDestroyHeight = value;\nend\nfunction abi.ffi.property_getter_workspace_global_wind(self)\n\tlocal result_0 = getPointer(self).GlobalWind;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_workspace_global_wind_set_global_wind(self, value)\n\tgetPointer(self).GlobalWind = getPointer(value);\nend\nfunction abi.ffi.property_getter_workspace_gravity(self)\n\tlocal result_0 = getPointer(self).Gravity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_workspace_gravity_set_gravity(self, value)\n\tgetPointer(self).Gravity = value;\nend\nfunction abi.ffi.property_getter_workspace_interpolation_throttling(self)\n\tlocal result_0 = getPointer(self).InterpolationThrottling;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_workspace_interpolation_throttling_set_interpolation_throttling(self, value)\n\tgetPointer(self).InterpolationThrottling = value;\nend\nfunction abi.ffi.property_getter_workspace_retargeting(self)\n\tlocal result_0 = getPointer(self).Retargeting;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_workspace_retargeting_set_retargeting(self, value)\n\tgetPointer(self).Retargeting = value;\nend\nfunction abi.ffi.property_getter_workspace_streaming_enabled(self)\n\tlocal result_0 = getPointer(self).StreamingEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_workspace_streaming_enabled_set_streaming_enabled(self, value)\n\tgetPointer(self).StreamingEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_workspace_terrain(self)\n\tlocal result_0 = getPointer(self).Terrain;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_workspace_get_num_awake_parts(self)\n\tlocal result_0 = getPointer(self):GetNumAwakeParts();\n\treturn result_0;\nend\nfunction abi.ffi.method_workspace_get_physics_throttling(self)\n\tlocal result_0 = getPointer(self):GetPhysicsThrottling();\n\treturn result_0;\nend\nfunction abi.ffi.method_workspace_get_real_physics_fps(self)\n\tlocal result_0 = getPointer(self):GetRealPhysicsFPS();\n\treturn result_0;\nend\nfunction abi.ffi.method_workspace_get_server_time_now(self)\n\tlocal result_0 = getPointer(self):GetServerTimeNow();\n\treturn result_0;\nend\nfunction abi.ffi.method_workspace_pgs_is_enabled(self)\n\tlocal result_0 = getPointer(self):PGSIsEnabled();\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.event_workspace_persistent_loaded_on_persistent_loaded(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PersistentLoaded:Connect(function(player)\n\t\tlocal player_optional, player_optional_0 = 0, 0;\n\t\tif (player ~= nil) then\n\t\t\tplayer_optional, player_optional_0 = 1, createPointer(player);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_optional, player_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_package_link_package_id(self)\n\tlocal result_0 = getPointer(self).PackageId;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_package_link_version_number(self)\n\tlocal result_0 = getPointer(self).VersionNumber;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_package_link_version_number_set_version_number(self, value)\n\tgetPointer(self).VersionNumber = value;\nend\nfunction abi.ffi.property_getter_pages_is_finished(self)\n\tlocal result_0 = getPointer(self).IsFinished;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_pages_advance_to_next_page_async(self)\n\tgetPointer(self):AdvanceToNextPageAsync()\nend\nfunction abi.ffi.property_getter_data_store_key_pages_cursor(self)\n\tlocal result_0 = getPointer(self).Cursor;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_data_store_listing_pages_cursor(self)\n\tlocal result_0 = getPointer(self).Cursor;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_particle_emitter_acceleration(self)\n\tlocal result_0 = getPointer(self).Acceleration;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_particle_emitter_acceleration_set_acceleration(self, value)\n\tgetPointer(self).Acceleration = getPointer(value);\nend\nfunction abi.ffi.property_getter_particle_emitter_brightness(self)\n\tlocal result_0 = getPointer(self).Brightness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_particle_emitter_brightness_set_brightness(self, value)\n\tgetPointer(self).Brightness = value;\nend\nfunction abi.ffi.property_getter_particle_emitter_color(self)\n\tlocal result_0 = getPointer(self).Color;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_particle_emitter_color_set_color(self, value)\n\tgetPointer(self).Color = getPointer(value);\nend\nfunction abi.ffi.property_getter_particle_emitter_drag(self)\n\tlocal result_0 = getPointer(self).Drag;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_particle_emitter_drag_set_drag(self, value)\n\tgetPointer(self).Drag = value;\nend\nfunction abi.ffi.property_getter_particle_emitter_emission_direction(self)\n\tlocal result_0 = getPointer(self).EmissionDirection;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_particle_emitter_emission_direction_set_emission_direction(self, value)\n\tgetPointer(self).EmissionDirection = value;\nend\nfunction abi.ffi.property_getter_particle_emitter_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_particle_emitter_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_particle_emitter_flipbook_framerate(self)\n\tlocal result_0 = getPointer(self).FlipbookFramerate;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_particle_emitter_flipbook_framerate_set_flipbook_framerate(self, value)\n\tgetPointer(self).FlipbookFramerate = getPointer(value);\nend\nfunction abi.ffi.property_getter_particle_emitter_flipbook_incompatible(self)\n\tlocal result_0 = getPointer(self).FlipbookIncompatible;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_particle_emitter_flipbook_incompatible_set_flipbook_incompatible(self, value_addr, value_len)\n\tgetPointer(self).FlipbookIncompatible = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_particle_emitter_flipbook_layout(self)\n\tlocal result_0 = getPointer(self).FlipbookLayout;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_particle_emitter_flipbook_layout_set_flipbook_layout(self, value)\n\tgetPointer(self).FlipbookLayout = value;\nend\nfunction abi.ffi.property_getter_particle_emitter_flipbook_mode(self)\n\tlocal result_0 = getPointer(self).FlipbookMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_particle_emitter_flipbook_mode_set_flipbook_mode(self, value)\n\tgetPointer(self).FlipbookMode = value;\nend\nfunction abi.ffi.property_getter_particle_emitter_flipbook_start_random(self)\n\tlocal result_0 = getPointer(self).FlipbookStartRandom;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_particle_emitter_flipbook_start_random_set_flipbook_start_random(self, value)\n\tgetPointer(self).FlipbookStartRandom = value == 1;\nend\nfunction abi.ffi.property_getter_particle_emitter_lifetime(self)\n\tlocal result_0 = getPointer(self).Lifetime;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_particle_emitter_lifetime_set_lifetime(self, value)\n\tgetPointer(self).Lifetime = getPointer(value);\nend\nfunction abi.ffi.property_getter_particle_emitter_light_emission(self)\n\tlocal result_0 = getPointer(self).LightEmission;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_particle_emitter_light_emission_set_light_emission(self, value)\n\tgetPointer(self).LightEmission = value;\nend\nfunction abi.ffi.property_getter_particle_emitter_light_influence(self)\n\tlocal result_0 = getPointer(self).LightInfluence;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_particle_emitter_light_influence_set_light_influence(self, value)\n\tgetPointer(self).LightInfluence = value;\nend\nfunction abi.ffi.property_getter_particle_emitter_locked_to_part(self)\n\tlocal result_0 = getPointer(self).LockedToPart;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_particle_emitter_locked_to_part_set_locked_to_part(self, value)\n\tgetPointer(self).LockedToPart = value == 1;\nend\nfunction abi.ffi.property_getter_particle_emitter_orientation(self)\n\tlocal result_0 = getPointer(self).Orientation;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_particle_emitter_orientation_set_orientation(self, value)\n\tgetPointer(self).Orientation = value;\nend\nfunction abi.ffi.property_getter_particle_emitter_rate(self)\n\tlocal result_0 = getPointer(self).Rate;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_particle_emitter_rate_set_rate(self, value)\n\tgetPointer(self).Rate = value;\nend\nfunction abi.ffi.property_getter_particle_emitter_rot_speed(self)\n\tlocal result_0 = getPointer(self).RotSpeed;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_particle_emitter_rot_speed_set_rot_speed(self, value)\n\tgetPointer(self).RotSpeed = getPointer(value);\nend\nfunction abi.ffi.property_getter_particle_emitter_rotation(self)\n\tlocal result_0 = getPointer(self).Rotation;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_particle_emitter_rotation_set_rotation(self, value)\n\tgetPointer(self).Rotation = getPointer(value);\nend\nfunction abi.ffi.property_getter_particle_emitter_shape(self)\n\tlocal result_0 = getPointer(self).Shape;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_particle_emitter_shape_set_shape(self, value)\n\tgetPointer(self).Shape = value;\nend\nfunction abi.ffi.property_getter_particle_emitter_shape_in_out(self)\n\tlocal result_0 = getPointer(self).ShapeInOut;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_particle_emitter_shape_in_out_set_shape_in_out(self, value)\n\tgetPointer(self).ShapeInOut = value;\nend\nfunction abi.ffi.property_getter_particle_emitter_shape_partial(self)\n\tlocal result_0 = getPointer(self).ShapePartial;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_particle_emitter_shape_partial_set_shape_partial(self, value)\n\tgetPointer(self).ShapePartial = value;\nend\nfunction abi.ffi.property_getter_particle_emitter_shape_style(self)\n\tlocal result_0 = getPointer(self).ShapeStyle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_particle_emitter_shape_style_set_shape_style(self, value)\n\tgetPointer(self).ShapeStyle = value;\nend\nfunction abi.ffi.property_getter_particle_emitter_size(self)\n\tlocal result_0 = getPointer(self).Size;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_particle_emitter_size_set_size(self, value)\n\tgetPointer(self).Size = getPointer(value);\nend\nfunction abi.ffi.property_getter_particle_emitter_speed(self)\n\tlocal result_0 = getPointer(self).Speed;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_particle_emitter_speed_set_speed(self, value)\n\tgetPointer(self).Speed = getPointer(value);\nend\nfunction abi.ffi.property_getter_particle_emitter_spread_angle(self)\n\tlocal result_0 = getPointer(self).SpreadAngle;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_particle_emitter_spread_angle_set_spread_angle(self, value)\n\tgetPointer(self).SpreadAngle = getPointer(value);\nend\nfunction abi.ffi.property_getter_particle_emitter_squash(self)\n\tlocal result_0 = getPointer(self).Squash;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_particle_emitter_squash_set_squash(self, value)\n\tgetPointer(self).Squash = getPointer(value);\nend\nfunction abi.ffi.property_getter_particle_emitter_texture(self)\n\tlocal result_0 = getPointer(self).Texture;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_particle_emitter_texture_set_texture(self, value)\n\tgetPointer(self).Texture = getPointer(value);\nend\nfunction abi.ffi.property_getter_particle_emitter_time_scale(self)\n\tlocal result_0 = getPointer(self).TimeScale;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_particle_emitter_time_scale_set_time_scale(self, value)\n\tgetPointer(self).TimeScale = value;\nend\nfunction abi.ffi.property_getter_particle_emitter_transparency(self)\n\tlocal result_0 = getPointer(self).Transparency;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_particle_emitter_transparency_set_transparency(self, value)\n\tgetPointer(self).Transparency = getPointer(value);\nend\nfunction abi.ffi.property_getter_particle_emitter_velocity_inheritance(self)\n\tlocal result_0 = getPointer(self).VelocityInheritance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_particle_emitter_velocity_inheritance_set_velocity_inheritance(self, value)\n\tgetPointer(self).VelocityInheritance = value;\nend\nfunction abi.ffi.property_getter_particle_emitter_z_offset(self)\n\tlocal result_0 = getPointer(self).ZOffset;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_particle_emitter_z_offset_set_z_offset(self, value)\n\tgetPointer(self).ZOffset = value;\nend\nfunction abi.ffi.method_particle_emitter_clear(self)\n\tgetPointer(self):Clear()\nend\nfunction abi.ffi.method_particle_emitter_emit(self, particle_count)\n\tgetPointer(self):Emit(particle_count)\nend\nfunction abi.ffi.property_getter_path_status(self)\n\tlocal result_0 = getPointer(self).Status;\n\treturn result_0;\nend\nfunction abi.ffi.method_path_check_occlusion_async(self, start)\n\tlocal result_0 = getPointer(self):CheckOcclusionAsync(start);\n\treturn result_0;\nend\nfunction abi.ffi.method_path_compute_async(self, start, finish)\n\tgetPointer(self):ComputeAsync(getPointer(start), getPointer(finish))\nend\nfunction abi.ffi.event_path_blocked_on_blocked(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Blocked:Connect(function(blocked_waypoint_idx)\n\t\tinvokeFunction(callback_data, callback_vtable, blocked_waypoint_idx)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_path_unblocked_on_unblocked(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Unblocked:Connect(function(unblocked_waypoint_idx)\n\t\tinvokeFunction(callback_data, callback_vtable, unblocked_waypoint_idx)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_pathfinding_link_attachment_0(self)\n\tlocal result_0 = getPointer(self).Attachment0;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_pathfinding_link_attachment_0_set_attachment_0(self, value)\n\tgetPointer(self).Attachment0 = getPointer(value);\nend\nfunction abi.ffi.property_getter_pathfinding_link_attachment_1(self)\n\tlocal result_0 = getPointer(self).Attachment1;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_pathfinding_link_attachment_1_set_attachment_1(self, value)\n\tgetPointer(self).Attachment1 = getPointer(value);\nend\nfunction abi.ffi.property_getter_pathfinding_link_is_bidirectional(self)\n\tlocal result_0 = getPointer(self).IsBidirectional;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_pathfinding_link_is_bidirectional_set_is_bidirectional(self, value)\n\tgetPointer(self).IsBidirectional = value == 1;\nend\nfunction abi.ffi.property_getter_pathfinding_link_label(self)\n\tlocal result_0 = getPointer(self).Label;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_pathfinding_link_label_set_label(self, value_addr, value_len)\n\tgetPointer(self).Label = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_pathfinding_modifier_label(self)\n\tlocal result_0 = getPointer(self).Label;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_pathfinding_modifier_label_set_label(self, value_addr, value_len)\n\tgetPointer(self).Label = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_pathfinding_modifier_pass_through(self)\n\tlocal result_0 = getPointer(self).PassThrough;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_pathfinding_modifier_pass_through_set_pass_through(self, value)\n\tgetPointer(self).PassThrough = value == 1;\nend\nfunction abi.ffi.method_pathfinding_service_find_path_async(self, start, finish)\n\tlocal result_0 = getPointer(self):FindPathAsync(getPointer(start), getPointer(finish));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_physics_service_collision_group_contains_part(self, name_addr, name_len, part)\n\tlocal result_0 = getPointer(self):CollisionGroupContainsPart(loadString(memory, name_addr, name_len), getPointer(part));\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_physics_service_collision_group_set_collidable(self, name_1_addr, name_1_len, name_2_addr, name_2_len, collidable)\n\tgetPointer(self):CollisionGroupSetCollidable(loadString(memory, name_1_addr, name_1_len), loadString(memory, name_2_addr, name_2_len), collidable == 1)\nend\nfunction abi.ffi.method_physics_service_collision_groups_are_collidable(self, name_1_addr, name_1_len, name_2_addr, name_2_len)\n\tlocal result_0 = getPointer(self):CollisionGroupsAreCollidable(loadString(memory, name_1_addr, name_1_len), loadString(memory, name_2_addr, name_2_len));\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_physics_service_create_collision_group(self, name_addr, name_len)\n\tlocal result_0 = getPointer(self):CreateCollisionGroup(loadString(memory, name_addr, name_len));\n\treturn result_0;\nend\nfunction abi.ffi.method_physics_service_get_collision_group_id(self, name_addr, name_len)\n\tlocal result_0 = getPointer(self):GetCollisionGroupId(loadString(memory, name_addr, name_len));\n\treturn result_0;\nend\nfunction abi.ffi.method_physics_service_get_collision_group_name(self, name)\n\tlocal result_0 = getPointer(self):GetCollisionGroupName(name);\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.method_physics_service_get_max_collision_groups(self)\n\tlocal result_0 = getPointer(self):GetMaxCollisionGroups();\n\treturn result_0;\nend\nfunction abi.ffi.method_physics_service_is_collision_group_registered(self, name_addr, name_len)\n\tlocal result_0 = getPointer(self):IsCollisionGroupRegistered(loadString(memory, name_addr, name_len));\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_physics_service_register_collision_group(self, name_addr, name_len)\n\tgetPointer(self):RegisterCollisionGroup(loadString(memory, name_addr, name_len))\nend\nfunction abi.ffi.method_physics_service_remove_collision_group(self, name_addr, name_len)\n\tgetPointer(self):RemoveCollisionGroup(loadString(memory, name_addr, name_len))\nend\nfunction abi.ffi.method_physics_service_rename_collision_group(self, from_addr, from_len, to_addr, to_len)\n\tgetPointer(self):RenameCollisionGroup(loadString(memory, from_addr, from_len), loadString(memory, to_addr, to_len))\nend\nfunction abi.ffi.method_physics_service_set_part_collision_group(self, part, name_addr, name_len)\n\tgetPointer(self):SetPartCollisionGroup(getPointer(part), loadString(memory, name_addr, name_len))\nend\nfunction abi.ffi.method_physics_service_unregister_collision_group(self, name_addr, name_len)\n\tgetPointer(self):UnregisterCollisionGroup(loadString(memory, name_addr, name_len))\nend\nfunction abi.ffi.property_getter_player_account_age(self)\n\tlocal result_0 = getPointer(self).AccountAge;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_player_auto_jump_enabled(self)\n\tlocal result_0 = getPointer(self).AutoJumpEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_player_auto_jump_enabled_set_auto_jump_enabled(self, value)\n\tgetPointer(self).AutoJumpEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_player_camera_max_zoom_distance(self)\n\tlocal result_0 = getPointer(self).CameraMaxZoomDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_player_camera_max_zoom_distance_set_camera_max_zoom_distance(self, value)\n\tgetPointer(self).CameraMaxZoomDistance = value;\nend\nfunction abi.ffi.property_getter_player_camera_min_zoom_distance(self)\n\tlocal result_0 = getPointer(self).CameraMinZoomDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_player_camera_min_zoom_distance_set_camera_min_zoom_distance(self, value)\n\tgetPointer(self).CameraMinZoomDistance = value;\nend\nfunction abi.ffi.property_getter_player_camera_mode(self)\n\tlocal result_0 = getPointer(self).CameraMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_player_camera_mode_set_camera_mode(self, value)\n\tgetPointer(self).CameraMode = value;\nend\nfunction abi.ffi.property_getter_player_can_load_character_appearance(self)\n\tlocal result_0 = getPointer(self).CanLoadCharacterAppearance;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_player_can_load_character_appearance_set_can_load_character_appearance(self, value)\n\tgetPointer(self).CanLoadCharacterAppearance = value == 1;\nend\nfunction abi.ffi.property_getter_player_character(self)\n\tlocal result_0 = getPointer(self).Character;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_player_character_set_character(self, value)\n\tgetPointer(self).Character = getPointer(value);\nend\nfunction abi.ffi.property_getter_player_character_appearance_id(self)\n\tlocal result_0 = getPointer(self).CharacterAppearanceId;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_player_character_appearance_id_set_character_appearance_id(self, value)\n\tgetPointer(self).CharacterAppearanceId = value;\nend\nfunction abi.ffi.property_getter_player_dev_camera_occlusion_mode(self)\n\tlocal result_0 = getPointer(self).DevCameraOcclusionMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_player_dev_camera_occlusion_mode_set_dev_camera_occlusion_mode(self, value)\n\tgetPointer(self).DevCameraOcclusionMode = value;\nend\nfunction abi.ffi.property_getter_player_dev_computer_camera_mode(self)\n\tlocal result_0 = getPointer(self).DevComputerCameraMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_player_dev_computer_camera_mode_set_dev_computer_camera_mode(self, value)\n\tgetPointer(self).DevComputerCameraMode = value;\nend\nfunction abi.ffi.property_getter_player_dev_computer_movement_mode(self)\n\tlocal result_0 = getPointer(self).DevComputerMovementMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_player_dev_computer_movement_mode_set_dev_computer_movement_mode(self, value)\n\tgetPointer(self).DevComputerMovementMode = value;\nend\nfunction abi.ffi.property_getter_player_dev_enable_mouse_lock(self)\n\tlocal result_0 = getPointer(self).DevEnableMouseLock;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_player_dev_enable_mouse_lock_set_dev_enable_mouse_lock(self, value)\n\tgetPointer(self).DevEnableMouseLock = value == 1;\nend\nfunction abi.ffi.property_getter_player_dev_touch_camera_mode(self)\n\tlocal result_0 = getPointer(self).DevTouchCameraMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_player_dev_touch_camera_mode_set_dev_touch_camera_mode(self, value)\n\tgetPointer(self).DevTouchCameraMode = value;\nend\nfunction abi.ffi.property_getter_player_dev_touch_movement_mode(self)\n\tlocal result_0 = getPointer(self).DevTouchMovementMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_player_dev_touch_movement_mode_set_dev_touch_movement_mode(self, value)\n\tgetPointer(self).DevTouchMovementMode = value;\nend\nfunction abi.ffi.property_getter_player_display_name(self)\n\tlocal result_0 = getPointer(self).DisplayName;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_player_display_name_set_display_name(self, value_addr, value_len)\n\tgetPointer(self).DisplayName = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_player_follow_user_id(self)\n\tlocal result_0 = getPointer(self).FollowUserId;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_player_gameplay_paused(self)\n\tlocal result_0 = getPointer(self).GameplayPaused;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_player_gameplay_paused_set_gameplay_paused(self, value)\n\tgetPointer(self).GameplayPaused = value == 1;\nend\nfunction abi.ffi.property_getter_player_health_display_distance(self)\n\tlocal result_0 = getPointer(self).HealthDisplayDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_player_health_display_distance_set_health_display_distance(self, value)\n\tgetPointer(self).HealthDisplayDistance = value;\nend\nfunction abi.ffi.property_getter_player_locale_id(self)\n\tlocal result_0 = getPointer(self).LocaleId;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_player_membership_type(self)\n\tlocal result_0 = getPointer(self).MembershipType;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_player_name_display_distance(self)\n\tlocal result_0 = getPointer(self).NameDisplayDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_player_name_display_distance_set_name_display_distance(self, value)\n\tgetPointer(self).NameDisplayDistance = value;\nend\nfunction abi.ffi.property_getter_player_neutral(self)\n\tlocal result_0 = getPointer(self).Neutral;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_player_neutral_set_neutral(self, value)\n\tgetPointer(self).Neutral = value == 1;\nend\nfunction abi.ffi.property_getter_player_replication_focus(self)\n\tlocal result_0 = getPointer(self).ReplicationFocus;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_player_replication_focus_set_replication_focus(self, value)\n\tgetPointer(self).ReplicationFocus = getPointer(value);\nend\nfunction abi.ffi.property_getter_player_respawn_location(self)\n\tlocal result_0 = getPointer(self).RespawnLocation;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_player_respawn_location_set_respawn_location(self, value)\n\tgetPointer(self).RespawnLocation = getPointer(value);\nend\nfunction abi.ffi.property_getter_player_team(self)\n\tlocal result_0 = getPointer(self).Team;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_player_team_set_team(self, value)\n\tgetPointer(self).Team = getPointer(value);\nend\nfunction abi.ffi.property_getter_player_team_color(self)\n\tlocal result_0 = getPointer(self).TeamColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_player_team_color_set_team_color(self, value)\n\tgetPointer(self).TeamColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_player_user_id(self)\n\tlocal result_0 = getPointer(self).UserId;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_player_user_id_set_user_id(self, value)\n\tgetPointer(self).UserId = value;\nend\nfunction abi.ffi.method_player_clear_character_appearance(self)\n\tgetPointer(self):ClearCharacterAppearance()\nend\nfunction abi.ffi.method_player_distance_from_character(self, point)\n\tlocal result_0 = getPointer(self):DistanceFromCharacter(getPointer(point));\n\treturn result_0;\nend\nfunction abi.ffi.method_player_get_mouse(self)\n\tlocal result_0 = getPointer(self):GetMouse();\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_player_get_network_ping(self)\n\tlocal result_0 = getPointer(self):GetNetworkPing();\n\treturn result_0;\nend\nfunction abi.ffi.method_player_has_appearance_loaded(self)\n\tlocal result_0 = getPointer(self):HasAppearanceLoaded();\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_player_kick(self, message_addr, message_len)\n\tgetPointer(self):Kick(loadString(memory, message_addr, message_len))\nend\nfunction abi.ffi.method_player_move(self, walk_direction, relative_to_camera)\n\tgetPointer(self):Move(getPointer(walk_direction), relative_to_camera == 1)\nend\nfunction abi.ffi.method_player_get_rank_in_group(self, group_id)\n\tlocal result_0 = getPointer(self):GetRankInGroup(group_id);\n\treturn result_0;\nend\nfunction abi.ffi.method_player_get_role_in_group(self, group_id)\n\tlocal result_0 = getPointer(self):GetRoleInGroup(group_id);\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.method_player_is_friends_with(self, user_id)\n\tlocal result_0 = getPointer(self):IsFriendsWith(user_id);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_player_is_in_group(self, group_id)\n\tlocal result_0 = getPointer(self):IsInGroup(group_id);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_player_load_character(self)\n\tgetPointer(self):LoadCharacter()\nend\nfunction abi.ffi.method_player_load_character_with_humanoid_description(self, humanoid_description)\n\tgetPointer(self):LoadCharacterWithHumanoidDescription(getPointer(humanoid_description))\nend\nfunction abi.ffi.method_player_request_stream_around_async(self, position, time_out)\n\tgetPointer(self):RequestStreamAroundAsync(getPointer(position), time_out)\nend\nfunction abi.ffi.event_player_character_added_on_character_added(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).CharacterAdded:Connect(function(character)\n\t\tlocal character_optional, character_optional_0 = 0, 0;\n\t\tif (character ~= nil) then\n\t\t\tcharacter_optional, character_optional_0 = 1, createPointer(character);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, character_optional, character_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_player_character_appearance_loaded_on_character_appearance_loaded(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).CharacterAppearanceLoaded:Connect(function(character)\n\t\tlocal character_optional, character_optional_0 = 0, 0;\n\t\tif (character ~= nil) then\n\t\t\tcharacter_optional, character_optional_0 = 1, createPointer(character);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, character_optional, character_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_player_character_removing_on_character_removing(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).CharacterRemoving:Connect(function(character)\n\t\tlocal character_optional, character_optional_0 = 0, 0;\n\t\tif (character ~= nil) then\n\t\t\tcharacter_optional, character_optional_0 = 1, createPointer(character);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, character_optional, character_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_player_chatted_on_chatted(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Chatted:Connect(function(message, recipient)\n\t\tlocal message_len = #message;\n\t\tlocal message_content = allocString(message_len);\n\t\tfor i = 1, message_len do\n\t\t\tstoreU8(memory, message_content + (i - 1), string.byte(message:sub(i, i)));\n\t\tend\n\t\tlocal recipient_optional, recipient_optional_0 = 0, 0;\n\t\tif (recipient ~= nil) then\n\t\t\trecipient_optional, recipient_optional_0 = 1, createPointer(recipient);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, message_content, message_len, recipient_optional, recipient_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_player_idled_on_idled(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Idled:Connect(function(time)\n\t\tinvokeFunction(callback_data, callback_vtable, time)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_player_on_teleport_on_on_teleport(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).OnTeleport:Connect(function(teleport_state, place_id, spawn_name)\n\t\tlocal spawn_name_len = #spawn_name;\n\t\tlocal spawn_name_content = allocString(spawn_name_len);\n\t\tfor i = 1, spawn_name_len do\n\t\t\tstoreU8(memory, spawn_name_content + (i - 1), string.byte(spawn_name:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, teleport_state, place_id, spawn_name_content, spawn_name_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_player_scripts_clear_computer_camera_movement_modes(self)\n\tgetPointer(self):ClearComputerCameraMovementModes()\nend\nfunction abi.ffi.method_player_scripts_clear_computer_movement_modes(self)\n\tgetPointer(self):ClearComputerMovementModes()\nend\nfunction abi.ffi.method_player_scripts_clear_touch_camera_movement_modes(self)\n\tgetPointer(self):ClearTouchCameraMovementModes()\nend\nfunction abi.ffi.method_player_scripts_clear_touch_movement_modes(self)\n\tgetPointer(self):ClearTouchMovementModes()\nend\nfunction abi.ffi.method_player_scripts_register_computer_camera_movement_mode(self, camera_movement_mode)\n\tgetPointer(self):RegisterComputerCameraMovementMode(camera_movement_mode)\nend\nfunction abi.ffi.method_player_scripts_register_computer_movement_mode(self, movement_mode)\n\tgetPointer(self):RegisterComputerMovementMode(movement_mode)\nend\nfunction abi.ffi.method_player_scripts_register_touch_camera_movement_mode(self, camera_movement_mode)\n\tgetPointer(self):RegisterTouchCameraMovementMode(camera_movement_mode)\nend\nfunction abi.ffi.method_player_scripts_register_touch_movement_mode(self, movement_mode)\n\tgetPointer(self):RegisterTouchMovementMode(movement_mode)\nend\nfunction abi.ffi.property_getter_players_bubble_chat(self)\n\tlocal result_0 = getPointer(self).BubbleChat;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_players_character_auto_loads(self)\n\tlocal result_0 = getPointer(self).CharacterAutoLoads;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_players_character_auto_loads_set_character_auto_loads(self, value)\n\tgetPointer(self).CharacterAutoLoads = value == 1;\nend\nfunction abi.ffi.property_getter_players_classic_chat(self)\n\tlocal result_0 = getPointer(self).ClassicChat;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_players_local_player(self)\n\tlocal result_0 = getPointer(self).LocalPlayer;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_getter_players_max_players(self)\n\tlocal result_0 = getPointer(self).MaxPlayers;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_players_preferred_players(self)\n\tlocal result_0 = getPointer(self).PreferredPlayers;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_players_respawn_time(self)\n\tlocal result_0 = getPointer(self).RespawnTime;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_players_respawn_time_set_respawn_time(self, value)\n\tgetPointer(self).RespawnTime = value;\nend\nfunction abi.ffi.method_players_get_player_by_user_id(self, user_id)\n\tlocal result_0 = getPointer(self):GetPlayerByUserId(user_id);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_players_get_player_from_character(self, character)\n\tlocal result_0 = getPointer(self):GetPlayerFromCharacter(getPointer(character));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_players_create_humanoid_model_from_description(self, description, rig_type, asset_type_verification)\n\tlocal result_0 = getPointer(self):CreateHumanoidModelFromDescription(getPointer(description), rig_type, asset_type_verification);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_players_create_humanoid_model_from_user_id(self, user_id)\n\tlocal result_0 = getPointer(self):CreateHumanoidModelFromUserId(user_id);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_players_get_friends_async(self, user_id)\n\tlocal result_0 = getPointer(self):GetFriendsAsync(user_id);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_players_get_humanoid_description_from_outfit_id(self, outfit_id)\n\tlocal result_0 = getPointer(self):GetHumanoidDescriptionFromOutfitId(outfit_id);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_players_get_humanoid_description_from_user_id(self, user_id)\n\tlocal result_0 = getPointer(self):GetHumanoidDescriptionFromUserId(user_id);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_players_get_name_from_user_id_async(self, user_id)\n\tlocal result_0 = getPointer(self):GetNameFromUserIdAsync(user_id);\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.method_players_get_user_id_from_name_async(self, user_name_addr, user_name_len)\n\tlocal result_0 = getPointer(self):GetUserIdFromNameAsync(loadString(memory, user_name_addr, user_name_len));\n\treturn result_0;\nend\nfunction abi.ffi.event_players_player_added_on_player_added(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PlayerAdded:Connect(function(player)\n\t\tlocal player_optional, player_optional_0 = 0, 0;\n\t\tif (player ~= nil) then\n\t\t\tplayer_optional, player_optional_0 = 1, createPointer(player);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_optional, player_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_players_player_membership_changed_on_player_membership_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PlayerMembershipChanged:Connect(function(player)\n\t\tlocal player_optional, player_optional_0 = 0, 0;\n\t\tif (player ~= nil) then\n\t\t\tplayer_optional, player_optional_0 = 1, createPointer(player);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_optional, player_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_players_player_removing_on_player_removing(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PlayerRemoving:Connect(function(player)\n\t\tlocal player_optional, player_optional_0 = 0, 0;\n\t\tif (player ~= nil) then\n\t\t\tplayer_optional, player_optional_0 = 1, createPointer(player);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_optional, player_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_pose_base_easing_direction(self)\n\tlocal result_0 = getPointer(self).EasingDirection;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_pose_base_easing_direction_set_easing_direction(self, value)\n\tgetPointer(self).EasingDirection = value;\nend\nfunction abi.ffi.property_getter_pose_base_easing_style(self)\n\tlocal result_0 = getPointer(self).EasingStyle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_pose_base_easing_style_set_easing_style(self, value)\n\tgetPointer(self).EasingStyle = value;\nend\nfunction abi.ffi.property_getter_pose_base_weight(self)\n\tlocal result_0 = getPointer(self).Weight;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_pose_base_weight_set_weight(self, value)\n\tgetPointer(self).Weight = value;\nend\nfunction abi.ffi.property_getter_number_pose_value(self)\n\tlocal result_0 = getPointer(self).Value;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_number_pose_value_set_value(self, value)\n\tgetPointer(self).Value = value;\nend\nfunction abi.ffi.property_getter_pose_c_frame(self)\n\tlocal result_0 = getPointer(self).CFrame;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_pose_c_frame_set_c_frame(self, value)\n\tgetPointer(self).CFrame = getPointer(value);\nend\nfunction abi.ffi.method_pose_add_sub_pose(self, pose)\n\tgetPointer(self):AddSubPose(getPointer(pose))\nend\nfunction abi.ffi.method_pose_remove_sub_pose(self, pose)\n\tgetPointer(self):RemoveSubPose(getPointer(pose))\nend\nfunction abi.ffi.property_getter_post_effect_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_post_effect_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_bloom_effect_intensity(self)\n\tlocal result_0 = getPointer(self).Intensity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_bloom_effect_intensity_set_intensity(self, value)\n\tgetPointer(self).Intensity = value;\nend\nfunction abi.ffi.property_getter_bloom_effect_size(self)\n\tlocal result_0 = getPointer(self).Size;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_bloom_effect_size_set_size(self, value)\n\tgetPointer(self).Size = value;\nend\nfunction abi.ffi.property_getter_bloom_effect_threshold(self)\n\tlocal result_0 = getPointer(self).Threshold;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_bloom_effect_threshold_set_threshold(self, value)\n\tgetPointer(self).Threshold = value;\nend\nfunction abi.ffi.property_getter_blur_effect_size(self)\n\tlocal result_0 = getPointer(self).Size;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_blur_effect_size_set_size(self, value)\n\tgetPointer(self).Size = value;\nend\nfunction abi.ffi.property_getter_color_correction_effect_brightness(self)\n\tlocal result_0 = getPointer(self).Brightness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_color_correction_effect_brightness_set_brightness(self, value)\n\tgetPointer(self).Brightness = value;\nend\nfunction abi.ffi.property_getter_color_correction_effect_contrast(self)\n\tlocal result_0 = getPointer(self).Contrast;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_color_correction_effect_contrast_set_contrast(self, value)\n\tgetPointer(self).Contrast = value;\nend\nfunction abi.ffi.property_getter_color_correction_effect_saturation(self)\n\tlocal result_0 = getPointer(self).Saturation;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_color_correction_effect_saturation_set_saturation(self, value)\n\tgetPointer(self).Saturation = value;\nend\nfunction abi.ffi.property_getter_color_correction_effect_tint_color(self)\n\tlocal result_0 = getPointer(self).TintColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_color_correction_effect_tint_color_set_tint_color(self, value)\n\tgetPointer(self).TintColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_depth_of_field_effect_far_intensity(self)\n\tlocal result_0 = getPointer(self).FarIntensity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_depth_of_field_effect_far_intensity_set_far_intensity(self, value)\n\tgetPointer(self).FarIntensity = value;\nend\nfunction abi.ffi.property_getter_depth_of_field_effect_focus_distance(self)\n\tlocal result_0 = getPointer(self).FocusDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_depth_of_field_effect_focus_distance_set_focus_distance(self, value)\n\tgetPointer(self).FocusDistance = value;\nend\nfunction abi.ffi.property_getter_depth_of_field_effect_in_focus_radius(self)\n\tlocal result_0 = getPointer(self).InFocusRadius;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_depth_of_field_effect_in_focus_radius_set_in_focus_radius(self, value)\n\tgetPointer(self).InFocusRadius = value;\nend\nfunction abi.ffi.property_getter_depth_of_field_effect_near_intensity(self)\n\tlocal result_0 = getPointer(self).NearIntensity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_depth_of_field_effect_near_intensity_set_near_intensity(self, value)\n\tgetPointer(self).NearIntensity = value;\nend\nfunction abi.ffi.property_getter_sun_rays_effect_intensity(self)\n\tlocal result_0 = getPointer(self).Intensity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sun_rays_effect_intensity_set_intensity(self, value)\n\tgetPointer(self).Intensity = value;\nend\nfunction abi.ffi.property_getter_sun_rays_effect_spread(self)\n\tlocal result_0 = getPointer(self).Spread;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sun_rays_effect_spread_set_spread(self, value)\n\tgetPointer(self).Spread = value;\nend\nfunction abi.ffi.property_getter_proximity_prompt_action_text(self)\n\tlocal result_0 = getPointer(self).ActionText;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_proximity_prompt_action_text_set_action_text(self, value_addr, value_len)\n\tgetPointer(self).ActionText = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_proximity_prompt_auto_localize(self)\n\tlocal result_0 = getPointer(self).AutoLocalize;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_proximity_prompt_auto_localize_set_auto_localize(self, value)\n\tgetPointer(self).AutoLocalize = value == 1;\nend\nfunction abi.ffi.property_getter_proximity_prompt_clickable_prompt(self)\n\tlocal result_0 = getPointer(self).ClickablePrompt;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_proximity_prompt_clickable_prompt_set_clickable_prompt(self, value)\n\tgetPointer(self).ClickablePrompt = value == 1;\nend\nfunction abi.ffi.property_getter_proximity_prompt_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_proximity_prompt_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_proximity_prompt_exclusivity(self)\n\tlocal result_0 = getPointer(self).Exclusivity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_proximity_prompt_exclusivity_set_exclusivity(self, value)\n\tgetPointer(self).Exclusivity = value;\nend\nfunction abi.ffi.property_getter_proximity_prompt_gamepad_key_code(self)\n\tlocal result_0 = getPointer(self).GamepadKeyCode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_proximity_prompt_gamepad_key_code_set_gamepad_key_code(self, value)\n\tgetPointer(self).GamepadKeyCode = value;\nend\nfunction abi.ffi.property_getter_proximity_prompt_hold_duration(self)\n\tlocal result_0 = getPointer(self).HoldDuration;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_proximity_prompt_hold_duration_set_hold_duration(self, value)\n\tgetPointer(self).HoldDuration = value;\nend\nfunction abi.ffi.property_getter_proximity_prompt_keyboard_key_code(self)\n\tlocal result_0 = getPointer(self).KeyboardKeyCode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_proximity_prompt_keyboard_key_code_set_keyboard_key_code(self, value)\n\tgetPointer(self).KeyboardKeyCode = value;\nend\nfunction abi.ffi.property_getter_proximity_prompt_max_activation_distance(self)\n\tlocal result_0 = getPointer(self).MaxActivationDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_proximity_prompt_max_activation_distance_set_max_activation_distance(self, value)\n\tgetPointer(self).MaxActivationDistance = value;\nend\nfunction abi.ffi.property_getter_proximity_prompt_object_text(self)\n\tlocal result_0 = getPointer(self).ObjectText;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_proximity_prompt_object_text_set_object_text(self, value_addr, value_len)\n\tgetPointer(self).ObjectText = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_proximity_prompt_requires_line_of_sight(self)\n\tlocal result_0 = getPointer(self).RequiresLineOfSight;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_proximity_prompt_requires_line_of_sight_set_requires_line_of_sight(self, value)\n\tgetPointer(self).RequiresLineOfSight = value == 1;\nend\nfunction abi.ffi.property_getter_proximity_prompt_root_localization_table(self)\n\tlocal result_0 = getPointer(self).RootLocalizationTable;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_proximity_prompt_root_localization_table_set_root_localization_table(self, value)\n\tgetPointer(self).RootLocalizationTable = getPointer(value);\nend\nfunction abi.ffi.property_getter_proximity_prompt_style(self)\n\tlocal result_0 = getPointer(self).Style;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_proximity_prompt_style_set_style(self, value)\n\tgetPointer(self).Style = value;\nend\nfunction abi.ffi.property_getter_proximity_prompt_ui_offset(self)\n\tlocal result_0 = getPointer(self).UIOffset;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_proximity_prompt_ui_offset_set_ui_offset(self, value)\n\tgetPointer(self).UIOffset = getPointer(value);\nend\nfunction abi.ffi.method_proximity_prompt_input_hold_begin(self)\n\tgetPointer(self):InputHoldBegin()\nend\nfunction abi.ffi.method_proximity_prompt_input_hold_end(self)\n\tgetPointer(self):InputHoldEnd()\nend\nfunction abi.ffi.event_proximity_prompt_prompt_button_hold_began_on_prompt_button_hold_began(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptButtonHoldBegan:Connect(function(player_who_triggered)\n\t\tlocal player_who_triggered_optional, player_who_triggered_optional_0 = 0, 0;\n\t\tif (player_who_triggered ~= nil) then\n\t\t\tplayer_who_triggered_optional, player_who_triggered_optional_0 = 1, createPointer(player_who_triggered);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_who_triggered_optional, player_who_triggered_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_proximity_prompt_prompt_button_hold_ended_on_prompt_button_hold_ended(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptButtonHoldEnded:Connect(function(player_who_triggered)\n\t\tlocal player_who_triggered_optional, player_who_triggered_optional_0 = 0, 0;\n\t\tif (player_who_triggered ~= nil) then\n\t\t\tplayer_who_triggered_optional, player_who_triggered_optional_0 = 1, createPointer(player_who_triggered);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_who_triggered_optional, player_who_triggered_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_proximity_prompt_prompt_hidden_on_prompt_hidden(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptHidden:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_proximity_prompt_prompt_shown_on_prompt_shown(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptShown:Connect(function(input_type)\n\t\tinvokeFunction(callback_data, callback_vtable, input_type)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_proximity_prompt_trigger_ended_on_trigger_ended(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).TriggerEnded:Connect(function(player_who_triggered)\n\t\tlocal player_who_triggered_optional, player_who_triggered_optional_0 = 0, 0;\n\t\tif (player_who_triggered ~= nil) then\n\t\t\tplayer_who_triggered_optional, player_who_triggered_optional_0 = 1, createPointer(player_who_triggered);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_who_triggered_optional, player_who_triggered_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_proximity_prompt_triggered_on_triggered(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Triggered:Connect(function(player_who_triggered)\n\t\tlocal player_who_triggered_optional, player_who_triggered_optional_0 = 0, 0;\n\t\tif (player_who_triggered ~= nil) then\n\t\t\tplayer_who_triggered_optional, player_who_triggered_optional_0 = 1, createPointer(player_who_triggered);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_who_triggered_optional, player_who_triggered_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_proximity_prompt_service_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_proximity_prompt_service_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_proximity_prompt_service_max_prompts_visible(self)\n\tlocal result_0 = getPointer(self).MaxPromptsVisible;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_proximity_prompt_service_max_prompts_visible_set_max_prompts_visible(self, value)\n\tgetPointer(self).MaxPromptsVisible = value;\nend\nfunction abi.ffi.event_proximity_prompt_service_prompt_button_hold_began_on_prompt_button_hold_began(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptButtonHoldBegan:Connect(function(prompt, player_who_triggered)\n\t\tlocal prompt_optional, prompt_optional_0 = 0, 0;\n\t\tif (prompt ~= nil) then\n\t\t\tprompt_optional, prompt_optional_0 = 1, createPointer(prompt);\n\t\tend\n\t\tlocal player_who_triggered_optional, player_who_triggered_optional_0 = 0, 0;\n\t\tif (player_who_triggered ~= nil) then\n\t\t\tplayer_who_triggered_optional, player_who_triggered_optional_0 = 1, createPointer(player_who_triggered);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, prompt_optional, prompt_optional_0, player_who_triggered_optional, player_who_triggered_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_proximity_prompt_service_prompt_button_hold_ended_on_prompt_button_hold_ended(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptButtonHoldEnded:Connect(function(prompt, player_who_triggered)\n\t\tlocal prompt_optional, prompt_optional_0 = 0, 0;\n\t\tif (prompt ~= nil) then\n\t\t\tprompt_optional, prompt_optional_0 = 1, createPointer(prompt);\n\t\tend\n\t\tlocal player_who_triggered_optional, player_who_triggered_optional_0 = 0, 0;\n\t\tif (player_who_triggered ~= nil) then\n\t\t\tplayer_who_triggered_optional, player_who_triggered_optional_0 = 1, createPointer(player_who_triggered);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, prompt_optional, prompt_optional_0, player_who_triggered_optional, player_who_triggered_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_proximity_prompt_service_prompt_hidden_on_prompt_hidden(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptHidden:Connect(function(prompt)\n\t\tlocal prompt_optional, prompt_optional_0 = 0, 0;\n\t\tif (prompt ~= nil) then\n\t\t\tprompt_optional, prompt_optional_0 = 1, createPointer(prompt);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, prompt_optional, prompt_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_proximity_prompt_service_prompt_shown_on_prompt_shown(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptShown:Connect(function(prompt, input_type)\n\t\tlocal prompt_optional, prompt_optional_0 = 0, 0;\n\t\tif (prompt ~= nil) then\n\t\t\tprompt_optional, prompt_optional_0 = 1, createPointer(prompt);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, prompt_optional, prompt_optional_0, input_type)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_proximity_prompt_service_prompt_trigger_ended_on_prompt_trigger_ended(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptTriggerEnded:Connect(function(prompt, player_who_triggered)\n\t\tlocal prompt_optional, prompt_optional_0 = 0, 0;\n\t\tif (prompt ~= nil) then\n\t\t\tprompt_optional, prompt_optional_0 = 1, createPointer(prompt);\n\t\tend\n\t\tlocal player_who_triggered_optional, player_who_triggered_optional_0 = 0, 0;\n\t\tif (player_who_triggered ~= nil) then\n\t\t\tplayer_who_triggered_optional, player_who_triggered_optional_0 = 1, createPointer(player_who_triggered);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, prompt_optional, prompt_optional_0, player_who_triggered_optional, player_who_triggered_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_proximity_prompt_service_prompt_triggered_on_prompt_triggered(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PromptTriggered:Connect(function(prompt, player_who_triggered)\n\t\tlocal prompt_optional, prompt_optional_0 = 0, 0;\n\t\tif (prompt ~= nil) then\n\t\t\tprompt_optional, prompt_optional_0 = 1, createPointer(prompt);\n\t\tend\n\t\tlocal player_who_triggered_optional, player_who_triggered_optional_0 = 0, 0;\n\t\tif (player_who_triggered ~= nil) then\n\t\t\tplayer_who_triggered_optional, player_who_triggered_optional_0 = 1, createPointer(player_who_triggered);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, prompt_optional, prompt_optional_0, player_who_triggered_optional, player_who_triggered_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_remote_event_on_server_event(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).OnServerEvent:Connect(function(player, ...)\n\t\tlocal values_tuple = { ... };\n\t\tlocal values_len = select("#", ...);\n\t\tlocal values_tuple_vec = allocVec(values_len * 4)\n\t\tfor i = 1, values_len do\n\t\t\tlocal values_tuple_vec_value = values_tuple[i];\n\t\t\tstoreU32(memory, values_tuple_vec + (i - 1) * 4 + 0, createPointer(values_tuple_vec_value));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, createPointer(player), values_tuple_vec, values_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_remote_event_on_client_event(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).OnClientEvent:Connect(function(...)\n\t\tlocal values_tuple = { ... };\n\t\tlocal values_len = select("#", ...);\n\t\tlocal values_tuple_vec = allocVec(values_len * 4)\n\t\tfor i = 1, values_len do\n\t\t\tlocal values_tuple_vec_value = values_tuple[i];\n\t\t\tstoreU32(memory, values_tuple_vec + (i - 1) * 4 + 0, createPointer(values_tuple_vec_value));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, values_tuple_vec, values_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_remote_event_fire_all_clients(self, values_addr, values_len)\n\tlocal values_vec = table.create(values_len);\n\tfor i = 1, values_len do\n\t\tlocal vecElement_0 = loadU32(memory, values_addr + (i - 1) * 4 + 0)\n\t\tvalues_vec[i] = getPointer(vecElement_0);\n\tend\n\tgetPointer(self):FireAllClients(unpack(values_vec, 1, values_len))\nend\nfunction abi.ffi.method_remote_event_fire_client(self, player, values_addr, values_len)\n\tlocal values_vec = table.create(values_len);\n\tfor i = 1, values_len do\n\t\tlocal vecElement_0 = loadU32(memory, values_addr + (i - 1) * 4 + 0)\n\t\tvalues_vec[i] = getPointer(vecElement_0);\n\tend\n\tgetPointer(self):FireClient(getPointer(player), unpack(values_vec, 1, values_len))\nend\nfunction abi.ffi.method_remote_event_fire_server(self, values_addr, values_len)\n\tlocal values_vec = table.create(values_len);\n\tfor i = 1, values_len do\n\t\tlocal vecElement_0 = loadU32(memory, values_addr + (i - 1) * 4 + 0)\n\t\tvalues_vec[i] = getPointer(vecElement_0);\n\tend\n\tgetPointer(self):FireServer(unpack(values_vec, 1, values_len))\nend\nfunction abi.ffi.callback_remote_function_on_server_invoke(self, callback_data, callback_vtable)\n\tgetPointer(self).OnServerInvoke = function(player, ...)\n\t\tlocal values_tuple = { ... };\n\t\tlocal values_len = select("#", ...);\n\t\tlocal values_tuple_vec = allocVec(values_len * 4)\n\t\tfor i = 1, values_len do\n\t\t\tlocal values_tuple_vec_value = values_tuple[i];\n\t\t\tstoreU32(memory, values_tuple_vec + (i - 1) * 4 + 0, createPointer(values_tuple_vec_value));\n\t\tend\n\t\tlocal result_0, result_1 = invokeFunction(callback_data, callback_vtable, createPointer(player), values_tuple_vec, values_len);\n\t\tlocal callback_vec = table.create(result_1);\n\t\tfor i = 1, result_1 do\n\t\t\tlocal vecElement_0 = loadU32(memory, result_0 + (i - 1) * 4 + 0)\n\t\t\tcallback_vec[i] = getPointer(vecElement_0);\n\t\tend\n\t\treturn unpack(callback_vec, 1, result_1);\n\tend;\nend\nfunction abi.ffi.callback_remote_function_on_client_invoke(self, callback_data, callback_vtable)\n\tgetPointer(self).OnClientInvoke = function(...)\n\t\tlocal values_tuple = { ... };\n\t\tlocal values_len = select("#", ...);\n\t\tlocal values_tuple_vec = allocVec(values_len * 4)\n\t\tfor i = 1, values_len do\n\t\t\tlocal values_tuple_vec_value = values_tuple[i];\n\t\t\tstoreU32(memory, values_tuple_vec + (i - 1) * 4 + 0, createPointer(values_tuple_vec_value));\n\t\tend\n\t\tlocal result_0, result_1 = invokeFunction(callback_data, callback_vtable, values_tuple_vec, values_len);\n\t\tlocal callback_vec = table.create(result_1);\n\t\tfor i = 1, result_1 do\n\t\t\tlocal vecElement_0 = loadU32(memory, result_0 + (i - 1) * 4 + 0)\n\t\t\tcallback_vec[i] = getPointer(vecElement_0);\n\t\tend\n\t\treturn unpack(callback_vec, 1, result_1);\n\tend;\nend\nfunction abi.ffi.method_remote_function_invoke_server(self, values_addr, values_len)\n\tlocal values_vec = table.create(values_len);\n\tfor i = 1, values_len do\n\t\tlocal vecElement_0 = loadU32(memory, values_addr + (i - 1) * 4 + 0)\n\t\tvalues_vec[i] = getPointer(vecElement_0);\n\tend\n\tlocal result_0 = { getPointer(self):InvokeServer(unpack(values_vec, 1, values_len)) }\n\tlocal result_0_len = #result_0;\n\tlocal result_0_vec = allocVec(result_0_len * 4)\n\tfor i = 1, result_0_len do\n\t\tlocal result_0_vec_value = result_0[i];\n\t\tstoreU32(memory, result_0_vec + (i - 1) * 4 + 0, createPointer(result_0_vec_value));\n\tend\n\treturn result_0_vec, result_0_len;\nend\nfunction abi.ffi.method_remote_function_invoke_client(self, player, values_addr, values_len)\n\tlocal values_vec = table.create(values_len);\n\tfor i = 1, values_len do\n\t\tlocal vecElement_0 = loadU32(memory, values_addr + (i - 1) * 4 + 0)\n\t\tvalues_vec[i] = getPointer(vecElement_0);\n\tend\n\tlocal result_0 = { getPointer(self):InvokeClient(getPointer(player), unpack(values_vec, 1, values_len)) }\n\tlocal result_0_len = #result_0;\n\tlocal result_0_vec = allocVec(result_0_len * 4)\n\tfor i = 1, result_0_len do\n\t\tlocal result_0_vec_value = result_0[i];\n\t\tstoreU32(memory, result_0_vec + (i - 1) * 4 + 0, createPointer(result_0_vec_value));\n\tend\n\treturn result_0_vec, result_0_len;\nend\nfunction abi.ffi.method_replicated_first_remove_default_loading_screen(self)\n\tgetPointer(self):RemoveDefaultLoadingScreen()\nend\nfunction abi.ffi.property_getter_rotation_curve_length(self)\n\tlocal result_0 = getPointer(self).Length;\n\treturn result_0;\nend\nfunction abi.ffi.method_rotation_curve_get_key_at_index(self, index)\n\tlocal result_0 = getPointer(self):GetKeyAtIndex(index);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_rotation_curve_get_value_at_time(self, time)\n\tlocal result_0 = getPointer(self):GetValueAtTime(time);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_rotation_curve_remove_key_at_index(self, starting_index, count)\n\tlocal result_0 = getPointer(self):RemoveKeyAtIndex(starting_index, count);\n\treturn result_0;\nend\nfunction abi.ffi.method_run_service_is_client(self)\n\tlocal result_0 = getPointer(self):IsClient();\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_run_service_is_run_mode(self)\n\tlocal result_0 = getPointer(self):IsRunMode();\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_run_service_is_running(self)\n\tlocal result_0 = getPointer(self):IsRunning();\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_run_service_is_server(self)\n\tlocal result_0 = getPointer(self):IsServer();\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_run_service_is_studio(self)\n\tlocal result_0 = getPointer(self):IsStudio();\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_run_service_unbind_from_render_step(self, name_addr, name_len)\n\tgetPointer(self):UnbindFromRenderStep(loadString(memory, name_addr, name_len))\nend\nfunction abi.ffi.event_run_service_heartbeat_on_heartbeat(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Heartbeat:Connect(function(delta_time)\n\t\tinvokeFunction(callback_data, callback_vtable, delta_time)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_run_service_post_simulation_on_post_simulation(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PostSimulation:Connect(function(delta_time_sim)\n\t\tinvokeFunction(callback_data, callback_vtable, delta_time_sim)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_run_service_pre_animation_on_pre_animation(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PreAnimation:Connect(function(delta_time_sim)\n\t\tinvokeFunction(callback_data, callback_vtable, delta_time_sim)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_run_service_pre_render_on_pre_render(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PreRender:Connect(function(delta_time_render)\n\t\tinvokeFunction(callback_data, callback_vtable, delta_time_render)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_run_service_pre_simulation_on_pre_simulation(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PreSimulation:Connect(function(delta_time_sim)\n\t\tinvokeFunction(callback_data, callback_vtable, delta_time_sim)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_run_service_render_stepped_on_render_stepped(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).RenderStepped:Connect(function(delta_time)\n\t\tinvokeFunction(callback_data, callback_vtable, delta_time)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_run_service_stepped_on_stepped(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Stepped:Connect(function(time, delta_time)\n\t\tinvokeFunction(callback_data, callback_vtable, time, delta_time)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_screenshot_hud_camera_button_icon(self)\n\tlocal result_0 = getPointer(self).CameraButtonIcon;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_screenshot_hud_camera_button_icon_set_camera_button_icon(self, value)\n\tgetPointer(self).CameraButtonIcon = getPointer(value);\nend\nfunction abi.ffi.property_getter_screenshot_hud_camera_button_position(self)\n\tlocal result_0 = getPointer(self).CameraButtonPosition;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_screenshot_hud_camera_button_position_set_camera_button_position(self, value)\n\tgetPointer(self).CameraButtonPosition = getPointer(value);\nend\nfunction abi.ffi.property_getter_screenshot_hud_close_button_position(self)\n\tlocal result_0 = getPointer(self).CloseButtonPosition;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_screenshot_hud_close_button_position_set_close_button_position(self, value)\n\tgetPointer(self).CloseButtonPosition = getPointer(value);\nend\nfunction abi.ffi.property_getter_screenshot_hud_close_when_screenshot_taken(self)\n\tlocal result_0 = getPointer(self).CloseWhenScreenshotTaken;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_screenshot_hud_close_when_screenshot_taken_set_close_when_screenshot_taken(self, value)\n\tgetPointer(self).CloseWhenScreenshotTaken = value == 1;\nend\nfunction abi.ffi.property_getter_screenshot_hud_experience_name_overlay_enabled(self)\n\tlocal result_0 = getPointer(self).ExperienceNameOverlayEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_screenshot_hud_experience_name_overlay_enabled_set_experience_name_overlay_enabled(self, value)\n\tgetPointer(self).ExperienceNameOverlayEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_screenshot_hud_overlay_font(self)\n\tlocal result_0 = getPointer(self).OverlayFont;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_screenshot_hud_overlay_font_set_overlay_font(self, value)\n\tgetPointer(self).OverlayFont = value;\nend\nfunction abi.ffi.property_getter_screenshot_hud_username_overlay_enabled(self)\n\tlocal result_0 = getPointer(self).UsernameOverlayEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_screenshot_hud_username_overlay_enabled_set_username_overlay_enabled(self, value)\n\tgetPointer(self).UsernameOverlayEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_screenshot_hud_visible(self)\n\tlocal result_0 = getPointer(self).Visible;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_screenshot_hud_visible_set_visible(self, value)\n\tgetPointer(self).Visible = value == 1;\nend\nfunction abi.ffi.event_script_context_error_on_error(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Error:Connect(function(message, stack_trace, script)\n\t\tlocal message_len = #message;\n\t\tlocal message_content = allocString(message_len);\n\t\tfor i = 1, message_len do\n\t\t\tstoreU8(memory, message_content + (i - 1), string.byte(message:sub(i, i)));\n\t\tend\n\t\tlocal stack_trace_len = #stack_trace;\n\t\tlocal stack_trace_content = allocString(stack_trace_len);\n\t\tfor i = 1, stack_trace_len do\n\t\t\tstoreU8(memory, stack_trace_content + (i - 1), string.byte(stack_trace:sub(i, i)));\n\t\tend\n\t\tlocal script_optional, script_optional_0 = 0, 0;\n\t\tif (script ~= nil) then\n\t\t\tscript_optional, script_optional_0 = 1, createPointer(script);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, message_content, message_len, stack_trace_content, stack_trace_len, script_optional, script_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_service_provider_find_service(self, class_name_addr, class_name_len)\n\tlocal result_0 = getPointer(self):FindService(loadString(memory, class_name_addr, class_name_len));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_service_provider_get_service(self, class_name_addr, class_name_len)\n\tlocal result_0 = getPointer(self):GetService(loadString(memory, class_name_addr, class_name_len));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.event_service_provider_close_on_close(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Close:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_service_provider_service_added_on_service_added(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).ServiceAdded:Connect(function(service)\n\t\tlocal service_optional, service_optional_0 = 0, 0;\n\t\tif (service ~= nil) then\n\t\t\tservice_optional, service_optional_0 = 1, createPointer(service);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, service_optional, service_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_service_provider_service_removing_on_service_removing(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).ServiceRemoving:Connect(function(service)\n\t\tlocal service_optional, service_optional_0 = 0, 0;\n\t\tif (service ~= nil) then\n\t\t\tservice_optional, service_optional_0 = 1, createPointer(service);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, service_optional, service_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_data_model_creator_id(self)\n\tlocal result_0 = getPointer(self).CreatorId;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_data_model_creator_type(self)\n\tlocal result_0 = getPointer(self).CreatorType;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_data_model_game_id(self)\n\tlocal result_0 = getPointer(self).GameId;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_data_model_genre(self)\n\tlocal result_0 = getPointer(self).Genre;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_data_model_job_id(self)\n\tlocal result_0 = getPointer(self).JobId;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_data_model_place_id(self)\n\tlocal result_0 = getPointer(self).PlaceId;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_data_model_place_version(self)\n\tlocal result_0 = getPointer(self).PlaceVersion;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_data_model_private_server_id(self)\n\tlocal result_0 = getPointer(self).PrivateServerId;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_data_model_private_server_owner_id(self)\n\tlocal result_0 = getPointer(self).PrivateServerOwnerId;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_data_model_workspace(self)\n\tlocal result_0 = getPointer(self).Workspace;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_data_model_is_loaded(self)\n\tlocal result_0 = getPointer(self):IsLoaded();\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.event_data_model_graphics_quality_change_request_on_graphics_quality_change_request(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).GraphicsQualityChangeRequest:Connect(function(better_quality)\n\t\tinvokeFunction(callback_data, callback_vtable, better_quality and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_data_model_loaded_on_loaded(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Loaded:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_user_settings_is_user_feature_enabled(self, name_addr, name_len)\n\tlocal result_0 = getPointer(self):IsUserFeatureEnabled(loadString(memory, name_addr, name_len));\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_user_settings_reset(self)\n\tgetPointer(self):Reset()\nend\nfunction abi.ffi.property_getter_sky_celestial_bodies_shown(self)\n\tlocal result_0 = getPointer(self).CelestialBodiesShown;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_sky_celestial_bodies_shown_set_celestial_bodies_shown(self, value)\n\tgetPointer(self).CelestialBodiesShown = value == 1;\nend\nfunction abi.ffi.property_getter_sky_moon_angular_size(self)\n\tlocal result_0 = getPointer(self).MoonAngularSize;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sky_moon_angular_size_set_moon_angular_size(self, value)\n\tgetPointer(self).MoonAngularSize = value;\nend\nfunction abi.ffi.property_getter_sky_moon_texture_id(self)\n\tlocal result_0 = getPointer(self).MoonTextureId;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_sky_moon_texture_id_set_moon_texture_id(self, value)\n\tgetPointer(self).MoonTextureId = getPointer(value);\nend\nfunction abi.ffi.property_getter_sky_skybox_bk(self)\n\tlocal result_0 = getPointer(self).SkyboxBk;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_sky_skybox_bk_set_skybox_bk(self, value)\n\tgetPointer(self).SkyboxBk = getPointer(value);\nend\nfunction abi.ffi.property_getter_sky_skybox_dn(self)\n\tlocal result_0 = getPointer(self).SkyboxDn;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_sky_skybox_dn_set_skybox_dn(self, value)\n\tgetPointer(self).SkyboxDn = getPointer(value);\nend\nfunction abi.ffi.property_getter_sky_skybox_ft(self)\n\tlocal result_0 = getPointer(self).SkyboxFt;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_sky_skybox_ft_set_skybox_ft(self, value)\n\tgetPointer(self).SkyboxFt = getPointer(value);\nend\nfunction abi.ffi.property_getter_sky_skybox_lf(self)\n\tlocal result_0 = getPointer(self).SkyboxLf;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_sky_skybox_lf_set_skybox_lf(self, value)\n\tgetPointer(self).SkyboxLf = getPointer(value);\nend\nfunction abi.ffi.property_getter_sky_skybox_rt(self)\n\tlocal result_0 = getPointer(self).SkyboxRt;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_sky_skybox_rt_set_skybox_rt(self, value)\n\tgetPointer(self).SkyboxRt = getPointer(value);\nend\nfunction abi.ffi.property_getter_sky_skybox_up(self)\n\tlocal result_0 = getPointer(self).SkyboxUp;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_sky_skybox_up_set_skybox_up(self, value)\n\tgetPointer(self).SkyboxUp = getPointer(value);\nend\nfunction abi.ffi.property_getter_sky_star_count(self)\n\tlocal result_0 = getPointer(self).StarCount;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sky_star_count_set_star_count(self, value)\n\tgetPointer(self).StarCount = value;\nend\nfunction abi.ffi.property_getter_sky_sun_angular_size(self)\n\tlocal result_0 = getPointer(self).SunAngularSize;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sky_sun_angular_size_set_sun_angular_size(self, value)\n\tgetPointer(self).SunAngularSize = value;\nend\nfunction abi.ffi.property_getter_sky_sun_texture_id(self)\n\tlocal result_0 = getPointer(self).SunTextureId;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_sky_sun_texture_id_set_sun_texture_id(self, value)\n\tgetPointer(self).SunTextureId = getPointer(value);\nend\nfunction abi.ffi.property_getter_smoke_color(self)\n\tlocal result_0 = getPointer(self).Color;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_smoke_color_set_color(self, value)\n\tgetPointer(self).Color = getPointer(value);\nend\nfunction abi.ffi.property_getter_smoke_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_smoke_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_smoke_opacity(self)\n\tlocal result_0 = getPointer(self).Opacity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_smoke_opacity_set_opacity(self, value)\n\tgetPointer(self).Opacity = value;\nend\nfunction abi.ffi.property_getter_smoke_rise_velocity(self)\n\tlocal result_0 = getPointer(self).RiseVelocity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_smoke_rise_velocity_set_rise_velocity(self, value)\n\tgetPointer(self).RiseVelocity = value;\nend\nfunction abi.ffi.property_getter_smoke_size(self)\n\tlocal result_0 = getPointer(self).Size;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_smoke_size_set_size(self, value)\n\tgetPointer(self).Size = value;\nend\nfunction abi.ffi.property_getter_smoke_time_scale(self)\n\tlocal result_0 = getPointer(self).TimeScale;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_smoke_time_scale_set_time_scale(self, value)\n\tgetPointer(self).TimeScale = value;\nend\nfunction abi.ffi.method_social_service_prompt_game_invite(self, player)\n\tgetPointer(self):PromptGameInvite(getPointer(player))\nend\nfunction abi.ffi.method_social_service_can_send_game_invite_async(self, player, recipient_id)\n\tlocal result_0 = getPointer(self):CanSendGameInviteAsync(getPointer(player), recipient_id);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_sound_is_loaded(self)\n\tlocal result_0 = getPointer(self).IsLoaded;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_sound_is_paused(self)\n\tlocal result_0 = getPointer(self).IsPaused;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_sound_is_playing(self)\n\tlocal result_0 = getPointer(self).IsPlaying;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_sound_loop_region(self)\n\tlocal result_0 = getPointer(self).LoopRegion;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_sound_loop_region_set_loop_region(self, value)\n\tgetPointer(self).LoopRegion = getPointer(value);\nend\nfunction abi.ffi.property_getter_sound_looped(self)\n\tlocal result_0 = getPointer(self).Looped;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_sound_looped_set_looped(self, value)\n\tgetPointer(self).Looped = value == 1;\nend\nfunction abi.ffi.property_getter_sound_play_on_remove(self)\n\tlocal result_0 = getPointer(self).PlayOnRemove;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_sound_play_on_remove_set_play_on_remove(self, value)\n\tgetPointer(self).PlayOnRemove = value == 1;\nend\nfunction abi.ffi.property_getter_sound_playback_loudness(self)\n\tlocal result_0 = getPointer(self).PlaybackLoudness;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_sound_playback_region(self)\n\tlocal result_0 = getPointer(self).PlaybackRegion;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_sound_playback_region_set_playback_region(self, value)\n\tgetPointer(self).PlaybackRegion = getPointer(value);\nend\nfunction abi.ffi.property_getter_sound_playback_regions_enabled(self)\n\tlocal result_0 = getPointer(self).PlaybackRegionsEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_sound_playback_regions_enabled_set_playback_regions_enabled(self, value)\n\tgetPointer(self).PlaybackRegionsEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_sound_playback_speed(self)\n\tlocal result_0 = getPointer(self).PlaybackSpeed;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sound_playback_speed_set_playback_speed(self, value)\n\tgetPointer(self).PlaybackSpeed = value;\nend\nfunction abi.ffi.property_getter_sound_playing(self)\n\tlocal result_0 = getPointer(self).Playing;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_sound_playing_set_playing(self, value)\n\tgetPointer(self).Playing = value == 1;\nend\nfunction abi.ffi.property_getter_sound_roll_off_max_distance(self)\n\tlocal result_0 = getPointer(self).RollOffMaxDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sound_roll_off_max_distance_set_roll_off_max_distance(self, value)\n\tgetPointer(self).RollOffMaxDistance = value;\nend\nfunction abi.ffi.property_getter_sound_roll_off_min_distance(self)\n\tlocal result_0 = getPointer(self).RollOffMinDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sound_roll_off_min_distance_set_roll_off_min_distance(self, value)\n\tgetPointer(self).RollOffMinDistance = value;\nend\nfunction abi.ffi.property_getter_sound_roll_off_mode(self)\n\tlocal result_0 = getPointer(self).RollOffMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sound_roll_off_mode_set_roll_off_mode(self, value)\n\tgetPointer(self).RollOffMode = value;\nend\nfunction abi.ffi.property_getter_sound_sound_group(self)\n\tlocal result_0 = getPointer(self).SoundGroup;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_sound_sound_group_set_sound_group(self, value)\n\tgetPointer(self).SoundGroup = getPointer(value);\nend\nfunction abi.ffi.property_getter_sound_sound_id(self)\n\tlocal result_0 = getPointer(self).SoundId;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_sound_sound_id_set_sound_id(self, value)\n\tgetPointer(self).SoundId = getPointer(value);\nend\nfunction abi.ffi.property_getter_sound_time_length(self)\n\tlocal result_0 = getPointer(self).TimeLength;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_sound_time_position(self)\n\tlocal result_0 = getPointer(self).TimePosition;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sound_time_position_set_time_position(self, value)\n\tgetPointer(self).TimePosition = value;\nend\nfunction abi.ffi.property_getter_sound_volume(self)\n\tlocal result_0 = getPointer(self).Volume;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sound_volume_set_volume(self, value)\n\tgetPointer(self).Volume = value;\nend\nfunction abi.ffi.method_sound_pause(self)\n\tgetPointer(self):Pause()\nend\nfunction abi.ffi.method_sound_play(self)\n\tgetPointer(self):Play()\nend\nfunction abi.ffi.method_sound_resume(self)\n\tgetPointer(self):Resume()\nend\nfunction abi.ffi.method_sound_stop(self)\n\tgetPointer(self):Stop()\nend\nfunction abi.ffi.event_sound_did_loop_on_did_loop(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).DidLoop:Connect(function(sound_id, num_of_times_looped)\n\t\tlocal sound_id_len = #sound_id;\n\t\tlocal sound_id_content = allocString(sound_id_len);\n\t\tfor i = 1, sound_id_len do\n\t\t\tstoreU8(memory, sound_id_content + (i - 1), string.byte(sound_id:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, sound_id_content, sound_id_len, num_of_times_looped)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_sound_ended_on_ended(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Ended:Connect(function(sound_id)\n\t\tlocal sound_id_len = #sound_id;\n\t\tlocal sound_id_content = allocString(sound_id_len);\n\t\tfor i = 1, sound_id_len do\n\t\t\tstoreU8(memory, sound_id_content + (i - 1), string.byte(sound_id:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, sound_id_content, sound_id_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_sound_loaded_on_loaded(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Loaded:Connect(function(sound_id)\n\t\tlocal sound_id_len = #sound_id;\n\t\tlocal sound_id_content = allocString(sound_id_len);\n\t\tfor i = 1, sound_id_len do\n\t\t\tstoreU8(memory, sound_id_content + (i - 1), string.byte(sound_id:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, sound_id_content, sound_id_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_sound_paused_on_paused(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Paused:Connect(function(sound_id)\n\t\tlocal sound_id_len = #sound_id;\n\t\tlocal sound_id_content = allocString(sound_id_len);\n\t\tfor i = 1, sound_id_len do\n\t\t\tstoreU8(memory, sound_id_content + (i - 1), string.byte(sound_id:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, sound_id_content, sound_id_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_sound_played_on_played(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Played:Connect(function(sound_id)\n\t\tlocal sound_id_len = #sound_id;\n\t\tlocal sound_id_content = allocString(sound_id_len);\n\t\tfor i = 1, sound_id_len do\n\t\t\tstoreU8(memory, sound_id_content + (i - 1), string.byte(sound_id:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, sound_id_content, sound_id_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_sound_resumed_on_resumed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Resumed:Connect(function(sound_id)\n\t\tlocal sound_id_len = #sound_id;\n\t\tlocal sound_id_content = allocString(sound_id_len);\n\t\tfor i = 1, sound_id_len do\n\t\t\tstoreU8(memory, sound_id_content + (i - 1), string.byte(sound_id:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, sound_id_content, sound_id_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_sound_stopped_on_stopped(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Stopped:Connect(function(sound_id)\n\t\tlocal sound_id_len = #sound_id;\n\t\tlocal sound_id_content = allocString(sound_id_len);\n\t\tfor i = 1, sound_id_len do\n\t\t\tstoreU8(memory, sound_id_content + (i - 1), string.byte(sound_id:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, sound_id_content, sound_id_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_sound_effect_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_sound_effect_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_sound_effect_priority(self)\n\tlocal result_0 = getPointer(self).Priority;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sound_effect_priority_set_priority(self, value)\n\tgetPointer(self).Priority = value;\nend\nfunction abi.ffi.property_getter_chorus_sound_effect_depth(self)\n\tlocal result_0 = getPointer(self).Depth;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_chorus_sound_effect_depth_set_depth(self, value)\n\tgetPointer(self).Depth = value;\nend\nfunction abi.ffi.property_getter_chorus_sound_effect_mix(self)\n\tlocal result_0 = getPointer(self).Mix;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_chorus_sound_effect_mix_set_mix(self, value)\n\tgetPointer(self).Mix = value;\nend\nfunction abi.ffi.property_getter_chorus_sound_effect_rate(self)\n\tlocal result_0 = getPointer(self).Rate;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_chorus_sound_effect_rate_set_rate(self, value)\n\tgetPointer(self).Rate = value;\nend\nfunction abi.ffi.property_getter_compressor_sound_effect_attack(self)\n\tlocal result_0 = getPointer(self).Attack;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_compressor_sound_effect_attack_set_attack(self, value)\n\tgetPointer(self).Attack = value;\nend\nfunction abi.ffi.property_getter_compressor_sound_effect_gain_makeup(self)\n\tlocal result_0 = getPointer(self).GainMakeup;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_compressor_sound_effect_gain_makeup_set_gain_makeup(self, value)\n\tgetPointer(self).GainMakeup = value;\nend\nfunction abi.ffi.property_getter_compressor_sound_effect_ratio(self)\n\tlocal result_0 = getPointer(self).Ratio;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_compressor_sound_effect_ratio_set_ratio(self, value)\n\tgetPointer(self).Ratio = value;\nend\nfunction abi.ffi.property_getter_compressor_sound_effect_release(self)\n\tlocal result_0 = getPointer(self).Release;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_compressor_sound_effect_release_set_release(self, value)\n\tgetPointer(self).Release = value;\nend\nfunction abi.ffi.property_getter_compressor_sound_effect_side_chain(self)\n\tlocal result_0 = getPointer(self).SideChain;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_compressor_sound_effect_side_chain_set_side_chain(self, value)\n\tgetPointer(self).SideChain = getPointer(value);\nend\nfunction abi.ffi.property_getter_compressor_sound_effect_threshold(self)\n\tlocal result_0 = getPointer(self).Threshold;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_compressor_sound_effect_threshold_set_threshold(self, value)\n\tgetPointer(self).Threshold = value;\nend\nfunction abi.ffi.property_getter_channel_selector_sound_effect_channel(self)\n\tlocal result_0 = getPointer(self).Channel;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_channel_selector_sound_effect_channel_set_channel(self, value)\n\tgetPointer(self).Channel = value;\nend\nfunction abi.ffi.property_getter_distortion_sound_effect_level(self)\n\tlocal result_0 = getPointer(self).Level;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_distortion_sound_effect_level_set_level(self, value)\n\tgetPointer(self).Level = value;\nend\nfunction abi.ffi.property_getter_echo_sound_effect_delay(self)\n\tlocal result_0 = getPointer(self).Delay;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_echo_sound_effect_delay_set_delay(self, value)\n\tgetPointer(self).Delay = value;\nend\nfunction abi.ffi.property_getter_echo_sound_effect_dry_level(self)\n\tlocal result_0 = getPointer(self).DryLevel;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_echo_sound_effect_dry_level_set_dry_level(self, value)\n\tgetPointer(self).DryLevel = value;\nend\nfunction abi.ffi.property_getter_echo_sound_effect_feedback(self)\n\tlocal result_0 = getPointer(self).Feedback;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_echo_sound_effect_feedback_set_feedback(self, value)\n\tgetPointer(self).Feedback = value;\nend\nfunction abi.ffi.property_getter_echo_sound_effect_wet_level(self)\n\tlocal result_0 = getPointer(self).WetLevel;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_echo_sound_effect_wet_level_set_wet_level(self, value)\n\tgetPointer(self).WetLevel = value;\nend\nfunction abi.ffi.property_getter_equalizer_sound_effect_high_gain(self)\n\tlocal result_0 = getPointer(self).HighGain;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_equalizer_sound_effect_high_gain_set_high_gain(self, value)\n\tgetPointer(self).HighGain = value;\nend\nfunction abi.ffi.property_getter_equalizer_sound_effect_low_gain(self)\n\tlocal result_0 = getPointer(self).LowGain;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_equalizer_sound_effect_low_gain_set_low_gain(self, value)\n\tgetPointer(self).LowGain = value;\nend\nfunction abi.ffi.property_getter_equalizer_sound_effect_mid_gain(self)\n\tlocal result_0 = getPointer(self).MidGain;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_equalizer_sound_effect_mid_gain_set_mid_gain(self, value)\n\tgetPointer(self).MidGain = value;\nend\nfunction abi.ffi.property_getter_flange_sound_effect_depth(self)\n\tlocal result_0 = getPointer(self).Depth;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_flange_sound_effect_depth_set_depth(self, value)\n\tgetPointer(self).Depth = value;\nend\nfunction abi.ffi.property_getter_flange_sound_effect_mix(self)\n\tlocal result_0 = getPointer(self).Mix;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_flange_sound_effect_mix_set_mix(self, value)\n\tgetPointer(self).Mix = value;\nend\nfunction abi.ffi.property_getter_flange_sound_effect_rate(self)\n\tlocal result_0 = getPointer(self).Rate;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_flange_sound_effect_rate_set_rate(self, value)\n\tgetPointer(self).Rate = value;\nend\nfunction abi.ffi.property_getter_pitch_shift_sound_effect_octave(self)\n\tlocal result_0 = getPointer(self).Octave;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_pitch_shift_sound_effect_octave_set_octave(self, value)\n\tgetPointer(self).Octave = value;\nend\nfunction abi.ffi.property_getter_reverb_sound_effect_decay_time(self)\n\tlocal result_0 = getPointer(self).DecayTime;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_reverb_sound_effect_decay_time_set_decay_time(self, value)\n\tgetPointer(self).DecayTime = value;\nend\nfunction abi.ffi.property_getter_reverb_sound_effect_density(self)\n\tlocal result_0 = getPointer(self).Density;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_reverb_sound_effect_density_set_density(self, value)\n\tgetPointer(self).Density = value;\nend\nfunction abi.ffi.property_getter_reverb_sound_effect_diffusion(self)\n\tlocal result_0 = getPointer(self).Diffusion;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_reverb_sound_effect_diffusion_set_diffusion(self, value)\n\tgetPointer(self).Diffusion = value;\nend\nfunction abi.ffi.property_getter_reverb_sound_effect_dry_level(self)\n\tlocal result_0 = getPointer(self).DryLevel;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_reverb_sound_effect_dry_level_set_dry_level(self, value)\n\tgetPointer(self).DryLevel = value;\nend\nfunction abi.ffi.property_getter_reverb_sound_effect_wet_level(self)\n\tlocal result_0 = getPointer(self).WetLevel;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_reverb_sound_effect_wet_level_set_wet_level(self, value)\n\tgetPointer(self).WetLevel = value;\nend\nfunction abi.ffi.property_getter_tremolo_sound_effect_depth(self)\n\tlocal result_0 = getPointer(self).Depth;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_tremolo_sound_effect_depth_set_depth(self, value)\n\tgetPointer(self).Depth = value;\nend\nfunction abi.ffi.property_getter_tremolo_sound_effect_duty(self)\n\tlocal result_0 = getPointer(self).Duty;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_tremolo_sound_effect_duty_set_duty(self, value)\n\tgetPointer(self).Duty = value;\nend\nfunction abi.ffi.property_getter_tremolo_sound_effect_frequency(self)\n\tlocal result_0 = getPointer(self).Frequency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_tremolo_sound_effect_frequency_set_frequency(self, value)\n\tgetPointer(self).Frequency = value;\nend\nfunction abi.ffi.property_getter_sound_group_volume(self)\n\tlocal result_0 = getPointer(self).Volume;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sound_group_volume_set_volume(self, value)\n\tgetPointer(self).Volume = value;\nend\nfunction abi.ffi.property_getter_sound_service_ambient_reverb(self)\n\tlocal result_0 = getPointer(self).AmbientReverb;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sound_service_ambient_reverb_set_ambient_reverb(self, value)\n\tgetPointer(self).AmbientReverb = value;\nend\nfunction abi.ffi.property_getter_sound_service_distance_factor(self)\n\tlocal result_0 = getPointer(self).DistanceFactor;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sound_service_distance_factor_set_distance_factor(self, value)\n\tgetPointer(self).DistanceFactor = value;\nend\nfunction abi.ffi.property_getter_sound_service_doppler_scale(self)\n\tlocal result_0 = getPointer(self).DopplerScale;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sound_service_doppler_scale_set_doppler_scale(self, value)\n\tgetPointer(self).DopplerScale = value;\nend\nfunction abi.ffi.property_getter_sound_service_respect_filtering_enabled(self)\n\tlocal result_0 = getPointer(self).RespectFilteringEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_sound_service_respect_filtering_enabled_set_respect_filtering_enabled(self, value)\n\tgetPointer(self).RespectFilteringEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_sound_service_rolloff_scale(self)\n\tlocal result_0 = getPointer(self).RolloffScale;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sound_service_rolloff_scale_set_rolloff_scale(self, value)\n\tgetPointer(self).RolloffScale = value;\nend\nfunction abi.ffi.method_sound_service_play_local_sound(self, sound)\n\tgetPointer(self):PlayLocalSound(getPointer(sound))\nend\nfunction abi.ffi.property_getter_sparkles_color(self)\n\tlocal result_0 = getPointer(self).Color;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_sparkles_color_set_color(self, value)\n\tgetPointer(self).Color = getPointer(value);\nend\nfunction abi.ffi.property_getter_sparkles_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_sparkles_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_sparkles_sparkle_color(self)\n\tlocal result_0 = getPointer(self).SparkleColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_sparkles_sparkle_color_set_sparkle_color(self, value)\n\tgetPointer(self).SparkleColor = getPointer(value);\nend\nfunction abi.ffi.property_getter_sparkles_time_scale(self)\n\tlocal result_0 = getPointer(self).TimeScale;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_sparkles_time_scale_set_time_scale(self, value)\n\tgetPointer(self).TimeScale = value;\nend\nfunction abi.ffi.property_getter_speaker_channel_count(self)\n\tlocal result_0 = getPointer(self).ChannelCount;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_speaker_playback_loudness(self)\n\tlocal result_0 = getPointer(self).PlaybackLoudness;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_speaker_roll_off_max_distance(self)\n\tlocal result_0 = getPointer(self).RollOffMaxDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_speaker_roll_off_max_distance_set_roll_off_max_distance(self, value)\n\tgetPointer(self).RollOffMaxDistance = value;\nend\nfunction abi.ffi.property_getter_speaker_roll_off_min_distance(self)\n\tlocal result_0 = getPointer(self).RollOffMinDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_speaker_roll_off_min_distance_set_roll_off_min_distance(self, value)\n\tgetPointer(self).RollOffMinDistance = value;\nend\nfunction abi.ffi.property_getter_speaker_roll_off_mode(self)\n\tlocal result_0 = getPointer(self).RollOffMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_speaker_roll_off_mode_set_roll_off_mode(self, value)\n\tgetPointer(self).RollOffMode = value;\nend\nfunction abi.ffi.property_getter_speaker_sound_group(self)\n\tlocal result_0 = getPointer(self).SoundGroup;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_speaker_sound_group_set_sound_group(self, value)\n\tgetPointer(self).SoundGroup = getPointer(value);\nend\nfunction abi.ffi.property_getter_speaker_source(self)\n\tlocal result_0 = getPointer(self).Source;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_speaker_source_set_source(self, value)\n\tgetPointer(self).Source = getPointer(value);\nend\nfunction abi.ffi.property_getter_speaker_volume(self)\n\tlocal result_0 = getPointer(self).Volume;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_speaker_volume_set_volume(self, value)\n\tgetPointer(self).Volume = value;\nend\nfunction abi.ffi.property_getter_starter_player_allow_custom_animations(self)\n\tlocal result_0 = getPointer(self).AllowCustomAnimations;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_starter_player_allow_custom_animations_set_allow_custom_animations(self, value)\n\tgetPointer(self).AllowCustomAnimations = value == 1;\nend\nfunction abi.ffi.property_getter_starter_player_auto_jump_enabled(self)\n\tlocal result_0 = getPointer(self).AutoJumpEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_starter_player_auto_jump_enabled_set_auto_jump_enabled(self, value)\n\tgetPointer(self).AutoJumpEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_starter_player_camera_max_zoom_distance(self)\n\tlocal result_0 = getPointer(self).CameraMaxZoomDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_starter_player_camera_max_zoom_distance_set_camera_max_zoom_distance(self, value)\n\tgetPointer(self).CameraMaxZoomDistance = value;\nend\nfunction abi.ffi.property_getter_starter_player_camera_min_zoom_distance(self)\n\tlocal result_0 = getPointer(self).CameraMinZoomDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_starter_player_camera_min_zoom_distance_set_camera_min_zoom_distance(self, value)\n\tgetPointer(self).CameraMinZoomDistance = value;\nend\nfunction abi.ffi.property_getter_starter_player_camera_mode(self)\n\tlocal result_0 = getPointer(self).CameraMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_starter_player_camera_mode_set_camera_mode(self, value)\n\tgetPointer(self).CameraMode = value;\nend\nfunction abi.ffi.property_getter_starter_player_character_jump_height(self)\n\tlocal result_0 = getPointer(self).CharacterJumpHeight;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_starter_player_character_jump_height_set_character_jump_height(self, value)\n\tgetPointer(self).CharacterJumpHeight = value;\nend\nfunction abi.ffi.property_getter_starter_player_character_jump_power(self)\n\tlocal result_0 = getPointer(self).CharacterJumpPower;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_starter_player_character_jump_power_set_character_jump_power(self, value)\n\tgetPointer(self).CharacterJumpPower = value;\nend\nfunction abi.ffi.property_getter_starter_player_character_max_slope_angle(self)\n\tlocal result_0 = getPointer(self).CharacterMaxSlopeAngle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_starter_player_character_max_slope_angle_set_character_max_slope_angle(self, value)\n\tgetPointer(self).CharacterMaxSlopeAngle = value;\nend\nfunction abi.ffi.property_getter_starter_player_character_use_jump_power(self)\n\tlocal result_0 = getPointer(self).CharacterUseJumpPower;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_starter_player_character_use_jump_power_set_character_use_jump_power(self, value)\n\tgetPointer(self).CharacterUseJumpPower = value == 1;\nend\nfunction abi.ffi.property_getter_starter_player_character_walk_speed(self)\n\tlocal result_0 = getPointer(self).CharacterWalkSpeed;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_starter_player_character_walk_speed_set_character_walk_speed(self, value)\n\tgetPointer(self).CharacterWalkSpeed = value;\nend\nfunction abi.ffi.property_getter_starter_player_dev_camera_occlusion_mode(self)\n\tlocal result_0 = getPointer(self).DevCameraOcclusionMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_starter_player_dev_camera_occlusion_mode_set_dev_camera_occlusion_mode(self, value)\n\tgetPointer(self).DevCameraOcclusionMode = value;\nend\nfunction abi.ffi.property_getter_starter_player_dev_computer_camera_movement_mode(self)\n\tlocal result_0 = getPointer(self).DevComputerCameraMovementMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_starter_player_dev_computer_camera_movement_mode_set_dev_computer_camera_movement_mode(self, value)\n\tgetPointer(self).DevComputerCameraMovementMode = value;\nend\nfunction abi.ffi.property_getter_starter_player_dev_computer_movement_mode(self)\n\tlocal result_0 = getPointer(self).DevComputerMovementMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_starter_player_dev_computer_movement_mode_set_dev_computer_movement_mode(self, value)\n\tgetPointer(self).DevComputerMovementMode = value;\nend\nfunction abi.ffi.property_getter_starter_player_dev_touch_camera_movement_mode(self)\n\tlocal result_0 = getPointer(self).DevTouchCameraMovementMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_starter_player_dev_touch_camera_movement_mode_set_dev_touch_camera_movement_mode(self, value)\n\tgetPointer(self).DevTouchCameraMovementMode = value;\nend\nfunction abi.ffi.property_getter_starter_player_dev_touch_movement_mode(self)\n\tlocal result_0 = getPointer(self).DevTouchMovementMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_starter_player_dev_touch_movement_mode_set_dev_touch_movement_mode(self, value)\n\tgetPointer(self).DevTouchMovementMode = value;\nend\nfunction abi.ffi.property_getter_starter_player_enable_mouse_lock_option(self)\n\tlocal result_0 = getPointer(self).EnableMouseLockOption;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_starter_player_enable_mouse_lock_option_set_enable_mouse_lock_option(self, value)\n\tgetPointer(self).EnableMouseLockOption = value == 1;\nend\nfunction abi.ffi.property_getter_starter_player_health_display_distance(self)\n\tlocal result_0 = getPointer(self).HealthDisplayDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_starter_player_health_display_distance_set_health_display_distance(self, value)\n\tgetPointer(self).HealthDisplayDistance = value;\nend\nfunction abi.ffi.property_getter_starter_player_humanoid_state_machine_mode(self)\n\tlocal result_0 = getPointer(self).HumanoidStateMachineMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_starter_player_humanoid_state_machine_mode_set_humanoid_state_machine_mode(self, value)\n\tgetPointer(self).HumanoidStateMachineMode = value;\nend\nfunction abi.ffi.property_getter_starter_player_load_character_appearance(self)\n\tlocal result_0 = getPointer(self).LoadCharacterAppearance;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_starter_player_load_character_appearance_set_load_character_appearance(self, value)\n\tgetPointer(self).LoadCharacterAppearance = value == 1;\nend\nfunction abi.ffi.property_getter_starter_player_name_display_distance(self)\n\tlocal result_0 = getPointer(self).NameDisplayDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_starter_player_name_display_distance_set_name_display_distance(self, value)\n\tgetPointer(self).NameDisplayDistance = value;\nend\nfunction abi.ffi.property_getter_starter_player_user_emotes_enabled(self)\n\tlocal result_0 = getPointer(self).UserEmotesEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_starter_player_user_emotes_enabled_set_user_emotes_enabled(self, value)\n\tgetPointer(self).UserEmotesEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_stats_contacts_count(self)\n\tlocal result_0 = getPointer(self).ContactsCount;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_stats_data_receive_kbps(self)\n\tlocal result_0 = getPointer(self).DataReceiveKbps;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_stats_data_send_kbps(self)\n\tlocal result_0 = getPointer(self).DataSendKbps;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_stats_heartbeat_time_ms(self)\n\tlocal result_0 = getPointer(self).HeartbeatTimeMs;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_stats_instance_count(self)\n\tlocal result_0 = getPointer(self).InstanceCount;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_stats_moving_primitives_count(self)\n\tlocal result_0 = getPointer(self).MovingPrimitivesCount;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_stats_physics_receive_kbps(self)\n\tlocal result_0 = getPointer(self).PhysicsReceiveKbps;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_stats_physics_send_kbps(self)\n\tlocal result_0 = getPointer(self).PhysicsSendKbps;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_stats_physics_step_time_ms(self)\n\tlocal result_0 = getPointer(self).PhysicsStepTimeMs;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_stats_primitives_count(self)\n\tlocal result_0 = getPointer(self).PrimitivesCount;\n\treturn result_0;\nend\nfunction abi.ffi.method_stats_get_memory_usage_mb_for_tag(self, tag)\n\tlocal result_0 = getPointer(self):GetMemoryUsageMbForTag(tag);\n\treturn result_0;\nend\nfunction abi.ffi.method_stats_get_total_memory_usage_mb(self)\n\tlocal result_0 = getPointer(self):GetTotalMemoryUsageMb();\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_team_auto_assignable(self)\n\tlocal result_0 = getPointer(self).AutoAssignable;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_team_auto_assignable_set_auto_assignable(self, value)\n\tgetPointer(self).AutoAssignable = value == 1;\nend\nfunction abi.ffi.property_getter_team_team_color(self)\n\tlocal result_0 = getPointer(self).TeamColor;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_team_team_color_set_team_color(self, value)\n\tgetPointer(self).TeamColor = getPointer(value);\nend\nfunction abi.ffi.event_team_player_added_on_player_added(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PlayerAdded:Connect(function(player)\n\t\tlocal player_optional, player_optional_0 = 0, 0;\n\t\tif (player ~= nil) then\n\t\t\tplayer_optional, player_optional_0 = 1, createPointer(player);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_optional, player_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_team_player_removed_on_player_removed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PlayerRemoved:Connect(function(player)\n\t\tlocal player_optional, player_optional_0 = 0, 0;\n\t\tif (player ~= nil) then\n\t\t\tplayer_optional, player_optional_0 = 1, createPointer(player);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_optional, player_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_teleport_async_result_private_server_id(self)\n\tlocal result_0 = getPointer(self).PrivateServerId;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_teleport_async_result_reserved_server_access_code(self)\n\tlocal result_0 = getPointer(self).ReservedServerAccessCode;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_teleport_options_reserved_server_access_code(self)\n\tlocal result_0 = getPointer(self).ReservedServerAccessCode;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_teleport_options_reserved_server_access_code_set_reserved_server_access_code(self, value_addr, value_len)\n\tgetPointer(self).ReservedServerAccessCode = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_teleport_options_server_instance_id(self)\n\tlocal result_0 = getPointer(self).ServerInstanceId;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_teleport_options_server_instance_id_set_server_instance_id(self, value_addr, value_len)\n\tgetPointer(self).ServerInstanceId = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_teleport_options_should_reserve_server(self)\n\tlocal result_0 = getPointer(self).ShouldReserveServer;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_teleport_options_should_reserve_server_set_should_reserve_server(self, value)\n\tgetPointer(self).ShouldReserveServer = value == 1;\nend\nfunction abi.ffi.method_teleport_service_get_arriving_teleport_gui(self)\n\tlocal result_0 = getPointer(self):GetArrivingTeleportGui();\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_teleport_service_set_teleport_gui(self, gui)\n\tgetPointer(self):SetTeleportGui(getPointer(gui))\nend\nfunction abi.ffi.event_teleport_service_teleport_init_failed_on_teleport_init_failed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).TeleportInitFailed:Connect(function(player, teleport_result, error_message, place_id, teleport_options)\n\t\tlocal player_optional, player_optional_0 = 0, 0;\n\t\tif (player ~= nil) then\n\t\t\tplayer_optional, player_optional_0 = 1, createPointer(player);\n\t\tend\n\t\tlocal error_message_len = #error_message;\n\t\tlocal error_message_content = allocString(error_message_len);\n\t\tfor i = 1, error_message_len do\n\t\t\tstoreU8(memory, error_message_content + (i - 1), string.byte(error_message:sub(i, i)));\n\t\tend\n\t\tlocal teleport_options_optional, teleport_options_optional_0 = 0, 0;\n\t\tif (teleport_options ~= nil) then\n\t\t\tteleport_options_optional, teleport_options_optional_0 = 1, createPointer(teleport_options);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, player_optional, player_optional_0, teleport_result, error_message_content, error_message_len, place_id, teleport_options_optional, teleport_options_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_terrain_detail_face(self)\n\tlocal result_0 = getPointer(self).Face;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_terrain_detail_face_set_face(self, value)\n\tgetPointer(self).Face = value;\nend\nfunction abi.ffi.property_getter_terrain_detail_material_pattern(self)\n\tlocal result_0 = getPointer(self).MaterialPattern;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_terrain_detail_material_pattern_set_material_pattern(self, value)\n\tgetPointer(self).MaterialPattern = value;\nend\nfunction abi.ffi.property_getter_terrain_detail_studs_per_tile(self)\n\tlocal result_0 = getPointer(self).StudsPerTile;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_terrain_detail_studs_per_tile_set_studs_per_tile(self, value)\n\tgetPointer(self).StudsPerTile = value;\nend\nfunction abi.ffi.property_getter_terrain_region_size_in_cells(self)\n\tlocal result_0 = getPointer(self).SizeInCells;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_text_channel_display_system_message(self, system_message_addr, system_message_len, metadata_addr, metadata_len)\n\tlocal result_0 = getPointer(self):DisplaySystemMessage(loadString(memory, system_message_addr, system_message_len), loadString(memory, metadata_addr, metadata_len));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_text_channel_send_async(self, message_addr, message_len, metadata_addr, metadata_len)\n\tlocal result_0 = getPointer(self):SendAsync(loadString(memory, message_addr, message_len), loadString(memory, metadata_addr, metadata_len));\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.event_text_channel_message_received_on_message_received(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MessageReceived:Connect(function(incoming_message)\n\t\tlocal incoming_message_optional, incoming_message_optional_0 = 0, 0;\n\t\tif (incoming_message ~= nil) then\n\t\t\tincoming_message_optional, incoming_message_optional_0 = 1, createPointer(incoming_message);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, incoming_message_optional, incoming_message_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_text_chat_command_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_text_chat_command_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_text_chat_command_primary_alias(self)\n\tlocal result_0 = getPointer(self).PrimaryAlias;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_text_chat_command_primary_alias_set_primary_alias(self, value_addr, value_len)\n\tgetPointer(self).PrimaryAlias = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_text_chat_command_secondary_alias(self)\n\tlocal result_0 = getPointer(self).SecondaryAlias;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_text_chat_command_secondary_alias_set_secondary_alias(self, value_addr, value_len)\n\tgetPointer(self).SecondaryAlias = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.event_text_chat_command_triggered_on_triggered(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Triggered:Connect(function(origin_text_source, unfiltered_text)\n\t\tlocal origin_text_source_optional, origin_text_source_optional_0 = 0, 0;\n\t\tif (origin_text_source ~= nil) then\n\t\t\torigin_text_source_optional, origin_text_source_optional_0 = 1, createPointer(origin_text_source);\n\t\tend\n\t\tlocal unfiltered_text_len = #unfiltered_text;\n\t\tlocal unfiltered_text_content = allocString(unfiltered_text_len);\n\t\tfor i = 1, unfiltered_text_len do\n\t\t\tstoreU8(memory, unfiltered_text_content + (i - 1), string.byte(unfiltered_text:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, origin_text_source_optional, origin_text_source_optional_0, unfiltered_text_content, unfiltered_text_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_bubble_chat_configuration_adornee_name(self)\n\tlocal result_0 = getPointer(self).AdorneeName;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_bubble_chat_configuration_adornee_name_set_adornee_name(self, value_addr, value_len)\n\tgetPointer(self).AdorneeName = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_bubble_chat_configuration_background_color_3(self)\n\tlocal result_0 = getPointer(self).BackgroundColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_bubble_chat_configuration_background_color_3_set_background_color_3(self, value)\n\tgetPointer(self).BackgroundColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_bubble_chat_configuration_bubble_duration(self)\n\tlocal result_0 = getPointer(self).BubbleDuration;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_bubble_chat_configuration_bubble_duration_set_bubble_duration(self, value)\n\tgetPointer(self).BubbleDuration = value;\nend\nfunction abi.ffi.property_getter_bubble_chat_configuration_bubbles_spacing(self)\n\tlocal result_0 = getPointer(self).BubblesSpacing;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_bubble_chat_configuration_bubbles_spacing_set_bubbles_spacing(self, value)\n\tgetPointer(self).BubblesSpacing = value;\nend\nfunction abi.ffi.property_getter_bubble_chat_configuration_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_bubble_chat_configuration_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_bubble_chat_configuration_font(self)\n\tlocal result_0 = getPointer(self).Font;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_bubble_chat_configuration_font_set_font(self, value)\n\tgetPointer(self).Font = value;\nend\nfunction abi.ffi.property_getter_bubble_chat_configuration_local_player_studs_offset(self)\n\tlocal result_0 = getPointer(self).LocalPlayerStudsOffset;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_bubble_chat_configuration_local_player_studs_offset_set_local_player_studs_offset(self, value)\n\tgetPointer(self).LocalPlayerStudsOffset = getPointer(value);\nend\nfunction abi.ffi.property_getter_bubble_chat_configuration_max_distance(self)\n\tlocal result_0 = getPointer(self).MaxDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_bubble_chat_configuration_max_distance_set_max_distance(self, value)\n\tgetPointer(self).MaxDistance = value;\nend\nfunction abi.ffi.property_getter_bubble_chat_configuration_minimize_distance(self)\n\tlocal result_0 = getPointer(self).MinimizeDistance;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_bubble_chat_configuration_minimize_distance_set_minimize_distance(self, value)\n\tgetPointer(self).MinimizeDistance = value;\nend\nfunction abi.ffi.property_getter_bubble_chat_configuration_text_color_3(self)\n\tlocal result_0 = getPointer(self).TextColor3;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_bubble_chat_configuration_text_color_3_set_text_color_3(self, value)\n\tgetPointer(self).TextColor3 = getPointer(value);\nend\nfunction abi.ffi.property_getter_bubble_chat_configuration_text_size(self)\n\tlocal result_0 = getPointer(self).TextSize;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_bubble_chat_configuration_text_size_set_text_size(self, value)\n\tgetPointer(self).TextSize = value;\nend\nfunction abi.ffi.property_getter_bubble_chat_configuration_vertical_studs_offset(self)\n\tlocal result_0 = getPointer(self).VerticalStudsOffset;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_bubble_chat_configuration_vertical_studs_offset_set_vertical_studs_offset(self, value)\n\tgetPointer(self).VerticalStudsOffset = value;\nend\nfunction abi.ffi.property_getter_chat_input_bar_configuration_absolute_position(self)\n\tlocal result_0 = getPointer(self).AbsolutePosition;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_chat_input_bar_configuration_absolute_size(self)\n\tlocal result_0 = getPointer(self).AbsoluteSize;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_chat_input_bar_configuration_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_chat_input_bar_configuration_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_chat_input_bar_configuration_target_text_channel(self)\n\tlocal result_0 = getPointer(self).TargetTextChannel;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_chat_input_bar_configuration_target_text_channel_set_target_text_channel(self, value)\n\tgetPointer(self).TargetTextChannel = getPointer(value);\nend\nfunction abi.ffi.property_getter_chat_window_configuration_absolute_position(self)\n\tlocal result_0 = getPointer(self).AbsolutePosition;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_chat_window_configuration_absolute_size(self)\n\tlocal result_0 = getPointer(self).AbsoluteSize;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_chat_window_configuration_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_chat_window_configuration_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_chat_window_configuration_horizontal_alignment(self)\n\tlocal result_0 = getPointer(self).HorizontalAlignment;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_chat_window_configuration_horizontal_alignment_set_horizontal_alignment(self, value)\n\tgetPointer(self).HorizontalAlignment = value;\nend\nfunction abi.ffi.property_getter_chat_window_configuration_vertical_alignment(self)\n\tlocal result_0 = getPointer(self).VerticalAlignment;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_chat_window_configuration_vertical_alignment_set_vertical_alignment(self, value)\n\tgetPointer(self).VerticalAlignment = value;\nend\nfunction abi.ffi.property_getter_text_chat_message_message_id(self)\n\tlocal result_0 = getPointer(self).MessageId;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_text_chat_message_message_id_set_message_id(self, value_addr, value_len)\n\tgetPointer(self).MessageId = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_text_chat_message_metadata(self)\n\tlocal result_0 = getPointer(self).Metadata;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_text_chat_message_metadata_set_metadata(self, value_addr, value_len)\n\tgetPointer(self).Metadata = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_text_chat_message_prefix_text(self)\n\tlocal result_0 = getPointer(self).PrefixText;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_text_chat_message_prefix_text_set_prefix_text(self, value_addr, value_len)\n\tgetPointer(self).PrefixText = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_text_chat_message_status(self)\n\tlocal result_0 = getPointer(self).Status;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_chat_message_status_set_status(self, value)\n\tgetPointer(self).Status = value;\nend\nfunction abi.ffi.property_getter_text_chat_message_text(self)\n\tlocal result_0 = getPointer(self).Text;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_text_chat_message_text_set_text(self, value_addr, value_len)\n\tgetPointer(self).Text = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_text_chat_message_text_channel(self)\n\tlocal result_0 = getPointer(self).TextChannel;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_text_chat_message_text_channel_set_text_channel(self, value)\n\tgetPointer(self).TextChannel = getPointer(value);\nend\nfunction abi.ffi.property_getter_text_chat_message_text_source(self)\n\tlocal result_0 = getPointer(self).TextSource;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_text_chat_message_text_source_set_text_source(self, value)\n\tgetPointer(self).TextSource = getPointer(value);\nend\nfunction abi.ffi.property_getter_text_chat_message_timestamp(self)\n\tlocal result_0 = getPointer(self).Timestamp;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_text_chat_message_timestamp_set_timestamp(self, value)\n\tgetPointer(self).Timestamp = getPointer(value);\nend\nfunction abi.ffi.property_getter_text_chat_message_properties_prefix_text(self)\n\tlocal result_0 = getPointer(self).PrefixText;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_text_chat_message_properties_prefix_text_set_prefix_text(self, value_addr, value_len)\n\tgetPointer(self).PrefixText = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_text_chat_message_properties_text(self)\n\tlocal result_0 = getPointer(self).Text;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_text_chat_message_properties_text_set_text(self, value_addr, value_len)\n\tgetPointer(self).Text = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.property_getter_text_chat_service_chat_version(self)\n\tlocal result_0 = getPointer(self).ChatVersion;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_text_chat_service_chat_version_set_chat_version(self, value)\n\tgetPointer(self).ChatVersion = value;\nend\nfunction abi.ffi.property_getter_text_chat_service_create_default_commands(self)\n\tlocal result_0 = getPointer(self).CreateDefaultCommands;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_text_chat_service_create_default_commands_set_create_default_commands(self, value)\n\tgetPointer(self).CreateDefaultCommands = value == 1;\nend\nfunction abi.ffi.property_getter_text_chat_service_create_default_text_channels(self)\n\tlocal result_0 = getPointer(self).CreateDefaultTextChannels;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_text_chat_service_create_default_text_channels_set_create_default_text_channels(self, value)\n\tgetPointer(self).CreateDefaultTextChannels = value == 1;\nend\nfunction abi.ffi.event_text_chat_service_message_received_on_message_received(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).MessageReceived:Connect(function(text_chat_message)\n\t\tlocal text_chat_message_optional, text_chat_message_optional_0 = 0, 0;\n\t\tif (text_chat_message ~= nil) then\n\t\t\ttext_chat_message_optional, text_chat_message_optional_0 = 1, createPointer(text_chat_message);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, text_chat_message_optional, text_chat_message_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_text_chat_service_sending_message_on_sending_message(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).SendingMessage:Connect(function(text_chat_message)\n\t\tlocal text_chat_message_optional, text_chat_message_optional_0 = 0, 0;\n\t\tif (text_chat_message ~= nil) then\n\t\t\ttext_chat_message_optional, text_chat_message_optional_0 = 1, createPointer(text_chat_message);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, text_chat_message_optional, text_chat_message_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_text_filter_result_get_chat_for_user_async(self, to_user_id)\n\tlocal result_0 = getPointer(self):GetChatForUserAsync(to_user_id);\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.method_text_filter_result_get_non_chat_string_for_broadcast_async(self)\n\tlocal result_0 = getPointer(self):GetNonChatStringForBroadcastAsync();\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.method_text_filter_result_get_non_chat_string_for_user_async(self, to_user_id)\n\tlocal result_0 = getPointer(self):GetNonChatStringForUserAsync(to_user_id);\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.method_text_service_get_text_size(self, string_addr, string_len, font_size, font, frame_size)\n\tlocal result_0 = getPointer(self):GetTextSize(loadString(memory, string_addr, string_len), font_size, font, getPointer(frame_size));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_text_service_filter_string_async(self, string_to_filter_addr, string_to_filter_len, from_user_id, text_context)\n\tlocal result_0 = getPointer(self):FilterStringAsync(loadString(memory, string_to_filter_addr, string_to_filter_len), from_user_id, text_context);\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_text_service_get_text_bounds_async(self, params)\n\tlocal result_0 = getPointer(self):GetTextBoundsAsync(getPointer(params));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_text_source_can_send(self)\n\tlocal result_0 = getPointer(self).CanSend;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_text_source_can_send_set_can_send(self, value)\n\tgetPointer(self).CanSend = value == 1;\nend\nfunction abi.ffi.property_getter_text_source_user_id(self)\n\tlocal result_0 = getPointer(self).UserId;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_tracker_lod_controller_audio_mode(self)\n\tlocal result_0 = getPointer(self).AudioMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_tracker_lod_controller_audio_mode_set_audio_mode(self, value)\n\tgetPointer(self).AudioMode = value;\nend\nfunction abi.ffi.property_getter_tracker_lod_controller_video_extrapolation_mode(self)\n\tlocal result_0 = getPointer(self).VideoExtrapolationMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_tracker_lod_controller_video_extrapolation_mode_set_video_extrapolation_mode(self, value)\n\tgetPointer(self).VideoExtrapolationMode = value;\nend\nfunction abi.ffi.property_getter_tracker_lod_controller_video_lod_mode(self)\n\tlocal result_0 = getPointer(self).VideoLodMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_tracker_lod_controller_video_lod_mode_set_video_lod_mode(self, value)\n\tgetPointer(self).VideoLodMode = value;\nend\nfunction abi.ffi.property_getter_tracker_lod_controller_video_mode(self)\n\tlocal result_0 = getPointer(self).VideoMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_tracker_lod_controller_video_mode_set_video_mode(self, value)\n\tgetPointer(self).VideoMode = value;\nend\nfunction abi.ffi.property_getter_trail_attachment_0(self)\n\tlocal result_0 = getPointer(self).Attachment0;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_trail_attachment_0_set_attachment_0(self, value)\n\tgetPointer(self).Attachment0 = getPointer(value);\nend\nfunction abi.ffi.property_getter_trail_attachment_1(self)\n\tlocal result_0 = getPointer(self).Attachment1;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_trail_attachment_1_set_attachment_1(self, value)\n\tgetPointer(self).Attachment1 = getPointer(value);\nend\nfunction abi.ffi.property_getter_trail_brightness(self)\n\tlocal result_0 = getPointer(self).Brightness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_trail_brightness_set_brightness(self, value)\n\tgetPointer(self).Brightness = value;\nend\nfunction abi.ffi.property_getter_trail_color(self)\n\tlocal result_0 = getPointer(self).Color;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_trail_color_set_color(self, value)\n\tgetPointer(self).Color = getPointer(value);\nend\nfunction abi.ffi.property_getter_trail_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_trail_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_trail_face_camera(self)\n\tlocal result_0 = getPointer(self).FaceCamera;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_trail_face_camera_set_face_camera(self, value)\n\tgetPointer(self).FaceCamera = value == 1;\nend\nfunction abi.ffi.property_getter_trail_lifetime(self)\n\tlocal result_0 = getPointer(self).Lifetime;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_trail_lifetime_set_lifetime(self, value)\n\tgetPointer(self).Lifetime = value;\nend\nfunction abi.ffi.property_getter_trail_light_emission(self)\n\tlocal result_0 = getPointer(self).LightEmission;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_trail_light_emission_set_light_emission(self, value)\n\tgetPointer(self).LightEmission = value;\nend\nfunction abi.ffi.property_getter_trail_light_influence(self)\n\tlocal result_0 = getPointer(self).LightInfluence;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_trail_light_influence_set_light_influence(self, value)\n\tgetPointer(self).LightInfluence = value;\nend\nfunction abi.ffi.property_getter_trail_max_length(self)\n\tlocal result_0 = getPointer(self).MaxLength;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_trail_max_length_set_max_length(self, value)\n\tgetPointer(self).MaxLength = value;\nend\nfunction abi.ffi.property_getter_trail_min_length(self)\n\tlocal result_0 = getPointer(self).MinLength;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_trail_min_length_set_min_length(self, value)\n\tgetPointer(self).MinLength = value;\nend\nfunction abi.ffi.property_getter_trail_texture(self)\n\tlocal result_0 = getPointer(self).Texture;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_trail_texture_set_texture(self, value)\n\tgetPointer(self).Texture = getPointer(value);\nend\nfunction abi.ffi.property_getter_trail_texture_length(self)\n\tlocal result_0 = getPointer(self).TextureLength;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_trail_texture_length_set_texture_length(self, value)\n\tgetPointer(self).TextureLength = value;\nend\nfunction abi.ffi.property_getter_trail_texture_mode(self)\n\tlocal result_0 = getPointer(self).TextureMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_trail_texture_mode_set_texture_mode(self, value)\n\tgetPointer(self).TextureMode = value;\nend\nfunction abi.ffi.property_getter_trail_transparency(self)\n\tlocal result_0 = getPointer(self).Transparency;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_trail_transparency_set_transparency(self, value)\n\tgetPointer(self).Transparency = getPointer(value);\nend\nfunction abi.ffi.property_getter_trail_width_scale(self)\n\tlocal result_0 = getPointer(self).WidthScale;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_trail_width_scale_set_width_scale(self, value)\n\tgetPointer(self).WidthScale = getPointer(value);\nend\nfunction abi.ffi.method_trail_clear(self)\n\tgetPointer(self):Clear()\nend\nfunction abi.ffi.property_getter_translator_locale_id(self)\n\tlocal result_0 = getPointer(self).LocaleId;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.method_translator_translate(self, context, text_addr, text_len)\n\tlocal result_0 = getPointer(self):Translate(getPointer(context), loadString(memory, text_addr, text_len));\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_getter_tween_base_playback_state(self)\n\tlocal result_0 = getPointer(self).PlaybackState;\n\treturn result_0;\nend\nfunction abi.ffi.method_tween_base_cancel(self)\n\tgetPointer(self):Cancel()\nend\nfunction abi.ffi.method_tween_base_pause(self)\n\tgetPointer(self):Pause()\nend\nfunction abi.ffi.method_tween_base_play(self)\n\tgetPointer(self):Play()\nend\nfunction abi.ffi.event_tween_base_completed_on_completed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Completed:Connect(function(playback_state)\n\t\tinvokeFunction(callback_data, callback_vtable, playback_state)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_tween_instance(self)\n\tlocal result_0 = getPointer(self).Instance;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_getter_tween_tween_info(self)\n\tlocal result_0 = getPointer(self).TweenInfo;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_tween_service_get_value(self, alpha, easing_style, easing_direction)\n\tlocal result_0 = getPointer(self):GetValue(alpha, easing_style, easing_direction);\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_ui_aspect_ratio_constraint_aspect_ratio(self)\n\tlocal result_0 = getPointer(self).AspectRatio;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_aspect_ratio_constraint_aspect_ratio_set_aspect_ratio(self, value)\n\tgetPointer(self).AspectRatio = value;\nend\nfunction abi.ffi.property_getter_ui_aspect_ratio_constraint_aspect_type(self)\n\tlocal result_0 = getPointer(self).AspectType;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_aspect_ratio_constraint_aspect_type_set_aspect_type(self, value)\n\tgetPointer(self).AspectType = value;\nend\nfunction abi.ffi.property_getter_ui_aspect_ratio_constraint_dominant_axis(self)\n\tlocal result_0 = getPointer(self).DominantAxis;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_aspect_ratio_constraint_dominant_axis_set_dominant_axis(self, value)\n\tgetPointer(self).DominantAxis = value;\nend\nfunction abi.ffi.property_getter_ui_size_constraint_max_size(self)\n\tlocal result_0 = getPointer(self).MaxSize;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_ui_size_constraint_max_size_set_max_size(self, value)\n\tgetPointer(self).MaxSize = getPointer(value);\nend\nfunction abi.ffi.property_getter_ui_size_constraint_min_size(self)\n\tlocal result_0 = getPointer(self).MinSize;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_ui_size_constraint_min_size_set_min_size(self, value)\n\tgetPointer(self).MinSize = getPointer(value);\nend\nfunction abi.ffi.property_getter_ui_text_size_constraint_max_text_size(self)\n\tlocal result_0 = getPointer(self).MaxTextSize;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_text_size_constraint_max_text_size_set_max_text_size(self, value)\n\tgetPointer(self).MaxTextSize = value;\nend\nfunction abi.ffi.property_getter_ui_text_size_constraint_min_text_size(self)\n\tlocal result_0 = getPointer(self).MinTextSize;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_text_size_constraint_min_text_size_set_min_text_size(self, value)\n\tgetPointer(self).MinTextSize = value;\nend\nfunction abi.ffi.property_getter_ui_corner_corner_radius(self)\n\tlocal result_0 = getPointer(self).CornerRadius;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_ui_corner_corner_radius_set_corner_radius(self, value)\n\tgetPointer(self).CornerRadius = getPointer(value);\nend\nfunction abi.ffi.property_getter_ui_gradient_color(self)\n\tlocal result_0 = getPointer(self).Color;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_ui_gradient_color_set_color(self, value)\n\tgetPointer(self).Color = getPointer(value);\nend\nfunction abi.ffi.property_getter_ui_gradient_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_ui_gradient_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_ui_gradient_offset(self)\n\tlocal result_0 = getPointer(self).Offset;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_ui_gradient_offset_set_offset(self, value)\n\tgetPointer(self).Offset = getPointer(value);\nend\nfunction abi.ffi.property_getter_ui_gradient_rotation(self)\n\tlocal result_0 = getPointer(self).Rotation;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_gradient_rotation_set_rotation(self, value)\n\tgetPointer(self).Rotation = value;\nend\nfunction abi.ffi.property_getter_ui_gradient_transparency(self)\n\tlocal result_0 = getPointer(self).Transparency;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_ui_gradient_transparency_set_transparency(self, value)\n\tgetPointer(self).Transparency = getPointer(value);\nend\nfunction abi.ffi.property_getter_ui_grid_style_layout_absolute_content_size(self)\n\tlocal result_0 = getPointer(self).AbsoluteContentSize;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_ui_grid_style_layout_fill_direction(self)\n\tlocal result_0 = getPointer(self).FillDirection;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_grid_style_layout_fill_direction_set_fill_direction(self, value)\n\tgetPointer(self).FillDirection = value;\nend\nfunction abi.ffi.property_getter_ui_grid_style_layout_horizontal_alignment(self)\n\tlocal result_0 = getPointer(self).HorizontalAlignment;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_grid_style_layout_horizontal_alignment_set_horizontal_alignment(self, value)\n\tgetPointer(self).HorizontalAlignment = value;\nend\nfunction abi.ffi.property_getter_ui_grid_style_layout_sort_order(self)\n\tlocal result_0 = getPointer(self).SortOrder;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_grid_style_layout_sort_order_set_sort_order(self, value)\n\tgetPointer(self).SortOrder = value;\nend\nfunction abi.ffi.property_getter_ui_grid_style_layout_vertical_alignment(self)\n\tlocal result_0 = getPointer(self).VerticalAlignment;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_grid_style_layout_vertical_alignment_set_vertical_alignment(self, value)\n\tgetPointer(self).VerticalAlignment = value;\nend\nfunction abi.ffi.property_getter_ui_grid_layout_absolute_cell_count(self)\n\tlocal result_0 = getPointer(self).AbsoluteCellCount;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_ui_grid_layout_absolute_cell_size(self)\n\tlocal result_0 = getPointer(self).AbsoluteCellSize;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_ui_grid_layout_cell_padding(self)\n\tlocal result_0 = getPointer(self).CellPadding;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_ui_grid_layout_cell_padding_set_cell_padding(self, value)\n\tgetPointer(self).CellPadding = getPointer(value);\nend\nfunction abi.ffi.property_getter_ui_grid_layout_cell_size(self)\n\tlocal result_0 = getPointer(self).CellSize;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_ui_grid_layout_cell_size_set_cell_size(self, value)\n\tgetPointer(self).CellSize = getPointer(value);\nend\nfunction abi.ffi.property_getter_ui_grid_layout_fill_direction_max_cells(self)\n\tlocal result_0 = getPointer(self).FillDirectionMaxCells;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_grid_layout_fill_direction_max_cells_set_fill_direction_max_cells(self, value)\n\tgetPointer(self).FillDirectionMaxCells = value;\nend\nfunction abi.ffi.property_getter_ui_grid_layout_start_corner(self)\n\tlocal result_0 = getPointer(self).StartCorner;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_grid_layout_start_corner_set_start_corner(self, value)\n\tgetPointer(self).StartCorner = value;\nend\nfunction abi.ffi.property_getter_ui_list_layout_padding(self)\n\tlocal result_0 = getPointer(self).Padding;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_ui_list_layout_padding_set_padding(self, value)\n\tgetPointer(self).Padding = getPointer(value);\nend\nfunction abi.ffi.property_getter_ui_page_layout_animated(self)\n\tlocal result_0 = getPointer(self).Animated;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_ui_page_layout_animated_set_animated(self, value)\n\tgetPointer(self).Animated = value == 1;\nend\nfunction abi.ffi.property_getter_ui_page_layout_circular(self)\n\tlocal result_0 = getPointer(self).Circular;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_ui_page_layout_circular_set_circular(self, value)\n\tgetPointer(self).Circular = value == 1;\nend\nfunction abi.ffi.property_getter_ui_page_layout_current_page(self)\n\tlocal result_0 = getPointer(self).CurrentPage;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_getter_ui_page_layout_easing_direction(self)\n\tlocal result_0 = getPointer(self).EasingDirection;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_page_layout_easing_direction_set_easing_direction(self, value)\n\tgetPointer(self).EasingDirection = value;\nend\nfunction abi.ffi.property_getter_ui_page_layout_easing_style(self)\n\tlocal result_0 = getPointer(self).EasingStyle;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_page_layout_easing_style_set_easing_style(self, value)\n\tgetPointer(self).EasingStyle = value;\nend\nfunction abi.ffi.property_getter_ui_page_layout_gamepad_input_enabled(self)\n\tlocal result_0 = getPointer(self).GamepadInputEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_ui_page_layout_gamepad_input_enabled_set_gamepad_input_enabled(self, value)\n\tgetPointer(self).GamepadInputEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_ui_page_layout_padding(self)\n\tlocal result_0 = getPointer(self).Padding;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_ui_page_layout_padding_set_padding(self, value)\n\tgetPointer(self).Padding = getPointer(value);\nend\nfunction abi.ffi.property_getter_ui_page_layout_scroll_wheel_input_enabled(self)\n\tlocal result_0 = getPointer(self).ScrollWheelInputEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_ui_page_layout_scroll_wheel_input_enabled_set_scroll_wheel_input_enabled(self, value)\n\tgetPointer(self).ScrollWheelInputEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_ui_page_layout_touch_input_enabled(self)\n\tlocal result_0 = getPointer(self).TouchInputEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_ui_page_layout_touch_input_enabled_set_touch_input_enabled(self, value)\n\tgetPointer(self).TouchInputEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_ui_page_layout_tween_time(self)\n\tlocal result_0 = getPointer(self).TweenTime;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_page_layout_tween_time_set_tween_time(self, value)\n\tgetPointer(self).TweenTime = value;\nend\nfunction abi.ffi.method_ui_page_layout_jump_to(self, page)\n\tgetPointer(self):JumpTo(getPointer(page))\nend\nfunction abi.ffi.method_ui_page_layout_jump_to_index(self, index)\n\tgetPointer(self):JumpToIndex(index)\nend\nfunction abi.ffi.method_ui_page_layout_next(self)\n\tgetPointer(self):Next()\nend\nfunction abi.ffi.method_ui_page_layout_previous(self)\n\tgetPointer(self):Previous()\nend\nfunction abi.ffi.event_ui_page_layout_page_enter_on_page_enter(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PageEnter:Connect(function(page)\n\t\tlocal page_optional, page_optional_0 = 0, 0;\n\t\tif (page ~= nil) then\n\t\t\tpage_optional, page_optional_0 = 1, createPointer(page);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, page_optional, page_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_ui_page_layout_page_leave_on_page_leave(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PageLeave:Connect(function(page)\n\t\tlocal page_optional, page_optional_0 = 0, 0;\n\t\tif (page ~= nil) then\n\t\t\tpage_optional, page_optional_0 = 1, createPointer(page);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, page_optional, page_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_ui_page_layout_stopped_on_stopped(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Stopped:Connect(function(current_page)\n\t\tlocal current_page_optional, current_page_optional_0 = 0, 0;\n\t\tif (current_page ~= nil) then\n\t\t\tcurrent_page_optional, current_page_optional_0 = 1, createPointer(current_page);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, current_page_optional, current_page_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_ui_table_layout_fill_empty_space_columns(self)\n\tlocal result_0 = getPointer(self).FillEmptySpaceColumns;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_ui_table_layout_fill_empty_space_columns_set_fill_empty_space_columns(self, value)\n\tgetPointer(self).FillEmptySpaceColumns = value == 1;\nend\nfunction abi.ffi.property_getter_ui_table_layout_fill_empty_space_rows(self)\n\tlocal result_0 = getPointer(self).FillEmptySpaceRows;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_ui_table_layout_fill_empty_space_rows_set_fill_empty_space_rows(self, value)\n\tgetPointer(self).FillEmptySpaceRows = value == 1;\nend\nfunction abi.ffi.property_getter_ui_table_layout_major_axis(self)\n\tlocal result_0 = getPointer(self).MajorAxis;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_table_layout_major_axis_set_major_axis(self, value)\n\tgetPointer(self).MajorAxis = value;\nend\nfunction abi.ffi.property_getter_ui_table_layout_padding(self)\n\tlocal result_0 = getPointer(self).Padding;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_ui_table_layout_padding_set_padding(self, value)\n\tgetPointer(self).Padding = getPointer(value);\nend\nfunction abi.ffi.property_getter_ui_padding_padding_bottom(self)\n\tlocal result_0 = getPointer(self).PaddingBottom;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_ui_padding_padding_bottom_set_padding_bottom(self, value)\n\tgetPointer(self).PaddingBottom = getPointer(value);\nend\nfunction abi.ffi.property_getter_ui_padding_padding_left(self)\n\tlocal result_0 = getPointer(self).PaddingLeft;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_ui_padding_padding_left_set_padding_left(self, value)\n\tgetPointer(self).PaddingLeft = getPointer(value);\nend\nfunction abi.ffi.property_getter_ui_padding_padding_right(self)\n\tlocal result_0 = getPointer(self).PaddingRight;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_ui_padding_padding_right_set_padding_right(self, value)\n\tgetPointer(self).PaddingRight = getPointer(value);\nend\nfunction abi.ffi.property_getter_ui_padding_padding_top(self)\n\tlocal result_0 = getPointer(self).PaddingTop;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_ui_padding_padding_top_set_padding_top(self, value)\n\tgetPointer(self).PaddingTop = getPointer(value);\nend\nfunction abi.ffi.property_getter_ui_scale_scale(self)\n\tlocal result_0 = getPointer(self).Scale;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_scale_scale_set_scale(self, value)\n\tgetPointer(self).Scale = value;\nend\nfunction abi.ffi.property_getter_ui_stroke_apply_stroke_mode(self)\n\tlocal result_0 = getPointer(self).ApplyStrokeMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_stroke_apply_stroke_mode_set_apply_stroke_mode(self, value)\n\tgetPointer(self).ApplyStrokeMode = value;\nend\nfunction abi.ffi.property_getter_ui_stroke_color(self)\n\tlocal result_0 = getPointer(self).Color;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_ui_stroke_color_set_color(self, value)\n\tgetPointer(self).Color = getPointer(value);\nend\nfunction abi.ffi.property_getter_ui_stroke_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_ui_stroke_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_ui_stroke_line_join_mode(self)\n\tlocal result_0 = getPointer(self).LineJoinMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_stroke_line_join_mode_set_line_join_mode(self, value)\n\tgetPointer(self).LineJoinMode = value;\nend\nfunction abi.ffi.property_getter_ui_stroke_thickness(self)\n\tlocal result_0 = getPointer(self).Thickness;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_stroke_thickness_set_thickness(self, value)\n\tgetPointer(self).Thickness = value;\nend\nfunction abi.ffi.property_getter_ui_stroke_transparency(self)\n\tlocal result_0 = getPointer(self).Transparency;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_ui_stroke_transparency_set_transparency(self, value)\n\tgetPointer(self).Transparency = value;\nend\nfunction abi.ffi.property_getter_user_game_settings_computer_camera_movement_mode(self)\n\tlocal result_0 = getPointer(self).ComputerCameraMovementMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_user_game_settings_computer_camera_movement_mode_set_computer_camera_movement_mode(self, value)\n\tgetPointer(self).ComputerCameraMovementMode = value;\nend\nfunction abi.ffi.property_getter_user_game_settings_computer_movement_mode(self)\n\tlocal result_0 = getPointer(self).ComputerMovementMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_user_game_settings_computer_movement_mode_set_computer_movement_mode(self, value)\n\tgetPointer(self).ComputerMovementMode = value;\nend\nfunction abi.ffi.property_getter_user_game_settings_control_mode(self)\n\tlocal result_0 = getPointer(self).ControlMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_user_game_settings_control_mode_set_control_mode(self, value)\n\tgetPointer(self).ControlMode = value;\nend\nfunction abi.ffi.property_getter_user_game_settings_gamepad_camera_sensitivity(self)\n\tlocal result_0 = getPointer(self).GamepadCameraSensitivity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_user_game_settings_gamepad_camera_sensitivity_set_gamepad_camera_sensitivity(self, value)\n\tgetPointer(self).GamepadCameraSensitivity = value;\nend\nfunction abi.ffi.property_getter_user_game_settings_mouse_sensitivity(self)\n\tlocal result_0 = getPointer(self).MouseSensitivity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_user_game_settings_mouse_sensitivity_set_mouse_sensitivity(self, value)\n\tgetPointer(self).MouseSensitivity = value;\nend\nfunction abi.ffi.property_getter_user_game_settings_rcc_profiler_record_frame_rate(self)\n\tlocal result_0 = getPointer(self).RCCProfilerRecordFrameRate;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_user_game_settings_rcc_profiler_record_frame_rate_set_rcc_profiler_record_frame_rate(self, value)\n\tgetPointer(self).RCCProfilerRecordFrameRate = value;\nend\nfunction abi.ffi.property_getter_user_game_settings_rcc_profiler_record_time_frame(self)\n\tlocal result_0 = getPointer(self).RCCProfilerRecordTimeFrame;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_user_game_settings_rcc_profiler_record_time_frame_set_rcc_profiler_record_time_frame(self, value)\n\tgetPointer(self).RCCProfilerRecordTimeFrame = value;\nend\nfunction abi.ffi.property_getter_user_game_settings_rotation_type(self)\n\tlocal result_0 = getPointer(self).RotationType;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_user_game_settings_rotation_type_set_rotation_type(self, value)\n\tgetPointer(self).RotationType = value;\nend\nfunction abi.ffi.property_getter_user_game_settings_saved_quality_level(self)\n\tlocal result_0 = getPointer(self).SavedQualityLevel;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_user_game_settings_saved_quality_level_set_saved_quality_level(self, value)\n\tgetPointer(self).SavedQualityLevel = value;\nend\nfunction abi.ffi.property_getter_user_game_settings_touch_camera_movement_mode(self)\n\tlocal result_0 = getPointer(self).TouchCameraMovementMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_user_game_settings_touch_camera_movement_mode_set_touch_camera_movement_mode(self, value)\n\tgetPointer(self).TouchCameraMovementMode = value;\nend\nfunction abi.ffi.property_getter_user_game_settings_touch_movement_mode(self)\n\tlocal result_0 = getPointer(self).TouchMovementMode;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_user_game_settings_touch_movement_mode_set_touch_movement_mode(self, value)\n\tgetPointer(self).TouchMovementMode = value;\nend\nfunction abi.ffi.property_getter_user_game_settings_vr_smooth_rotation_enabled(self)\n\tlocal result_0 = getPointer(self).VRSmoothRotationEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_user_game_settings_vr_smooth_rotation_enabled_set_vr_smooth_rotation_enabled(self, value)\n\tgetPointer(self).VRSmoothRotationEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_user_game_settings_vignette_enabled(self)\n\tlocal result_0 = getPointer(self).VignetteEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_user_game_settings_vignette_enabled_set_vignette_enabled(self, value)\n\tgetPointer(self).VignetteEnabled = value == 1;\nend\nfunction abi.ffi.method_user_game_settings_get_camera_y_invert_value(self)\n\tlocal result_0 = getPointer(self):GetCameraYInvertValue();\n\treturn result_0;\nend\nfunction abi.ffi.method_user_game_settings_get_onboarding_completed(self, onboarding_id_addr, onboarding_id_len)\n\tlocal result_0 = getPointer(self):GetOnboardingCompleted(loadString(memory, onboarding_id_addr, onboarding_id_len));\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_user_game_settings_in_full_screen(self)\n\tlocal result_0 = getPointer(self):InFullScreen();\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_user_game_settings_in_studio_mode(self)\n\tlocal result_0 = getPointer(self):InStudioMode();\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_user_game_settings_set_camera_y_invert_visible(self)\n\tgetPointer(self):SetCameraYInvertVisible()\nend\nfunction abi.ffi.method_user_game_settings_set_gamepad_camera_sensitivity_visible(self)\n\tgetPointer(self):SetGamepadCameraSensitivityVisible()\nend\nfunction abi.ffi.method_user_game_settings_set_onboarding_completed(self, onboarding_id_addr, onboarding_id_len)\n\tgetPointer(self):SetOnboardingCompleted(loadString(memory, onboarding_id_addr, onboarding_id_len))\nend\nfunction abi.ffi.event_user_game_settings_fullscreen_changed_on_fullscreen_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).FullscreenChanged:Connect(function(is_fullscreen)\n\t\tinvokeFunction(callback_data, callback_vtable, is_fullscreen and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_game_settings_studio_mode_changed_on_studio_mode_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).StudioModeChanged:Connect(function(is_studio_mode)\n\t\tinvokeFunction(callback_data, callback_vtable, is_studio_mode and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_user_input_service_accelerometer_enabled(self)\n\tlocal result_0 = getPointer(self).AccelerometerEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_user_input_service_gamepad_enabled(self)\n\tlocal result_0 = getPointer(self).GamepadEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_user_input_service_gyroscope_enabled(self)\n\tlocal result_0 = getPointer(self).GyroscopeEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_user_input_service_keyboard_enabled(self)\n\tlocal result_0 = getPointer(self).KeyboardEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_user_input_service_mouse_behavior(self)\n\tlocal result_0 = getPointer(self).MouseBehavior;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_user_input_service_mouse_behavior_set_mouse_behavior(self, value)\n\tgetPointer(self).MouseBehavior = value;\nend\nfunction abi.ffi.property_getter_user_input_service_mouse_delta_sensitivity(self)\n\tlocal result_0 = getPointer(self).MouseDeltaSensitivity;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_user_input_service_mouse_delta_sensitivity_set_mouse_delta_sensitivity(self, value)\n\tgetPointer(self).MouseDeltaSensitivity = value;\nend\nfunction abi.ffi.property_getter_user_input_service_mouse_enabled(self)\n\tlocal result_0 = getPointer(self).MouseEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_user_input_service_mouse_icon_enabled(self)\n\tlocal result_0 = getPointer(self).MouseIconEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_user_input_service_mouse_icon_enabled_set_mouse_icon_enabled(self, value)\n\tgetPointer(self).MouseIconEnabled = value == 1;\nend\nfunction abi.ffi.property_getter_user_input_service_on_screen_keyboard_position(self)\n\tlocal result_0 = getPointer(self).OnScreenKeyboardPosition;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_user_input_service_on_screen_keyboard_size(self)\n\tlocal result_0 = getPointer(self).OnScreenKeyboardSize;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_user_input_service_on_screen_keyboard_visible(self)\n\tlocal result_0 = getPointer(self).OnScreenKeyboardVisible;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_user_input_service_touch_enabled(self)\n\tlocal result_0 = getPointer(self).TouchEnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_user_input_service_vr_enabled(self)\n\tlocal result_0 = getPointer(self).VREnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_user_input_service_gamepad_supports(self, gamepad_num, gamepad_key_code)\n\tlocal result_0 = getPointer(self):GamepadSupports(gamepad_num, gamepad_key_code);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_user_input_service_get_device_acceleration(self)\n\tlocal result_0 = getPointer(self):GetDeviceAcceleration();\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_user_input_service_get_device_gravity(self)\n\tlocal result_0 = getPointer(self):GetDeviceGravity();\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_user_input_service_get_focused_text_box(self)\n\tlocal result_0 = getPointer(self):GetFocusedTextBox();\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_user_input_service_get_gamepad_connected(self, gamepad_num)\n\tlocal result_0 = getPointer(self):GetGamepadConnected(gamepad_num);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_user_input_service_get_last_input_type(self)\n\tlocal result_0 = getPointer(self):GetLastInputType();\n\treturn result_0;\nend\nfunction abi.ffi.method_user_input_service_get_mouse_delta(self)\n\tlocal result_0 = getPointer(self):GetMouseDelta();\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_user_input_service_get_mouse_location(self)\n\tlocal result_0 = getPointer(self):GetMouseLocation();\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_user_input_service_get_string_for_key_code(self, key_code)\n\tlocal result_0 = getPointer(self):GetStringForKeyCode(key_code);\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.method_user_input_service_get_user_c_frame(self, type)\n\tlocal result_0 = getPointer(self):GetUserCFrame(type);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_user_input_service_is_gamepad_button_down(self, gamepad_num, gamepad_key_code)\n\tlocal result_0 = getPointer(self):IsGamepadButtonDown(gamepad_num, gamepad_key_code);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_user_input_service_is_key_down(self, key_code)\n\tlocal result_0 = getPointer(self):IsKeyDown(key_code);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_user_input_service_is_mouse_button_pressed(self, mouse_button)\n\tlocal result_0 = getPointer(self):IsMouseButtonPressed(mouse_button);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_user_input_service_is_navigation_gamepad(self, gamepad_enum)\n\tlocal result_0 = getPointer(self):IsNavigationGamepad(gamepad_enum);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_user_input_service_recenter_user_head_c_frame(self)\n\tgetPointer(self):RecenterUserHeadCFrame()\nend\nfunction abi.ffi.method_user_input_service_set_navigation_gamepad(self, gamepad_enum, enabled)\n\tgetPointer(self):SetNavigationGamepad(gamepad_enum, enabled == 1)\nend\nfunction abi.ffi.event_user_input_service_device_acceleration_changed_on_device_acceleration_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).DeviceAccelerationChanged:Connect(function(acceleration)\n\t\tlocal acceleration_optional, acceleration_optional_0 = 0, 0;\n\t\tif (acceleration ~= nil) then\n\t\t\tacceleration_optional, acceleration_optional_0 = 1, createPointer(acceleration);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, acceleration_optional, acceleration_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_device_gravity_changed_on_device_gravity_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).DeviceGravityChanged:Connect(function(gravity)\n\t\tlocal gravity_optional, gravity_optional_0 = 0, 0;\n\t\tif (gravity ~= nil) then\n\t\t\tgravity_optional, gravity_optional_0 = 1, createPointer(gravity);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, gravity_optional, gravity_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_device_rotation_changed_on_device_rotation_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).DeviceRotationChanged:Connect(function(rotation, cframe)\n\t\tlocal rotation_optional, rotation_optional_0 = 0, 0;\n\t\tif (rotation ~= nil) then\n\t\t\trotation_optional, rotation_optional_0 = 1, createPointer(rotation);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, rotation_optional, rotation_optional_0, createPointer(cframe))\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_gamepad_connected_on_gamepad_connected(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).GamepadConnected:Connect(function(gamepad_num)\n\t\tinvokeFunction(callback_data, callback_vtable, gamepad_num)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_gamepad_disconnected_on_gamepad_disconnected(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).GamepadDisconnected:Connect(function(gamepad_num)\n\t\tinvokeFunction(callback_data, callback_vtable, gamepad_num)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_input_began_on_input_began(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).InputBegan:Connect(function(input, game_processed_event)\n\t\tlocal input_optional, input_optional_0 = 0, 0;\n\t\tif (input ~= nil) then\n\t\t\tinput_optional, input_optional_0 = 1, createPointer(input);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, input_optional, input_optional_0, game_processed_event and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_input_changed_on_input_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).InputChanged:Connect(function(input, game_processed_event)\n\t\tlocal input_optional, input_optional_0 = 0, 0;\n\t\tif (input ~= nil) then\n\t\t\tinput_optional, input_optional_0 = 1, createPointer(input);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, input_optional, input_optional_0, game_processed_event and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_input_ended_on_input_ended(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).InputEnded:Connect(function(input, game_processed_event)\n\t\tlocal input_optional, input_optional_0 = 0, 0;\n\t\tif (input ~= nil) then\n\t\t\tinput_optional, input_optional_0 = 1, createPointer(input);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, input_optional, input_optional_0, game_processed_event and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_jump_request_on_jump_request(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).JumpRequest:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_last_input_type_changed_on_last_input_type_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).LastInputTypeChanged:Connect(function(last_input_type)\n\t\tinvokeFunction(callback_data, callback_vtable, last_input_type)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_pointer_action_on_pointer_action(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).PointerAction:Connect(function(wheel, pan, pinch, game_processed_event)\n\t\tinvokeFunction(callback_data, callback_vtable, wheel, createPointer(pan), pinch, game_processed_event and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_text_box_focus_released_on_text_box_focus_released(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).TextBoxFocusReleased:Connect(function(textbox_released)\n\t\tlocal textbox_released_optional, textbox_released_optional_0 = 0, 0;\n\t\tif (textbox_released ~= nil) then\n\t\t\ttextbox_released_optional, textbox_released_optional_0 = 1, createPointer(textbox_released);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, textbox_released_optional, textbox_released_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_text_box_focused_on_text_box_focused(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).TextBoxFocused:Connect(function(textbox_focused)\n\t\tlocal textbox_focused_optional, textbox_focused_optional_0 = 0, 0;\n\t\tif (textbox_focused ~= nil) then\n\t\t\ttextbox_focused_optional, textbox_focused_optional_0 = 1, createPointer(textbox_focused);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, textbox_focused_optional, textbox_focused_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_touch_ended_on_touch_ended(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).TouchEnded:Connect(function(touch, game_processed_event)\n\t\tlocal touch_optional, touch_optional_0 = 0, 0;\n\t\tif (touch ~= nil) then\n\t\t\ttouch_optional, touch_optional_0 = 1, createPointer(touch);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, touch_optional, touch_optional_0, game_processed_event and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_touch_moved_on_touch_moved(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).TouchMoved:Connect(function(touch, game_processed_event)\n\t\tlocal touch_optional, touch_optional_0 = 0, 0;\n\t\tif (touch ~= nil) then\n\t\t\ttouch_optional, touch_optional_0 = 1, createPointer(touch);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, touch_optional, touch_optional_0, game_processed_event and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_touch_started_on_touch_started(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).TouchStarted:Connect(function(touch, game_processed_event)\n\t\tlocal touch_optional, touch_optional_0 = 0, 0;\n\t\tif (touch ~= nil) then\n\t\t\ttouch_optional, touch_optional_0 = 1, createPointer(touch);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, touch_optional, touch_optional_0, game_processed_event and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_touch_swipe_on_touch_swipe(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).TouchSwipe:Connect(function(swipe_direction, number_of_touches, game_processed_event)\n\t\tinvokeFunction(callback_data, callback_vtable, swipe_direction, number_of_touches, game_processed_event and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_touch_tap_in_world_on_touch_tap_in_world(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).TouchTapInWorld:Connect(function(position, processed_by_ui)\n\t\tinvokeFunction(callback_data, callback_vtable, createPointer(position), processed_by_ui and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_user_c_frame_changed_on_user_c_frame_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).UserCFrameChanged:Connect(function(type, value)\n\t\tinvokeFunction(callback_data, callback_vtable, type, createPointer(value))\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_window_focus_released_on_window_focus_released(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).WindowFocusReleased:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_user_input_service_window_focused_on_window_focused(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).WindowFocused:Connect(function()\n\t\tinvokeFunction(callback_data, callback_vtable)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_user_input_service_get_keys_pressed(self)\n\tlocal result_0 = getPointer(self):GetKeysPressed();\n\tlocal result_0_len = #result_0;\n\tlocal result_0_vec = allocVec(result_0_len * 4)\n\tfor i = 1, result_0_len do\n\t\tlocal result_0_vec_value = result_0[i];\n\t\tstoreU32(memory, result_0_vec + (i - 1) * 4 + 0, result_0_vec_value);\n\tend\n\treturn result_0_vec, result_0_len;\nend\nfunction abi.ffi.property_getter_vr_service_gui_input_user_c_frame(self)\n\tlocal result_0 = getPointer(self).GuiInputUserCFrame;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_vr_service_gui_input_user_c_frame_set_gui_input_user_c_frame(self, value)\n\tgetPointer(self).GuiInputUserCFrame = value;\nend\nfunction abi.ffi.property_getter_vr_service_vr_enabled(self)\n\tlocal result_0 = getPointer(self).VREnabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_vr_service_get_touchpad_mode(self, pad)\n\tlocal result_0 = getPointer(self):GetTouchpadMode(pad);\n\treturn result_0;\nend\nfunction abi.ffi.method_vr_service_get_user_c_frame(self, type)\n\tlocal result_0 = getPointer(self):GetUserCFrame(type);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_vr_service_get_user_c_frame_enabled(self, type)\n\tlocal result_0 = getPointer(self):GetUserCFrameEnabled(type);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_vr_service_recenter_user_head_c_frame(self)\n\tgetPointer(self):RecenterUserHeadCFrame()\nend\nfunction abi.ffi.method_vr_service_request_navigation(self, cframe, input_user_c_frame)\n\tgetPointer(self):RequestNavigation(getPointer(cframe), input_user_c_frame)\nend\nfunction abi.ffi.method_vr_service_set_touchpad_mode(self, pad, mode)\n\tgetPointer(self):SetTouchpadMode(pad, mode)\nend\nfunction abi.ffi.event_vr_service_navigation_requested_on_navigation_requested(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).NavigationRequested:Connect(function(cframe, input_user_c_frame)\n\t\tinvokeFunction(callback_data, callback_vtable, createPointer(cframe), input_user_c_frame)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_vr_service_touchpad_mode_changed_on_touchpad_mode_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).TouchpadModeChanged:Connect(function(pad, mode)\n\t\tinvokeFunction(callback_data, callback_vtable, pad, mode)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_vr_service_user_c_frame_changed_on_user_c_frame_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).UserCFrameChanged:Connect(function(type, value)\n\t\tinvokeFunction(callback_data, callback_vtable, type, createPointer(value))\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.event_vr_service_user_c_frame_enabled_on_user_c_frame_enabled(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).UserCFrameEnabled:Connect(function(type, enabled)\n\t\tinvokeFunction(callback_data, callback_vtable, type, enabled and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_bool_value_value(self)\n\tlocal result_0 = getPointer(self).Value;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_bool_value_value_set_value(self, value)\n\tgetPointer(self).Value = value == 1;\nend\nfunction abi.ffi.event_bool_value_changed_on_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Changed:Connect(function(value)\n\t\tinvokeFunction(callback_data, callback_vtable, value and 1 or 0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_brick_color_value_value(self)\n\tlocal result_0 = getPointer(self).Value;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_brick_color_value_value_set_value(self, value)\n\tgetPointer(self).Value = getPointer(value);\nend\nfunction abi.ffi.event_brick_color_value_changed_on_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Changed:Connect(function(value)\n\t\tinvokeFunction(callback_data, callback_vtable, createPointer(value))\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_c_frame_value_value(self)\n\tlocal result_0 = getPointer(self).Value;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_c_frame_value_value_set_value(self, value)\n\tgetPointer(self).Value = getPointer(value);\nend\nfunction abi.ffi.event_c_frame_value_changed_on_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Changed:Connect(function(value)\n\t\tinvokeFunction(callback_data, callback_vtable, createPointer(value))\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_color_3_value_value(self)\n\tlocal result_0 = getPointer(self).Value;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_color_3_value_value_set_value(self, value)\n\tgetPointer(self).Value = getPointer(value);\nend\nfunction abi.ffi.event_color_3_value_changed_on_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Changed:Connect(function(value)\n\t\tinvokeFunction(callback_data, callback_vtable, createPointer(value))\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_int_value_value(self)\n\tlocal result_0 = getPointer(self).Value;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_int_value_value_set_value(self, value)\n\tgetPointer(self).Value = value;\nend\nfunction abi.ffi.event_int_value_changed_on_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Changed:Connect(function(value)\n\t\tinvokeFunction(callback_data, callback_vtable, value)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_number_value_value(self)\n\tlocal result_0 = getPointer(self).Value;\n\treturn result_0;\nend\nfunction abi.ffi.property_setter_number_value_value_set_value(self, value)\n\tgetPointer(self).Value = value;\nend\nfunction abi.ffi.event_number_value_changed_on_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Changed:Connect(function(value)\n\t\tinvokeFunction(callback_data, callback_vtable, value)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_object_value_value(self)\n\tlocal result_0 = getPointer(self).Value;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_object_value_value_set_value(self, value)\n\tgetPointer(self).Value = getPointer(value);\nend\nfunction abi.ffi.event_object_value_changed_on_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Changed:Connect(function(value)\n\t\tlocal value_optional, value_optional_0 = 0, 0;\n\t\tif (value ~= nil) then\n\t\t\tvalue_optional, value_optional_0 = 1, createPointer(value);\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, value_optional, value_optional_0)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_ray_value_value(self)\n\tlocal result_0 = getPointer(self).Value;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_ray_value_value_set_value(self, value)\n\tgetPointer(self).Value = getPointer(value);\nend\nfunction abi.ffi.event_ray_value_changed_on_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Changed:Connect(function(value)\n\t\tinvokeFunction(callback_data, callback_vtable, createPointer(value))\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_string_value_value(self)\n\tlocal result_0 = getPointer(self).Value;\n\tlocal result_0_len = #result_0;\n\tlocal result_0_content = allocString(result_0_len);\n\tfor i = 1, result_0_len do\n\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\tend\n\treturn result_0_content, result_0_len;\nend\nfunction abi.ffi.property_setter_string_value_value_set_value(self, value_addr, value_len)\n\tgetPointer(self).Value = loadString(memory, value_addr, value_len);\nend\nfunction abi.ffi.event_string_value_changed_on_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Changed:Connect(function(value)\n\t\tlocal value_len = #value;\n\t\tlocal value_content = allocString(value_len);\n\t\tfor i = 1, value_len do\n\t\t\tstoreU8(memory, value_content + (i - 1), string.byte(value:sub(i, i)));\n\t\tend\n\t\tinvokeFunction(callback_data, callback_vtable, value_content, value_len)\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_vector_3_value_value(self)\n\tlocal result_0 = getPointer(self).Value;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_setter_vector_3_value_value_set_value(self, value)\n\tgetPointer(self).Value = getPointer(value);\nend\nfunction abi.ffi.event_vector_3_value_changed_on_changed(self, callback_data, callback_vtable)\n\tlocal result_0 = createConnection(callback_data, callback_vtable, getPointer(self).Changed:Connect(function(value)\n\t\tinvokeFunction(callback_data, callback_vtable, createPointer(value))\n\tend));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_vector_3_curve_x(self)\n\tlocal result_0 = getPointer(self):X();\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_vector_3_curve_y(self)\n\tlocal result_0 = getPointer(self):Y();\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_vector_3_curve_z(self)\n\tlocal result_0 = getPointer(self):Z();\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.method_voice_chat_internal_is_voice_enabled_for_user_id_async(self, user_id)\n\tlocal result_0 = getPointer(self):IsVoiceEnabledForUserIdAsync(user_id);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_voice_chat_service_is_voice_enabled_for_user_id_async(self, user_id)\n\tlocal result_0 = getPointer(self):IsVoiceEnabledForUserIdAsync(user_id);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_voice_source_user_id(self)\n\tlocal result_0 = getPointer(self).UserId;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_weld_constraint_active(self)\n\tlocal result_0 = getPointer(self).Active;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_getter_weld_constraint_enabled(self)\n\tlocal result_0 = getPointer(self).Enabled;\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.property_setter_weld_constraint_enabled_set_enabled(self, value)\n\tgetPointer(self).Enabled = value == 1;\nend\nfunction abi.ffi.property_getter_weld_constraint_part_0(self)\n\tlocal result_0 = getPointer(self).Part0;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_weld_constraint_part_0_set_part_0(self, value)\n\tgetPointer(self).Part0 = getPointer(value);\nend\nfunction abi.ffi.property_getter_weld_constraint_part_1(self)\n\tlocal result_0 = getPointer(self).Part1;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, createPointer(result_0);\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.property_setter_weld_constraint_part_1_set_part_1(self, value)\n\tgetPointer(self).Part1 = getPointer(value);\nend\nfunction abi.ffi.pointer_conversion_internal_string_to_lua_value(string_addr, string_len)\n\tlocal result_0 = loadString(memory, string_addr, string_len);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.pointer_conversion_internal_float_to_lua_value(float)\n\tlocal result_0 = float;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.primitive_conversion_internal_lua_value_to_string(value)\n\tlocal text = getPointer(value);\n\tlocal result_0 = if type(text) == "string" then text else nil;\n\tlocal result_0_optional, result_0_optional_0, result_0_optional_1 = 0, 0, 0;\n\tif (result_0 ~= nil) then\n\t\tlocal result_0_len = #result_0;\n\t\tlocal result_0_content = allocString(result_0_len);\n\t\tfor i = 1, result_0_len do\n\t\t\tstoreU8(memory, result_0_content + (i - 1), string.byte(result_0:sub(i, i)));\n\t\tend\n\t\tresult_0_optional, result_0_optional_0, result_0_optional_1 = 1, result_0_content, result_0_len;\n\tend\n\treturn result_0_optional, result_0_optional_0, result_0_optional_1;\nend\nfunction abi.ffi.primitive_conversion_internal_lua_value_to_float(value)\n\tlocal text = getPointer(value);\n\tlocal result_0 = if type(text) == "number" then text else nil;\n\tlocal result_0_optional, result_0_optional_0 = 0, 0;\n\tif (result_0 ~= nil) then\n\t\tresult_0_optional, result_0_optional_0 = 1, result_0;\n\tend\n\treturn result_0_optional, result_0_optional_0;\nend\nfunction abi.ffi.static_function_internal_new_instance_new(class_name_addr, class_name_len)\n\tlocal result_0 = Instance.new(loadString(memory, class_name_addr, class_name_len));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.static_function_vector_3_new()\n\tlocal result_0 = Vector3.new();\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.static_function_vector_3_new_new_with_position(x, y, z)\n\tlocal result_0 = Vector3.new(x, y, z);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.static_function_vector_3_new_new_with_vector_3(v3)\n\tlocal result_0 = Vector3.new(getPointer(v3));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.static_function_vector_3_new_new_with_normal(normal)\n\tlocal result_0 = Vector3.new(normal);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.static_function_vector_3_new_new_with_axis(axis)\n\tlocal result_0 = Vector3.new(axis);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.static_property_vector_3_zero()\n\tlocal result_0 = Vector3.zero;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.static_property_vector_3_one()\n\tlocal result_0 = Vector3.one;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.static_property_vector_3_x_axis()\n\tlocal result_0 = Vector3.xAxis;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.static_property_vector_3_y_axis()\n\tlocal result_0 = Vector3.yAxis;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.static_property_vector_3_z_axis()\n\tlocal result_0 = Vector3.zAxis;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_vector_3_x(self)\n\tlocal result_0 = getPointer(self).X;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_vector_3_y(self)\n\tlocal result_0 = getPointer(self).Y;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_vector_3_z(self)\n\tlocal result_0 = getPointer(self).Z;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_vector_3_magnitude(self)\n\tlocal result_0 = getPointer(self).Magnitude;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_vector_3_unit(self)\n\tlocal result_0 = getPointer(self).Unit;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_vector_3_lerp(self, goal, alpha)\n\tlocal result_0 = getPointer(self):Lerp(getPointer(goal), alpha);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_vector_3_cross(self, other)\n\tlocal result_0 = getPointer(self):Cross(getPointer(other));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_vector_3_angle(self, other, axis)\n\tlocal result_0 = getPointer(self):Angle(getPointer(other), getPointer(axis));\n\treturn result_0;\nend\nfunction abi.ffi.method_vector_3_dot(self, other)\n\tlocal result_0 = getPointer(self):Dot(getPointer(other));\n\treturn result_0;\nend\nfunction abi.ffi.method_vector_3_fuzzy_eq(self, other, epsilon)\n\tlocal result_0 = getPointer(self):FuzzyEq(getPointer(other), epsilon);\n\treturn result_0 and 1 or 0;\nend\nfunction abi.ffi.method_vector_3_max(self, others_addr, others_len)\n\tlocal others_vec = table.create(others_len);\n\tfor i = 1, others_len do\n\t\tlocal vecElement_0 = loadU32(memory, others_addr + (i - 1) * 4 + 0)\n\t\tothers_vec[i] = getPointer(vecElement_0);\n\tend\n\tlocal result_0 = getPointer(self):Max(unpack(others_vec, 1, others_len));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_vector_3_min(self, others_addr, others_len)\n\tlocal others_vec = table.create(others_len);\n\tfor i = 1, others_len do\n\t\tlocal vecElement_0 = loadU32(memory, others_addr + (i - 1) * 4 + 0)\n\t\tothers_vec[i] = getPointer(vecElement_0);\n\tend\n\tlocal result_0 = getPointer(self):Min(unpack(others_vec, 1, others_len));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.un_op_vector_3_neg(self)\n\tlocal result_0 = -getPointer(self);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.bin_op_vector_3_add_vector_3_add(self, value)\n\tlocal result_0 = getPointer(self) + getPointer(value);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.bin_op_vector_3_sub_vector_3_sub(self, value)\n\tlocal result_0 = getPointer(self) - getPointer(value);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.bin_op_vector_3_div_vector_3_div(self, value)\n\tlocal result_0 = getPointer(self) / getPointer(value);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.bin_op_vector_3_div_number_div(self, value)\n\tlocal result_0 = getPointer(self) / value;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.bin_op_vector_3_mul_vector_3_mul(self, value)\n\tlocal result_0 = getPointer(self) * getPointer(value);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.bin_op_vector_3_mul_number_mul(self, value)\n\tlocal result_0 = getPointer(self) * value;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.static_function_c_frame_new()\n\tlocal result_0 = CFrame.new();\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.static_function_c_frame_new_new_with_position(x, y, z)\n\tlocal result_0 = CFrame.new(x, y, z);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_c_frame_position(self)\n\tlocal result_0 = getPointer(self).Position;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_c_frame_rotation(self)\n\tlocal result_0 = getPointer(self).Rotation;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_c_frame_look_vector(self)\n\tlocal result_0 = getPointer(self).LookVector;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_c_frame_right_vector(self)\n\tlocal result_0 = getPointer(self).RightVector;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_c_frame_up_vector(self)\n\tlocal result_0 = getPointer(self).UpVector;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_c_frame_x_vector(self)\n\tlocal result_0 = getPointer(self).XVector;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_c_frame_y_vector(self)\n\tlocal result_0 = getPointer(self).YVector;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_c_frame_z_vector(self)\n\tlocal result_0 = getPointer(self).ZVector;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_c_frame_x(self)\n\tlocal result_0 = getPointer(self).X;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_c_frame_y(self)\n\tlocal result_0 = getPointer(self).Y;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_c_frame_z(self)\n\tlocal result_0 = getPointer(self).Z;\n\treturn result_0;\nend\nfunction abi.ffi.method_c_frame_inverse(self)\n\tlocal result_0 = getPointer(self):Inverse();\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_c_frame_lerp(self, goal, alpha)\n\tlocal result_0 = getPointer(self):Lerp(getPointer(goal), alpha);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_c_frame_orthonormalize(self)\n\tlocal result_0 = getPointer(self):Orthonormalize();\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_c_frame_to_world_space(self, cf)\n\tlocal result_0 = getPointer(self):ToWorldSpace(getPointer(cf));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_c_frame_to_object_space(self, cf)\n\tlocal result_0 = getPointer(self):ToObjectSpace(getPointer(cf));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_c_frame_point_to_world_space(self, v3)\n\tlocal result_0 = getPointer(self):PointToWorldSpace(getPointer(v3));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_c_frame_point_to_object_space(self, v3)\n\tlocal result_0 = getPointer(self):PointToObjectSpace(getPointer(v3));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_c_frame_vector_to_world_space(self, v3)\n\tlocal result_0 = getPointer(self):VectorToWorldSpace(getPointer(v3));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_c_frame_vector_to_object_space(self, v3)\n\tlocal result_0 = getPointer(self):VectorToObjectSpace(getPointer(v3));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.method_c_frame_get_components(self)\n\tlocal result_0 = { getPointer(self):GetComponents() }\n\tlocal result_0_len = #result_0;\n\tlocal result_0_vec = allocVec(result_0_len * 8)\n\tfor i = 1, result_0_len do\n\t\tlocal result_0_vec_value = result_0[i];\n\t\tstoreFloat(memory, result_0_vec + (i - 1) * 8 + 0, result_0_vec_value);\n\tend\n\treturn result_0_vec, result_0_len;\nend\nfunction abi.ffi.bin_op_c_frame_add_vector_3_add(self, value)\n\tlocal result_0 = getPointer(self) + getPointer(value);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.bin_op_c_frame_sub_vector_3_sub(self, value)\n\tlocal result_0 = getPointer(self) - getPointer(value);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.bin_op_c_frame_mul_cframe_mul(self, value)\n\tlocal result_0 = getPointer(self) * getPointer(value);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.bin_op_c_frame_mul_vector_3_mul(self, value)\n\tlocal result_0 = getPointer(self) * getPointer(value);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.static_function_color_3_new(r, g, b)\n\tlocal result_0 = Color3.new(r, g, b);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.static_function_color_3_from_rgb(r, g, b)\n\tlocal result_0 = Color3.fromRGB(r, g, b);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.static_function_color_3_from_hsv(h, s, v)\n\tlocal result_0 = Color3.fromHSV(h, s, v);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_color_3_r(self)\n\tlocal result_0 = getPointer(self).R;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_color_3_g(self)\n\tlocal result_0 = getPointer(self).G;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_color_3_b(self)\n\tlocal result_0 = getPointer(self).B;\n\treturn result_0;\nend\nfunction abi.ffi.static_function_u_dim_new(scale, offset)\n\tlocal result_0 = UDim.new(scale, offset);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_u_dim_scale(self)\n\tlocal result_0 = getPointer(self).Scale;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_u_dim_offset(self)\n\tlocal result_0 = getPointer(self).Offset;\n\treturn result_0;\nend\nfunction abi.ffi.static_function_u_dim_2_new()\n\tlocal result_0 = UDim2.new();\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.static_function_u_dim_2_new_new_with_components(x_scale, x_offset, y_scale, y_offset)\n\tlocal result_0 = UDim2.new(x_scale, x_offset, y_scale, y_offset);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.static_function_u_dim_2_new_new_with_udims(x, y)\n\tlocal result_0 = UDim2.new(getPointer(x), getPointer(y));\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.static_function_u_dim_2_from_scale(x, y)\n\tlocal result_0 = UDim2.fromScale(x, y);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.static_function_u_dim_2_from_offset(x_offset, y_offset)\n\tlocal result_0 = UDim2.fromOffset(x_offset, y_offset);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_u_dim_2_x(self)\n\tlocal result_0 = getPointer(self).X;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_u_dim_2_y(self)\n\tlocal result_0 = getPointer(self).Y;\n\treturn result_0;\nend\nfunction abi.ffi.property_getter_u_dim_2_width(self)\n\tlocal result_0 = getPointer(self).Width;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.property_getter_u_dim_2_height(self)\n\tlocal result_0 = getPointer(self).Height;\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.bin_op_u_dim_2_add_udim_2_add(self, value)\n\tlocal result_0 = getPointer(self) + getPointer(value);\n\treturn createPointer(result_0);\nend\nfunction abi.ffi.bin_op_u_dim_2_sub_udim_2_sub(self, value)\n\tlocal result_0 = getPointer(self) - getPointer(value);\n\treturn createPointer(result_0);\nend\nlocal function lua_value_number(value)\n\treturn createPointer(value);\nend\nabi.ffi.lua_value_f32 = lua_value_number;\nabi.ffi.lua_value_f64 = lua_value_number;\nabi.ffi.lua_value_i8 = lua_value_number;\nabi.ffi.lua_value_i16 = lua_value_number;\nabi.ffi.lua_value_i32 = lua_value_number;\nabi.ffi.lua_value_i64 = lua_value_number;\nabi.ffi.lua_value_u8 = lua_value_number;\nabi.ffi.lua_value_u16 = lua_value_number;\nabi.ffi.lua_value_u32 = lua_value_number;\nabi.ffi.lua_value_u64 = lua_value_number;\nabi.ffi.lua_value_usize = lua_value_number;\nabi.ffi.lua_value_isize = lua_value_number;\nreturn abi; '
_1d676e0792d362a6f550eb714bc6d053.Parent=_c74059b4194a15f07e05845f854df742 local
_31b9b6a4c58a3189c2f977da6212bf91=Instance.new('ModuleScript')
_31b9b6a4c58a3189c2f977da6212bf91.Name='runtime'sourceMap[
_31b9b6a4c58a3189c2f977da6212bf91]=
' local Integer = (function()\n\tlocal Numeric = {}\n\n\tlocal NUM_ZERO, NUM_ONE, NUM_SIX_FOUR\n\tlocal NUM_BIT_26, NUM_BIT_52\n\n\tlocal bit_lshift = bit32.lshift\n\tlocal bit_rshift = bit32.rshift\n\tlocal bit_arshift = bit32.arshift\n\n\tlocal bit_and = bit32.band\n\tlocal bit_or = bit32.bor\n\tlocal bit_xor = bit32.bxor\n\tlocal bit_not = bit32.bnot\n\n\tlocal bit_extract = bit32.extract\n\tlocal bit_replace = bit32.replace\n\n\tlocal from_u32, from_u64, into_u64\n\tlocal num_subtract, num_divide_unsigned, num_negate\n\tlocal num_or, num_shift_left, num_shift_right_unsigned\n\tlocal num_is_negative, num_is_zero, num_is_less_unsigned\n\n\t-- X: a[0 ..21]\n\t-- Y: a[22..31]\n\t--  | b[0 ..11]\n\t-- Z: b[12..31]\n\tlocal constructor = Vector3.new\n\n\tfunction Numeric.from_u32(data_1, data_2)\n\t\tlocal x = bit_and(data_1, 0x3FFFFF)\n\t\tlocal y = bit_and(data_2, 0x3FFFFF)\n\t\tlocal z = bit_replace(bit_rshift(data_1, 22), bit_rshift(data_2, 22), 10, 10)\n\n\t\treturn constructor(x, y, z)\n\tend\n\n\tlocal function load_d1(value)\n\t\treturn bit_replace(bit_and(value.X, 0x3FFFFF), value.Z, 22, 10)\n\tend\n\n\tlocal function load_d2(value)\n\t\treturn bit_replace(bit_and(value.Y, 0x3FFFFF), bit_rshift(value.Z, 10), 22, 10)\n\tend\n\n\tfunction Numeric.into_u32(value)\n\t\treturn load_d1(value), load_d2(value)\n\tend\n\n\tfunction Numeric.from_u64(value)\n\t\treturn from_u32(bit_and(value % 0x100000000), bit_and(value / 0x100000000))\n\tend\n\n\tfunction Numeric.into_u64(value)\n\t\treturn load_d1(value) + load_d2(value) * 0x100000000\n\tend\n\n\tfunction Numeric.add(lhs, rhs)\n\t\tlocal data_1 = load_d1(lhs) + load_d1(rhs)\n\t\tlocal data_2 = load_d2(lhs) + load_d2(rhs)\n\n\t\tif data_1 >= 0x100000000 then\n\t\t\tdata_1 = data_1 - 0x100000000\n\t\t\tdata_2 = data_2 + 1\n\t\tend\n\n\t\tif data_2 >= 0x100000000 then\n\t\t\tdata_2 = data_2 - 0x100000000\n\t\tend\n\n\t\treturn from_u32(data_1, data_2)\n\tend\n\n\tfunction Numeric.subtract(lhs, rhs)\n\t\tlocal data_1 = load_d1(lhs) - load_d1(rhs)\n\t\tlocal data_2 = load_d2(lhs) - load_d2(rhs)\n\n\t\tif data_1 < 0 then\n\t\t\tdata_1 = data_1 + 0x100000000\n\t\t\tdata_2 = data_2 - 1\n\t\tend\n\n\t\tif data_2 < 0 then\n\t\t\tdata_2 = data_2 + 0x100000000\n\t\tend\n\n\t\treturn from_u32(data_1, data_2)\n\tend\n\n\tfunction Numeric.multiply(lhs, rhs)\n\t\tif num_is_zero(lhs) or num_is_zero(rhs) then\n\t\t\treturn NUM_ZERO\n\t\telseif num_is_less_unsigned(lhs, NUM_BIT_26) and num_is_less_unsigned(rhs, NUM_BIT_26) then\n\t\t\treturn from_u64(load_d1(lhs) * load_d1(rhs))\n\t\tend\n\n\t\t-- Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n\t\t-- We can skip products that would overflow.\n\t\tlocal lhs_1, lhs_2 = load_d1(lhs), load_d2(lhs)\n\t\tlocal rhs_1, rhs_2 = load_d1(rhs), load_d2(rhs)\n\n\t\tlocal a48 = bit_rshift(lhs_2, 16)\n\t\tlocal a32 = bit_and(lhs_2, 0xFFFF)\n\t\tlocal a16 = bit_rshift(lhs_1, 16)\n\t\tlocal a00 = bit_and(lhs_1, 0xFFFF)\n\n\t\tlocal b48 = bit_rshift(rhs_2, 16)\n\t\tlocal b32 = bit_and(rhs_2, 0xFFFF)\n\t\tlocal b16 = bit_rshift(rhs_1, 16)\n\t\tlocal b00 = bit_and(rhs_1, 0xFFFF)\n\n\t\tlocal c00 = a00 * b00\n\t\tlocal c16 = bit_rshift(c00, 16)\n\n\t\tc00 = bit_and(c00, 0xFFFF)\n\t\tc16 = c16 + a16 * b00\n\n\t\tlocal c32 = bit_rshift(c16, 16)\n\n\t\tc16 = bit_and(c16, 0xFFFF)\n\t\tc16 = c16 + a00 * b16\n\t\tc32 = c32 + bit_rshift(c16, 16)\n\t\tc16 = bit_and(c16, 0xFFFF)\n\t\tc32 = c32 + a32 * b00\n\n\t\tlocal c48 = bit_rshift(c32, 16)\n\n\t\tc32 = bit_and(c32, 0xFFFF)\n\t\tc32 = c32 + a16 * b16\n\t\tc48 = c48 + bit_rshift(c32, 16)\n\t\tc32 = bit_and(c32, 0xFFFF)\n\t\tc32 = c32 + a00 * b32\n\t\tc48 = c48 + bit_rshift(c32, 16)\n\t\tc32 = bit_and(c32, 0xFFFF)\n\t\tc48 = c48 + a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48\n\t\tc48 = bit_and(c48, 0xFFFF)\n\n\t\tlocal data_1 = bit_replace(c00, c16, 16, 16)\n\t\tlocal data_2 = bit_replace(c32, c48, 16, 16)\n\n\t\treturn from_u32(data_1, data_2)\n\tend\n\n\tfunction Numeric.divide_unsigned(lhs, rhs)\n\t\tif num_is_zero(rhs) then\n\t\t\terror("division by zero")\n\t\telseif num_is_zero(lhs) then\n\t\t\treturn NUM_ZERO, NUM_ZERO\n\t\telseif num_is_less_unsigned(lhs, NUM_BIT_52) and num_is_less_unsigned(rhs, NUM_BIT_52) then\n\t\t\tlocal lhs_u = into_u64(lhs)\n\t\t\tlocal rhs_u = into_u64(rhs)\n\n\t\t\treturn from_u64(lhs_u / rhs_u), from_u64(lhs_u % rhs_u)\n\t\tend\n\n\t\tlocal quotient = NUM_ZERO\n\t\tlocal remainder = NUM_ZERO\n\n\t\tlocal num_1, num_2 = load_d1(lhs), load_d2(lhs)\n\n\t\tfor i = 63, 0, -1 do\n\t\t\tlocal temp = num_shift_left(remainder, NUM_ONE)\n\t\t\tlocal rem_1, rem_2 = load_d1(temp), load_d2(temp)\n\n\t\t\tif i > 31 then\n\t\t\t\trem_1 = bit_or(rem_1, bit_extract(num_2, i - 32, 1))\n\t\t\telse\n\t\t\t\trem_1 = bit_or(rem_1, bit_extract(num_1, i, 1))\n\t\t\tend\n\n\t\t\tremainder = from_u32(rem_1, rem_2)\n\n\t\t\tif not num_is_less_unsigned(remainder, rhs) then\n\t\t\t\tremainder = num_subtract(remainder, rhs)\n\t\t\t\tquotient = num_or(quotient, num_shift_left(NUM_ONE, from_u32(i, 0)))\n\t\t\tend\n\t\tend\n\n\t\treturn quotient, remainder\n\tend\n\n\tfunction Numeric.divide_signed(lhs, rhs)\n\t\tlocal left_negative = num_is_negative(lhs)\n\t\tlocal right_negative = num_is_negative(rhs)\n\n\t\tif left_negative then\n\t\t\tlhs = num_negate(lhs)\n\t\tend\n\n\t\tif right_negative then\n\t\t\trhs = num_negate(rhs)\n\t\tend\n\n\t\tlocal quotient, remainder = num_divide_unsigned(lhs, rhs)\n\n\t\tif left_negative ~= right_negative then\n\t\t\tquotient = num_negate(quotient)\n\t\tend\n\n\t\tif left_negative then\n\t\t\tremainder = num_negate(remainder)\n\t\tend\n\n\t\treturn quotient, remainder\n\tend\n\n\tfunction Numeric.negate(value)\n\t\tlocal data_1 = bit_not(load_d1(value)) + 1\n\t\tlocal data_2 = bit_not(load_d2(value))\n\n\t\tif data_1 >= 0x100000000 then\n\t\t\tdata_1 = data_1 - 0x100000000\n\t\t\tdata_2 = data_2 + 1\n\t\tend\n\n\t\tif data_2 >= 0x100000000 then\n\t\t\tdata_2 = data_2 - 0x100000000\n\t\tend\n\n\t\treturn from_u32(data_1, data_2)\n\tend\n\n\tfunction Numeric.bit_and(lhs, rhs)\n\t\tlocal x = bit_and(lhs.X, rhs.X)\n\t\tlocal y = bit_and(lhs.Y, rhs.Y)\n\t\tlocal z = bit_and(lhs.Z, rhs.Z)\n\n\t\treturn constructor(x, y, z)\n\tend\n\n\tfunction Numeric.bit_not(value)\n\t\tlocal x = bit_and(bit_not(value.X), 0xFFFFFF)\n\t\tlocal y = bit_and(bit_not(value.Y), 0xFFFFFF)\n\t\tlocal z = bit_and(bit_not(value.Z), 0xFFFFFF)\n\n\t\treturn constructor(x, y, z)\n\tend\n\n\tfunction Numeric.bit_or(lhs, rhs)\n\t\tlocal x = bit_or(lhs.X, rhs.X)\n\t\tlocal y = bit_or(lhs.Y, rhs.Y)\n\t\tlocal z = bit_or(lhs.Z, rhs.Z)\n\n\t\treturn constructor(x, y, z)\n\tend\n\n\tfunction Numeric.bit_xor(lhs, rhs)\n\t\tlocal x = bit_xor(lhs.X, rhs.X)\n\t\tlocal y = bit_xor(lhs.Y, rhs.Y)\n\t\tlocal z = bit_xor(lhs.Z, rhs.Z)\n\n\t\treturn constructor(x, y, z)\n\tend\n\n\tfunction Numeric.shift_left(lhs, rhs)\n\t\tlocal count = rhs.X % 64\n\n\t\tif count == 0 then\n\t\t\treturn lhs\n\t\telseif count < 32 then\n\t\t\tlocal pad = 32 - count\n\t\t\tlocal lhs_1, lhs_2 = load_d1(lhs), load_d2(lhs)\n\n\t\t\tlocal data_1 = bit_lshift(lhs_1, count)\n\t\t\tlocal data_2 = bit_replace(bit_rshift(lhs_1, pad), lhs_2, count, pad)\n\n\t\t\treturn from_u32(data_1, data_2)\n\t\telse\n\t\t\tlocal lhs_1 = load_d1(lhs)\n\n\t\t\treturn from_u32(0, bit_lshift(lhs_1, count - 32))\n\t\tend\n\tend\n\n\tfunction Numeric.shift_right_unsigned(lhs, rhs)\n\t\tlocal count = rhs.X % 64\n\n\t\tif count == 0 then\n\t\t\treturn lhs\n\t\telseif count < 32 then\n\t\t\tlocal lhs_1, lhs_2 = load_d1(lhs), load_d2(lhs)\n\n\t\t\tlocal data_1 = bit_replace(bit_rshift(lhs_1, count), lhs_2, 32 - count, count)\n\t\t\tlocal data_2 = bit_rshift(lhs_2, count)\n\n\t\t\treturn from_u32(data_1, data_2)\n\t\telse\n\t\t\tlocal lhs_2 = load_d2(lhs)\n\n\t\t\treturn from_u32(bit_rshift(lhs_2, count - 32), 0)\n\t\tend\n\tend\n\n\tfunction Numeric.shift_right_signed(lhs, rhs)\n\t\tlocal count = rhs.X % 64\n\n\t\tif count == 0 then\n\t\t\treturn lhs\n\t\telseif count < 32 then\n\t\t\tlocal lhs_1, lhs_2 = load_d1(lhs), load_d2(lhs)\n\n\t\t\tlocal data_1 = bit_replace(bit_rshift(lhs_1, count), lhs_2, 32 - count, count)\n\t\t\tlocal data_2 = bit_arshift(lhs_2, count)\n\n\t\t\treturn from_u32(data_1, data_2)\n\t\telse\n\t\t\tlocal lhs_2 = load_d2(lhs)\n\n\t\t\tlocal data_1 = bit_arshift(lhs_2, count - 32)\n\t\t\tlocal data_2 = lhs_2 >= 0x80000000 and 0xFFFFFFFF or 0\n\n\t\t\treturn from_u32(data_1, data_2)\n\t\tend\n\tend\n\n\tfunction Numeric.rotate_left(lhs, rhs)\n\t\tif num_is_zero(rhs) then\n\t\t\treturn lhs\n\t\telse\n\t\t\tlocal data_1 = num_shift_left(lhs, rhs)\n\t\t\tlocal data_2 = num_shift_right_unsigned(lhs, num_subtract(NUM_SIX_FOUR, rhs))\n\n\t\t\treturn num_or(data_1, data_2)\n\t\tend\n\tend\n\n\tfunction Numeric.rotate_right(lhs, rhs)\n\t\tif num_is_zero(rhs) then\n\t\t\treturn lhs\n\t\telse\n\t\t\tlocal data_1 = num_shift_right_unsigned(lhs, rhs)\n\t\t\tlocal data_2 = num_shift_left(lhs, num_subtract(NUM_SIX_FOUR, rhs))\n\n\t\t\treturn num_or(data_1, data_2)\n\t\tend\n\tend\n\n\tfunction Numeric.is_negative(value)\n\t\treturn value.Z >= 0x80000\n\tend\n\n\tfunction Numeric.is_zero(value)\n\t\treturn value.X == 0 and value.Y == 0 and value.Z == 0\n\tend\n\n\tfunction Numeric.is_equal(lhs, rhs)\n\t\treturn lhs.X == rhs.X and lhs.Y == rhs.Y and lhs.Z == rhs.Z\n\tend\n\n\tfunction Numeric.is_less_unsigned(lhs, rhs)\n\t\tlocal data_l_2 = load_d2(lhs)\n\t\tlocal data_r_2 = load_d2(rhs)\n\n\t\treturn data_l_2 < data_r_2 or (data_l_2 == data_r_2 and load_d1(lhs) < load_d1(rhs))\n\tend\n\n\tfunction Numeric.is_greater_unsigned(lhs, rhs)\n\t\tlocal data_l_2 = load_d2(lhs)\n\t\tlocal data_r_2 = load_d2(rhs)\n\n\t\treturn data_l_2 > data_r_2 or (data_l_2 == data_r_2 and load_d1(lhs) > load_d1(rhs))\n\tend\n\n\tfunction Numeric.is_less_signed(lhs, rhs)\n\t\tlocal neg_a = num_is_negative(lhs)\n\t\tlocal neg_b = num_is_negative(rhs)\n\n\t\tif neg_a and not neg_b then\n\t\t\treturn true\n\t\telseif not neg_a and neg_b then\n\t\t\treturn false\n\t\telse\n\t\t\treturn num_is_negative(num_subtract(lhs, rhs))\n\t\tend\n\tend\n\n\tfunction Numeric.is_greater_signed(lhs, rhs)\n\t\tlocal neg_a = num_is_negative(lhs)\n\t\tlocal neg_b = num_is_negative(rhs)\n\n\t\tif neg_a and not neg_b then\n\t\t\treturn false\n\t\telseif not neg_a and neg_b then\n\t\t\treturn true\n\t\telse\n\t\t\treturn num_is_negative(num_subtract(rhs, lhs))\n\t\tend\n\tend\n\n\tfrom_u32 = Numeric.from_u32\n\tfrom_u64 = Numeric.from_u64\n\tinto_u64 = Numeric.into_u64\n\n\tnum_subtract = Numeric.subtract\n\tnum_divide_unsigned = Numeric.divide_unsigned\n\tnum_negate = Numeric.negate\n\n\tnum_or = Numeric.bit_or\n\tnum_shift_left = Numeric.shift_left\n\tnum_shift_right_unsigned = Numeric.shift_right_unsigned\n\n\tnum_is_negative = Numeric.is_negative\n\tnum_is_zero = Numeric.is_zero\n\tnum_is_less_unsigned = Numeric.is_less_unsigned\n\n\tNUM_ZERO = from_u64(0)\n\tNUM_ONE = from_u64(1)\n\tNUM_SIX_FOUR = from_u64(64)\n\tNUM_BIT_26 = from_u64(0x4000000)\n\tNUM_BIT_52 = from_u64(0x10000000000000)\n\n\tNumeric.ZERO = NUM_ZERO\n\tNumeric.ONE = NUM_ONE\n\n\treturn table.freeze(Numeric)\nend)()\nlocal rt = (function()\n\tlocal module = {}\n\n\tlocal to_u32 = bit32.band\n\n\tlocal bit_or = bit32.bor\n\tlocal bit_and = bit32.band\n\tlocal bit_lshift = bit32.lshift\n\tlocal bit_rshift = bit32.rshift\n\n\tlocal num_from_u32 = Integer.from_u32\n\tlocal num_into_u32 = Integer.into_u32\n\n\tlocal function to_i32(num)\n\t\tif num >= 0x80000000 then\n\t\t\treturn num - 0x100000000\n\t\telse\n\t\t\treturn num\n\t\tend\n\tend\n\n\tlocal function no_op(num)\n\t\treturn num\n\tend\n\n\tmodule.i64 = Integer\n\n\tdo\n\t\tlocal add = {}\n\t\tlocal sub = {}\n\t\tlocal mul = {}\n\t\tlocal div = {}\n\t\tlocal rem = {}\n\t\tlocal neg = {}\n\t\tlocal min = {}\n\t\tlocal max = {}\n\t\tlocal copysign = {}\n\t\tlocal nearest = {}\n\n\t\tlocal assert = assert\n\n\t\tlocal math_abs = math.abs\n\t\tlocal math_fmod = math.fmod\n\t\tlocal math_round = math.round\n\t\tlocal math_sign = math.sign\n\t\tlocal math_min = math.min\n\t\tlocal math_max = math.max\n\n\t\tlocal string_byte = string.byte\n\t\tlocal string_pack = string.pack\n\n\t\tlocal num_divide_signed = Integer.divide_signed\n\t\tlocal num_divide_unsigned = Integer.divide_unsigned\n\n\t\tfunction add.i32(lhs, rhs)\n\t\t\treturn to_u32(lhs + rhs)\n\t\tend\n\n\t\tfunction sub.i32(lhs, rhs)\n\t\t\treturn to_u32(lhs - rhs)\n\t\tend\n\n\t\tfunction mul.i32(lhs, rhs)\n\t\t\tif (lhs + rhs) < 0x8000000 then\n\t\t\t\treturn to_u32(lhs * rhs)\n\t\t\telse\n\t\t\t\tlocal a16 = bit_rshift(lhs, 16)\n\t\t\t\tlocal a00 = bit_and(lhs, 0xFFFF)\n\t\t\t\tlocal b16 = bit_rshift(rhs, 16)\n\t\t\t\tlocal b00 = bit_and(rhs, 0xFFFF)\n\n\t\t\t\tlocal c00 = a00 * b00\n\t\t\t\tlocal c16 = a16 * b00 + a00 * b16\n\n\t\t\t\treturn to_u32(c00 + bit_lshift(c16, 16))\n\t\t\tend\n\t\tend\n\n\t\tfunction div.i32(lhs, rhs)\n\t\t\tassert(rhs ~= 0, "division by zero")\n\n\t\t\tlhs = to_i32(lhs)\n\t\t\trhs = to_i32(rhs)\n\n\t\t\treturn to_u32(lhs / rhs)\n\t\tend\n\n\t\tfunction div.u32(lhs, rhs)\n\t\t\tassert(rhs ~= 0, "division by zero")\n\n\t\t\treturn to_u32(lhs / rhs)\n\t\tend\n\n\t\tfunction rem.i32(lhs, rhs)\n\t\t\tassert(rhs ~= 0, "division by zero")\n\n\t\t\tlhs = to_i32(lhs)\n\t\t\trhs = to_i32(rhs)\n\n\t\t\treturn to_u32(math_fmod(lhs, rhs))\n\t\tend\n\n\t\tadd.i64 = Integer.add\n\t\tsub.i64 = Integer.subtract\n\t\tmul.i64 = Integer.multiply\n\t\tdiv.i64 = num_divide_signed\n\n\t\tfunction rem.i64(lhs, rhs)\n\t\t\tlocal _, remainder = num_divide_signed(lhs, rhs)\n\n\t\t\treturn remainder\n\t\tend\n\n\t\tdiv.u64 = num_divide_unsigned\n\n\t\tfunction rem.u64(lhs, rhs)\n\t\t\tlocal _, remainder = num_divide_unsigned(lhs, rhs)\n\n\t\t\treturn remainder\n\t\tend\n\n\t\tfunction neg.f32(num)\n\t\t\treturn -num\n\t\tend\n\n\t\tfunction min.f32(lhs, rhs)\n\t\t\tif rhs == rhs then\n\t\t\t\treturn math_min(lhs, rhs)\n\t\t\telse\n\t\t\t\treturn rhs\n\t\t\tend\n\t\tend\n\n\t\tfunction max.f32(lhs, rhs)\n\t\t\tif rhs == rhs then\n\t\t\t\treturn math_max(lhs, rhs)\n\t\t\telse\n\t\t\t\treturn rhs\n\t\t\tend\n\t\tend\n\n\t\tfunction copysign.f32(lhs, rhs)\n\t\t\tlocal packed = string_pack("<d", rhs)\n\t\t\tlocal sign = string_byte(packed, 8)\n\n\t\t\tif sign >= 0x80 then\n\t\t\t\treturn -math_abs(lhs)\n\t\t\telse\n\t\t\t\treturn math_abs(lhs)\n\t\t\tend\n\t\tend\n\n\t\tfunction nearest.f32(num)\n\t\t\tlocal result = math_round(num)\n\n\t\t\tif (math_abs(num) + 0.5) % 2 == 1 then\n\t\t\t\tresult = result - math_sign(result)\n\t\t\tend\n\n\t\t\treturn result\n\t\tend\n\n\t\tneg.f64 = neg.f32\n\t\tmin.f64 = min.f32\n\t\tmax.f64 = max.f32\n\t\tcopysign.f64 = copysign.f32\n\t\tnearest.f64 = nearest.f32\n\n\t\tmodule.add = add\n\t\tmodule.sub = sub\n\t\tmodule.mul = mul\n\t\tmodule.div = div\n\t\tmodule.rem = rem\n\t\tmodule.neg = neg\n\t\tmodule.min = min\n\t\tmodule.max = max\n\t\tmodule.copysign = copysign\n\t\tmodule.nearest = nearest\n\tend\n\n\tdo\n\t\tlocal clz = {}\n\t\tlocal ctz = {}\n\t\tlocal popcnt = {}\n\n\t\tlocal bit_countlz = bit32.countlz\n\t\tlocal bit_countrz = bit32.countrz\n\n\t\tlocal function popcnt_i32(num)\n\t\t\tlocal count = 0\n\n\t\t\twhile num ~= 0 do\n\t\t\t\tnum = bit_and(num, num - 1)\n\t\t\t\tcount = count + 1\n\t\t\tend\n\n\t\t\treturn count\n\t\tend\n\n\t\tpopcnt.i32 = popcnt_i32\n\n\t\tfunction clz.i64(num)\n\t\t\tlocal data_1, data_2 = num_into_u32(num)\n\t\t\tlocal temp\n\n\t\t\tif data_2 == 0 then\n\t\t\t\ttemp = bit_countlz(data_1) + 32\n\t\t\telse\n\t\t\t\ttemp = bit_countlz(data_2)\n\t\t\tend\n\n\t\t\treturn num_from_u32(temp, 0)\n\t\tend\n\n\t\tfunction ctz.i64(num)\n\t\t\tlocal data_1, data_2 = num_into_u32(num)\n\t\t\tlocal temp\n\n\t\t\tif data_1 == 0 then\n\t\t\t\ttemp = bit_countrz(data_2) + 32\n\t\t\telse\n\t\t\t\ttemp = bit_countrz(data_1)\n\t\t\tend\n\n\t\t\treturn num_from_u32(temp, 0)\n\t\tend\n\n\t\tfunction popcnt.i64(num)\n\t\t\tlocal data_1, data_2 = num_into_u32(num)\n\t\t\tlocal temp = popcnt_i32(data_1) + popcnt_i32(data_2)\n\n\t\t\treturn num_from_u32(temp, 0)\n\t\tend\n\n\t\tmodule.clz = clz\n\t\tmodule.ctz = ctz\n\t\tmodule.popcnt = popcnt\n\tend\n\n\tdo\n\t\tlocal eq = {}\n\t\tlocal ne = {}\n\t\tlocal le = {}\n\t\tlocal lt = {}\n\t\tlocal ge = {}\n\t\tlocal gt = {}\n\n\t\tlocal num_is_equal = Integer.is_equal\n\t\tlocal num_is_less_signed = Integer.is_less_signed\n\t\tlocal num_is_less_unsigned = Integer.is_less_unsigned\n\t\tlocal num_is_greater_signed = Integer.is_greater_signed\n\t\tlocal num_is_greater_unsigned = Integer.is_greater_unsigned\n\n\t\tfunction le.i32(lhs, rhs)\n\t\t\treturn to_i32(lhs) <= to_i32(rhs)\n\t\tend\n\n\t\tfunction lt.i32(lhs, rhs)\n\t\t\treturn to_i32(lhs) < to_i32(rhs)\n\t\tend\n\n\t\tfunction ge.i32(lhs, rhs)\n\t\t\treturn to_i32(lhs) >= to_i32(rhs)\n\t\tend\n\n\t\tfunction gt.i32(lhs, rhs)\n\t\t\treturn to_i32(lhs) > to_i32(rhs)\n\t\tend\n\n\t\teq.i64 = num_is_equal\n\n\t\tfunction ne.i64(lhs, rhs)\n\t\t\treturn not num_is_equal(lhs, rhs)\n\t\tend\n\n\t\tfunction le.i64(lhs, rhs)\n\t\t\treturn num_is_less_signed(lhs, rhs) or num_is_equal(lhs, rhs)\n\t\tend\n\n\t\tfunction le.u64(lhs, rhs)\n\t\t\treturn num_is_less_unsigned(lhs, rhs) or num_is_equal(lhs, rhs)\n\t\tend\n\n\t\tlt.i64 = num_is_less_signed\n\t\tlt.u64 = num_is_less_unsigned\n\n\t\tfunction ge.i64(lhs, rhs)\n\t\t\treturn num_is_greater_signed(lhs, rhs) or num_is_equal(lhs, rhs)\n\t\tend\n\n\t\tfunction ge.u64(lhs, rhs)\n\t\t\treturn num_is_greater_unsigned(lhs, rhs) or num_is_equal(lhs, rhs)\n\t\tend\n\n\t\tgt.i64 = num_is_greater_signed\n\t\tgt.u64 = num_is_greater_unsigned\n\n\t\tmodule.eq = eq\n\t\tmodule.ne = ne\n\t\tmodule.le = le\n\t\tmodule.lt = lt\n\t\tmodule.ge = ge\n\t\tmodule.gt = gt\n\tend\n\n\tdo\n\t\tlocal band = {}\n\t\tlocal bor = {}\n\t\tlocal bxor = {}\n\t\tlocal bnot = {}\n\n\t\tband.i64 = Integer.bit_and\n\t\tbor.i64 = Integer.bit_or\n\t\tbxor.i64 = Integer.bit_xor\n\t\tbnot.i64 = Integer.bit_not\n\n\t\tmodule.band = band\n\t\tmodule.bor = bor\n\t\tmodule.bxor = bxor\n\t\tmodule.bnot = bnot\n\tend\n\n\tdo\n\t\tlocal shl = {}\n\t\tlocal shr = {}\n\t\tlocal rotl = {}\n\t\tlocal rotr = {}\n\n\t\tlocal bit_arshift = bit32.arshift\n\t\tlocal bit_lrotate = bit32.lrotate\n\t\tlocal bit_rrotate = bit32.rrotate\n\n\t\tfunction shl.i32(lhs, rhs)\n\t\t\treturn bit_lshift(lhs, rhs % 32)\n\t\tend\n\n\t\tfunction shr.u32(lhs, rhs)\n\t\t\treturn bit_rshift(lhs, rhs % 32)\n\t\tend\n\n\t\tfunction shr.i32(lhs, rhs)\n\t\t\treturn bit_arshift(lhs, rhs % 32)\n\t\tend\n\n\t\tfunction rotl.i32(lhs, rhs)\n\t\t\treturn bit_lrotate(lhs, rhs % 32)\n\t\tend\n\n\t\tfunction rotr.i32(lhs, rhs)\n\t\t\treturn bit_rrotate(lhs, rhs % 32)\n\t\tend\n\n\t\tshl.i64 = Integer.shift_left\n\t\tshr.i64 = Integer.shift_right_signed\n\t\tshr.u64 = Integer.shift_right_unsigned\n\t\trotl.i64 = Integer.rotate_left\n\t\trotr.i64 = Integer.rotate_right\n\n\t\tmodule.shl = shl\n\t\tmodule.shr = shr\n\t\tmodule.rotl = rotl\n\t\tmodule.rotr = rotr\n\tend\n\n\tdo\n\t\tlocal wrap = {}\n\t\tlocal truncate = {}\n\t\tlocal saturate = {}\n\t\tlocal extend = {}\n\t\tlocal convert = {}\n\t\tlocal demote = {}\n\t\tlocal promote = {}\n\t\tlocal reinterpret = {}\n\n\t\tlocal math_ceil = math.ceil\n\t\tlocal math_floor = math.floor\n\t\tlocal math_clamp = math.clamp\n\n\t\tlocal string_pack = string.pack\n\t\tlocal string_unpack = string.unpack\n\n\t\tlocal NUM_ZERO = Integer.ZERO\n\t\tlocal NUM_MIN_I64 = num_from_u32(0, 0x80000000)\n\t\tlocal NUM_MAX_I64 = num_from_u32(0xFFFFFFFF, 0x7FFFFFFF)\n\t\tlocal NUM_MAX_U64 = num_from_u32(0xFFFFFFFF, 0xFFFFFFFF)\n\n\t\tlocal num_from_u64 = Integer.from_u64\n\t\tlocal num_into_u64 = Integer.into_u64\n\n\t\tlocal num_negate = Integer.negate\n\t\tlocal num_is_negative = Integer.is_negative\n\n\t\tlocal function truncate_f64(num)\n\t\t\tif num >= 0 then\n\t\t\t\treturn math_floor(num)\n\t\t\telse\n\t\t\t\treturn math_ceil(num)\n\t\t\tend\n\t\tend\n\n\t\tfunction wrap.i32_i64(num)\n\t\t\tlocal data_1, _ = num_into_u32(num)\n\n\t\t\treturn data_1\n\t\tend\n\n\t\tfunction truncate.i32_f32(num)\n\t\t\treturn to_u32(truncate_f64(num))\n\t\tend\n\n\t\ttruncate.i32_f64 = to_u32\n\t\ttruncate.u32_f32 = truncate_f64\n\t\ttruncate.u32_f64 = truncate_f64\n\n\t\tfunction truncate.i64_f32(num)\n\t\t\tif num < 0 then\n\t\t\t\tlocal temp = num_from_u64(-num)\n\n\t\t\t\treturn num_negate(temp)\n\t\t\telse\n\t\t\t\treturn num_from_u64(num)\n\t\t\tend\n\t\tend\n\n\t\ttruncate.i64_f64 = truncate.i64_f32\n\n\t\tfunction truncate.u64_f32(num)\n\t\t\tif num <= 0 then\n\t\t\t\treturn NUM_ZERO\n\t\t\telse\n\t\t\t\treturn num_from_u64(math_floor(num))\n\t\t\tend\n\t\tend\n\n\t\ttruncate.u64_f64 = truncate.u64_f32\n\n\t\ttruncate.f32 = truncate_f64\n\t\ttruncate.f64 = truncate_f64\n\n\t\tfunction saturate.i32_f32(num)\n\t\t\tlocal temp = math_clamp(truncate_f64(num), -0x80000000, 0x7FFFFFFF)\n\n\t\t\treturn to_u32(temp)\n\t\tend\n\n\t\tsaturate.i32_f64 = saturate.i32_f32\n\n\t\tfunction saturate.u32_f32(num)\n\t\t\tlocal temp = math_clamp(truncate_f64(num), 0, 0xFFFFFFFF)\n\n\t\t\treturn to_u32(temp)\n\t\tend\n\n\t\tsaturate.u32_f64 = saturate.u32_f32\n\n\t\tlocal truncate_i64_f64 = truncate.i64_f64\n\n\t\tfunction saturate.i64_f32(num)\n\t\t\tif num >= 2 ^ 63 - 1 then\n\t\t\t\treturn NUM_MAX_I64\n\t\t\telseif num <= -2 ^ 63 then\n\t\t\t\treturn NUM_MIN_I64\n\t\t\telse\n\t\t\t\treturn truncate_i64_f64(num)\n\t\t\tend\n\t\tend\n\n\t\tsaturate.i64_f64 = saturate.i64_f32\n\n\t\tfunction saturate.u64_f32(num)\n\t\t\tif num >= 2 ^ 64 then\n\t\t\t\treturn NUM_MAX_U64\n\t\t\telseif num <= 0 then\n\t\t\t\treturn NUM_ZERO\n\t\t\telse\n\t\t\t\treturn truncate_i64_f64(num)\n\t\t\tend\n\t\tend\n\n\t\tsaturate.u64_f64 = saturate.u64_f32\n\n\t\tfunction extend.i32_n8(num)\n\t\t\tnum = bit_and(num, 0xFF)\n\n\t\t\tif num >= 0x80 then\n\t\t\t\treturn to_u32(num - 0x100)\n\t\t\telse\n\t\t\t\treturn num\n\t\t\tend\n\t\tend\n\n\t\tfunction extend.i32_n16(num)\n\t\t\tnum = bit_and(num, 0xFFFF)\n\n\t\t\tif num >= 0x8000 then\n\t\t\t\treturn to_u32(num - 0x10000)\n\t\t\telse\n\t\t\t\treturn num\n\t\t\tend\n\t\tend\n\n\t\tfunction extend.i64_n8(num)\n\t\t\tlocal data_1, _ = num_into_u32(num)\n\n\t\t\tdata_1 = bit_and(data_1, 0xFF)\n\n\t\t\tif data_1 >= 0x80 then\n\t\t\t\tlocal temp = num_from_u32(-data_1 + 0x100, 0)\n\n\t\t\t\treturn num_negate(temp)\n\t\t\telse\n\t\t\t\treturn num_from_u32(data_1, 0)\n\t\t\tend\n\t\tend\n\n\t\tfunction extend.i64_n16(num)\n\t\t\tlocal data_1, _ = num_into_u32(num)\n\n\t\t\tdata_1 = bit_and(data_1, 0xFFFF)\n\n\t\t\tif data_1 >= 0x8000 then\n\t\t\t\tlocal temp = num_from_u32(-data_1 + 0x10000, 0)\n\n\t\t\t\treturn num_negate(temp)\n\t\t\telse\n\t\t\t\treturn num_from_u32(data_1, 0)\n\t\t\tend\n\t\tend\n\n\t\tfunction extend.i64_n32(num)\n\t\t\tlocal data_1, _ = num_into_u32(num)\n\n\t\t\tif data_1 >= 0x80000000 then\n\t\t\t\tlocal temp = num_from_u32(-data_1 + 0x100000000, 0)\n\n\t\t\t\treturn num_negate(temp)\n\t\t\telse\n\t\t\t\treturn num_from_u32(data_1, 0)\n\t\t\tend\n\t\tend\n\n\t\tfunction extend.i64_i32(num)\n\t\t\tif num >= 0x80000000 then\n\t\t\t\tlocal temp = num_from_u32(-num + 0x100000000, 0)\n\n\t\t\t\treturn num_negate(temp)\n\t\t\telse\n\t\t\t\treturn num_from_u32(num, 0)\n\t\t\tend\n\t\tend\n\n\t\tfunction extend.i64_u32(num)\n\t\t\treturn num_from_u32(num, 0)\n\t\tend\n\n\t\tconvert.f32_i32 = to_i32\n\t\tconvert.f32_u32 = no_op\n\n\t\tfunction convert.f32_i64(num)\n\t\t\tif num_is_negative(num) then\n\t\t\t\tlocal temp = num_negate(num)\n\n\t\t\t\treturn -num_into_u64(temp)\n\t\t\telse\n\t\t\t\treturn num_into_u64(num)\n\t\t\tend\n\t\tend\n\n\t\tconvert.f32_u64 = num_into_u64\n\t\tconvert.f64_i32 = to_i32\n\t\tconvert.f64_u32 = no_op\n\t\tconvert.f64_i64 = convert.f32_i64\n\t\tconvert.f64_u64 = num_into_u64\n\n\t\tdemote.f32_f64 = no_op\n\n\t\tpromote.f64_f32 = no_op\n\n\t\tfunction reinterpret.i32_f32(num)\n\t\t\tlocal packed = string_pack("f", num)\n\n\t\t\treturn string_unpack("I4", packed)\n\t\tend\n\n\t\tfunction reinterpret.i64_f64(num)\n\t\t\tlocal packed = string_pack("d", num)\n\t\t\tlocal data_1, data_2 = string_unpack("I4I4", packed)\n\n\t\t\treturn num_from_u32(data_1, data_2)\n\t\tend\n\n\t\tfunction reinterpret.f32_i32(num)\n\t\t\tlocal packed = string_pack("I4", num)\n\n\t\t\treturn string_unpack("f", packed)\n\t\tend\n\n\t\tfunction reinterpret.f64_i64(num)\n\t\t\tlocal data_1, data_2 = num_into_u32(num)\n\t\t\tlocal packed = string_pack("I4I4", data_1, data_2)\n\n\t\t\treturn string_unpack("d", packed)\n\t\tend\n\n\t\tmodule.wrap = wrap\n\t\tmodule.truncate = truncate\n\t\tmodule.saturate = saturate\n\t\tmodule.extend = extend\n\t\tmodule.convert = convert\n\t\tmodule.demote = demote\n\t\tmodule.promote = promote\n\t\tmodule.reinterpret = reinterpret\n\tend\n\n\tdo\n\t\tlocal load = {}\n\t\tlocal store = {}\n\t\tlocal allocator = {}\n\n\t\tlocal bit_extract = bit32.extract\n\t\tlocal bit_replace = bit32.replace\n\n\t\tlocal math_floor = math.floor\n\n\t\tlocal string_byte = string.byte\n\t\tlocal string_char = string.char\n\t\tlocal string_unpack = string.unpack\n\n\t\tlocal reinterpret_f32_i32 = module.reinterpret.f32_i32\n\t\tlocal reinterpret_f64_i64 = module.reinterpret.f64_i64\n\t\tlocal reinterpret_i32_f32 = module.reinterpret.i32_f32\n\t\tlocal reinterpret_i64_f64 = module.reinterpret.i64_f64\n\n\t\tlocal function load_byte(data, addr)\n\t\t\tlocal value = data[math_floor(addr / 4)] or 0\n\n\t\t\treturn bit_extract(value, addr % 4 * 8, 8)\n\t\tend\n\n\t\tlocal function store_byte(data, addr, value)\n\t\t\tlocal adjust = math_floor(addr / 4)\n\n\t\t\tdata[adjust] = bit_replace(data[adjust] or 0, value, addr % 4 * 8, 8)\n\t\tend\n\n\t\tfunction load.i32_i8(memory, addr)\n\t\t\tlocal temp = load_byte(memory.data, addr)\n\n\t\t\tif temp >= 0x80 then\n\t\t\t\treturn to_u32(temp - 0x100)\n\t\t\telse\n\t\t\t\treturn temp\n\t\t\tend\n\t\tend\n\n\t\tfunction load.i32_u8(memory, addr)\n\t\t\treturn load_byte(memory.data, addr)\n\t\tend\n\n\t\tfunction load.i32_i16(memory, addr)\n\t\t\tlocal data = memory.data\n\t\t\tlocal temp\n\n\t\t\tif addr % 4 == 0 then\n\t\t\t\ttemp = bit_and(data[addr / 4] or 0, 0xFFFF)\n\t\t\telse\n\t\t\t\tlocal b1 = load_byte(data, addr)\n\t\t\t\tlocal b2 = bit_lshift(load_byte(data, addr + 1), 8)\n\n\t\t\t\ttemp = bit_or(b1, b2)\n\t\t\tend\n\n\t\t\tif temp >= 0x8000 then\n\t\t\t\treturn to_u32(temp - 0x10000)\n\t\t\telse\n\t\t\t\treturn temp\n\t\t\tend\n\t\tend\n\n\t\tfunction load.i32_u16(memory, addr)\n\t\t\tlocal data = memory.data\n\n\t\t\tif addr % 4 == 0 then\n\t\t\t\treturn bit_and(data[addr / 4] or 0, 0xFFFF)\n\t\t\telse\n\t\t\t\tlocal b1 = load_byte(data, addr)\n\t\t\t\tlocal b2 = bit_lshift(load_byte(data, addr + 1), 8)\n\n\t\t\t\treturn bit_or(b1, b2)\n\t\t\tend\n\t\tend\n\n\t\tfunction load.i32(memory, addr)\n\t\t\tlocal data = memory.data\n\n\t\t\tif addr % 4 == 0 then\n\t\t\t\t-- aligned read\n\t\t\t\treturn data[addr / 4] or 0\n\t\t\telse\n\t\t\t\t-- unaligned read\n\t\t\t\tlocal b1 = load_byte(data, addr)\n\t\t\t\tlocal b2 = bit_lshift(load_byte(data, addr + 1), 8)\n\t\t\t\tlocal b3 = bit_lshift(load_byte(data, addr + 2), 16)\n\t\t\t\tlocal b4 = bit_lshift(load_byte(data, addr + 3), 24)\n\n\t\t\t\treturn bit_or(b1, b2, b3, b4)\n\t\t\tend\n\t\tend\n\n\t\tfunction load.i64_i8(memory, addr)\n\t\t\tlocal data_1 = load_byte(memory.data, addr)\n\t\t\tlocal data_2\n\n\t\t\tif data_1 >= 0x80 then\n\t\t\t\tdata_1 = to_u32(data_1 - 0x100)\n\t\t\t\tdata_2 = 0xFFFFFFFF\n\t\t\telse\n\t\t\t\tdata_2 = 0\n\t\t\tend\n\n\t\t\treturn num_from_u32(data_1, data_2)\n\t\tend\n\n\t\tfunction load.i64_u8(memory, addr)\n\t\t\tlocal temp = load_byte(memory.data, addr)\n\n\t\t\treturn num_from_u32(temp, 0)\n\t\tend\n\n\t\tfunction load.i64_i16(memory, addr)\n\t\t\tlocal data = memory.data\n\t\t\tlocal data_1, data_2\n\n\t\t\tif addr % 4 == 0 then\n\t\t\t\tdata_1 = bit_and(data[addr / 4] or 0, 0xFFFF)\n\t\t\telse\n\t\t\t\tlocal b1 = load_byte(data, addr)\n\t\t\t\tlocal b2 = bit_lshift(load_byte(data, addr + 1), 8)\n\n\t\t\t\tdata_1 = bit_or(b1, b2)\n\t\t\tend\n\n\t\t\tif data_1 >= 0x8000 then\n\t\t\t\tdata_1 = to_u32(data_1 - 0x10000)\n\t\t\t\tdata_2 = 0xFFFFFFFF\n\t\t\telse\n\t\t\t\tdata_2 = 0\n\t\t\tend\n\n\t\t\treturn num_from_u32(data_1, data_2)\n\t\tend\n\n\t\tfunction load.i64_u16(memory, addr)\n\t\t\tlocal data = memory.data\n\t\t\tlocal temp\n\n\t\t\tif addr % 4 == 0 then\n\t\t\t\ttemp = bit_and(data[addr / 4] or 0, 0xFFFF)\n\t\t\telse\n\t\t\t\tlocal b1 = load_byte(data, addr)\n\t\t\t\tlocal b2 = bit_lshift(load_byte(data, addr + 1), 8)\n\n\t\t\t\ttemp = bit_or(b1, b2)\n\t\t\tend\n\n\t\t\treturn num_from_u32(temp, 0)\n\t\tend\n\n\t\tfunction load.i64_i32(memory, addr)\n\t\t\tlocal data = memory.data\n\t\t\tlocal data_1, data_2\n\n\t\t\tif addr % 4 == 0 then\n\t\t\t\tdata_1 = data[addr / 4] or 0\n\t\t\telse\n\t\t\t\tlocal b1 = load_byte(data, addr)\n\t\t\t\tlocal b2 = bit_lshift(load_byte(data, addr + 1), 8)\n\t\t\t\tlocal b3 = bit_lshift(load_byte(data, addr + 2), 16)\n\t\t\t\tlocal b4 = bit_lshift(load_byte(data, addr + 3), 24)\n\n\t\t\t\tdata_1 = bit_or(b1, b2, b3, b4)\n\t\t\tend\n\n\t\t\tif data_1 >= 0x80000000 then\n\t\t\t\tdata_1 = to_u32(data_1 - 0x100000000)\n\t\t\t\tdata_2 = 0xFFFFFFFF\n\t\t\telse\n\t\t\t\tdata_2 = 0\n\t\t\tend\n\n\t\t\treturn num_from_u32(data_1, data_2)\n\t\tend\n\n\t\tfunction load.i64_u32(memory, addr)\n\t\t\tlocal data = memory.data\n\t\t\tlocal temp\n\n\t\t\tif addr % 4 == 0 then\n\t\t\t\ttemp = data[addr / 4] or 0\n\t\t\telse\n\t\t\t\tlocal b1 = load_byte(data, addr)\n\t\t\t\tlocal b2 = bit_lshift(load_byte(data, addr + 1), 8)\n\t\t\t\tlocal b3 = bit_lshift(load_byte(data, addr + 2), 16)\n\t\t\t\tlocal b4 = bit_lshift(load_byte(data, addr + 3), 24)\n\n\t\t\t\ttemp = bit_or(b1, b2, b3, b4)\n\t\t\tend\n\n\t\t\treturn num_from_u32(temp, 0)\n\t\tend\n\n\t\tlocal load_i32 = load.i32\n\n\t\tfunction load.i64(memory, addr)\n\t\t\tlocal data_1 = load_i32(memory, addr)\n\t\t\tlocal data_2 = load_i32(memory, addr + 4)\n\n\t\t\treturn num_from_u32(data_1, data_2)\n\t\tend\n\n\t\tlocal load_i64 = load.i64\n\n\t\tfunction load.f32(memory, addr)\n\t\t\tlocal raw = load_i32(memory, addr)\n\n\t\t\treturn reinterpret_f32_i32(raw)\n\t\tend\n\n\t\tfunction load.f64(memory, addr)\n\t\t\tlocal raw = load_i64(memory, addr)\n\n\t\t\treturn reinterpret_f64_i64(raw)\n\t\tend\n\n\t\tfunction load.string(memory, addr, len)\n\t\t\tlocal buffer = table.create(len)\n\t\t\tlocal data = memory.data\n\n\t\t\tfor i = 1, len do\n\t\t\t\tlocal raw = load_byte(data, addr + i - 1)\n\n\t\t\t\tbuffer[i] = string_char(raw)\n\t\t\tend\n\n\t\t\treturn table.concat(buffer)\n\t\tend\n\n\t\tfunction store.i32_n8(memory, addr, value)\n\t\t\tstore_byte(memory.data, addr, value)\n\t\tend\n\n\t\tlocal store_i8 = store.i32_n8\n\n\t\tfunction store.i32_n16(memory, addr, value)\n\t\t\tstore_byte(memory.data, addr, value)\n\t\t\tstore_byte(memory.data, addr + 1, bit_rshift(value, 8))\n\t\tend\n\n\t\tfunction store.i32(memory, addr, value)\n\t\t\tlocal data = memory.data\n\n\t\t\tif addr % 4 == 0 then\n\t\t\t\t-- aligned write\n\t\t\t\tdata[addr / 4] = value\n\t\t\telse\n\t\t\t\t-- unaligned write\n\t\t\t\tstore_byte(data, addr, value)\n\t\t\t\tstore_byte(data, addr + 1, bit_rshift(value, 8))\n\t\t\t\tstore_byte(data, addr + 2, bit_rshift(value, 16))\n\t\t\t\tstore_byte(data, addr + 3, bit_rshift(value, 24))\n\t\t\tend\n\t\tend\n\n\t\tlocal store_i32 = store.i32\n\t\tlocal store_i32_n8 = store.i32_n8\n\t\tlocal store_i32_n16 = store.i32_n16\n\n\t\tfunction store.i64_n8(memory, addr, value)\n\t\t\tlocal data_1, _ = num_into_u32(value)\n\n\t\t\tstore_i32_n8(memory, addr, data_1)\n\t\tend\n\n\t\tfunction store.i64_n16(memory, addr, value)\n\t\t\tlocal data_1, _ = num_into_u32(value)\n\n\t\t\tstore_i32_n16(memory, addr, data_1)\n\t\tend\n\n\t\tfunction store.i64_n32(memory, addr, value)\n\t\t\tlocal data_1, _ = num_into_u32(value)\n\n\t\t\tstore_i32(memory, addr, data_1)\n\t\tend\n\n\t\tfunction store.i64(memory, addr, value)\n\t\t\tlocal data_1, data_2 = num_into_u32(value)\n\n\t\t\tstore_i32(memory, addr, data_1)\n\t\t\tstore_i32(memory, addr + 4, data_2)\n\t\tend\n\n\t\tlocal store_i64 = store.i64\n\n\t\tfunction store.f32(memory, addr, value)\n\t\t\tstore_i32(memory, addr, reinterpret_i32_f32(value))\n\t\tend\n\n\t\tfunction store.f64(memory, addr, value)\n\t\t\tstore_i64(memory, addr, reinterpret_i64_f64(value))\n\t\tend\n\n\t\tfunction store.string(memory, addr, data, len)\n\t\t\tlen = len or #data\n\n\t\t\tlocal rem = len % 4\n\n\t\t\tfor i = 1, len - rem, 4 do\n\t\t\t\tlocal v = string_unpack("<I4", data, i)\n\n\t\t\t\tstore_i32(memory, addr + i - 1, v)\n\t\t\tend\n\n\t\t\tfor i = len - rem + 1, len do\n\t\t\t\tlocal v = string_byte(data, i)\n\n\t\t\t\tstore_i8(memory, addr + i - 1, v)\n\t\t\tend\n\t\tend\n\n\t\tfunction allocator.new(min, max)\n\t\t\treturn { min = min, max = max, data = {} }\n\t\tend\n\n\t\tfunction allocator.grow(memory, num)\n\t\t\tlocal old = memory.min\n\t\t\tlocal new = old + num\n\n\t\t\tif new > memory.max then\n\t\t\t\treturn to_u32(-1)\n\t\t\telse\n\t\t\t\tmemory.min = new\n\n\t\t\t\treturn old\n\t\t\tend\n\t\tend\n\n\t\tmodule.load = load\n\t\tmodule.store = store\n\t\tmodule.allocator = allocator\n\tend\n\n\treturn module\nend)()\n\nreturn rt\n '
_31b9b6a4c58a3189c2f977da6212bf91.Parent=_c74059b4194a15f07e05845f854df742 local
_830dde44b7c4deed50f4a3a73cea772e=Instance.new('ModuleScript')
_830dde44b7c4deed50f4a3a73cea772e.Name='util'sourceMap[
_830dde44b7c4deed50f4a3a73cea772e]=
' return function(rt, wasm, memory)\n\tlocal function_table = wasm.table_list.__indirect_function_table;\n\tlocal stackPtr = wasm.global_list.__stack_pointer;\n\n\tlocal pointers = { last = 0 };\n\tlocal function createPointer(value)\n\t\tlocal id = pointers.last;\n\t\tif (id == 0) then\n\t\t\tid = #pointers + 1;\n\t\telse\n\t\t\tpointers.last = pointers[id];\n\t\tend\n\t\tpointers[id] = value;\n\t\treturn id;\n\tend\n\n\tlocal function getPointer(id)\n\t\treturn pointers[id];\n\tend\n\n\tlocal function dropPointer(id)\n\t\tpointers[id] = pointers.last;\n\t\tpointers.last = id;\n\tend\n\n\tlocal function pushStack(bytes)\n\t\tlocal stack_loc = stackPtr.value - bytes;\n\t\tstackPtr.value = stack_loc;\n\n\t\treturn stack_loc;\n\tend\n\n\tlocal function popStack(stack_loc, bytes)\n\t\tstackPtr.value = stack_loc + bytes;\n\tend\n\n\tlocal function invokeFunction(data, vtable, ...)\n\t\tfunction_table.data[rt.load.i32(memory, vtable + 12)](data, ...);\n\tend\n\n\tlocal function dropFunctionRef(data, vtable)\n\t\twasm.func_list.__drop_box_dyn_fn(data, vtable);\n\tend\n\n\t-- Usable on FnOnce()\n\t-- FnOnce() will clean itself up, so dropFunctionRef is unnecessary\n\tlocal function invokeOnce(data, vtable, ...)\n\t\treturn invokeFunction(data, vtable, ...);\n\tend\n\n\tlocal function allocString(text)\n\t\tlocal vec = wasm.func_list.__heap_alloc_string(#text);\n\t\tfor i = 1, #text do\n\t\t\trt.store.i32_n8(memory, vec + i - 1, string.byte(text, i, i));\n\t\tend\n\t\treturn vec;\n\tend\n\n\tlocal function readString(addr, len)\n\t\tlocal s = "";\n\t\tfor i = 1, len do\n\t\t\ts ..= string.char(rt.load.i32_u8(memory, addr + i - 1));\n\t\tend\n\t\treturn s;\n\tend\n\n\treturn {\n\t\twriteStringReturn = writeStringReturn,\n\t\tdropFunctionRef = dropFunctionRef,\n\t\tinvokeFunction = invokeFunction,\n\t\tcreatePointer = createPointer,\n\t\tdropPointer = dropPointer,\n\t\treadString = readString,\n\t\tgetPointer = getPointer,\n\t\tinvokeOnce = invokeOnce,\n\t\tpushStack = pushStack,\n\t\tpopStack = popStack,\n\t}\nend\n '
_830dde44b7c4deed50f4a3a73cea772e.Parent=_c74059b4194a15f07e05845f854df742 local
_1e7562c94b3398bd31a94c36b90b0c2e=Instance.new('ModuleScript')
_1e7562c94b3398bd31a94c36b90b0c2e.Name='wasm'sourceMap[
_1e7562c94b3398bd31a94c36b90b0c2e]=
[=[ local Integer=(function()local Numeric={}local NUM_ZERO,NUM_ONE,NUM_SIX_FOUR
local NUM_BIT_26,NUM_BIT_52 local bit_lshift=bit32.lshift local bit_rshift=bit32
.rshift local bit_arshift=bit32.arshift local bit_and=bit32.band local bit_or=
bit32.bor local bit_xor=bit32.bxor local bit_not=bit32.bnot local bit_extract=
bit32.extract local bit_replace=bit32.replace local from_u32,from_u64,into_u64
local num_subtract,num_divide_unsigned,num_negate local num_or,num_shift_left,
num_shift_right_unsigned local num_is_negative,num_is_zero,num_is_less_unsigned
local constructor=Vector3.new function Numeric.from_u32(data_1,data_2)local x=
bit_and(data_1,0x3fffff)local y=bit_and(data_2,0x3fffff)local z=bit_replace(
bit_rshift(data_1,22),bit_rshift(data_2,22),10,10)return constructor(x,y,z)end
local function load_d1(value)return bit_replace(bit_and(value.X,0x3fffff),value.
Z,22,10)end local function load_d2(value)return bit_replace(bit_and(value.Y,
0x3fffff),bit_rshift(value.Z,10),22,10)end function Numeric.into_u32(value)
return load_d1(value),load_d2(value)end function Numeric.from_u64(value)return
from_u32(bit_and(value%0x100000000),bit_and(value/0x100000000))end function
Numeric.into_u64(value)return load_d1(value)+load_d2(value)*0x100000000 end
function Numeric.add(lhs,rhs)local data_1=load_d1(lhs)+load_d1(rhs)local data_2=
load_d2(lhs)+load_d2(rhs)if data_1>=0x100000000 then data_1=data_1-0x100000000
data_2=data_2+1 end if data_2>=0x100000000 then data_2=data_2-0x100000000 end
return from_u32(data_1,data_2)end function Numeric.subtract(lhs,rhs)local data_1
=load_d1(lhs)-load_d1(rhs)local data_2=load_d2(lhs)-load_d2(rhs)if data_1<0 then
data_1=data_1+0x100000000 data_2=data_2-1 end if data_2<0 then data_2=data_2+
0x100000000 end return from_u32(data_1,data_2)end function Numeric.multiply(lhs,
rhs)if num_is_zero(lhs)or num_is_zero(rhs)then return NUM_ZERO elseif
num_is_less_unsigned(lhs,NUM_BIT_26)and num_is_less_unsigned(rhs,NUM_BIT_26)then
return from_u64(load_d1(lhs)*load_d1(rhs))end local lhs_1,lhs_2=load_d1(lhs),
load_d2(lhs)local rhs_1,rhs_2=load_d1(rhs),load_d2(rhs)local a48=bit_rshift(
lhs_2,16)local a32=bit_and(lhs_2,0xffff)local a16=bit_rshift(lhs_1,16)local a00=
bit_and(lhs_1,0xffff)local b48=bit_rshift(rhs_2,16)local b32=bit_and(rhs_2,
0xffff)local b16=bit_rshift(rhs_1,16)local b00=bit_and(rhs_1,0xffff)local c00=
a00*b00 local c16=bit_rshift(c00,16)c00=bit_and(c00,0xffff)c16=c16+a16*b00 local
c32=bit_rshift(c16,16)c16=bit_and(c16,0xffff)c16=c16+a00*b16 c32=c32+bit_rshift(
c16,16)c16=bit_and(c16,0xffff)c32=c32+a32*b00 local c48=bit_rshift(c32,16)c32=
bit_and(c32,0xffff)c32=c32+a16*b16 c48=c48+bit_rshift(c32,16)c32=bit_and(c32,
0xffff)c32=c32+a00*b32 c48=c48+bit_rshift(c32,16)c32=bit_and(c32,0xffff)c48=c48+
a48*b00+a32*b16+a16*b32+a00*b48 c48=bit_and(c48,0xffff)local data_1=bit_replace(
c00,c16,16,16)local data_2=bit_replace(c32,c48,16,16)return from_u32(data_1,
data_2)end function Numeric.divide_unsigned(lhs,rhs)if num_is_zero(rhs)then
error('division by zero')elseif num_is_zero(lhs)then return NUM_ZERO,NUM_ZERO
elseif num_is_less_unsigned(lhs,NUM_BIT_52)and num_is_less_unsigned(rhs,
NUM_BIT_52)then local lhs_u=into_u64(lhs)local rhs_u=into_u64(rhs)return
from_u64(lhs_u/rhs_u),from_u64(lhs_u%rhs_u)end local quotient=NUM_ZERO local
remainder=NUM_ZERO local num_1,num_2=load_d1(lhs),load_d2(lhs)for i=63,0,-1 do
local temp=num_shift_left(remainder,NUM_ONE)local rem_1,rem_2=load_d1(temp),
load_d2(temp)if i>31 then rem_1=bit_or(rem_1,bit_extract(num_2,i-32,1))else
rem_1=bit_or(rem_1,bit_extract(num_1,i,1))end remainder=from_u32(rem_1,rem_2)if
not num_is_less_unsigned(remainder,rhs)then remainder=num_subtract(remainder,rhs
)quotient=num_or(quotient,num_shift_left(NUM_ONE,from_u32(i,0)))end end return
quotient,remainder end function Numeric.divide_signed(lhs,rhs)local
left_negative=num_is_negative(lhs)local right_negative=num_is_negative(rhs)if
left_negative then lhs=num_negate(lhs)end if right_negative then rhs=num_negate(
rhs)end local quotient,remainder=num_divide_unsigned(lhs,rhs)if left_negative~=
right_negative then quotient=num_negate(quotient)end if left_negative then
remainder=num_negate(remainder)end return quotient,remainder end function
Numeric.negate(value)local data_1=bit_not(load_d1(value))+1 local data_2=
bit_not(load_d2(value))if data_1>=0x100000000 then data_1=data_1-0x100000000
data_2=data_2+1 end if data_2>=0x100000000 then data_2=data_2-0x100000000 end
return from_u32(data_1,data_2)end function Numeric.bit_and(lhs,rhs)local x=
bit_and(lhs.X,rhs.X)local y=bit_and(lhs.Y,rhs.Y)local z=bit_and(lhs.Z,rhs.Z)
return constructor(x,y,z)end function Numeric.bit_not(value)local x=bit_and(
bit_not(value.X),0xffffff)local y=bit_and(bit_not(value.Y),0xffffff)local z=
bit_and(bit_not(value.Z),0xffffff)return constructor(x,y,z)end function Numeric.
bit_or(lhs,rhs)local x=bit_or(lhs.X,rhs.X)local y=bit_or(lhs.Y,rhs.Y)local z=
bit_or(lhs.Z,rhs.Z)return constructor(x,y,z)end function Numeric.bit_xor(lhs,rhs
)local x=bit_xor(lhs.X,rhs.X)local y=bit_xor(lhs.Y,rhs.Y)local z=bit_xor(lhs.Z,
rhs.Z)return constructor(x,y,z)end function Numeric.shift_left(lhs,rhs)local
count=rhs.X%64 if count==0 then return lhs elseif count<32 then local pad=32-
count local lhs_1,lhs_2=load_d1(lhs),load_d2(lhs)local data_1=bit_lshift(lhs_1,
count)local data_2=bit_replace(bit_rshift(lhs_1,pad),lhs_2,count,pad)return
from_u32(data_1,data_2)else local lhs_1=load_d1(lhs)return from_u32(0,
bit_lshift(lhs_1,count-32))end end function Numeric.shift_right_unsigned(lhs,rhs
)local count=rhs.X%64 if count==0 then return lhs elseif count<32 then local
lhs_1,lhs_2=load_d1(lhs),load_d2(lhs)local data_1=bit_replace(bit_rshift(lhs_1,
count),lhs_2,32-count,count)local data_2=bit_rshift(lhs_2,count)return from_u32(
data_1,data_2)else local lhs_2=load_d2(lhs)return from_u32(bit_rshift(lhs_2,
count-32),0)end end function Numeric.shift_right_signed(lhs,rhs)local count=rhs.
X%64 if count==0 then return lhs elseif count<32 then local lhs_1,lhs_2=load_d1(
lhs),load_d2(lhs)local data_1=bit_replace(bit_rshift(lhs_1,count),lhs_2,32-count
,count)local data_2=bit_arshift(lhs_2,count)return from_u32(data_1,data_2)else
local lhs_2=load_d2(lhs)local data_1=bit_arshift(lhs_2,count-32)local data_2=
lhs_2>=0x80000000 and 0xffffffff or 0 return from_u32(data_1,data_2)end end
function Numeric.rotate_left(lhs,rhs)if num_is_zero(rhs)then return lhs else
local data_1=num_shift_left(lhs,rhs)local data_2=num_shift_right_unsigned(lhs,
num_subtract(NUM_SIX_FOUR,rhs))return num_or(data_1,data_2)end end function
Numeric.rotate_right(lhs,rhs)if num_is_zero(rhs)then return lhs else local
data_1=num_shift_right_unsigned(lhs,rhs)local data_2=num_shift_left(lhs,
num_subtract(NUM_SIX_FOUR,rhs))return num_or(data_1,data_2)end end function
Numeric.is_negative(value)return value.Z>=0x80000 end function Numeric.is_zero(
value)return value.X==0 and value.Y==0 and value.Z==0 end function Numeric.
is_equal(lhs,rhs)return lhs.X==rhs.X and lhs.Y==rhs.Y and lhs.Z==rhs.Z end
function Numeric.is_less_unsigned(lhs,rhs)local data_l_2=load_d2(lhs)local
data_r_2=load_d2(rhs)return data_l_2<data_r_2 or(data_l_2==data_r_2 and load_d1(
lhs)<load_d1(rhs))end function Numeric.is_greater_unsigned(lhs,rhs)local
data_l_2=load_d2(lhs)local data_r_2=load_d2(rhs)return data_l_2>data_r_2 or(
data_l_2==data_r_2 and load_d1(lhs)>load_d1(rhs))end function Numeric.
is_less_signed(lhs,rhs)local neg_a=num_is_negative(lhs)local neg_b=
num_is_negative(rhs)if neg_a and not neg_b then return true elseif not neg_a and
neg_b then return false else return num_is_negative(num_subtract(lhs,rhs))end
end function Numeric.is_greater_signed(lhs,rhs)local neg_a=num_is_negative(lhs)
local neg_b=num_is_negative(rhs)if neg_a and not neg_b then return false elseif
not neg_a and neg_b then return true else return num_is_negative(num_subtract(
rhs,lhs))end end from_u32=Numeric.from_u32 from_u64=Numeric.from_u64 into_u64=
Numeric.into_u64 num_subtract=Numeric.subtract num_divide_unsigned=Numeric.
divide_unsigned num_negate=Numeric.negate num_or=Numeric.bit_or num_shift_left=
Numeric.shift_left num_shift_right_unsigned=Numeric.shift_right_unsigned
num_is_negative=Numeric.is_negative num_is_zero=Numeric.is_zero
num_is_less_unsigned=Numeric.is_less_unsigned NUM_ZERO=from_u64(0)NUM_ONE=
from_u64(1)NUM_SIX_FOUR=from_u64(64)NUM_BIT_26=from_u64(0x4000000)NUM_BIT_52=
from_u64(0x10000000000000)Numeric.ZERO=NUM_ZERO Numeric.ONE=NUM_ONE return table
.freeze(Numeric)end)()local rt=(function()local module={}local to_u32=bit32.band
local bit_or=bit32.bor local bit_and=bit32.band local bit_lshift=bit32.lshift
local bit_rshift=bit32.rshift local num_from_u32=Integer.from_u32 local
num_into_u32=Integer.into_u32 local function to_i32(num)if num>=0x80000000 then
return num-0x100000000 else return num end end local function no_op(num)return
num end module.i64=Integer do local add={}local sub={}local mul={}local div={}
local rem={}local neg={}local min={}local max={}local copysign={}local nearest={
}local assert=assert local math_abs=math.abs local math_fmod=math.fmod local
math_modf=math.modf local math_round=math.round local math_sign=math.sign local
math_min=math.min local math_max=math.max local string_byte=string.byte local
string_pack=string.pack local num_divide_signed=Integer.divide_signed local
num_divide_unsigned=Integer.divide_unsigned function add.i32(lhs,rhs)return
to_u32(lhs+rhs)end function sub.i32(lhs,rhs)return to_u32(lhs-rhs)end function
mul.i32(lhs,rhs)if(lhs+rhs)<0x8000000 then return to_u32(lhs*rhs)else local a16=
bit_rshift(lhs,16)local a00=bit_and(lhs,0xffff)local b16=bit_rshift(rhs,16)local
b00=bit_and(rhs,0xffff)local c00=a00*b00 local c16=a16*b00+a00*b16 return
to_u32(c00+bit_lshift(c16,16))end end function div.i32(lhs,rhs)assert(rhs~=0,
'division by zero')lhs=to_i32(lhs)rhs=to_i32(rhs)return to_u32((math_modf(lhs/
rhs)))end function div.u32(lhs,rhs)assert(rhs~=0,'division by zero')return
to_u32((math_modf(lhs/rhs)))end function rem.i32(lhs,rhs)assert(rhs~=0,
'division by zero')lhs=to_i32(lhs)rhs=to_i32(rhs)return to_u32(math_fmod(lhs,rhs
))end add.i64=Integer.add sub.i64=Integer.subtract mul.i64=Integer.multiply div.
i64=num_divide_signed function rem.i64(lhs,rhs)local _,remainder=
num_divide_signed(lhs,rhs)return remainder end div.u64=num_divide_unsigned
function rem.u64(lhs,rhs)local _,remainder=num_divide_unsigned(lhs,rhs)return
remainder end function neg.f32(num)return-num end function min.f32(lhs,rhs)if
rhs==rhs then return math_min(lhs,rhs)else return rhs end end function max.f32(
lhs,rhs)if rhs==rhs then return math_max(lhs,rhs)else return rhs end end
function copysign.f32(lhs,rhs)local packed=string_pack('<d',rhs)local sign=
string_byte(packed,8)if sign>=0x80 then return-math_abs(lhs)else return
math_abs(lhs)end end function nearest.f32(num)local result=math_round(num)if(
math_abs(num)+0.5)%2==1 then result=result-math_sign(result)end return result
end neg.f64=neg.f32 min.f64=min.f32 max.f64=max.f32 copysign.f64=copysign.f32
nearest.f64=nearest.f32 module.add=add module.sub=sub module.mul=mul module.div=
div module.rem=rem module.neg=neg module.min=min module.max=max module.copysign=
copysign module.nearest=nearest end do local clz={}local ctz={}local popcnt={}
local bit_countlz=bit32.countlz local bit_countrz=bit32.countrz local function
popcnt_i32(num)local count=0 while num~=0 do num=bit_and(num,num-1)count=count+1
end return count end popcnt.i32=popcnt_i32 function clz.i64(num)local data_1,
data_2=num_into_u32(num)local temp if data_2==0 then temp=bit_countlz(data_1)+32
else temp=bit_countlz(data_2)end return num_from_u32(temp,0)end function ctz.i64
(num)local data_1,data_2=num_into_u32(num)local temp if data_1==0 then temp=
bit_countrz(data_2)+32 else temp=bit_countrz(data_1)end return num_from_u32(temp
,0)end function popcnt.i64(num)local data_1,data_2=num_into_u32(num)local temp=
popcnt_i32(data_1)+popcnt_i32(data_2)return num_from_u32(temp,0)end module.clz=
clz module.ctz=ctz module.popcnt=popcnt end do local eq={}local ne={}local le={}
local lt={}local ge={}local gt={}local num_is_equal=Integer.is_equal local
num_is_less_signed=Integer.is_less_signed local num_is_less_unsigned=Integer.
is_less_unsigned local num_is_greater_signed=Integer.is_greater_signed local
num_is_greater_unsigned=Integer.is_greater_unsigned function le.i32(lhs,rhs)
return to_i32(lhs)<=to_i32(rhs)end function lt.i32(lhs,rhs)return to_i32(lhs)<
to_i32(rhs)end function ge.i32(lhs,rhs)return to_i32(lhs)>=to_i32(rhs)end
function gt.i32(lhs,rhs)return to_i32(lhs)>to_i32(rhs)end eq.i64=num_is_equal
function ne.i64(lhs,rhs)return not num_is_equal(lhs,rhs)end function le.i64(lhs,
rhs)return num_is_less_signed(lhs,rhs)or num_is_equal(lhs,rhs)end function le.
u64(lhs,rhs)return num_is_less_unsigned(lhs,rhs)or num_is_equal(lhs,rhs)end lt.
i64=num_is_less_signed lt.u64=num_is_less_unsigned function ge.i64(lhs,rhs)
return num_is_greater_signed(lhs,rhs)or num_is_equal(lhs,rhs)end function ge.u64
(lhs,rhs)return num_is_greater_unsigned(lhs,rhs)or num_is_equal(lhs,rhs)end gt.
i64=num_is_greater_signed gt.u64=num_is_greater_unsigned module.eq=eq module.ne=
ne module.le=le module.lt=lt module.ge=ge module.gt=gt end do local band={}local
bor={}local bxor={}local bnot={}band.i64=Integer.bit_and bor.i64=Integer.bit_or
bxor.i64=Integer.bit_xor bnot.i64=Integer.bit_not module.band=band module.bor=
bor module.bxor=bxor module.bnot=bnot end do local shl={}local shr={}local rotl=
{}local rotr={}local bit_arshift=bit32.arshift local bit_lrotate=bit32.lrotate
local bit_rrotate=bit32.rrotate function shl.i32(lhs,rhs)return bit_lshift(lhs,
rhs%32)end function shr.u32(lhs,rhs)return bit_rshift(lhs,rhs%32)end function
shr.i32(lhs,rhs)return bit_arshift(lhs,rhs%32)end function rotl.i32(lhs,rhs)
return bit_lrotate(lhs,rhs%32)end function rotr.i32(lhs,rhs)return bit_rrotate(
lhs,rhs%32)end shl.i64=Integer.shift_left shr.i64=Integer.shift_right_signed shr
.u64=Integer.shift_right_unsigned rotl.i64=Integer.rotate_left rotr.i64=Integer.
rotate_right module.shl=shl module.shr=shr module.rotl=rotl module.rotr=rotr end
do local wrap={}local truncate={}local saturate={}local extend={}local convert={
}local demote={}local promote={}local reinterpret={}local math_ceil=math.ceil
local math_floor=math.floor local math_clamp=math.clamp local string_pack=string
.pack local string_unpack=string.unpack local NUM_ZERO=Integer.ZERO local
NUM_MIN_I64=num_from_u32(0,0x80000000)local NUM_MAX_I64=num_from_u32(0xffffffff,
0x7fffffff)local NUM_MAX_U64=num_from_u32(0xffffffff,0xffffffff)local
num_from_u64=Integer.from_u64 local num_into_u64=Integer.into_u64 local
num_negate=Integer.negate local num_is_negative=Integer.is_negative
local function truncate_f64(num)if num>=0 then return math_floor(num)else return
math_ceil(num)end end function wrap.i32_i64(num)local data_1,_=num_into_u32(num)
return data_1 end function truncate.i32_f32(num)return to_u32(truncate_f64(num))
end truncate.i32_f64=to_u32 truncate.u32_f32=truncate_f64 truncate.u32_f64=
truncate_f64 function truncate.i64_f32(num)if num<0 then local temp=
num_from_u64(-num)return num_negate(temp)else return num_from_u64(num)end end
truncate.i64_f64=truncate.i64_f32 function truncate.u64_f32(num)if num<=0 then
return NUM_ZERO else return num_from_u64(math_floor(num))end end truncate.
u64_f64=truncate.u64_f32 truncate.f32=truncate_f64 truncate.f64=truncate_f64
function saturate.i32_f32(num)local temp=math_clamp(truncate_f64(num),-
0x80000000,0x7fffffff)return to_u32(temp)end saturate.i32_f64=saturate.i32_f32
function saturate.u32_f32(num)local temp=math_clamp(truncate_f64(num),0,
0xffffffff)return to_u32(temp)end saturate.u32_f64=saturate.u32_f32 local
truncate_i64_f64=truncate.i64_f64 function saturate.i64_f32(num)if num>=2^63-1
then return NUM_MAX_I64 elseif num<=-2^63 then return NUM_MIN_I64 else return
truncate_i64_f64(num)end end saturate.i64_f64=saturate.i64_f32 function saturate
.u64_f32(num)if num>=2^64 then return NUM_MAX_U64 elseif num<=0 then return
NUM_ZERO else return truncate_i64_f64(num)end end saturate.u64_f64=saturate.
u64_f32 function extend.i32_n8(num)num=bit_and(num,0xff)if num>=0x80 then return
to_u32(num-0x100)else return num end end function extend.i32_n16(num)num=
bit_and(num,0xffff)if num>=0x8000 then return to_u32(num-0x10000)else return num
end end function extend.i64_n8(num)local data_1,_=num_into_u32(num)data_1=
bit_and(data_1,0xff)if data_1>=0x80 then local temp=num_from_u32(-data_1+0x100,0
)return num_negate(temp)else return num_from_u32(data_1,0)end end function
extend.i64_n16(num)local data_1,_=num_into_u32(num)data_1=bit_and(data_1,0xffff)
if data_1>=0x8000 then local temp=num_from_u32(-data_1+0x10000,0)return
num_negate(temp)else return num_from_u32(data_1,0)end end function extend.
i64_n32(num)local data_1,_=num_into_u32(num)if data_1>=0x80000000 then local
temp=num_from_u32(-data_1+0x100000000,0)return num_negate(temp)else return
num_from_u32(data_1,0)end end function extend.i64_i32(num)if num>=0x80000000
then local temp=num_from_u32(-num+0x100000000,0)return num_negate(temp)else
return num_from_u32(num,0)end end function extend.i64_u32(num)return
num_from_u32(num,0)end convert.f32_i32=to_i32 convert.f32_u32=no_op function
convert.f32_i64(num)if num_is_negative(num)then local temp=num_negate(num)return
-num_into_u64(temp)else return num_into_u64(num)end end convert.f32_u64=
num_into_u64 convert.f64_i32=to_i32 convert.f64_u32=no_op convert.f64_i64=
convert.f32_i64 convert.f64_u64=num_into_u64 demote.f32_f64=no_op promote.
f64_f32=no_op function reinterpret.i32_f32(num)local packed=string_pack('f',num)
return string_unpack('I4',packed)end function reinterpret.i64_f64(num)local
packed=string_pack('d',num)local data_1,data_2=string_unpack('I4I4',packed)
return num_from_u32(data_1,data_2)end function reinterpret.f32_i32(num)local
packed=string_pack('I4',num)return string_unpack('f',packed)end function
reinterpret.f64_i64(num)local data_1,data_2=num_into_u32(num)local packed=
string_pack('I4I4',data_1,data_2)return string_unpack('d',packed)end module.wrap
=wrap module.truncate=truncate module.saturate=saturate module.extend=extend
module.convert=convert module.demote=demote module.promote=promote module.
reinterpret=reinterpret end do local load={}local store={}local allocator={}
local bit_extract=bit32.extract local bit_replace=bit32.replace local math_floor
=math.floor local string_byte=string.byte local string_char=string.char local
string_unpack=string.unpack local reinterpret_f32_i32=module.reinterpret.f32_i32
local reinterpret_f64_i64=module.reinterpret.f64_i64 local reinterpret_i32_f32=
module.reinterpret.i32_f32 local reinterpret_i64_f64=module.reinterpret.i64_f64
local function load_byte(data,addr)local value=data[math_floor(addr/4)]or 0
return bit_extract(value,addr%4*8,8)end local function store_byte(data,addr,
value)local adjust=math_floor(addr/4)data[adjust]=bit_replace(data[adjust]or 0,
value,addr%4*8,8)end function load.i32_i8(memory,addr)local temp=load_byte(
memory.data,addr)if temp>=0x80 then return to_u32(temp-0x100)else return temp
end end function load.i32_u8(memory,addr)return load_byte(memory.data,addr)end
function load.i32_i16(memory,addr)local data=memory.data local temp if addr%4==0
then temp=bit_and(data[addr/4]or 0,0xffff)else local b1=load_byte(data,addr)
local b2=bit_lshift(load_byte(data,addr+1),8)temp=bit_or(b1,b2)end if temp>=
0x8000 then return to_u32(temp-0x10000)else return temp end end function load.
i32_u16(memory,addr)local data=memory.data if addr%4==0 then return bit_and(data
[addr/4]or 0,0xffff)else local b1=load_byte(data,addr)local b2=bit_lshift(
load_byte(data,addr+1),8)return bit_or(b1,b2)end end function load.i32(memory,
addr)local data=memory.data if addr%4==0 then return data[addr/4]or 0 else local
b1=load_byte(data,addr)local b2=bit_lshift(load_byte(data,addr+1),8)local b3=
bit_lshift(load_byte(data,addr+2),16)local b4=bit_lshift(load_byte(data,addr+3),
24)return bit_or(b1,b2,b3,b4)end end function load.i64_i8(memory,addr)local
data_1=load_byte(memory.data,addr)local data_2 if data_1>=0x80 then data_1=
to_u32(data_1-0x100)data_2=0xffffffff else data_2=0 end return num_from_u32(
data_1,data_2)end function load.i64_u8(memory,addr)local temp=load_byte(memory.
data,addr)return num_from_u32(temp,0)end function load.i64_i16(memory,addr)local
data=memory.data local data_1,data_2 if addr%4==0 then data_1=bit_and(data[addr/
4]or 0,0xffff)else local b1=load_byte(data,addr)local b2=bit_lshift(load_byte(
data,addr+1),8)data_1=bit_or(b1,b2)end if data_1>=0x8000 then data_1=to_u32(
data_1-0x10000)data_2=0xffffffff else data_2=0 end return num_from_u32(data_1,
data_2)end function load.i64_u16(memory,addr)local data=memory.data local temp
if addr%4==0 then temp=bit_and(data[addr/4]or 0,0xffff)else local b1=load_byte(
data,addr)local b2=bit_lshift(load_byte(data,addr+1),8)temp=bit_or(b1,b2)end
return num_from_u32(temp,0)end function load.i64_i32(memory,addr)local data=
memory.data local data_1,data_2 if addr%4==0 then data_1=data[addr/4]or 0 else
local b1=load_byte(data,addr)local b2=bit_lshift(load_byte(data,addr+1),8)local
b3=bit_lshift(load_byte(data,addr+2),16)local b4=bit_lshift(load_byte(data,addr+
3),24)data_1=bit_or(b1,b2,b3,b4)end if data_1>=0x80000000 then data_1=to_u32(
data_1-0x100000000)data_2=0xffffffff else data_2=0 end return num_from_u32(
data_1,data_2)end function load.i64_u32(memory,addr)local data=memory.data local
temp if addr%4==0 then temp=data[addr/4]or 0 else local b1=load_byte(data,addr)
local b2=bit_lshift(load_byte(data,addr+1),8)local b3=bit_lshift(load_byte(data,
addr+2),16)local b4=bit_lshift(load_byte(data,addr+3),24)temp=bit_or(b1,b2,b3,b4
)end return num_from_u32(temp,0)end local load_i32=load.i32 function load.i64(
memory,addr)local data_1=load_i32(memory,addr)local data_2=load_i32(memory,addr+
4)return num_from_u32(data_1,data_2)end local load_i64=load.i64 function load.
f32(memory,addr)local raw=load_i32(memory,addr)return reinterpret_f32_i32(raw)
end function load.f64(memory,addr)local raw=load_i64(memory,addr)return
reinterpret_f64_i64(raw)end function load.string(memory,addr,len)local buffer=
table.create(len)local data=memory.data for i=1,len do local raw=load_byte(data,
addr+i-1)buffer[i]=string_char(raw)end return table.concat(buffer)end function
store.i32_n8(memory,addr,value)store_byte(memory.data,addr,value)end function
store.i32_n16(memory,addr,value)store_byte(memory.data,addr,value)store_byte(
memory.data,addr+1,bit_rshift(value,8))end function store.i32(memory,addr,value)
local data=memory.data if addr%4==0 then data[addr/4]=value else store_byte(data
,addr,value)store_byte(data,addr+1,bit_rshift(value,8))store_byte(data,addr+2,
bit_rshift(value,16))store_byte(data,addr+3,bit_rshift(value,24))end end local
store_i32=store.i32 local store_i32_n8=store.i32_n8 local store_i32_n16=store.
i32_n16 function store.i64_n8(memory,addr,value)local data_1,_=num_into_u32(
value)store_i32_n8(memory,addr,data_1)end function store.i64_n16(memory,addr,
value)local data_1,_=num_into_u32(value)store_i32_n16(memory,addr,data_1)end
function store.i64_n32(memory,addr,value)local data_1,_=num_into_u32(value)
store_i32(memory,addr,data_1)end function store.i64(memory,addr,value)local
data_1,data_2=num_into_u32(value)store_i32(memory,addr,data_1)store_i32(memory,
addr+4,data_2)end local store_i64=store.i64 function store.f32(memory,addr,value
)store_i32(memory,addr,reinterpret_i32_f32(value))end function store.f64(memory,
addr,value)store_i64(memory,addr,reinterpret_i64_f64(value))end function store.
string(memory,addr,data,len)len=if len then len else#data local rem=len%4 for i=
1,len-rem,4 do local v=string_unpack('<I4',data,i)store_i32(memory,addr+i-1,v)
end for i=len-rem+1,len do local v=string_byte(data,i)store_i32_n8(memory,addr+i
-1,v)end end function store.copy(memory_1,addr_1,memory_2,addr_2,len)local
data_1=memory_1.data local data_2=memory_2.data if addr_1<=addr_2 then for i=1,
len do local v=load_byte(data_2,addr_2+i-1)store_byte(data_1,addr_1+i-1,v)end
else for i=len,1,-1 do local v=load_byte(data_2,addr_2+i-1)store_byte(data_1,
addr_1+i-1,v)end end end function store.fill(memory,addr,len,value)local data=
memory.data for i=1,len do store_byte(data,addr+i-1,value)end end function
allocator.new(min,max)return{min=min,max=max,data={}}end function allocator.grow
(memory,num)local old=memory.min local new=old+num if new>memory.max then return
to_u32(-1)else memory.min=new return old end end module.load=load module.store=
store module.allocator=allocator end return module end)()local add_i32=rt.add.
i32 local add_i64=rt.add.i64 local band_i32=bit32.band local band_i64=rt.band.
i64 local bor_i32=bit32.bor local bor_i64=rt.bor.i64 local bxor_i32=bit32.bxor
local bxor_i64=rt.bxor.i64 local clz_i32=bit32.countlz local clz_i64=rt.clz.i64
local convert_f64_i32=rt.convert.f64_i32 local convert_f64_i64=rt.convert.
f64_i64 local convert_f64_u32=rt.convert.f64_u32 local ctz_i64=rt.ctz.i64 local
demote_f32_f64=rt.demote.f32_f64 local div_i32=rt.div.i32 local div_i64=rt.div.
i64 local div_u32=rt.div.u32 local div_u64=rt.div.u64 local eq_i64=rt.eq.i64
local extend_i32_n8=rt.extend.i32_n8 local extend_i64_i32=rt.extend.i64_i32
local extend_i64_n32=rt.extend.i64_n32 local extend_i64_u32=rt.extend.i64_u32
local ge_i32=rt.ge.i32 local ge_i64=rt.ge.i64 local ge_u64=rt.ge.u64 local
gt_i32=rt.gt.i32 local gt_u64=rt.gt.u64 local i64_ONE=rt.i64.ONE local i64_ZERO=
rt.i64.ZERO local i64_from_u32=rt.i64.from_u32 local le_i32=rt.le.i32 local
le_u64=rt.le.u64 local load_f32=rt.load.f32 local load_f64=rt.load.f64 local
load_i32=rt.load.i32 local load_i32_i8=rt.load.i32_i8 local load_i32_u16=rt.load
.i32_u16 local load_i32_u8=rt.load.i32_u8 local load_i64=rt.load.i64 local
load_i64_i16=rt.load.i64_i16 local load_i64_i32=rt.load.i64_i32 local
load_i64_i8=rt.load.i64_i8 local load_i64_u16=rt.load.i64_u16 local load_i64_u32
=rt.load.i64_u32 local load_i64_u8=rt.load.i64_u8 local lt_i32=rt.lt.i32 local
lt_i64=rt.lt.i64 local lt_u64=rt.lt.u64 local mul_i32=rt.mul.i32 local mul_i64=
rt.mul.i64 local ne_i64=rt.ne.i64 local promote_f64_f32=rt.promote.f64_f32 local
rem_i32=rt.rem.i32 local rem_i64=rt.rem.i64 local rem_u64=rt.rem.u64 local
rotl_i64=rt.rotl.i64 local shl_i32=rt.shl.i32 local shl_i64=rt.shl.i64 local
shr_i32=rt.shr.i32 local shr_i64=rt.shr.i64 local shr_u32=rt.shr.u32 local
shr_u64=rt.shr.u64 local store_f64=rt.store.f64 local store_i32=rt.store.i32
local store_i32_n16=rt.store.i32_n16 local store_i32_n8=rt.store.i32_n8 local
store_i64=rt.store.i64 local store_i64_n16=rt.store.i64_n16 local store_i64_n32=
rt.store.i64_n32 local store_i64_n8=rt.store.i64_n8 local sub_i32=rt.sub.i32
local sub_i64=rt.sub.i64 local truncate_u32_f64=rt.truncate.u32_f64 local
wrap_i32_i64=rt.wrap.i32_i64 local memory_at_0 local FUNC_LIST=table.create(552)
local TABLE_LIST=table.create(0)local MEMORY_LIST=table.create(0)local
GLOBAL_LIST=table.create(2)FUNC_LIST[29]=function(loc_0)while true do TABLE_LIST
[0].data[loc_0]()break end end FUNC_LIST[30]=function(loc_0,loc_1,loc_2,loc_3)
local loc_4=0 local reg_0 while true do loc_4=sub_i32(GLOBAL_LIST[0].value,16)
GLOBAL_LIST[0].value=loc_4 store_i32(memory_at_0,loc_4+12,loc_0)reg_0=FUNC_LIST[
437](add_i32(loc_4,12),1048576,loc_1,loc_2,loc_3)loc_0=reg_0 GLOBAL_LIST[0].
value=add_i32(loc_4,16)reg_0=loc_0 break end return reg_0 end FUNC_LIST[31]=
function(loc_0)local loc_1=0 local reg_0 while true do loc_1=sub_i32(GLOBAL_LIST
[0].value,16)GLOBAL_LIST[0].value=loc_1 FUNC_LIST[29](load_i32(memory_at_0,loc_0
))store_i32_n8(memory_at_0,loc_1+15,0)reg_0=FUNC_LIST[463](add_i32(loc_1,15))
loc_0=reg_0 GLOBAL_LIST[0].value=add_i32(loc_1,16)reg_0=loc_0 break end return
reg_0 end FUNC_LIST[32]=function(loc_0)local loc_1=0 local reg_0 while true do
loc_1=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_1 store_i32(
memory_at_0,loc_1+12,load_i32(memory_at_0,loc_0))reg_0=FUNC_LIST[31](add_i32(
loc_1,12))loc_0=reg_0 GLOBAL_LIST[0].value=add_i32(loc_1,16)reg_0=loc_0 break
end return reg_0 end FUNC_LIST[33]=function(loc_0,loc_1)local loc_2=0 while true
do FUNC_LIST[34](loc_0,loc_2)FUNC_LIST[35](loc_0)break end end FUNC_LIST[34]=
function(loc_0,loc_1)local loc_2=0 local loc_3=0 local reg_0 while true do loc_2
=sub_i32(GLOBAL_LIST[0].value,48)GLOBAL_LIST[0].value=loc_2 reg_0=FUNC_LIST[339
](loc_0)loc_3=reg_0 reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(
memory_at_0,loc_3+4)+16)](load_i32(memory_at_0,loc_3))loc_3=reg_0 loc_0=add_i32(
loc_0,37712)FUNC_LIST[56](add_i32(loc_2,12),loc_0)store_i32_n8(memory_at_0,loc_2
+39,loc_3)FUNC_LIST[504](add_i32(loc_2,24),add_i32(loc_2,39),1)while true do if
load_i32(memory_at_0,loc_2+24)==0 then break end store_i64(memory_at_0,loc_2+40,
load_i64(memory_at_0,loc_2+28))FUNC_LIST[506](1048600,43,add_i32(loc_2,40),
1048644,1048904)error('out of code bounds')end FUNC_LIST[85](add_i32(loc_2,12),
load_i32(memory_at_0,loc_2+28),load_i32(memory_at_0,add_i32(loc_2,32)))FUNC_LIST
[57](loc_0,load_i32(memory_at_0,loc_2+12),load_i32(memory_at_0,loc_2+20))
FUNC_LIST[37](add_i32(loc_2,12))GLOBAL_LIST[0].value=add_i32(loc_2,48)break end
end FUNC_LIST[35]=function(loc_0)local loc_1=0 local loc_2=0 local loc_3=0 local
loc_4=0 while true do loc_1=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value
=loc_1 FUNC_LIST[36](add_i32(loc_0,37664))FUNC_LIST[37](add_i32(loc_0,37676))
FUNC_LIST[36](add_i32(loc_0,37636))FUNC_LIST[36](add_i32(loc_0,37648))loc_2=
load_i32(memory_at_0,add_i32(loc_0,37552))loc_3=load_i32(memory_at_0,add_i32(
loc_0,37556))TABLE_LIST[0].data[load_i32(memory_at_0,loc_3)](loc_2)while true do
loc_4=load_i32(memory_at_0,loc_3+4)if loc_4==0 then break end FUNC_LIST[38](
loc_2,load_i32(memory_at_0,loc_3+8),loc_4)break end while true do loc_3=
load_i32(memory_at_0,add_i32(loc_0,33316))if loc_3==0 then break end loc_2=
shl_i32(loc_3,3)FUNC_LIST[38](add_i32(sub_i32(load_i32(memory_at_0,add_i32(loc_0
,33312)),loc_2),4294967288),8,add_i32(add_i32(loc_3,loc_2),17))break end
FUNC_LIST[353](add_i32(loc_1,4),add_i32(loc_0,33360))while true do loc_3=
load_i32(memory_at_0,loc_1+8)if loc_3==0 then break end FUNC_LIST[38](load_i32(
memory_at_0,loc_1+4),loc_3,load_i32(memory_at_0,add_i32(loc_1,12)))break end
FUNC_LIST[76](add_i32(loc_0,37712))GLOBAL_LIST[0].value=add_i32(loc_1,16)break
end end FUNC_LIST[36]=function(loc_0)local loc_1=0 while true do loc_1=sub_i32(
GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_1 FUNC_LIST[352](add_i32(loc_1,
4),loc_0)while true do loc_0=load_i32(memory_at_0,loc_1+8)if loc_0==0 then break
end FUNC_LIST[38](load_i32(memory_at_0,loc_1+4),loc_0,load_i32(memory_at_0,
add_i32(loc_1,12)))break end GLOBAL_LIST[0].value=add_i32(loc_1,16)break end end
FUNC_LIST[37]=function(loc_0)while true do FUNC_LIST[86](loc_0)FUNC_LIST[98](
loc_0)break end end FUNC_LIST[38]=function(loc_0,loc_1,loc_2)while true do while
true do if loc_2==0 then break end FUNC_LIST[43](loc_0,loc_2,loc_1)break end
break end end FUNC_LIST[39]=function(loc_0)while true do break end end FUNC_LIST
[40]=function(loc_0)while true do FUNC_LIST[37](loc_0)FUNC_LIST[37](add_i32(
loc_0,12))break end end FUNC_LIST[41]=function(loc_0,loc_1)local loc_2=0 local
reg_0 local desired while true do while true do reg_0=FUNC_LIST[42](loc_0,loc_1)
loc_2=reg_0 if loc_2==0 then break end reg_0=loc_2 desired=0 break end if
desired then if desired==0 then desired=nil end break end FUNC_LIST[478](loc_1,
loc_0)error('out of code bounds')end return reg_0 end FUNC_LIST[42]=function(
loc_0,loc_1)local reg_0 while true do reg_0=FUNC_LIST[402](1064472,loc_1,loc_0)
break end return reg_0 end FUNC_LIST[43]=function(loc_0,loc_1,loc_2)while true
do FUNC_LIST[403](1064472,loc_0,loc_2,loc_1)break end end FUNC_LIST[44]=function
()local loc_0=0 local loc_1=0 local loc_2=0 local loc_3=0 local reg_0 local
reg_1 while true do loc_0=sub_i32(GLOBAL_LIST[0].value,75504)GLOBAL_LIST[0].
value=loc_0 reg_1=FUNC_LIST[75]()store_i32(memory_at_0,loc_0+28,reg_1)reg_1=
FUNC_LIST[80]()store_i32(memory_at_0,loc_0+32,reg_1)reg_1=FUNC_LIST[74]()
store_i32(memory_at_0,loc_0+37792,reg_1)reg_1=FUNC_LIST[50](add_i32(loc_0,37792)
)reg_1=FUNC_LIST[50](reg_1)reg_1=FUNC_LIST[50](reg_1)reg_1=FUNC_LIST[50](reg_1)
store_i32(memory_at_0,loc_0+48,reg_1)FUNC_LIST[77](add_i32(loc_0,32),add_i32(
loc_0,48))FUNC_LIST[76](add_i32(loc_0,37792))reg_1=FUNC_LIST[79]()store_i32(
memory_at_0,loc_0+36,reg_1)reg_1=FUNC_LIST[81]()store_i32(memory_at_0,loc_0+40,
reg_1)reg_1=FUNC_LIST[78]()store_i32(memory_at_0,loc_0+44,reg_1)reg_1=FUNC_LIST[
53](1e0,1e0)store_i32(memory_at_0,loc_0+37792,reg_1)FUNC_LIST[54](add_i32(loc_0,
44),add_i32(loc_0,37792))FUNC_LIST[82](add_i32(loc_0,37792))FUNC_LIST[55](
add_i32(loc_0,44),1048680)FUNC_LIST[59](add_i32(loc_0,44),1048684)FUNC_LIST[60](
add_i32(loc_0,44),1048684)FUNC_LIST[57](add_i32(loc_0,44),1048688,15)FUNC_LIST[
58](add_i32(loc_0,44),3e1)reg_1=FUNC_LIST[50](add_i32(loc_0,36))reg_1=FUNC_LIST[
50](reg_1)reg_1=FUNC_LIST[50](reg_1)reg_1=FUNC_LIST[50](reg_1)reg_1=FUNC_LIST[50
](reg_1)store_i32(memory_at_0,loc_0+37792,reg_1)FUNC_LIST[77](add_i32(loc_0,44),
add_i32(loc_0,37792))FUNC_LIST[67](add_i32(loc_0,40),1)reg_1=FUNC_LIST[52](0e0,
2.55e2,0e0)store_i32(memory_at_0,loc_0+37792,reg_1)FUNC_LIST[70](add_i32(loc_0,
40),add_i32(loc_0,37792))FUNC_LIST[82](add_i32(loc_0,37792))FUNC_LIST[71](
add_i32(loc_0,40),1048704)reg_1=FUNC_LIST[51](1.6e1,1e1,5e-2)store_i32(
memory_at_0,loc_0+37792,reg_1)FUNC_LIST[73](add_i32(loc_0,40),add_i32(loc_0,
37792))FUNC_LIST[82](add_i32(loc_0,37792))reg_1=FUNC_LIST[51](0e0,0e0,0e0)
store_i32(memory_at_0,loc_0+37792,reg_1)FUNC_LIST[72](add_i32(loc_0,40),add_i32(
loc_0,37792))FUNC_LIST[82](add_i32(loc_0,37792))FUNC_LIST[68](add_i32(loc_0,40),
0)FUNC_LIST[67](add_i32(loc_0,40),1)FUNC_LIST[69](add_i32(loc_0,40),0)FUNC_LIST[
62](add_i32(loc_0,36),1048708)reg_1=FUNC_LIST[50](add_i32(loc_0,40))reg_1=
FUNC_LIST[50](reg_1)reg_1=FUNC_LIST[50](reg_1)reg_1=FUNC_LIST[50](reg_1)
FUNC_LIST[61](add_i32(loc_0,36),reg_1)FUNC_LIST[64](add_i32(loc_0,36),1048712)
FUNC_LIST[63](add_i32(loc_0,36),1e2)reg_1=FUNC_LIST[50](add_i32(loc_0,32))reg_1=
FUNC_LIST[50](reg_1)reg_1=FUNC_LIST[50](reg_1)store_i32(memory_at_0,loc_0+37792,
reg_1)FUNC_LIST[77](add_i32(loc_0,36),add_i32(loc_0,37792))reg_1=FUNC_LIST[50](
add_i32(loc_0,32))reg_1=FUNC_LIST[50](reg_1)reg_1=FUNC_LIST[50](reg_1)store_i32(
memory_at_0,loc_0+37792,reg_1)FUNC_LIST[77](add_i32(loc_0,40),add_i32(loc_0,
37792))FUNC_LIST[133](add_i32(loc_0,37792))reg_0=FUNC_LIST[41](24,4)loc_1=reg_0
store_i64(memory_at_0,add_i32(loc_1,16),load_i64(memory_at_0,add_i32(add_i32(
loc_0,37792),16)))store_i64(memory_at_0,add_i32(loc_1,8),load_i64(memory_at_0,
add_i32(add_i32(loc_0,37792),8)))store_i64(memory_at_0,loc_1,load_i64(
memory_at_0,loc_0+37792))FUNC_LIST[332](add_i32(loc_0,48),loc_1,1048716)reg_1=
FUNC_LIST[66]()store_i32(memory_at_0,loc_0+37792,reg_1)FUNC_LIST[65](add_i32(
loc_0,37764),add_i32(loc_0,37792),1048744,65,0)FUNC_LIST[76](add_i32(loc_0,37792
))reg_1=FUNC_LIST[66]()store_i32(memory_at_0,loc_0+37792,reg_1)FUNC_LIST[65](
add_i32(loc_0,37776),add_i32(loc_0,37792),1048809,77,0)FUNC_LIST[76](add_i32(
loc_0,37792))loc_2=load_i32(memory_at_0,loc_0+37776)loc_1=load_i32(memory_at_0,
loc_0+37784)FUNC_LIST[92](add_i32(loc_0,16),loc_1,0)loc_3=load_i32(memory_at_0,
loc_0+20)reg_0=FUNC_LIST[550](load_i32(memory_at_0,loc_0+16),loc_2,loc_1)loc_2=
reg_0 store_i32(memory_at_0,loc_0+37800,loc_1)store_i32(memory_at_0,loc_0+37796,
loc_3)store_i32(memory_at_0,loc_0+37792,loc_2)FUNC_LIST[337](add_i32(loc_0,48),
add_i32(loc_0,37792))loc_2=load_i32(memory_at_0,loc_0+37764)loc_1=load_i32(
memory_at_0,loc_0+37772)FUNC_LIST[92](add_i32(loc_0,8),loc_1,0)loc_3=load_i32(
memory_at_0,loc_0+12)reg_0=FUNC_LIST[550](load_i32(memory_at_0,loc_0+8),loc_2,
loc_1)loc_2=reg_0 store_i32(memory_at_0,loc_0+37800,loc_1)store_i32(memory_at_0,
loc_0+37796,loc_3)store_i32(memory_at_0,loc_0+37792,loc_2)FUNC_LIST[338](
add_i32(loc_0,48),add_i32(loc_0,37792))FUNC_LIST[333](add_i32(loc_0,48))reg_0=
FUNC_LIST[550](add_i32(loc_0,37792),add_i32(loc_0,48),37712)loc_1=load_i32(
memory_at_0,loc_0+28)loc_2=load_i32(memory_at_0,loc_0+44)reg_0=FUNC_LIST[41](
37720,8)reg_0=FUNC_LIST[550](reg_0,add_i32(loc_0,37792),37712)loc_3=reg_0
store_i32(memory_at_0,loc_3+37712,loc_2)reg_1=FUNC_LIST[0](loc_1,loc_3,1048660)
store_i32(memory_at_0,loc_0+37788,reg_1)FUNC_LIST[111](add_i32(loc_0,37788))
FUNC_LIST[37](add_i32(loc_0,37776))FUNC_LIST[37](add_i32(loc_0,37764))FUNC_LIST[
76](add_i32(loc_0,40))FUNC_LIST[76](add_i32(loc_0,36))FUNC_LIST[76](add_i32(
loc_0,32))FUNC_LIST[76](add_i32(loc_0,28))GLOBAL_LIST[0].value=add_i32(loc_0,
75504)break end end FUNC_LIST[45]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0
local reg_0 while true do while true do reg_0=FUNC_LIST[402](1064472,loc_2,loc_3
)loc_4=reg_0 if loc_4==0 then break end reg_0=FUNC_LIST[550](loc_4,loc_0,(if
loc_1<loc_3 then loc_1 else loc_3))FUNC_LIST[403](1064472,loc_0,loc_2,loc_1)
break end reg_0=loc_4 break end return reg_0 end FUNC_LIST[46]=function(loc_0,
loc_1)local reg_0 while true do while true do reg_0=FUNC_LIST[402](1064472,loc_1
,loc_0)loc_1=reg_0 if loc_1==0 then break end reg_0=FUNC_LIST[551](loc_1,0,loc_0
)break end reg_0=loc_1 break end return reg_0 end FUNC_LIST[47]=function(loc_0,
loc_1)local reg_0 while true do reg_0=FUNC_LIST[30](1,loc_0,loc_1,0)break end
return reg_0 end FUNC_LIST[48]=function(loc_0,loc_1)while true do FUNC_LIST[465
](loc_0,loc_1)break end end FUNC_LIST[49]=function(loc_0,loc_1)while true do
while true do if loc_0~=0 then break end FUNC_LIST[495](1048920,43,loc_1)error(
'out of code bounds')end break end end FUNC_LIST[50]=function(loc_0)local reg_0
while true do reg_0=loc_0 break end return reg_0 end FUNC_LIST[51]=function(
loc_0,loc_1,loc_2)local reg_0 while true do reg_0=FUNC_LIST[1](loc_0,loc_1,loc_2
)break end return reg_0 end FUNC_LIST[52]=function(loc_0,loc_1,loc_2)local reg_0
while true do reg_0=FUNC_LIST[3](loc_0,loc_1,loc_2)break end return reg_0 end
FUNC_LIST[53]=function(loc_0,loc_1)local reg_0 while true do reg_0=FUNC_LIST[4](
loc_0,loc_1)break end return reg_0 end FUNC_LIST[54]=function(loc_0,loc_1)while
true do FUNC_LIST[7](load_i32(memory_at_0,loc_0),load_i32(memory_at_0,loc_1))
break end end FUNC_LIST[55]=function(loc_0,loc_1)while true do FUNC_LIST[8](
load_i32(memory_at_0,loc_0),loc_1)break end end FUNC_LIST[56]=function(loc_0,
loc_1)local loc_2=0 local loc_3=0 while true do loc_2=sub_i32(GLOBAL_LIST[0].
value,16)GLOBAL_LIST[0].value=loc_2 FUNC_LIST[9](add_i32(loc_2,8),load_i32(
memory_at_0,loc_1))loc_1=load_i32(memory_at_0,loc_2+8)loc_3=load_i32(memory_at_0
,loc_2+12)store_i32(memory_at_0,loc_0+8,loc_3)store_i32(memory_at_0,loc_0+4,
loc_3)store_i32(memory_at_0,loc_0,loc_1)GLOBAL_LIST[0].value=add_i32(loc_2,16)
break end end FUNC_LIST[57]=function(loc_0,loc_1,loc_2)while true do FUNC_LIST[
10](load_i32(memory_at_0,loc_0),loc_1,loc_2)break end end FUNC_LIST[58]=function
(loc_0,loc_1)while true do FUNC_LIST[11](load_i32(memory_at_0,loc_0),loc_1)break
end end FUNC_LIST[59]=function(loc_0,loc_1)while true do FUNC_LIST[12](load_i32(
memory_at_0,loc_0),loc_1)break end end FUNC_LIST[60]=function(loc_0,loc_1)while
true do FUNC_LIST[13](load_i32(memory_at_0,loc_0),loc_1)break end end FUNC_LIST[
61]=function(loc_0,loc_1)while true do FUNC_LIST[14](load_i32(memory_at_0,loc_0)
,load_i32(memory_at_0,loc_1))break end end FUNC_LIST[62]=function(loc_0,loc_1)
while true do FUNC_LIST[15](load_i32(memory_at_0,loc_0),loc_1)break end end
FUNC_LIST[63]=function(loc_0,loc_1)while true do FUNC_LIST[16](load_i32(
memory_at_0,loc_0),loc_1)break end end FUNC_LIST[64]=function(loc_0,loc_1)while
true do FUNC_LIST[17](load_i32(memory_at_0,loc_0),loc_1)break end end FUNC_LIST[
65]=function(loc_0,loc_1,loc_2,loc_3,loc_4)local loc_5=0 while true do loc_5=
sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_5 FUNC_LIST[18](
add_i32(loc_5,8),load_i32(memory_at_0,loc_1),loc_2,loc_3,loc_4)loc_1=load_i32(
memory_at_0,loc_5+8)loc_4=load_i32(memory_at_0,loc_5+12)store_i32(memory_at_0,
loc_0+8,loc_4)store_i32(memory_at_0,loc_0+4,loc_4)store_i32(memory_at_0,loc_0,
loc_1)GLOBAL_LIST[0].value=add_i32(loc_5,16)break end end FUNC_LIST[66]=function
()local loc_0=0 local loc_1=0 local loc_2=0 local reg_0 local reg_1 while true
do loc_0=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_0 reg_1=
FUNC_LIST[5]()loc_1=reg_1 FUNC_LIST[6](add_i32(loc_0,8),loc_1,1049069,11)loc_2=
load_i32(memory_at_0,loc_0+12)FUNC_LIST[49](load_i32(memory_at_0,loc_0+8),
1049080)FUNC_LIST[2](loc_1)GLOBAL_LIST[0].value=add_i32(loc_0,16)reg_0=loc_2
break end return reg_0 end FUNC_LIST[67]=function(loc_0,loc_1)while true do
FUNC_LIST[19](load_i32(memory_at_0,loc_0),loc_1)break end end FUNC_LIST[68]=
function(loc_0,loc_1)while true do FUNC_LIST[20](load_i32(memory_at_0,loc_0),
loc_1)break end end FUNC_LIST[69]=function(loc_0,loc_1)while true do FUNC_LIST[
21](load_i32(memory_at_0,loc_0),loc_1)break end end FUNC_LIST[70]=function(loc_0
,loc_1)while true do FUNC_LIST[22](load_i32(memory_at_0,loc_0),load_i32(
memory_at_0,loc_1))break end end FUNC_LIST[71]=function(loc_0,loc_1)while true
do FUNC_LIST[23](load_i32(memory_at_0,loc_0),loc_1)break end end FUNC_LIST[72]=
function(loc_0,loc_1)while true do FUNC_LIST[24](load_i32(memory_at_0,loc_0),
load_i32(memory_at_0,loc_1))break end end FUNC_LIST[73]=function(loc_0,loc_1)
while true do FUNC_LIST[25](load_i32(memory_at_0,loc_0),load_i32(memory_at_0,
loc_1))break end end FUNC_LIST[74]=function()local loc_0=0 local loc_1=0 local
loc_2=0 local reg_0 local reg_1 while true do loc_0=sub_i32(GLOBAL_LIST[0].value
,16)GLOBAL_LIST[0].value=loc_0 reg_1=FUNC_LIST[5]()loc_1=reg_1 FUNC_LIST[6](
add_i32(loc_0,8),loc_1,1049106,9)loc_2=load_i32(memory_at_0,loc_0+12)FUNC_LIST[
49](load_i32(memory_at_0,loc_0+8),1049116)FUNC_LIST[2](loc_1)GLOBAL_LIST[0].
value=add_i32(loc_0,16)reg_0=loc_2 break end return reg_0 end FUNC_LIST[75]=
function()local loc_0=0 local loc_1=0 local loc_2=0 local reg_0 local reg_1
while true do loc_0=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_0
reg_1=FUNC_LIST[5]()loc_1=reg_1 FUNC_LIST[6](add_i32(loc_0,8),loc_1,1049132,10)
loc_2=load_i32(memory_at_0,loc_0+12)FUNC_LIST[49](load_i32(memory_at_0,loc_0+8),
1049144)FUNC_LIST[2](loc_1)GLOBAL_LIST[0].value=add_i32(loc_0,16)reg_0=loc_2
break end return reg_0 end FUNC_LIST[76]=function(loc_0)while true do FUNC_LIST[
2](load_i32(memory_at_0,loc_0))break end end FUNC_LIST[77]=function(loc_0,loc_1)
local loc_2=0 local desired while true do loc_0=load_i32(memory_at_0,loc_0)while
true do while true do loc_1=load_i32(memory_at_0,loc_1)if loc_1~=0 then break
end loc_1=0 desired=1 break end if desired then if desired==1 then desired=nil
end break end loc_2=load_i32(memory_at_0,loc_1)loc_1=1 break end FUNC_LIST[26](
loc_0,loc_1,loc_2)break end end FUNC_LIST[78]=function()local reg_0 while true
do reg_0=FUNC_LIST[27](1049052,7)break end return reg_0 end FUNC_LIST[79]=
function()local reg_0 while true do reg_0=FUNC_LIST[27](1049059,10)break end
return reg_0 end FUNC_LIST[80]=function()local reg_0 while true do reg_0=
FUNC_LIST[27](1049096,6)break end return reg_0 end FUNC_LIST[81]=function()local
reg_0 while true do reg_0=FUNC_LIST[27](1049102,4)break end return reg_0 end
FUNC_LIST[82]=function(loc_0)while true do FUNC_LIST[2](load_i32(memory_at_0,
loc_0))break end end FUNC_LIST[83]=function(loc_0,loc_1,loc_2)local loc_3=0
local reg_0 while true do loc_2=sub_i32(loc_2,loc_1)FUNC_LIST[84](loc_0,loc_2)
loc_3=load_i32(memory_at_0,loc_0+8)reg_0=FUNC_LIST[550](add_i32(load_i32(
memory_at_0,loc_0),loc_3),loc_1,loc_2)store_i32(memory_at_0,loc_0+8,add_i32(
loc_3,loc_2))break end end FUNC_LIST[84]=function(loc_0,loc_1)local loc_2=0
while true do while true do loc_2=load_i32(memory_at_0,loc_0+8)if sub_i32(
load_i32(memory_at_0,loc_0+4),loc_2)>=loc_1 then break end FUNC_LIST[96](loc_0,
loc_2,loc_1)break end break end end FUNC_LIST[85]=function(loc_0,loc_1,loc_2)
while true do FUNC_LIST[83](loc_0,loc_1,add_i32(loc_1,loc_2))break end end
FUNC_LIST[86]=function(loc_0)while true do break end end FUNC_LIST[87]=function(
loc_0,loc_1,loc_2,loc_3)local reg_0 local desired while true do while true do if
loc_2==0 then break end while true do if loc_3~=0 then break end reg_0=FUNC_LIST
[42](loc_2,loc_1)loc_1=reg_0 desired=1 break end if desired then if desired==1
then desired=nil end break end reg_0=FUNC_LIST[46](loc_2,loc_1)loc_1=reg_0 break
end store_i32(memory_at_0,loc_0+4,loc_2)store_i32(memory_at_0,loc_0,loc_1)break
end end FUNC_LIST[88]=function(loc_0,loc_1,loc_2,loc_3,loc_4)local loc_5=0 local
loc_6=0 local reg_0 local desired while true do loc_5=sub_i32(GLOBAL_LIST[0].
value,16)GLOBAL_LIST[0].value=loc_5 while true do while true do while true do
while true do if loc_1==0 then break end if le_i32(loc_2,4294967295)then desired
=3 break end while true do while true do if load_i32(memory_at_0,loc_3+4)==0
then break end while true do loc_6=load_i32(memory_at_0,add_i32(loc_3,8))if
loc_6~=0 then break end FUNC_LIST[87](add_i32(loc_5,8),loc_1,loc_2,0)loc_6=
load_i32(memory_at_0,loc_5+12)loc_3=load_i32(memory_at_0,loc_5+8)desired=5 break
end if desired then if desired==6 then desired=nil end break end reg_0=FUNC_LIST
[45](load_i32(memory_at_0,loc_3),loc_6,loc_1,loc_2)loc_3=reg_0 loc_6=loc_2
desired=5 break end if desired then if desired==5 then desired=nil end break end
FUNC_LIST[89](loc_5,loc_1,loc_2)loc_6=load_i32(memory_at_0,loc_5+4)loc_3=
load_i32(memory_at_0,loc_5)break end if desired then if desired==4 then desired=
nil end break end while true do if loc_3==0 then break end store_i32(memory_at_0
,loc_0+4,loc_3)store_i32(memory_at_0,add_i32(loc_0,8),loc_6)loc_2=0 desired=1
break end if desired then if desired==4 then desired=nil end break end
store_i32(memory_at_0,loc_0+4,loc_1)store_i32(memory_at_0,add_i32(loc_0,8),loc_2
)desired=2 break end if desired then if desired==3 then desired=nil end break
end store_i32(memory_at_0,loc_0+4,0)store_i32(memory_at_0,add_i32(loc_0,8),loc_2
)desired=2 break end if desired then if desired==2 then desired=nil end break
end store_i32(memory_at_0,loc_0+4,0)break end if desired then if desired==1 then
desired=nil end break end loc_2=1 break end store_i32(memory_at_0,loc_0,loc_2)
GLOBAL_LIST[0].value=add_i32(loc_5,16)break end end FUNC_LIST[89]=function(loc_0
,loc_1,loc_2)local loc_3=0 while true do loc_3=sub_i32(GLOBAL_LIST[0].value,16)
GLOBAL_LIST[0].value=loc_3 FUNC_LIST[87](add_i32(loc_3,8),loc_1,loc_2,0)loc_2=
load_i32(memory_at_0,loc_3+12)store_i32(memory_at_0,loc_0,load_i32(memory_at_0,
loc_3+8))store_i32(memory_at_0,loc_0+4,loc_2)GLOBAL_LIST[0].value=add_i32(loc_3,
16)break end end FUNC_LIST[90]=function(loc_0,loc_1)local desired while true do
while true do while true do if loc_0==2147483649 then break end if loc_0==0 then
desired=1 break end FUNC_LIST[478](loc_0,loc_1)error('out of code bounds')end if
desired then if desired==1 then desired=nil end break end desired=0 break end if
desired then if desired==0 then desired=nil end break end FUNC_LIST[479]()error(
'out of code bounds')end end FUNC_LIST[91]=function(loc_0,loc_1,loc_2)local
loc_3=0 while true do loc_3=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value
=loc_3 FUNC_LIST[87](add_i32(loc_3,8),loc_1,loc_2,1)loc_2=load_i32(memory_at_0,
loc_3+12)store_i32(memory_at_0,loc_0,load_i32(memory_at_0,loc_3+8))store_i32(
memory_at_0,loc_0+4,loc_2)GLOBAL_LIST[0].value=add_i32(loc_3,16)break end end
FUNC_LIST[92]=function(loc_0,loc_1,loc_2)local loc_3=0 local desired while true
do loc_3=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_3 while true
do while true do while true do while true do if loc_1~=0 then break end loc_2=1
desired=3 break end if desired then if desired==3 then desired=nil end break end
if le_i32(loc_1,4294967295)then desired=2 break end while true do while true do
if loc_2~=0 then break end FUNC_LIST[89](add_i32(loc_3,8),1,loc_1)loc_2=
load_i32(memory_at_0,loc_3+8)desired=4 break end if desired then if desired==4
then desired=nil end break end FUNC_LIST[91](loc_3,1,loc_1)loc_2=load_i32(
memory_at_0,loc_3)break end if desired then if desired==3 then desired=nil end
break end if loc_2==0 then desired=1 break end break end if desired then if
desired==2 then desired=nil end break end store_i32(memory_at_0,loc_0+4,loc_1)
store_i32(memory_at_0,loc_0,loc_2)GLOBAL_LIST[0].value=add_i32(loc_3,16)desired=
0 break end if desired then if desired==1 then desired=nil end break end
FUNC_LIST[479]()error('out of code bounds')end if desired then if desired==0
then desired=nil end break end FUNC_LIST[478](1,loc_1)error('out of code bounds'
)end end FUNC_LIST[93]=function(loc_0,loc_1,loc_2)local loc_3=0 local loc_4=0
local desired while true do loc_3=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0]
.value=loc_3 while true do while true do while true do while true do if loc_1~=0
then break end loc_2=4 desired=3 break end if desired then if desired==3 then
desired=nil end break end if loc_1>536870911 then desired=2 break end loc_4=
shl_i32(loc_1,2)if le_i32(loc_4,4294967295)then desired=2 break end while true
do while true do if loc_2~=0 then break end FUNC_LIST[89](add_i32(loc_3,8),4,
loc_4)loc_2=load_i32(memory_at_0,loc_3+8)desired=4 break end if desired then if
desired==4 then desired=nil end break end FUNC_LIST[91](loc_3,4,loc_4)loc_2=
load_i32(memory_at_0,loc_3)break end if desired then if desired==3 then desired=
nil end break end if loc_2==0 then desired=1 break end break end if desired then
if desired==2 then desired=nil end break end store_i32(memory_at_0,loc_0+4,loc_1
)store_i32(memory_at_0,loc_0,loc_2)GLOBAL_LIST[0].value=add_i32(loc_3,16)desired
=0 break end if desired then if desired==1 then desired=nil end break end
FUNC_LIST[479]()error('out of code bounds')end if desired then if desired==0
then desired=nil end break end FUNC_LIST[478](4,loc_4)error('out of code bounds'
)end end FUNC_LIST[94]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local
loc_5=0 local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)
GLOBAL_LIST[0].value=loc_4 loc_5=0 while true do loc_3=add_i32(loc_2,loc_3)if
loc_3<loc_2 then break end loc_2=load_i32(memory_at_0,loc_1+4)loc_5=shl_i32(
loc_2,1)loc_3=(if loc_5>loc_3 then loc_5 else loc_3)loc_3=(if loc_3>8 then loc_3
else 8)loc_5=shr_u32(bxor_i32(loc_3,4294967295),31)while true do while true do
if loc_2==0 then break end store_i32(memory_at_0,loc_4+28,loc_2)store_i32(
memory_at_0,loc_4+24,1)store_i32(memory_at_0,loc_4+20,load_i32(memory_at_0,loc_1
))desired=2 break end if desired then if desired==2 then desired=nil end break
end store_i32(memory_at_0,loc_4+24,0)break end if desired then if desired==1
then desired=nil end break end FUNC_LIST[88](add_i32(loc_4,8),loc_5,loc_3,
add_i32(loc_4,20),loc_4)loc_5=load_i32(memory_at_0,loc_4+12)while true do if
load_i32(memory_at_0,loc_4+8)==0 then break end loc_3=load_i32(memory_at_0,
add_i32(loc_4,16))desired=1 break end if desired then if desired==1 then desired
=nil end break end store_i32(memory_at_0,loc_1+4,loc_3)store_i32(memory_at_0,
loc_1,loc_5)loc_5=2147483649 break end store_i32(memory_at_0,loc_0+4,loc_3)
store_i32(memory_at_0,loc_0,loc_5)GLOBAL_LIST[0].value=add_i32(loc_4,32)break
end end FUNC_LIST[95]=function(loc_0,loc_1)local loc_2=0 while true do loc_2=
sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_2 FUNC_LIST[94](
add_i32(loc_2,8),loc_0,loc_1,1)FUNC_LIST[90](load_i32(memory_at_0,loc_2+8),
load_i32(memory_at_0,loc_2+12))GLOBAL_LIST[0].value=add_i32(loc_2,16)break end
end FUNC_LIST[96]=function(loc_0,loc_1,loc_2)local loc_3=0 while true do loc_3=
sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_3 FUNC_LIST[94](
add_i32(loc_3,8),loc_0,loc_1,loc_2)FUNC_LIST[90](load_i32(memory_at_0,loc_3+8),
load_i32(memory_at_0,loc_3+12))GLOBAL_LIST[0].value=add_i32(loc_3,16)break end
end FUNC_LIST[97]=function(loc_0,loc_1,loc_2)while true do while true do if
loc_2==0 then break end FUNC_LIST[43](loc_0,loc_2,loc_1)break end break end end
FUNC_LIST[98]=function(loc_0)local loc_1=0 while true do while true do loc_1=
load_i32(memory_at_0,loc_0+4)if loc_1==0 then break end FUNC_LIST[97](load_i32(
memory_at_0,loc_0),1,loc_1)break end break end end FUNC_LIST[99]=function(loc_0,
loc_1)local loc_2=0 local reg_0 local desired while true do loc_2=sub_i32(
GLOBAL_LIST[0].value,64)GLOBAL_LIST[0].value=loc_2 store_i32(memory_at_0,loc_2+
20,0)store_i64(memory_at_0,loc_2+12,i64_ONE)FUNC_LIST[525](add_i32(loc_2,24),
add_i32(loc_2,12),1049160)while true do reg_0=FUNC_LIST[512](loc_1,add_i32(loc_2
,24))if reg_0~=0 then break end store_i64(memory_at_0,loc_0,load_i64(memory_at_0
,loc_2+12))store_i32(memory_at_0,add_i32(loc_0,8),load_i32(memory_at_0,add_i32(
add_i32(loc_2,12),8)))GLOBAL_LIST[0].value=add_i32(loc_2,64)desired=0 break end
if desired then if desired==0 then desired=nil end break end FUNC_LIST[506](
1049184,55,add_i32(loc_2,63),1049240,1049332)error('out of code bounds')end end
FUNC_LIST[100]=function(loc_0,loc_1)local loc_2=0 local reg_0 while true do
loc_2=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_2 store_i32(
memory_at_0,loc_2+12,loc_0)reg_0=FUNC_LIST[499](add_i32(loc_2,12),1049348,loc_1)
loc_0=reg_0 GLOBAL_LIST[0].value=add_i32(loc_2,16)reg_0=loc_0 break end return
reg_0 end FUNC_LIST[101]=function(loc_0,loc_1)while true do FUNC_LIST[102](loc_1
,loc_1)error('out of code bounds')end end FUNC_LIST[102]=function(loc_0,loc_1)
local loc_2=0 while true do loc_2=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0]
.value=loc_2 FUNC_LIST[99](add_i32(loc_2,4),loc_1)FUNC_LIST[28](load_i32(
memory_at_0,loc_2+4),load_i32(memory_at_0,loc_2+12))error('out of code bounds')
end end FUNC_LIST[103]=function(loc_0)while true do break end end FUNC_LIST[104]
=function(loc_0)while true do break end end FUNC_LIST[105]=function(loc_0)while
true do FUNC_LIST[98](loc_0)break end end FUNC_LIST[106]=function(loc_0,loc_1)
local reg_0 while true do reg_0=FUNC_LIST[107](load_i32(memory_at_0,loc_0),loc_1
)reg_0=0 break end return reg_0 end FUNC_LIST[107]=function(loc_0,loc_1)local
loc_2=0 local loc_3=0 local reg_0 local desired while true do loc_2=sub_i32(
GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_2 while true do while true do
while true do while true do if loc_1<128 then break end store_i32(memory_at_0,
loc_2+12,0)if loc_1<2048 then desired=3 break end while true do if loc_1>=65536
then break end store_i32_n8(memory_at_0,loc_2+14,bor_i32(band_i32(loc_1,63),128)
)store_i32_n8(memory_at_0,loc_2+12,bor_i32(shr_u32(loc_1,12),224))store_i32_n8(
memory_at_0,loc_2+13,bor_i32(band_i32(shr_u32(loc_1,6),63),128))loc_1=3 desired=
2 break end if desired then if desired==4 then desired=nil end break end
store_i32_n8(memory_at_0,loc_2+15,bor_i32(band_i32(loc_1,63),128))store_i32_n8(
memory_at_0,loc_2+14,bor_i32(band_i32(shr_u32(loc_1,6),63),128))store_i32_n8(
memory_at_0,loc_2+13,bor_i32(band_i32(shr_u32(loc_1,12),63),128))store_i32_n8(
memory_at_0,loc_2+12,bor_i32(band_i32(shr_u32(loc_1,18),7),240))loc_1=4 desired=
2 break end if desired then if desired==3 then desired=nil end break end while
true do loc_3=load_i32(memory_at_0,loc_0+8)if loc_3~=load_i32(memory_at_0,loc_0+
4)then break end FUNC_LIST[95](loc_0,loc_3)loc_3=load_i32(memory_at_0,loc_0+8)
break end if desired then if desired==3 then desired=nil end break end
store_i32_n8(memory_at_0,add_i32(load_i32(memory_at_0,loc_0),loc_3),loc_1)
store_i32(memory_at_0,loc_0+8,add_i32(load_i32(memory_at_0,loc_0+8),1))desired=1
break end if desired then if desired==2 then desired=nil end break end
store_i32_n8(memory_at_0,loc_2+13,bor_i32(band_i32(loc_1,63),128))store_i32_n8(
memory_at_0,loc_2+12,bor_i32(shr_u32(loc_1,6),192))loc_1=2 break end if desired
then if desired==1 then desired=nil end break end FUNC_LIST[85](loc_0,add_i32(
loc_2,12),loc_1)break end GLOBAL_LIST[0].value=add_i32(loc_2,16)reg_0=0 break
end return reg_0 end FUNC_LIST[108]=function(loc_0,loc_1)local reg_0 while true
do reg_0=FUNC_LIST[100](load_i32(memory_at_0,loc_0),loc_1)break end return reg_0
end FUNC_LIST[109]=function(loc_0,loc_1,loc_2)local reg_0 while true do
FUNC_LIST[85](load_i32(memory_at_0,loc_0),loc_1,loc_2)reg_0=0 break end return
reg_0 end FUNC_LIST[110]=function(loc_0,loc_1,loc_2)local reg_0 while true do
FUNC_LIST[85](loc_0,loc_1,loc_2)reg_0=0 break end return reg_0 end FUNC_LIST[111
]=function(loc_0)while true do FUNC_LIST[2](load_i32(memory_at_0,loc_0))break
end end FUNC_LIST[112]=function(loc_0)local loc_1=0 local reg_0 while true do
loc_1=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_1 FUNC_LIST[92](
add_i32(loc_1,8),loc_0,0)loc_0=load_i32(memory_at_0,loc_1+8)GLOBAL_LIST[0].value
=add_i32(loc_1,16)reg_0=loc_0 break end return reg_0 end FUNC_LIST[113]=function
(loc_0)local loc_1=0 local reg_0 while true do loc_1=sub_i32(GLOBAL_LIST[0].
value,16)GLOBAL_LIST[0].value=loc_1 FUNC_LIST[93](add_i32(loc_1,8),loc_0,0)loc_0
=load_i32(memory_at_0,loc_1+8)GLOBAL_LIST[0].value=add_i32(loc_1,16)reg_0=loc_0
break end return reg_0 end FUNC_LIST[114]=function(loc_0,loc_1)local loc_2=0
while true do TABLE_LIST[0].data[load_i32(memory_at_0,loc_1)](loc_0)while true
do loc_2=load_i32(memory_at_0,loc_1+4)if loc_2==0 then break end FUNC_LIST[43](
loc_0,loc_2,load_i32(memory_at_0,loc_1+8))break end break end end FUNC_LIST[115]
=function()while true do FUNC_LIST[455](1,1049372)break end end FUNC_LIST[116]=
function(loc_0,loc_1,loc_2)local loc_3=0 local reg_0 while true do loc_2=
sub_i32(loc_2,loc_1)FUNC_LIST[117](loc_0,loc_2)loc_3=load_i32(memory_at_0,loc_0+
8)reg_0=FUNC_LIST[550](add_i32(load_i32(memory_at_0,loc_0),loc_3),loc_1,loc_2)
store_i32(memory_at_0,loc_0+8,add_i32(loc_3,loc_2))break end end FUNC_LIST[117]=
function(loc_0,loc_1)local loc_2=0 while true do while true do loc_2=load_i32(
memory_at_0,loc_0+8)if sub_i32(load_i32(memory_at_0,loc_0+4),loc_2)>=loc_1 then
break end FUNC_LIST[362](loc_0,loc_2,loc_1)break end break end end FUNC_LIST[118
]=function(loc_0,loc_1)local loc_2=0 local loc_3=0 local loc_4=i64_ZERO local
loc_5=i64_ZERO local reg_0 local desired while true do loc_2=sub_i32(GLOBAL_LIST
[0].value,16)GLOBAL_LIST[0].value=loc_2 while true do while true do if loc_1==0
then break end loc_3=load_i32(memory_at_0,loc_1)store_i64(memory_at_0,loc_1,
i64_ZERO)if loc_3~=1 then break end loc_4=load_i64(memory_at_0,loc_1+16)loc_5=
load_i64(memory_at_0,loc_1+8)desired=1 break end if desired then if desired==1
then desired=nil end break end FUNC_LIST[464](loc_2)loc_4=load_i64(memory_at_0,
loc_2+8)loc_5=load_i64(memory_at_0,loc_2)break end store_i64(memory_at_0,loc_0+
16,loc_4)store_i64(memory_at_0,loc_0+8,loc_5)store_i64(memory_at_0,loc_0,i64_ONE
)GLOBAL_LIST[0].value=add_i32(loc_2,16)reg_0=add_i32(loc_0,8)break end return
reg_0 end FUNC_LIST[119]=function(loc_0,loc_1)local loc_2=0 local loc_3=i64_ZERO
local reg_0 local desired while true do loc_2=sub_i32(GLOBAL_LIST[0].value,16)
GLOBAL_LIST[0].value=loc_2 while true do reg_0=TABLE_LIST[0].data[load_i32(
memory_at_0,loc_1)](0)loc_1=reg_0 if loc_1==0 then break end loc_3=load_i64(
memory_at_0,loc_1)store_i64(memory_at_0,loc_1,add_i64(loc_3,i64_ONE))store_i64(
memory_at_0,loc_0+8,load_i64(memory_at_0,loc_1+8))store_i64(memory_at_0,loc_0,
loc_3)GLOBAL_LIST[0].value=add_i32(loc_2,16)desired=0 break end if desired then
if desired==0 then desired=nil end break end FUNC_LIST[506](1049396,70,add_i32(
loc_2,15),1049468,1049564)error('out of code bounds')end end FUNC_LIST[120]=
function(loc_0,loc_1,loc_2)local loc_3=0 while true do loc_3=sub_i32(GLOBAL_LIST
[0].value,16)GLOBAL_LIST[0].value=loc_3 store_i32(memory_at_0,loc_3+12,loc_2)
store_i32(memory_at_0,loc_3+8,loc_1)store_i32(memory_at_0,loc_3+4,loc_0)
FUNC_LIST[375](add_i32(loc_3,4))error('out of code bounds')end end FUNC_LIST[121
]=function(loc_0,loc_1)local reg_0 while true do reg_0=FUNC_LIST[531](load_i32(
memory_at_0,loc_0),load_i32(memory_at_0,loc_0+4),loc_1)break end return reg_0
end FUNC_LIST[122]=function(loc_0)while true do break end end FUNC_LIST[123]=
function(loc_0)while true do break end end FUNC_LIST[124]=function(loc_0,loc_1)
local loc_2=0 local loc_3=i64_ZERO local loc_4=i64_ZERO local loc_5=i64_ZERO
local loc_6=i64_ZERO local loc_7=i64_ZERO local reg_0 local reg_1 while true do
loc_2=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_2 loc_3=
load_i64_u32(memory_at_0,loc_1)loc_4=load_i64(memory_at_0,loc_0)loc_5=load_i64(
memory_at_0,loc_0+8)store_i64(memory_at_0,loc_2+16,bxor_i64(loc_5,i64_from_u32(
1852075885,1685025377)))store_i64(memory_at_0,loc_2+8,bxor_i64(loc_4,
i64_from_u32(1852142177,1819895653)))store_i64(memory_at_0,loc_2,bxor_i64(loc_4,
i64_from_u32(1886610805,1936682341)))loc_6=bor_i64(loc_3,i64_from_u32(0,67108864
))store_i64(memory_at_0,loc_2+24,bxor_i64(bxor_i64(loc_5,loc_6),i64_from_u32(
2037671283,1952801890)))FUNC_LIST[125](loc_2)loc_4=load_i64(memory_at_0,loc_2+16
)loc_5=load_i64(memory_at_0,loc_2)loc_7=load_i64(memory_at_0,loc_2+8)loc_3=
load_i64(memory_at_0,loc_2+24)GLOBAL_LIST[0].value=add_i32(loc_2,32)loc_7=
add_i64(loc_3,bxor_i64(loc_7,i64_from_u32(255,0)))reg_1=rotl_i64(loc_4,
i64_from_u32(13,0))loc_4=add_i64(loc_4,bxor_i64(loc_5,loc_6))loc_5=bxor_i64(
reg_1,loc_4)loc_6=add_i64(loc_7,loc_5)loc_5=bxor_i64(loc_6,rotl_i64(loc_5,
i64_from_u32(17,0)))loc_3=bxor_i64(rotl_i64(loc_3,i64_from_u32(16,0)),loc_7)
loc_4=add_i64(loc_3,rotl_i64(loc_4,i64_from_u32(32,0)))reg_0=rotl_i64(loc_5,
i64_from_u32(13,0))loc_5=add_i64(loc_4,loc_5)loc_7=bxor_i64(reg_0,loc_5)loc_4=
bxor_i64(rotl_i64(loc_3,i64_from_u32(21,0)),loc_4)loc_3=add_i64(loc_4,rotl_i64(
loc_6,i64_from_u32(32,0)))loc_6=add_i64(loc_3,loc_7)loc_7=bxor_i64(rotl_i64(
loc_7,i64_from_u32(17,0)),loc_6)loc_4=bxor_i64(rotl_i64(loc_4,i64_from_u32(16,0)
),loc_3)loc_3=add_i64(loc_4,rotl_i64(loc_5,i64_from_u32(32,0)))loc_5=bxor_i64(
rotl_i64(loc_7,i64_from_u32(13,0)),add_i64(loc_3,loc_7))loc_4=bxor_i64(rotl_i64(
loc_4,i64_from_u32(21,0)),loc_3)loc_3=add_i64(loc_4,rotl_i64(loc_6,i64_from_u32(
32,0)))reg_0=rotl_i64(loc_5,i64_from_u32(17,0))loc_5=add_i64(loc_3,loc_5)reg_0=
bxor_i64(bxor_i64(bxor_i64(reg_0,rotl_i64(loc_5,i64_from_u32(32,0))),rotl_i64(
bxor_i64(rotl_i64(loc_4,i64_from_u32(16,0)),loc_3),i64_from_u32(21,0))),loc_5)
break end return reg_0 end FUNC_LIST[125]=function(loc_0)local loc_1=i64_ZERO
local loc_2=i64_ZERO local loc_3=i64_ZERO local loc_4=i64_ZERO local loc_5=
i64_ZERO local reg_0 local reg_1 while true do loc_1=load_i64(memory_at_0,loc_0+
24)reg_1=rotl_i64(loc_1,i64_from_u32(16,0))loc_1=add_i64(loc_1,load_i64(
memory_at_0,loc_0+8))loc_2=bxor_i64(reg_1,loc_1)loc_3=load_i64(memory_at_0,loc_0
+16)loc_4=add_i64(loc_3,load_i64(memory_at_0,loc_0))loc_5=add_i64(loc_2,
rotl_i64(loc_4,i64_from_u32(32,0)))store_i64(memory_at_0,loc_0,loc_5)store_i64(
memory_at_0,loc_0+24,bxor_i64(rotl_i64(loc_2,i64_from_u32(21,0)),loc_5))loc_2=
bxor_i64(rotl_i64(loc_3,i64_from_u32(13,0)),loc_4)loc_1=add_i64(loc_1,loc_2)
store_i64(memory_at_0,loc_0+16,bxor_i64(loc_1,rotl_i64(loc_2,i64_from_u32(17,0))
))store_i64(memory_at_0,loc_0+8,rotl_i64(loc_1,i64_from_u32(32,0)))break end end
FUNC_LIST[126]=function(loc_0,loc_1,loc_2)while true do FUNC_LIST[116](loc_0,
loc_1,add_i32(loc_1,loc_2))break end end FUNC_LIST[127]=function(loc_0,loc_1)
local loc_2=0 while true do while true do loc_2=load_i32(memory_at_0,loc_0+8)if
loc_2~=load_i32(memory_at_0,loc_0+4)then break end FUNC_LIST[359](loc_0,loc_2)
loc_2=load_i32(memory_at_0,loc_0+8)break end store_i32_n8(memory_at_0,add_i32(
load_i32(memory_at_0,loc_0),loc_2),loc_1)store_i32(memory_at_0,loc_0+8,add_i32(
load_i32(memory_at_0,loc_0+8),1))break end end FUNC_LIST[128]=function(loc_0,
loc_1,loc_2)local loc_3=0 local loc_4=0 local reg_0 local desired while true do
while true do loc_3=load_i32(memory_at_0,loc_0+8)if loc_3<=loc_1 then break end
loc_2=add_i32(load_i32(memory_at_0,loc_0),loc_1)loc_4=load_i32_u8(memory_at_0,
loc_2)reg_0=FUNC_LIST[549](loc_2,add_i32(loc_2,1),add_i32(loc_3,bxor_i32(loc_1,
4294967295)))store_i32(memory_at_0,loc_0+8,add_i32(loc_3,4294967295))reg_0=loc_4
desired=0 break end if desired then if desired==0 then desired=nil end break end
FUNC_LIST[486](loc_1,loc_3,loc_2)error('out of code bounds')end return reg_0 end
FUNC_LIST[129]=function(loc_0,loc_1,loc_2)local loc_3=0 local loc_4=i64_ZERO
local reg_0 local desired while true do while true do loc_3=load_i32(memory_at_0
,loc_0+8)if loc_3<=loc_1 then break end loc_2=add_i32(load_i32(memory_at_0,loc_0
),shl_i32(loc_1,3))loc_4=load_i64(memory_at_0,loc_2)reg_0=FUNC_LIST[549](loc_2,
add_i32(loc_2,8),shl_i32(add_i32(loc_3,bxor_i32(loc_1,4294967295)),3))store_i32(
memory_at_0,loc_0+8,add_i32(loc_3,4294967295))reg_0=loc_4 desired=0 break end if
desired then if desired==0 then desired=nil end break end FUNC_LIST[486](loc_1,
loc_3,loc_2)error('out of code bounds')end return reg_0 end FUNC_LIST[130]=
function(loc_0,loc_1,loc_2)local loc_3=0 local reg_0 while true do while true do
loc_3=load_i32(memory_at_0,loc_0+8)if loc_3>loc_1 then break end FUNC_LIST[492](
loc_1,loc_3,loc_2)error('out of code bounds')end reg_0=add_i32(load_i32(
memory_at_0,loc_0),shl_i32(loc_1,3))break end return reg_0 end FUNC_LIST[131]=
function(loc_0,loc_1)while true do while true do if load_i32(memory_at_0,loc_1)
~=0 then break end FUNC_LIST[448]()error('out of code bounds')end store_i32(
memory_at_0,loc_0+4,1049580)store_i32(memory_at_0,loc_0,loc_1)break end end
FUNC_LIST[132]=function(loc_0,loc_1)local loc_2=0 local loc_3=0 local reg_0
local desired while true do loc_2=load_i32(memory_at_0,loc_1)store_i32(
memory_at_0,loc_1,0)while true do while true do if loc_2==0 then break end loc_3
=load_i32(memory_at_0,loc_1+4)reg_0=FUNC_LIST[42](8,4)loc_1=reg_0 if loc_1==0
then desired=1 break end store_i32(memory_at_0,loc_1+4,loc_3)store_i32(
memory_at_0,loc_1,loc_2)store_i32(memory_at_0,loc_0+4,1049580)store_i32(
memory_at_0,loc_0,loc_1)desired=0 break end if desired then if desired==1 then
desired=nil end break end FUNC_LIST[448]()error('out of code bounds')end if
desired then if desired==0 then desired=nil end break end FUNC_LIST[478](4,8)
error('out of code bounds')end end FUNC_LIST[133]=function(loc_0)while true do
store_i64(memory_at_0,loc_0+8,i64_from_u32(0,1))store_i64(memory_at_0,loc_0,
i64_ONE)store_i64(memory_at_0,add_i32(loc_0,16),i64_ZERO)break end end FUNC_LIST
[134]=function(loc_0,loc_1)while true do FUNC_LIST[127](add_i32(loc_0,12),loc_1)
break end end FUNC_LIST[135]=function(loc_0)local reg_0 local desired while true
do while true do if load_i32(memory_at_0,loc_0+8)~=0 then break end reg_0=0
desired=0 break end if desired then if desired==0 then desired=nil end break end
reg_0=FUNC_LIST[128](loc_0,0,1049696)break end return reg_0 end FUNC_LIST[136]=
function(loc_0,loc_1)while true do FUNC_LIST[127](loc_0,loc_1)break end end
FUNC_LIST[137]=function(loc_0)local reg_0 local desired while true do while true
do if load_i32(memory_at_0,add_i32(loc_0,20))~=0 then break end reg_0=0 desired=
0 break end if desired then if desired==0 then desired=nil end break end reg_0=
FUNC_LIST[128](add_i32(loc_0,12),0,1049712)break end return reg_0 end FUNC_LIST[
138]=function(loc_0,loc_1)local loc_2=0 local desired while true do loc_1=
shr_u64(add_i64(loc_1,i64_from_u32(7,0)),i64_from_u32(3,0))while true do while
true do if eq_i64(loc_1,i64_ZERO)then desired=1 break end while true do loc_2=
load_i32(memory_at_0,loc_0+8)if loc_2~=load_i32(memory_at_0,loc_0+4)then break
end FUNC_LIST[358](loc_0,loc_2)loc_2=load_i32(memory_at_0,loc_0+8)break end if
desired then if desired==2 then desired=nil continue end break end store_i64(
memory_at_0,add_i32(load_i32(memory_at_0,loc_0),shl_i32(loc_2,3)),i64_ZERO)
store_i32(memory_at_0,loc_0+8,add_i32(load_i32(memory_at_0,loc_0+8),1))loc_1=
add_i64(loc_1,i64_from_u32(4294967295,4294967295))continue end if desired then
if desired==1 then desired=nil end break end break end break end end FUNC_LIST[
139]=function(loc_0,loc_1)local reg_0 while true do reg_0=FUNC_LIST[130](loc_0,
wrap_i32_i64(shr_u64(loc_1,i64_from_u32(3,0))),1049820)reg_0=wrap_i32_i64(
shr_u64(load_i64(memory_at_0,reg_0),shl_i64(loc_1,i64_from_u32(3,0))))break end
return reg_0 end FUNC_LIST[140]=function(loc_0,loc_1)local reg_0 local desired
while true do while true do while true do if band_i32(wrap_i32_i64(loc_1),1)~=0
then break end reg_0=FUNC_LIST[130](loc_0,wrap_i32_i64(shr_u64(loc_1,
i64_from_u32(3,0))),1049836)loc_1=shr_u64(load_i64(memory_at_0,reg_0),shl_i64(
loc_1,i64_from_u32(3,0)))desired=1 break end if desired then if desired==1 then
desired=nil end break end reg_0=FUNC_LIST[141](loc_0,loc_1,i64_from_u32(2,0))
loc_1=reg_0 break end reg_0=wrap_i32_i64(loc_1)break end return reg_0 end
FUNC_LIST[141]=function(loc_0,loc_1,loc_2)local loc_3=i64_ZERO local loc_4=
i64_ZERO local reg_0 local desired while true do loc_3=i64_ZERO loc_4=i64_ZERO
while true do while true do if ne_i64(loc_2,i64_ZERO)then break end reg_0=loc_4
desired=0 break end if desired then if desired==1 then desired=nil continue end
break end reg_0=FUNC_LIST[139](loc_0,loc_1)loc_4=bor_i64(shl_i64(band_i64(
extend_i64_u32(reg_0),i64_from_u32(255,0)),band_i64(loc_3,i64_from_u32(56,0))),
loc_4)loc_2=add_i64(loc_2,i64_from_u32(4294967295,4294967295))loc_3=add_i64(
loc_3,i64_from_u32(8,0))loc_1=add_i64(loc_1,i64_ONE)continue end if desired then
if desired==0 then desired=nil end break end break end return reg_0 end
FUNC_LIST[142]=function(loc_0,loc_1)local reg_0 local desired while true do
while true do while true do if ne_i64(band_i64(loc_1,i64_from_u32(3,0)),i64_ZERO
)then break end reg_0=FUNC_LIST[130](loc_0,wrap_i32_i64(shr_u64(loc_1,
i64_from_u32(3,0))),1049852)loc_1=shr_u64(load_i64(memory_at_0,reg_0),shl_i64(
loc_1,i64_from_u32(3,0)))desired=1 break end if desired then if desired==1 then
desired=nil end break end reg_0=FUNC_LIST[141](loc_0,loc_1,i64_from_u32(4,0))
loc_1=reg_0 break end reg_0=wrap_i32_i64(loc_1)break end return reg_0 end
FUNC_LIST[143]=function(loc_0,loc_1)local loc_2=0 local reg_0 local desired
while true do while true do if ne_i64(band_i64(loc_1,i64_from_u32(7,0)),i64_ZERO
)then break end reg_0=FUNC_LIST[130](loc_0,wrap_i32_i64(shr_u64(loc_1,
i64_from_u32(3,0))),1049868)reg_0=load_i64(memory_at_0,reg_0)desired=0 break end
if desired then if desired==0 then desired=nil end break end while true do if
eq_i64(band_i64(loc_1,i64_from_u32(3,0)),i64_ZERO)then break end reg_0=FUNC_LIST
[141](loc_0,loc_1,i64_from_u32(8,0))desired=0 break end if desired then if
desired==0 then desired=nil end break end reg_0=FUNC_LIST[142](loc_0,loc_1)loc_2
=reg_0 reg_0=FUNC_LIST[142](loc_0,add_i64(loc_1,i64_from_u32(4,0)))reg_0=
bor_i64(shl_i64(extend_i64_u32(reg_0),i64_from_u32(4,0)),extend_i64_u32(loc_2))
break end return reg_0 end FUNC_LIST[144]=function(loc_0,loc_1,loc_2)local loc_3
=0 local loc_4=i64_ZERO local reg_0 while true do loc_3=wrap_i32_i64(shr_u64(
loc_1,i64_from_u32(3,0)))reg_0=FUNC_LIST[130](loc_0,loc_3,1049884)loc_4=
load_i64(memory_at_0,reg_0)reg_0=FUNC_LIST[130](loc_0,loc_3,1049900)loc_1=
shl_i64(loc_1,i64_from_u32(3,0))store_i64(memory_at_0,reg_0,bor_i64(band_i64(
loc_4,bxor_i64(shl_i64(i64_from_u32(255,0),loc_1),i64_from_u32(4294967295,
4294967295))),shl_i64(band_i64(extend_i64_u32(loc_2),i64_from_u32(255,0)),loc_1)
))break end end FUNC_LIST[145]=function(loc_0,loc_1,loc_2)local loc_3=0 local
loc_4=i64_ZERO local reg_0 local desired while true do while true do if
band_i32(wrap_i32_i64(loc_1),1)~=0 then break end loc_3=wrap_i32_i64(shr_u64(
loc_1,i64_from_u32(3,0)))reg_0=FUNC_LIST[130](loc_0,loc_3,1049916)loc_4=
load_i64(memory_at_0,reg_0)reg_0=FUNC_LIST[130](loc_0,loc_3,1049932)loc_1=
shl_i64(loc_1,i64_from_u32(3,0))store_i64(memory_at_0,reg_0,bor_i64(band_i64(
loc_4,bxor_i64(shl_i64(i64_from_u32(65535,0),loc_1),i64_from_u32(4294967295,
4294967295))),shl_i64(band_i64(extend_i64_u32(loc_2),i64_from_u32(65535,0)),
loc_1)))desired=0 break end if desired then if desired==0 then desired=nil end
break end FUNC_LIST[146](loc_0,loc_1,band_i64(extend_i64_u32(loc_2),
i64_from_u32(65535,0)),i64_from_u32(2,0))break end end FUNC_LIST[146]=function(
loc_0,loc_1,loc_2,loc_3)local loc_4=i64_ZERO local desired while true do loc_4=
i64_ZERO while true do while true do if ne_i64(loc_3,i64_ZERO)then break end
desired=0 break end if desired then if desired==1 then desired=nil continue end
break end FUNC_LIST[144](loc_0,loc_1,wrap_i32_i64(shr_u64(loc_2,band_i64(loc_4,
i64_from_u32(56,0)))))loc_3=add_i64(loc_3,i64_from_u32(4294967295,4294967295))
loc_4=add_i64(loc_4,i64_from_u32(8,0))loc_1=add_i64(loc_1,i64_ONE)continue end
if desired then if desired==0 then desired=nil end break end break end end
FUNC_LIST[147]=function(loc_0,loc_1,loc_2)local loc_3=0 local loc_4=i64_ZERO
local reg_0 local desired while true do while true do if ne_i64(band_i64(loc_1,
i64_from_u32(3,0)),i64_ZERO)then break end loc_3=wrap_i32_i64(shr_u64(loc_1,
i64_from_u32(3,0)))reg_0=FUNC_LIST[130](loc_0,loc_3,1049948)loc_4=load_i64(
memory_at_0,reg_0)reg_0=FUNC_LIST[130](loc_0,loc_3,1049964)loc_1=shl_i64(loc_1,
i64_from_u32(3,0))store_i64(memory_at_0,reg_0,bor_i64(band_i64(loc_4,bxor_i64(
shl_i64(i64_from_u32(4294967295,0),loc_1),i64_from_u32(4294967295,4294967295))),
shl_i64(extend_i64_u32(loc_2),loc_1)))desired=0 break end if desired then if
desired==0 then desired=nil end break end FUNC_LIST[146](loc_0,loc_1,
extend_i64_u32(loc_2),i64_from_u32(4,0))break end end FUNC_LIST[148]=function(
loc_0,loc_1,loc_2)local reg_0 local desired while true do while true do if
ne_i64(band_i64(loc_1,i64_from_u32(7,0)),i64_ZERO)then break end reg_0=FUNC_LIST
[130](loc_0,wrap_i32_i64(shr_u64(loc_1,i64_from_u32(3,0))),1049980)store_i64(
memory_at_0,reg_0,loc_2)desired=0 break end if desired then if desired==0 then
desired=nil end break end while true do if eq_i64(band_i64(loc_1,i64_from_u32(3,
0)),i64_ZERO)then break end FUNC_LIST[146](loc_0,loc_1,loc_2,i64_from_u32(8,0))
desired=0 break end if desired then if desired==0 then desired=nil end break end
FUNC_LIST[147](loc_0,loc_1,wrap_i32_i64(loc_2))FUNC_LIST[147](loc_0,add_i64(
loc_1,i64_from_u32(4,0)),wrap_i32_i64(shr_u64(loc_2,i64_from_u32(32,0))))break
end end FUNC_LIST[149]=function(loc_0,loc_1)local loc_2=i64_ZERO while true do
loc_2=add_i64(load_i64(memory_at_0,loc_0),i64_ONE)store_i64(memory_at_0,loc_0,
loc_2)while true do if ne_i64(band_i64(loc_2,i64_from_u32(7,0)),i64_ZERO)then
break end store_i64(memory_at_0,loc_0+16,add_i64(load_i64(memory_at_0,loc_0+16),
i64_ONE))break end while true do if band_i32(load_i32_u8(memory_at_0,loc_0+24),1
)==0 then break end store_i64(memory_at_0,loc_1,bor_i64(load_i64(memory_at_0,
loc_1),i64_from_u32(8,0)))break end while true do if ge_u64(add_i64(load_i64(
memory_at_0,loc_0+8),i64_from_u32(4294967295,4294967295)),load_i64(memory_at_0,
loc_0+16))then break end store_i64(memory_at_0,loc_1,bor_i64(load_i64(
memory_at_0,loc_1),i64_from_u32(128,0)))break end break end end FUNC_LIST[150]=
function(loc_0,loc_1)local loc_2=i64_ZERO local reg_0 local desired local br_map
={}while true do while true do loc_2=add_i64(loc_1,i64_from_u32(4261396480,
4294967295))if le_u64(loc_2,i64_from_u32(7,0))then break end while true do while
true do while true do while true do while true do while true do while true do
while true do while true do while true do loc_2=add_i64(loc_1,i64_from_u32(
4261363720,4294967295))if le_u64(loc_2,i64_from_u32(7,0))then break end loc_1=
add_i64(loc_1,i64_from_u32(4261412864,4294967295))if le_u64(loc_1,i64_from_u32(3
,0))then desired=10 break end reg_0=0 desired=0 break end if desired then if
desired==10 then desired=nil end break end if not br_map[1]then br_map[1]=(
function()return{[0]=1,2,3,4,5,6,7,8}end)()end temp=br_map[1][wrap_i32_i64(loc_2
)]or 1 if temp<5 then if temp<3 then if temp<2 then desired=9 break else desired
=8 break end elseif temp>3 then desired=6 break else desired=7 break end elseif
temp>5 then if temp<7 then desired=4 break elseif temp>7 then desired=2 break
else desired=3 break end else desired=5 break end end if desired then if desired
==9 then desired=nil end break end while true do while true do while true do
while true do if not br_map[2]then br_map[2]=(function()return{[0]=0,1,2,3}end)(
)end temp=br_map[2][wrap_i32_i64(loc_1)]or 0 if temp<2 then if temp<1 then break
else desired=12 break end elseif temp>2 then desired=10 break else desired=11
break end end if desired then if desired==12 then desired=nil end break end
reg_0=load_i32(memory_at_0,loc_0+24)desired=0 break end if desired then if
desired==11 then desired=nil end break end reg_0=shr_u32(load_i32(memory_at_0,
loc_0+24),8)desired=0 break end if desired then if desired==10 then desired=nil
end break end reg_0=load_i32_u16(memory_at_0,add_i32(loc_0,26))desired=0 break
end if desired then if desired==9 then desired=nil end break end reg_0=
load_i32_u8(memory_at_0,add_i32(loc_0,27))desired=0 break end if desired then if
desired==8 then desired=nil end break end reg_0=load_i32_u8(memory_at_0,loc_0+16
)desired=0 break end if desired then if desired==7 then desired=nil end break
end reg_0=load_i32_u8(memory_at_0,add_i32(loc_0,17))desired=0 break end if
desired then if desired==6 then desired=nil end break end reg_0=load_i32_u8(
memory_at_0,add_i32(loc_0,18))desired=0 break end if desired then if desired==5
then desired=nil end break end reg_0=load_i32_u8(memory_at_0,add_i32(loc_0,19))
desired=0 break end if desired then if desired==4 then desired=nil end break end
reg_0=load_i32_u8(memory_at_0,add_i32(loc_0,20))desired=0 break end if desired
then if desired==3 then desired=nil end break end reg_0=load_i32_u8(memory_at_0,
add_i32(loc_0,21))desired=0 break end if desired then if desired==2 then desired
=nil end break end reg_0=load_i32_u8(memory_at_0,add_i32(loc_0,22))desired=0
break end if desired then if desired==1 then desired=nil end break end reg_0=
load_i32_u8(memory_at_0,add_i32(loc_0,23))desired=0 break end if desired then if
desired==0 then desired=nil end break end while true do while true do while true
do while true do while true do while true do while true do while true do if not
br_map[3]then br_map[3]=(function()return{[0]=7,6,5,4,3,2,1,0}end)()end temp=
br_map[3][wrap_i32_i64(loc_2)]or 7 if temp<4 then if temp<2 then if temp<1 then
break else desired=7 break end elseif temp>2 then desired=5 break else desired=6
break end elseif temp>4 then if temp<6 then desired=3 break elseif temp>6 then
desired=1 break else desired=2 break end else desired=4 break end end if desired
then if desired==7 then desired=nil end break end reg_0=load_i32_u8(memory_at_0,
add_i32(loc_0,15))desired=0 break end if desired then if desired==6 then desired
=nil end break end reg_0=load_i32_u8(memory_at_0,add_i32(loc_0,14))desired=0
break end if desired then if desired==5 then desired=nil end break end reg_0=
load_i32_u8(memory_at_0,add_i32(loc_0,13))desired=0 break end if desired then if
desired==4 then desired=nil end break end reg_0=load_i32_u8(memory_at_0,add_i32(
loc_0,12))desired=0 break end if desired then if desired==3 then desired=nil end
break end reg_0=load_i32_u8(memory_at_0,add_i32(loc_0,11))desired=0 break end if
desired then if desired==2 then desired=nil end break end reg_0=load_i32_u8(
memory_at_0,add_i32(loc_0,10))desired=0 break end if desired then if desired==1
then desired=nil end break end reg_0=load_i32_u8(memory_at_0,add_i32(loc_0,9))
desired=0 break end if desired then if desired==0 then desired=nil end break end
reg_0=load_i32_u8(memory_at_0,loc_0+8)break end return reg_0 end FUNC_LIST[151]=
function(loc_0,loc_1,loc_2)local loc_3=i64_ZERO local desired local br_map={}
while true do while true do while true do while true do while true do while true
do while true do while true do while true do while true do while true do while
true do while true do while true do while true do while true do while true do
while true do while true do while true do loc_3=add_i64(loc_1,i64_from_u32(
4261396480,4294967295))if le_u64(loc_3,i64_from_u32(7,0))then break end loc_3=
add_i64(loc_1,i64_from_u32(4261363720,4294967295))if le_u64(loc_3,i64_from_u32(7
,0))then desired=18 break end if ne_i64(loc_1,i64_from_u32(33554432,0))then
desired=16 break end store_i32(memory_at_0,loc_0+24,bor_i32(band_i32(load_i32(
memory_at_0,loc_0+24),4294967294),band_i32(loc_2,1)))desired=0 break end if
desired then if desired==18 then desired=nil end break end if not br_map[1]then
br_map[1]=(function()return{[0]=1,17,16,15,14,13,12,11}end)()end temp=br_map[1][
wrap_i32_i64(loc_3)]or 1 if temp<14 then if temp<12 then if temp<11 then desired
=17 break else desired=7 break end elseif temp>12 then desired=5 break else
desired=6 break end elseif temp>14 then if temp<16 then desired=3 break elseif
temp>16 then desired=1 break else desired=2 break end else desired=4 break end
end if desired then if desired==17 then desired=nil end break end if not br_map[
2]then br_map[2]=(function()return{[0]=9,8,7,6,5,4,3,2}end)()end temp=br_map[2][
wrap_i32_i64(loc_3)]or 9 if temp<6 then if temp<4 then if temp<3 then desired=15
break else desired=14 break end elseif temp>4 then desired=12 break else desired
=13 break end elseif temp>6 then if temp<8 then desired=10 break elseif temp>8
then desired=8 break else desired=9 break end else desired=11 break end end if
desired then if desired==16 then desired=nil end break end store_i32_n8(
memory_at_0,loc_0+8,loc_2)break end if desired then if desired==15 then desired=
nil end break end desired=0 break end if desired then if desired==14 then
desired=nil end break end store_i64_n8(memory_at_0,add_i32(loc_0,23),
extend_i64_u32(loc_2))desired=0 break end if desired then if desired==13 then
desired=nil end break end store_i64_n8(memory_at_0,add_i32(loc_0,22),
extend_i64_u32(loc_2))desired=0 break end if desired then if desired==12 then
desired=nil end break end store_i64_n8(memory_at_0,add_i32(loc_0,21),
extend_i64_u32(loc_2))desired=0 break end if desired then if desired==11 then
desired=nil end break end store_i64_n8(memory_at_0,add_i32(loc_0,20),
extend_i64_u32(loc_2))desired=0 break end if desired then if desired==10 then
desired=nil end break end store_i64_n8(memory_at_0,add_i32(loc_0,19),
extend_i64_u32(loc_2))desired=0 break end if desired then if desired==9 then
desired=nil end break end store_i64_n8(memory_at_0,add_i32(loc_0,18),
extend_i64_u32(loc_2))desired=0 break end if desired then if desired==8 then
desired=nil end break end store_i64_n8(memory_at_0,add_i32(loc_0,17),
extend_i64_u32(loc_2))desired=0 break end if desired then if desired==7 then
desired=nil end break end store_i32_n8(memory_at_0,loc_0+16,loc_2)desired=0
break end if desired then if desired==6 then desired=nil end break end
store_i64_n8(memory_at_0,add_i32(loc_0,15),extend_i64_u32(loc_2))desired=0 break
end if desired then if desired==5 then desired=nil end break end store_i64_n8(
memory_at_0,add_i32(loc_0,14),extend_i64_u32(loc_2))desired=0 break end if
desired then if desired==4 then desired=nil end break end store_i64_n8(
memory_at_0,add_i32(loc_0,13),extend_i64_u32(loc_2))desired=0 break end if
desired then if desired==3 then desired=nil end break end store_i64_n8(
memory_at_0,add_i32(loc_0,12),extend_i64_u32(loc_2))desired=0 break end if
desired then if desired==2 then desired=nil end break end store_i64_n8(
memory_at_0,add_i32(loc_0,11),extend_i64_u32(loc_2))desired=0 break end if
desired then if desired==1 then desired=nil end break end store_i64_n8(
memory_at_0,add_i32(loc_0,10),extend_i64_u32(loc_2))desired=0 break end if
desired then if desired==0 then desired=nil end break end store_i64_n8(
memory_at_0,add_i32(loc_0,9),extend_i64_u32(loc_2))break end end FUNC_LIST[152]=
function(loc_0,loc_1,loc_2)local loc_3=0 local reg_0 while true do while true do
loc_3=load_i32(memory_at_0,loc_0+8)if loc_3>loc_1 then break end FUNC_LIST[492](
loc_1,loc_3,loc_2)error('out of code bounds')end reg_0=add_i32(load_i32(
memory_at_0,loc_0),loc_1)break end return reg_0 end FUNC_LIST[153]=function(
loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=0 local reg_0
local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0]
.value=loc_4 FUNC_LIST[351](add_i32(loc_4,8),4064,1)store_i32(memory_at_0,loc_4+
28,4064)store_i64(memory_at_0,loc_4+20,load_i64(memory_at_0,loc_4+8))loc_5=0
while true do while true do if loc_5==1600 then desired=1 break end loc_6=
load_i32(memory_at_0,add_i32(loc_5,1050604))reg_0=FUNC_LIST[152](add_i32(loc_4,
20),loc_5,1052204)store_i32_n8(memory_at_0,reg_0,loc_6)reg_0=FUNC_LIST[152](
add_i32(loc_4,20),add_i32(loc_5,1),1052220)store_i32_n8(memory_at_0,reg_0,
shr_u32(loc_6,8))reg_0=FUNC_LIST[152](add_i32(loc_4,20),add_i32(loc_5,2),1052236
)store_i32_n8(memory_at_0,reg_0,shr_u32(loc_6,16))reg_0=FUNC_LIST[152](add_i32(
loc_4,20),add_i32(loc_5,3),1052252)store_i32_n8(memory_at_0,reg_0,shr_u32(loc_6,
24))loc_5=add_i32(loc_5,4)continue end if desired then if desired==1 then
desired=nil end break end break end store_i64(memory_at_0,loc_0+4280,
i64_from_u32(8,0))store_i64(memory_at_0,loc_0+4292,load_i64(memory_at_0,loc_4+20
))store_i32(memory_at_0,add_i32(loc_0,4288),0)store_i32(memory_at_0,add_i32(
loc_0,4300),load_i32(memory_at_0,add_i32(add_i32(loc_4,20),8)))FUNC_LIST[342](
add_i32(loc_0,4192))reg_0=FUNC_LIST[551](add_i32(loc_0,48),0,4120)store_i32(
memory_at_0,add_i32(loc_0,24),0)store_i64(memory_at_0,add_i32(loc_0,16),i64_ZERO
)store_i64(memory_at_0,add_i32(loc_0,8),i64_ZERO)store_i64(memory_at_0,loc_0,
i64_ZERO)store_i64(memory_at_0,add_i32(loc_0,4176),i64_ZERO)store_i32_n8(
memory_at_0,add_i32(loc_0,4191),0)store_i64(memory_at_0,add_i32(loc_0,4183),
i64_from_u32(0,536870914))store_i32(memory_at_0,add_i32(loc_0,4172),loc_3)
store_i32(memory_at_0,loc_0+4168,loc_2)store_i32_n8(memory_at_0,loc_0+4306,loc_1
)store_i64(memory_at_0,loc_0+32,i64_ZERO)store_i32_n16(memory_at_0,loc_0+4304,
768)store_i64(memory_at_0,loc_0+40,i64_ZERO)GLOBAL_LIST[0].value=add_i32(loc_4,
32)break end end FUNC_LIST[154]=function(loc_0,loc_1)local loc_2=0 local reg_0
local reg_1 local reg_2 while true do FUNC_LIST[149](loc_0,loc_1)FUNC_LIST[344](
add_i32(loc_0,4192),add_i32(loc_0,4280))loc_2=add_i32(loc_0,4168)FUNC_LIST[386](
loc_2)reg_1=band_i32(load_i32(memory_at_0,add_i32(loc_0,4244)),1)reg_2=FUNC_LIST
[387](loc_2)FUNC_LIST[383](add_i32(loc_0,48),reg_1,reg_2,loc_1)store_i64(
memory_at_0,loc_0+32,add_i64(load_i64(memory_at_0,loc_0+32),i64_ONE))break end
end FUNC_LIST[155]=function(loc_0,loc_1,loc_2)local loc_3=0 local loc_4=i64_ZERO
local loc_5=0 local loc_6=0 local loc_7=i64_ZERO local reg_0 local desired while
true do loc_3=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_3 while
true do while true do if lt_u64(band_i64(loc_2,i64_from_u32(4095,0)),
i64_from_u32(4093,0))then break end loc_4=i64_ZERO loc_5=0 loc_6=0 while true do
while true do if ne_i64(loc_4,i64_from_u32(4,0))then break end store_i32_n8(
memory_at_0,loc_0+8,23)store_i32(memory_at_0,loc_0,loc_6)desired=1 break end if
desired then if desired==3 then desired=nil continue end break end loc_7=
add_i64(loc_2,loc_4)FUNC_LIST[156](add_i32(loc_3,16),loc_1,loc_7,0)while true do
if wrap_i32_i64(load_i64(memory_at_0,loc_3+16))~=0 then break end reg_0=
FUNC_LIST[157](loc_1,load_i64(memory_at_0,loc_3+24))loc_6=bor_i32(shl_i32(
band_i32(reg_0,255),band_i32(loc_5,24)),loc_6)loc_5=add_i32(loc_5,8)loc_4=
add_i64(loc_4,i64_ONE)desired=3 break end if desired then if desired==3 then
desired=nil continue end break end break end if desired then if desired==2 then
desired=nil end break end store_i32_n8(memory_at_0,loc_0+8,11)store_i64(
memory_at_0,loc_0,loc_7)desired=1 break end if desired then if desired==1 then
desired=nil end break end loc_4=(if load_i32_u8(memory_at_0,loc_1+4306)~=0 then
loc_2 else band_i64(loc_2,i64_from_u32(4294967295,0)))FUNC_LIST[156](loc_3,loc_1
,loc_4,0)while true do if wrap_i32_i64(load_i64(memory_at_0,loc_3))==0 then
break end store_i32_n8(memory_at_0,loc_0+8,11)store_i64(memory_at_0,loc_0,loc_4)
desired=1 break end if desired then if desired==1 then desired=nil end break end
reg_0=FUNC_LIST[158](loc_1,load_i64(memory_at_0,loc_3+8))loc_5=reg_0
store_i32_n8(memory_at_0,loc_0+8,23)store_i32(memory_at_0,loc_0,loc_5)break end
GLOBAL_LIST[0].value=add_i32(loc_3,32)break end end FUNC_LIST[156]=function(
loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=i64_ZERO local desired local
br_map={}while true do loc_4=sub_i32(GLOBAL_LIST[0].value,64)GLOBAL_LIST[0].
value=loc_4 loc_2=(if load_i32_u8(memory_at_0,loc_1+4306)~=0 then loc_2 else
band_i64(loc_2,i64_from_u32(4294967295,0)))loc_5=i64_ZERO while true do while
true do while true do while true do if not br_map[1]then br_map[1]=(function()
return{[0]=2,0,1,3}end)()end temp=br_map[1][load_i32_u8(memory_at_0,loc_1+4304)]
or 2 if temp<2 then if temp<1 then break else desired=3 break end elseif temp>2
then desired=1 break else desired=2 break end end if desired then if desired==3
then desired=nil end break end if load_i32_u8(memory_at_0,loc_1+4305)>=2 then
desired=2 break end store_i64(memory_at_0,loc_4+48,band_i64(shr_u64(loc_2,
i64_from_u32(22,0)),i64_from_u32(1023,0)))store_i64(memory_at_0,loc_4+40,
band_i64(shr_u64(loc_2,i64_from_u32(12,0)),i64_from_u32(1023,0)))FUNC_LIST[181](
add_i32(loc_4,8),loc_1,loc_2,1,load_i64(memory_at_0,loc_1+40),add_i32(loc_4,40),
2,loc_3)loc_2=load_i64(memory_at_0,loc_4+16)loc_5=load_i64(memory_at_0,loc_4+8)
desired=2 break end if desired then if desired==2 then desired=nil end break end
if load_i32_u8(memory_at_0,loc_1+4305)>=2 then break end store_i64(memory_at_0,
loc_4+56,band_i64(shr_u64(loc_2,i64_from_u32(30,0)),i64_from_u32(511,0)))
store_i64(memory_at_0,loc_4+48,band_i64(shr_u64(loc_2,i64_from_u32(21,0)),
i64_from_u32(511,0)))store_i64(memory_at_0,loc_4+40,band_i64(shr_u64(loc_2,
i64_from_u32(12,0)),i64_from_u32(511,0)))FUNC_LIST[181](add_i32(loc_4,24),loc_1,
loc_2,2,load_i64(memory_at_0,loc_1+40),add_i32(loc_4,40),3,loc_3)loc_2=load_i64(
memory_at_0,loc_4+32)loc_5=load_i64(memory_at_0,loc_4+24)break end if desired
then if desired==1 then desired=nil end break end store_i64(memory_at_0,loc_0+8,
loc_2)store_i64(memory_at_0,loc_0,loc_5)GLOBAL_LIST[0].value=add_i32(loc_4,64)
desired=0 break end if desired then if desired==0 then desired=nil end break end
FUNC_LIST[120](1050272,41,1050316)error('out of code bounds')end end FUNC_LIST[
157]=function(loc_0,loc_1)local loc_2=0 local reg_0 local desired while true do
loc_2=sub_i32(GLOBAL_LIST[0].value,48)GLOBAL_LIST[0].value=loc_2 loc_1=(if
load_i32_u8(memory_at_0,loc_0+4306)~=0 then loc_1 else band_i64(loc_1,
i64_from_u32(4294967295,0)))store_i64(memory_at_0,loc_2+8,loc_1)while true do
while true do while true do while true do while true do while true do while true
do if gt_u64(loc_1,i64_from_u32(2147483647,0))then break end if lt_u64(add_i64(
loc_1,i64_from_u32(4294963168,4294967295)),i64_from_u32(4064,0))then desired=6
break end if eq_i64(band_i64(loc_1,i64_from_u32(4294901760,4294967295)),
i64_from_u32(33554432,0))then desired=5 break end if eq_i64(band_i64(loc_1,
i64_from_u32(4227858432,4294967295)),i64_from_u32(201326592,0))then desired=4
break end if eq_i64(band_i64(loc_1,i64_from_u32(4294967040,4294967295)),
i64_from_u32(268435456,0))then desired=3 break end if ne_i64(band_i64(loc_1,
i64_from_u32(4294963200,4294967295)),i64_from_u32(268439552,0))then desired=2
break end reg_0=FUNC_LIST[345](add_i32(loc_0,4192),loc_1)loc_0=reg_0 desired=1
break end if desired then if desired==6 then desired=nil end break end reg_0=
FUNC_LIST[175](add_i32(loc_0,4280),loc_1)loc_0=reg_0 desired=1 break end if
desired then if desired==5 then desired=nil end break end reg_0=FUNC_LIST[152](
add_i32(loc_0,4292),add_i32(wrap_i32_i64(loc_1),4294963168),1050240)loc_0=
load_i32_u8(memory_at_0,reg_0)desired=1 break end if desired then if desired==4
then desired=nil end break end reg_0=FUNC_LIST[150](loc_0,loc_1)loc_0=reg_0
desired=1 break end if desired then if desired==3 then desired=nil end break end
reg_0=FUNC_LIST[384](add_i32(loc_0,48),loc_1)loc_0=reg_0 desired=1 break end if
desired then if desired==2 then desired=nil end break end reg_0=FUNC_LIST[388](
add_i32(loc_0,4168),loc_1)loc_0=reg_0 desired=1 break end if desired then if
desired==1 then desired=nil end break end store_i64(memory_at_0,add_i32(loc_2,28
),i64_ONE)store_i32(memory_at_0,loc_2+20,2)store_i32(memory_at_0,loc_2+16,
1050208)store_i32(memory_at_0,loc_2+44,30)store_i32(memory_at_0,loc_2+24,
add_i32(loc_2,40))store_i32(memory_at_0,loc_2+40,add_i32(loc_2,8))FUNC_LIST[490
](add_i32(loc_2,16),1050224)error('out of code bounds')end GLOBAL_LIST[0].value=
add_i32(loc_2,48)reg_0=loc_0 break end return reg_0 end FUNC_LIST[158]=function(
loc_0,loc_1)local loc_2=i64_ZERO local loc_3=0 local loc_4=0 local reg_0 local
desired while true do while true do while true do loc_2=(if load_i32_u8(
memory_at_0,loc_0+4306)~=0 then loc_1 else band_i64(loc_1,i64_from_u32(
4294967295,0)))if lt_u64(add_i64(loc_2,i64_from_u32(2147483648,4294967295)),
i64_from_u32(2147483645,4294967295))then break end loc_1=i64_ZERO loc_3=0 loc_4=
0 while true do if eq_i64(loc_1,i64_from_u32(4,0))then desired=1 break end reg_0
=FUNC_LIST[157](loc_0,add_i64(loc_2,loc_1))loc_4=bor_i32(shl_i32(band_i32(reg_0,
255),band_i32(loc_3,24)),loc_4)loc_3=add_i32(loc_3,8)loc_1=add_i64(loc_1,i64_ONE
)continue end if desired then if desired==2 then desired=nil end break end break
end if desired then if desired==1 then desired=nil end break end reg_0=FUNC_LIST
[176](add_i32(loc_0,4280),loc_2)loc_4=reg_0 break end reg_0=loc_4 break end
return reg_0 end FUNC_LIST[159]=function(loc_0,loc_1,loc_2)local loc_3=0 local
reg_0 local desired while true do loc_3=sub_i32(GLOBAL_LIST[0].value,16)
GLOBAL_LIST[0].value=loc_3 FUNC_LIST[156](loc_3,loc_1,(if load_i32_u8(
memory_at_0,loc_1+4306)~=0 then loc_2 else band_i64(loc_2,i64_from_u32(
4294967295,0))),1)while true do while true do if wrap_i32_i64(load_i64(
memory_at_0,loc_3))~=0 then break end reg_0=FUNC_LIST[157](loc_1,load_i64(
memory_at_0,loc_3+8))loc_1=reg_0 store_i32_n8(memory_at_0,loc_0+8,23)
store_i32_n8(memory_at_0,loc_0,loc_1)desired=1 break end if desired then if
desired==1 then desired=nil end break end store_i32_n8(memory_at_0,loc_0+8,12)
store_i64(memory_at_0,loc_0,loc_2)break end GLOBAL_LIST[0].value=add_i32(loc_3,
16)break end end FUNC_LIST[160]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0
local loc_5=i64_ZERO local loc_6=i64_ZERO local loc_7=0 local reg_0 local
desired local br_map={}while true do loc_4=sub_i32(GLOBAL_LIST[0].value,64)
GLOBAL_LIST[0].value=loc_4 store_i64(memory_at_0,loc_4+24,loc_3)while true do
while true do while true do if gt_u64(loc_3,i64_from_u32(8,0))then break end if
eq_i64(band_i64(shl_i64(i64_ONE,loc_3),i64_from_u32(276,0)),i64_ZERO)then break
end while true do if le_u64(band_i64(loc_2,i64_from_u32(4095,0)),sub_i64(
i64_from_u32(4096,0),loc_3))then break end loc_5=i64_ZERO loc_6=i64_ZERO while
true do while true do if ne_i64(loc_3,i64_ZERO)then break end store_i32_n8(
memory_at_0,loc_0+8,23)store_i64(memory_at_0,loc_0,loc_6)desired=1 break end if
desired then if desired==5 then desired=nil continue end break end FUNC_LIST[159
](add_i32(loc_4,32),loc_1,loc_2)while true do loc_7=load_i32_u8(memory_at_0,
loc_4+40)if loc_7~=23 then break end loc_3=add_i64(loc_3,i64_from_u32(4294967295
,4294967295))loc_2=add_i64(loc_2,i64_ONE)loc_6=bor_i64(shl_i64(load_i64_u8(
memory_at_0,loc_4+32),band_i64(loc_5,i64_from_u32(56,0))),loc_6)loc_5=add_i64(
loc_5,i64_from_u32(8,0))desired=5 break end if desired then if desired==5 then
desired=nil continue end break end break end if desired then if desired==4 then
desired=nil end break end store_i32_n8(memory_at_0,loc_0+8,loc_7)store_i64(
memory_at_0,loc_0,load_i64(memory_at_0,loc_4+32))desired=1 break end if desired
then if desired==3 then desired=nil end break end FUNC_LIST[156](add_i32(loc_4,8
),loc_1,loc_2,1)if load_i32(memory_at_0,loc_4+8)==0 then desired=2 break end
store_i32_n8(memory_at_0,loc_0+8,12)store_i64(memory_at_0,loc_0,loc_2)desired=1
break end if desired then if desired==2 then desired=nil end break end
store_i64(memory_at_0,add_i32(loc_4,44),i64_ONE)store_i32(memory_at_0,loc_4+36,1
)store_i32(memory_at_0,loc_4+32,1050112)store_i32(memory_at_0,loc_4+60,30)
store_i32(memory_at_0,loc_4+40,add_i32(loc_4,56))store_i32(memory_at_0,loc_4+56,
add_i32(loc_4,24))FUNC_LIST[490](add_i32(loc_4,32),1050136)error(
'out of code bounds')end if desired then if desired==1 then desired=nil end
break end while true do while true do while true do while true do loc_2=add_i64(
loc_3,i64_from_u32(4294967294,4294967295))if gt_u64(loc_2,i64_from_u32(6,0))then
break end loc_3=load_i64(memory_at_0,loc_4+16)if not br_map[1]then br_map[1]=(
function()return{[0]=1,0,2,0,0,0,3}end)()end temp=br_map[1][wrap_i32_i64(loc_2)]
or 1 if temp<2 then if temp<1 then break else desired=4 break end elseif temp>2
then desired=2 break else desired=3 break end end if desired then if desired==4
then desired=nil end break end store_i64(memory_at_0,add_i32(loc_4,44),i64_ONE)
store_i32(memory_at_0,loc_4+36,1)store_i32(memory_at_0,loc_4+32,1050112)
store_i32(memory_at_0,loc_4+60,30)store_i32(memory_at_0,loc_4+40,add_i32(loc_4,
56))store_i32(memory_at_0,loc_4+56,add_i32(loc_4,24))FUNC_LIST[490](add_i32(
loc_4,32),1050120)error('out of code bounds')end if desired then if desired==3
then desired=nil end break end while true do while true do loc_2=(if
load_i32_u8(memory_at_0,loc_1+4306)~=0 then loc_3 else band_i64(loc_3,
i64_from_u32(4294967295,0)))if lt_u64(add_i64(loc_2,i64_from_u32(2147483648,
4294967295)),i64_from_u32(2147483647,4294967295))then break end loc_7=0 loc_3=
i64_ZERO while true do if eq_i64(loc_3,i64_from_u32(2,0))then desired=4 break
end reg_0=FUNC_LIST[157](loc_1,add_i64(loc_2,loc_3))loc_7=bor_i32(shl_i32(
band_i32(reg_0,255),band_i32(shl_i32(wrap_i32_i64(loc_3),3),8)),loc_7)loc_3=
add_i64(loc_3,i64_ONE)continue end if desired then if desired==5 then desired=
nil end break end break end if desired then if desired==4 then desired=nil end
break end reg_0=FUNC_LIST[161](add_i32(loc_1,4280),loc_2)loc_7=reg_0 break end
if desired then if desired==3 then desired=nil end break end store_i32_n8(
memory_at_0,loc_0+8,23)store_i64(memory_at_0,loc_0,band_i64(extend_i64_u32(loc_7
),i64_from_u32(65535,0)))desired=1 break end if desired then if desired==2 then
desired=nil end break end reg_0=FUNC_LIST[158](loc_1,loc_3)loc_1=reg_0
store_i32_n8(memory_at_0,loc_0+8,23)store_i64(memory_at_0,loc_0,extend_i64_u32(
loc_1))desired=1 break end if desired then if desired==1 then desired=nil end
break end reg_0=FUNC_LIST[162](loc_1,loc_3)loc_3=reg_0 store_i32_n8(memory_at_0,
loc_0+8,23)store_i64(memory_at_0,loc_0,loc_3)break end GLOBAL_LIST[0].value=
add_i32(loc_4,64)break end end FUNC_LIST[161]=function(loc_0,loc_1)local loc_2=0
local reg_0 local desired while true do loc_2=sub_i32(GLOBAL_LIST[0].value,48)
GLOBAL_LIST[0].value=loc_2 store_i64(memory_at_0,loc_2+8,loc_1)while true do if
lt_u64(add_i64(loc_1,i64_ONE),i64_from_u32(2147483649,0))then break end reg_0=
FUNC_LIST[140](loc_0,add_i64(loc_1,i64_from_u32(2147483648,4294967295)))loc_0=
reg_0 GLOBAL_LIST[0].value=add_i32(loc_2,48)reg_0=loc_0 desired=0 break end if
desired then if desired==0 then desired=nil end break end store_i64(memory_at_0,
add_i32(loc_2,28),i64_ONE)store_i32(memory_at_0,loc_2+20,1)store_i32(memory_at_0
,loc_2+16,1050468)store_i32(memory_at_0,loc_2+44,30)store_i32(memory_at_0,loc_2+
24,add_i32(loc_2,40))store_i32(memory_at_0,loc_2+40,add_i32(loc_2,8))FUNC_LIST[
490](add_i32(loc_2,16),1050492)error('out of code bounds')end return reg_0 end
FUNC_LIST[162]=function(loc_0,loc_1)local loc_2=i64_ZERO local loc_3=i64_ZERO
local reg_0 local desired while true do while true do while true do loc_2=(if
load_i32_u8(memory_at_0,loc_0+4306)~=0 then loc_1 else band_i64(loc_1,
i64_from_u32(4294967295,0)))if lt_u64(add_i64(loc_2,i64_from_u32(2147483648,
4294967295)),i64_from_u32(2147483641,4294967295))then break end loc_1=i64_ZERO
loc_3=i64_ZERO while true do if eq_i64(loc_1,i64_from_u32(64,0))then desired=1
break end reg_0=FUNC_LIST[157](loc_0,loc_2)loc_3=bor_i64(shl_i64(band_i64(
extend_i64_u32(reg_0),i64_from_u32(255,0)),band_i64(loc_1,i64_from_u32(56,0))),
loc_3)loc_1=add_i64(loc_1,i64_from_u32(8,0))loc_2=add_i64(loc_2,i64_ONE)continue
end if desired then if desired==2 then desired=nil end break end break end if
desired then if desired==1 then desired=nil end break end reg_0=FUNC_LIST[177](
add_i32(loc_0,4280),loc_2)loc_3=reg_0 break end reg_0=loc_3 break end return
reg_0 end FUNC_LIST[163]=function(loc_0,loc_1,loc_2)local loc_3=0 local desired
while true do loc_3=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_3
FUNC_LIST[160](loc_3,loc_1,loc_2,i64_from_u32(2,0))loc_2=load_i64(memory_at_0,
loc_3)while true do while true do loc_1=load_i32_u8(memory_at_0,loc_3+8)if loc_1
~=23 then break end store_i32_n8(memory_at_0,loc_0+8,23)store_i64_n16(
memory_at_0,loc_0,loc_2)desired=1 break end if desired then if desired==1 then
desired=nil end break end store_i32_n8(memory_at_0,loc_0+8,loc_1)store_i64(
memory_at_0,loc_0,loc_2)break end GLOBAL_LIST[0].value=add_i32(loc_3,16)break
end end FUNC_LIST[164]=function(loc_0,loc_1,loc_2)local loc_3=0 local desired
while true do loc_3=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_3
FUNC_LIST[160](loc_3,loc_1,loc_2,i64_from_u32(4,0))loc_2=load_i64(memory_at_0,
loc_3)while true do while true do loc_1=load_i32_u8(memory_at_0,loc_3+8)if loc_1
~=23 then break end store_i32_n8(memory_at_0,loc_0+8,23)store_i64_n32(
memory_at_0,loc_0,loc_2)desired=1 break end if desired then if desired==1 then
desired=nil end break end store_i32_n8(memory_at_0,loc_0+8,loc_1)store_i64(
memory_at_0,loc_0,loc_2)break end GLOBAL_LIST[0].value=add_i32(loc_3,16)break
end end FUNC_LIST[165]=function(loc_0,loc_1,loc_2)local loc_3=0 local desired
while true do loc_3=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_3
FUNC_LIST[160](loc_3,loc_1,loc_2,i64_from_u32(8,0))store_i64(memory_at_0,loc_0,
load_i64(memory_at_0,loc_3))while true do while true do loc_1=load_i32_u8(
memory_at_0,loc_3+8)if loc_1~=23 then break end store_i32_n8(memory_at_0,loc_0+8
,23)desired=1 break end if desired then if desired==1 then desired=nil end break
end store_i32_n8(memory_at_0,loc_0+8,loc_1)break end GLOBAL_LIST[0].value=
add_i32(loc_3,16)break end end FUNC_LIST[166]=function(loc_0,loc_1,loc_2,loc_3)
local loc_4=0 local loc_5=0 while true do loc_4=sub_i32(GLOBAL_LIST[0].value,16)
GLOBAL_LIST[0].value=loc_4 FUNC_LIST[156](loc_4,loc_1,loc_2,2)loc_5=13 while
true do if wrap_i32_i64(load_i64(memory_at_0,loc_4))~=0 then break end FUNC_LIST
[167](loc_1,load_i64(memory_at_0,loc_4+8),loc_3)loc_5=23 break end store_i32_n8(
memory_at_0,loc_0+8,loc_5)store_i64(memory_at_0,loc_0,loc_2)GLOBAL_LIST[0].value
=add_i32(loc_4,16)break end end FUNC_LIST[167]=function(loc_0,loc_1,loc_2)local
loc_3=0 local desired while true do loc_3=sub_i32(GLOBAL_LIST[0].value,48)
GLOBAL_LIST[0].value=loc_3 loc_1=(if load_i32_u8(memory_at_0,loc_0+4306)~=0 then
loc_1 else band_i64(loc_1,i64_from_u32(4294967295,0)))store_i64(memory_at_0,
loc_3+8,loc_1)while true do while true do while true do while true do while true
do while true do if gt_u64(loc_1,i64_from_u32(2147483647,0))then break end if
eq_i64(band_i64(loc_1,i64_from_u32(4294901760,4294967295)),i64_from_u32(33554432
,0))then desired=5 break end if eq_i64(band_i64(loc_1,i64_from_u32(4227858432,
4294967295)),i64_from_u32(201326592,0))then desired=4 break end if eq_i64(
band_i64(loc_1,i64_from_u32(4294967040,4294967295)),i64_from_u32(268435456,0))
then desired=3 break end if ne_i64(band_i64(loc_1,i64_from_u32(4294963200,
4294967295)),i64_from_u32(268439552,0))then desired=2 break end FUNC_LIST[346](
add_i32(loc_0,4192),loc_1,loc_2)desired=1 break end if desired then if desired==
5 then desired=nil end break end FUNC_LIST[178](add_i32(loc_0,4280),loc_1,loc_2)
desired=1 break end if desired then if desired==4 then desired=nil end break end
FUNC_LIST[151](loc_0,loc_1,loc_2)desired=1 break end if desired then if desired
==3 then desired=nil end break end FUNC_LIST[385](add_i32(loc_0,48),loc_1,loc_2)
desired=1 break end if desired then if desired==2 then desired=nil end break end
FUNC_LIST[389](add_i32(loc_0,4168),loc_1,loc_2)desired=1 break end if desired
then if desired==1 then desired=nil end break end store_i64(memory_at_0,add_i32(
loc_3,28),i64_ONE)store_i32(memory_at_0,loc_3+20,2)store_i32(memory_at_0,loc_3+
16,1050208)store_i32(memory_at_0,loc_3+44,30)store_i32(memory_at_0,loc_3+24,
add_i32(loc_3,40))store_i32(memory_at_0,loc_3+40,add_i32(loc_3,8))FUNC_LIST[490
](add_i32(loc_3,16),1050256)error('out of code bounds')end GLOBAL_LIST[0].value=
add_i32(loc_3,48)break end end FUNC_LIST[168]=function(loc_0,loc_1,loc_2,loc_3,
loc_4)local loc_5=0 local loc_6=i64_ZERO local loc_7=0 local desired local
br_map={}while true do loc_5=sub_i32(GLOBAL_LIST[0].value,80)GLOBAL_LIST[0].
value=loc_5 store_i64(memory_at_0,loc_5+40,loc_4)while true do if gt_u64(loc_4,
i64_from_u32(8,0))then break end if eq_i64(band_i64(shl_i64(i64_ONE,loc_4),
i64_from_u32(276,0)),i64_ZERO)then break end while true do while true do if
le_u64(band_i64(loc_2,i64_from_u32(4095,0)),sub_i64(i64_from_u32(4096,0),loc_4))
then break end loc_6=i64_ZERO while true do while true do if(if eq_i64(loc_4,
i64_ZERO)then 1 else 0)==0 then break end loc_7=23 desired=2 break end if
desired then if desired==4 then desired=nil continue end break end FUNC_LIST[166
](add_i32(loc_5,8),loc_1,loc_2,wrap_i32_i64(shr_u64(loc_3,band_i64(loc_6,
i64_from_u32(56,0)))))loc_4=add_i64(loc_4,i64_from_u32(4294967295,4294967295))
loc_6=add_i64(loc_6,i64_from_u32(8,0))loc_2=add_i64(loc_2,i64_ONE)loc_7=
load_i32_u8(memory_at_0,loc_5+16)if loc_7==23 then continue end break end if
desired then if desired==3 then desired=nil end break end loc_2=load_i64(
memory_at_0,loc_5+8)desired=2 break end if desired then if desired==2 then
desired=nil end break end FUNC_LIST[156](add_i32(loc_5,24),loc_1,loc_2,2)loc_7=
13 if load_i32(memory_at_0,loc_5+24)~=0 then break end while true do while true
do while true do while true do while true do while true do loc_6=add_i64(loc_4,
i64_from_u32(4294967294,4294967295))if gt_u64(loc_6,i64_from_u32(6,0))then break
end loc_4=load_i64(memory_at_0,loc_5+32)if not br_map[1]then br_map[1]=(function
()return{[0]=1,0,2,0,0,0,3}end)()end temp=br_map[1][wrap_i32_i64(loc_6)]or 1 if
temp<2 then if temp<1 then break else desired=7 break end elseif temp>2 then
desired=5 break else desired=6 break end end if desired then if desired==7 then
desired=nil end break end store_i64(memory_at_0,add_i32(loc_5,60),i64_ONE)
store_i32(memory_at_0,loc_5+52,1)store_i32(memory_at_0,loc_5+48,1050112)
store_i32(memory_at_0,loc_5+76,30)store_i32(memory_at_0,loc_5+56,add_i32(loc_5,
72))store_i32(memory_at_0,loc_5+72,add_i32(loc_5,40))FUNC_LIST[490](add_i32(
loc_5,48),1050152)error('out of code bounds')end if desired then if desired==6
then desired=nil end break end loc_7=wrap_i32_i64(loc_3)loc_6=(if load_i32_u8(
memory_at_0,loc_1+4306)~=0 then loc_4 else band_i64(loc_4,i64_from_u32(
4294967295,0)))if lt_u64(add_i64(loc_6,i64_from_u32(2147483648,4294967295)),
i64_from_u32(2147483647,4294967295))then desired=4 break end loc_4=i64_ZERO
loc_7=band_i32(loc_7,65535)while true do if eq_i64(loc_4,i64_from_u32(2,0))then
desired=3 break end FUNC_LIST[167](loc_1,add_i64(loc_6,loc_4),shr_u32(loc_7,
band_i32(shl_i32(wrap_i32_i64(loc_4),3),8)))loc_4=add_i64(loc_4,i64_ONE)continue
end if desired then if desired==6 then desired=nil end break end break end if
desired then if desired==5 then desired=nil end break end FUNC_LIST[169](loc_1,
loc_4,wrap_i32_i64(loc_3))desired=3 break end if desired then if desired==4 then
desired=nil end break end FUNC_LIST[170](loc_1,loc_4,loc_3)desired=3 break end
if desired then if desired==3 then desired=nil end break end FUNC_LIST[171](
add_i32(loc_1,4280),loc_6,loc_7)break end if desired then if desired==2 then
desired=nil end break end loc_7=23 break end if desired then if desired==1 then
desired=nil end break end store_i32_n8(memory_at_0,loc_0+8,loc_7)store_i64(
memory_at_0,loc_0,loc_2)GLOBAL_LIST[0].value=add_i32(loc_5,80)desired=0 break
end if desired then if desired==0 then desired=nil end break end store_i64(
memory_at_0,add_i32(loc_5,60),i64_ONE)store_i32(memory_at_0,loc_5+52,1)
store_i32(memory_at_0,loc_5+48,1050112)store_i32(memory_at_0,loc_5+76,30)
store_i32(memory_at_0,loc_5+56,add_i32(loc_5,72))store_i32(memory_at_0,loc_5+72,
add_i32(loc_5,40))FUNC_LIST[490](add_i32(loc_5,48),1050168)error(
'out of code bounds')end end FUNC_LIST[169]=function(loc_0,loc_1,loc_2)local
loc_3=i64_ZERO local loc_4=0 local desired while true do while true do while
true do loc_3=(if load_i32_u8(memory_at_0,loc_0+4306)~=0 then loc_1 else
band_i64(loc_1,i64_from_u32(4294967295,0)))if lt_u64(add_i64(loc_3,i64_from_u32(
2147483648,4294967295)),i64_from_u32(2147483645,4294967295))then break end loc_1
=i64_ZERO loc_4=0 while true do if eq_i64(loc_1,i64_from_u32(4,0))then desired=1
break end FUNC_LIST[167](loc_0,add_i64(loc_3,loc_1),shr_u32(loc_2,band_i32(loc_4
,24)))loc_4=add_i32(loc_4,8)loc_1=add_i64(loc_1,i64_ONE)continue end if desired
then if desired==2 then desired=nil end break end break end if desired then if
desired==1 then desired=nil end break end FUNC_LIST[179](add_i32(loc_0,4280),
loc_3,loc_2)break end break end end FUNC_LIST[170]=function(loc_0,loc_1,loc_2)
local loc_3=i64_ZERO local desired while true do while true do while true do
loc_3=(if load_i32_u8(memory_at_0,loc_0+4306)~=0 then loc_1 else band_i64(loc_1,
i64_from_u32(4294967295,0)))if lt_u64(add_i64(loc_3,i64_from_u32(2147483648,
4294967295)),i64_from_u32(2147483641,4294967295))then break end loc_1=i64_ZERO
while true do if eq_i64(loc_1,i64_from_u32(64,0))then desired=1 break end
FUNC_LIST[167](loc_0,loc_3,wrap_i32_i64(shr_u64(loc_2,band_i64(loc_1,
i64_from_u32(56,0)))))loc_1=add_i64(loc_1,i64_from_u32(8,0))loc_3=add_i64(loc_3,
i64_ONE)continue end if desired then if desired==2 then desired=nil end break
end break end if desired then if desired==1 then desired=nil end break end
FUNC_LIST[180](add_i32(loc_0,4280),loc_3,loc_2)break end break end end FUNC_LIST
[171]=function(loc_0,loc_1,loc_2)local loc_3=0 local desired while true do loc_3
=sub_i32(GLOBAL_LIST[0].value,48)GLOBAL_LIST[0].value=loc_3 store_i64(
memory_at_0,loc_3+8,loc_1)while true do if lt_u64(add_i64(loc_1,i64_ONE),
i64_from_u32(2147483649,0))then break end FUNC_LIST[145](loc_0,add_i64(loc_1,
i64_from_u32(2147483648,4294967295)),loc_2)GLOBAL_LIST[0].value=add_i32(loc_3,48
)desired=0 break end if desired then if desired==0 then desired=nil end break
end store_i64(memory_at_0,add_i32(loc_3,28),i64_ONE)store_i32(memory_at_0,loc_3+
20,1)store_i32(memory_at_0,loc_3+16,1050468)store_i32(memory_at_0,loc_3+44,30)
store_i32(memory_at_0,loc_3+24,add_i32(loc_3,40))store_i32(memory_at_0,loc_3+40,
add_i32(loc_3,8))FUNC_LIST[490](add_i32(loc_3,16),1050556)error(
'out of code bounds')end end FUNC_LIST[172]=function(loc_0,loc_1,loc_2,loc_3)
local loc_4=0 while true do loc_4=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0]
.value=loc_4 FUNC_LIST[168](loc_4,loc_1,loc_2,band_i64(extend_i64_u32(loc_3),
i64_from_u32(65535,0)),i64_from_u32(2,0))loc_2=load_i64(memory_at_0,loc_4)
store_i32_n8(memory_at_0,loc_0+8,load_i32_u8(memory_at_0,loc_4+8))store_i64(
memory_at_0,loc_0,loc_2)GLOBAL_LIST[0].value=add_i32(loc_4,16)break end end
FUNC_LIST[173]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 while true do
loc_4=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_4 FUNC_LIST[168](
loc_4,loc_1,loc_2,extend_i64_u32(loc_3),i64_from_u32(4,0))loc_2=load_i64(
memory_at_0,loc_4)store_i32_n8(memory_at_0,loc_0+8,load_i32_u8(memory_at_0,loc_4
+8))store_i64(memory_at_0,loc_0,loc_2)GLOBAL_LIST[0].value=add_i32(loc_4,16)
break end end FUNC_LIST[174]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0
while true do loc_4=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_4
FUNC_LIST[168](loc_4,loc_1,loc_2,loc_3,i64_from_u32(8,0))loc_3=load_i64(
memory_at_0,loc_4)store_i32_n8(memory_at_0,loc_0+8,load_i32_u8(memory_at_0,loc_4
+8))store_i64(memory_at_0,loc_0,loc_3)GLOBAL_LIST[0].value=add_i32(loc_4,16)
break end end FUNC_LIST[175]=function(loc_0,loc_1)local loc_2=0 local reg_0
local desired while true do loc_2=sub_i32(GLOBAL_LIST[0].value,48)GLOBAL_LIST[0]
.value=loc_2 store_i64(memory_at_0,loc_2+8,loc_1)while true do if lt_u64(loc_1,
i64_from_u32(2147483648,0))then break end reg_0=FUNC_LIST[139](loc_0,add_i64(
loc_1,i64_from_u32(2147483648,4294967295)))loc_0=reg_0 GLOBAL_LIST[0].value=
add_i32(loc_2,48)reg_0=loc_0 desired=0 break end if desired then if desired==0
then desired=nil end break end store_i64(memory_at_0,add_i32(loc_2,28),i64_ONE)
store_i32(memory_at_0,loc_2+20,1)store_i32(memory_at_0,loc_2+16,1050468)
store_i32(memory_at_0,loc_2+44,30)store_i32(memory_at_0,loc_2+24,add_i32(loc_2,
40))store_i32(memory_at_0,loc_2+40,add_i32(loc_2,8))FUNC_LIST[490](add_i32(loc_2
,16),1050476)error('out of code bounds')end return reg_0 end FUNC_LIST[176]=
function(loc_0,loc_1)local loc_2=0 local reg_0 local desired while true do loc_2
=sub_i32(GLOBAL_LIST[0].value,48)GLOBAL_LIST[0].value=loc_2 store_i64(
memory_at_0,loc_2+8,loc_1)while true do if lt_u64(add_i64(loc_1,i64_from_u32(3,0
)),i64_from_u32(2147483651,0))then break end reg_0=FUNC_LIST[142](loc_0,add_i64(
loc_1,i64_from_u32(2147483648,4294967295)))loc_0=reg_0 GLOBAL_LIST[0].value=
add_i32(loc_2,48)reg_0=loc_0 desired=0 break end if desired then if desired==0
then desired=nil end break end store_i64(memory_at_0,add_i32(loc_2,28),i64_ONE)
store_i32(memory_at_0,loc_2+20,1)store_i32(memory_at_0,loc_2+16,1050468)
store_i32(memory_at_0,loc_2+44,30)store_i32(memory_at_0,loc_2+24,add_i32(loc_2,
40))store_i32(memory_at_0,loc_2+40,add_i32(loc_2,8))FUNC_LIST[490](add_i32(loc_2
,16),1050508)error('out of code bounds')end return reg_0 end FUNC_LIST[177]=
function(loc_0,loc_1)local loc_2=0 local reg_0 local desired while true do loc_2
=sub_i32(GLOBAL_LIST[0].value,48)GLOBAL_LIST[0].value=loc_2 store_i64(
memory_at_0,loc_2+8,loc_1)while true do if lt_u64(add_i64(loc_1,i64_from_u32(7,0
)),i64_from_u32(2147483655,0))then break end reg_0=FUNC_LIST[143](loc_0,add_i64(
loc_1,i64_from_u32(2147483648,4294967295)))loc_1=reg_0 GLOBAL_LIST[0].value=
add_i32(loc_2,48)reg_0=loc_1 desired=0 break end if desired then if desired==0
then desired=nil end break end store_i64(memory_at_0,add_i32(loc_2,28),i64_ONE)
store_i32(memory_at_0,loc_2+20,1)store_i32(memory_at_0,loc_2+16,1050468)
store_i32(memory_at_0,loc_2+44,30)store_i32(memory_at_0,loc_2+24,add_i32(loc_2,
40))store_i32(memory_at_0,loc_2+40,add_i32(loc_2,8))FUNC_LIST[490](add_i32(loc_2
,16),1050524)error('out of code bounds')end return reg_0 end FUNC_LIST[178]=
function(loc_0,loc_1,loc_2)local loc_3=0 local desired while true do loc_3=
sub_i32(GLOBAL_LIST[0].value,48)GLOBAL_LIST[0].value=loc_3 store_i64(memory_at_0
,loc_3+8,loc_1)while true do if lt_u64(loc_1,i64_from_u32(2147483648,0))then
break end FUNC_LIST[144](loc_0,add_i64(loc_1,i64_from_u32(2147483648,4294967295)
),loc_2)GLOBAL_LIST[0].value=add_i32(loc_3,48)desired=0 break end if desired
then if desired==0 then desired=nil end break end store_i64(memory_at_0,add_i32(
loc_3,28),i64_ONE)store_i32(memory_at_0,loc_3+20,1)store_i32(memory_at_0,loc_3+
16,1050468)store_i32(memory_at_0,loc_3+44,30)store_i32(memory_at_0,loc_3+24,
add_i32(loc_3,40))store_i32(memory_at_0,loc_3+40,add_i32(loc_3,8))FUNC_LIST[490
](add_i32(loc_3,16),1050540)error('out of code bounds')end end FUNC_LIST[179]=
function(loc_0,loc_1,loc_2)local loc_3=0 local desired while true do loc_3=
sub_i32(GLOBAL_LIST[0].value,48)GLOBAL_LIST[0].value=loc_3 store_i64(memory_at_0
,loc_3+8,loc_1)while true do if lt_u64(add_i64(loc_1,i64_from_u32(3,0)),
i64_from_u32(2147483651,0))then break end FUNC_LIST[147](loc_0,add_i64(loc_1,
i64_from_u32(2147483648,4294967295)),loc_2)GLOBAL_LIST[0].value=add_i32(loc_3,48
)desired=0 break end if desired then if desired==0 then desired=nil end break
end store_i64(memory_at_0,add_i32(loc_3,28),i64_ONE)store_i32(memory_at_0,loc_3+
20,1)store_i32(memory_at_0,loc_3+16,1050468)store_i32(memory_at_0,loc_3+44,30)
store_i32(memory_at_0,loc_3+24,add_i32(loc_3,40))store_i32(memory_at_0,loc_3+40,
add_i32(loc_3,8))FUNC_LIST[490](add_i32(loc_3,16),1050572)error(
'out of code bounds')end end FUNC_LIST[180]=function(loc_0,loc_1,loc_2)local
loc_3=0 local desired while true do loc_3=sub_i32(GLOBAL_LIST[0].value,48)
GLOBAL_LIST[0].value=loc_3 store_i64(memory_at_0,loc_3+8,loc_1)while true do if
lt_u64(add_i64(loc_1,i64_from_u32(7,0)),i64_from_u32(2147483655,0))then break
end FUNC_LIST[148](loc_0,add_i64(loc_1,i64_from_u32(2147483648,4294967295)),
loc_2)GLOBAL_LIST[0].value=add_i32(loc_3,48)desired=0 break end if desired then
if desired==0 then desired=nil end break end store_i64(memory_at_0,add_i32(loc_3
,28),i64_ONE)store_i32(memory_at_0,loc_3+20,1)store_i32(memory_at_0,loc_3+16,
1050468)store_i32(memory_at_0,loc_3+44,30)store_i32(memory_at_0,loc_3+24,
add_i32(loc_3,40))store_i32(memory_at_0,loc_3+40,add_i32(loc_3,8))FUNC_LIST[490
](add_i32(loc_3,16),1050588)error('out of code bounds')end end FUNC_LIST[181]=
function(loc_0,loc_1,loc_2,loc_3,loc_4,loc_5,loc_6,loc_7)local loc_8=0 local
loc_9=0 local loc_10=i64_ZERO local loc_11=i64_ZERO local loc_12=i64_ZERO local
loc_13=i64_ZERO local loc_14=i64_ZERO local loc_15=i64_ZERO local loc_16=
i64_ZERO local loc_17=i64_ZERO local loc_18=i64_ZERO local reg_0 local desired
local br_map={}while true do loc_8=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0
].value=loc_8 while true do while true do while true do while true do loc_9=
band_i32(loc_3,255)if loc_9>=loc_6 then break end loc_9=(if load_i32_u8(
memory_at_0,loc_1+4304)==1 then 1 else 0)loc_10=add_i64(shl_i64(load_i64(
memory_at_0,add_i32(loc_5,shl_i32(loc_9,3))),(if loc_9~=0 then i64_from_u32(2,0)
else i64_from_u32(3,0))),shl_i64(loc_4,i64_from_u32(12,0)))while true do while
true do if loc_9==0 then break end reg_0=FUNC_LIST[158](loc_1,loc_10)loc_4=
extend_i64_u32(reg_0)desired=5 break end if desired then if desired==5 then
desired=nil end break end reg_0=FUNC_LIST[162](loc_1,loc_10)loc_4=reg_0 break
end if desired then if desired==4 then desired=nil end break end loc_11=shr_u64(
loc_4,i64_from_u32(10,0))while true do while true do while true do while true do
loc_9=load_i32_u8(memory_at_0,loc_1+4304)if not br_map[1]then br_map[1]=(
function()return{[0]=1,2}end)()end temp=br_map[1][add_i32(loc_9,4294967295)]or 0
if temp<1 then break elseif temp>1 then desired=6 break else desired=7 break end
end if desired then if desired==7 then desired=nil end break end FUNC_LIST[120](
1050348,14,1050396)error('out of code bounds')end if desired then if desired==6
then desired=nil end break end loc_12=band_i64(loc_11,i64_from_u32(1023,0))
loc_13=band_i64(shr_u64(loc_4,i64_from_u32(20,0)),i64_from_u32(4095,0))loc_14=
i64_ZERO desired=5 break end if desired then if desired==5 then desired=nil end
break end loc_12=band_i64(loc_11,i64_from_u32(511,0))loc_14=band_i64(shl_i64(
loc_4,i64_from_u32(2,0)),i64_from_u32(3221225472,16777215))loc_13=band_i64(
shr_u64(loc_4,i64_from_u32(19,0)),i64_from_u32(511,0))break end if desired then
if desired==4 then desired=nil end break end loc_15=i64_ONE if eq_i64(band_i64(
loc_4,i64_ONE),i64_ZERO)then desired=2 break end loc_16=band_i64(shr_u64(loc_4,
i64_from_u32(2,0)),i64_ONE)while true do loc_17=band_i64(loc_4,i64_from_u32(2,0)
)if ne_i64(loc_17,i64_ZERO)then break end if ne_i64(loc_16,i64_ZERO)then desired
=2 break end break end if desired then if desired==4 then desired=nil end break
end loc_11=band_i64((if loc_9==1 then i64_from_u32(4194303,0)else i64_from_u32(
4294967295,4095)),loc_11)while true do while true do while true do if eq_i64(
band_i64(loc_4,i64_from_u32(10,0)),i64_ZERO)then break end if eq_i64(band_i64(
loc_4,i64_from_u32(64,0)),i64_ZERO)then desired=6 break end if band_i32(loc_7,
255)~=2 then desired=3 break end if eq_i64(band_i64(loc_4,i64_from_u32(128,0)),
i64_ZERO)then desired=6 break end desired=3 break end if desired then if desired
==6 then desired=nil end break end if band_i32(loc_3,255)~=0 then desired=5
break end desired=2 break end if desired then if desired==5 then desired=nil end
break end loc_18=bor_i64(loc_4,(if band_i32(loc_7,255)==2 then i64_from_u32(192,
0)else i64_from_u32(64,0)))while true do if loc_9~=1 then break end FUNC_LIST[
169](loc_1,loc_10,wrap_i32_i64(loc_18))desired=3 break end if desired then if
desired==5 then desired=nil end break end FUNC_LIST[170](loc_1,loc_10,loc_18)
desired=3 break end if desired then if desired==4 then desired=nil end break end
FUNC_LIST[181](loc_8,loc_1,loc_2,add_i32(loc_3,4294967295),loc_11,loc_5,loc_6,
loc_7)loc_4=load_i64(memory_at_0,loc_8+8)loc_15=load_i64(memory_at_0,loc_8)
desired=1 break end if desired then if desired==3 then desired=nil end break end
FUNC_LIST[492](2,2,1050332)error('out of code bounds')end if desired then if
desired==2 then desired=nil end break end while true do while true do while true
do while true do if not br_map[2]then br_map[2]=(function()return{[0]=0,1,2}end
)()end temp=br_map[2][band_i32(loc_7,255)]or 3 if temp<2 then if temp<1 then
break else desired=5 break end elseif temp>2 then desired=3 break else desired=4
break end end if desired then if desired==5 then desired=nil end break end if
eq_i64(band_i64(loc_4,i64_from_u32(8,0)),i64_ZERO)then desired=2 break end
desired=3 break end if desired then if desired==4 then desired=nil end break end
if eq_i64(loc_17,i64_ZERO)then desired=2 break end desired=3 break end if
desired then if desired==3 then desired=nil end break end if eq_i64(loc_16,
i64_ZERO)then desired=2 break end break end if desired then if desired==2 then
desired=nil end break end while true do while true do while true do if
load_i32_u8(memory_at_0,loc_1+4304)==1 then break end while true do while true
do while true do while true do if not br_map[3]then br_map[3]=(function()return{
[0]=1,3,2}end)()end temp=br_map[3][band_i32(loc_3,255)]or 0 if temp<2 then if
temp<1 then break else desired=8 break end elseif temp>2 then desired=6 break
else desired=7 break end end if desired then if desired==8 then desired=nil end
break end FUNC_LIST[120](1050348,14,1050380)error('out of code bounds')end if
desired then if desired==7 then desired=nil end break end loc_4=shl_i64(loc_11,
i64_from_u32(12,0))desired=4 break end if desired then if desired==6 then
desired=nil end break end if(if eq_i64(bor_i64(loc_12,loc_13),i64_ZERO)then 1
else 0)==0 then desired=1 break end loc_4=bor_i64(bor_i64(shl_i64(load_i64(
memory_at_0,loc_5+8),i64_from_u32(21,0)),shl_i64(load_i64(memory_at_0,loc_5),
i64_from_u32(12,0))),loc_14)desired=4 break end if desired then if desired==5
then desired=nil end break end if(if eq_i64(loc_12,i64_ZERO)then 1 else 0)==0
then desired=1 break end loc_4=bor_i64(bor_i64(shl_i64(loc_13,i64_from_u32(21,0)
),shl_i64(load_i64(memory_at_0,loc_5),i64_from_u32(12,0))),loc_14)desired=4
break end if desired then if desired==4 then desired=nil end break end while
true do while true do if not br_map[4]then br_map[4]=(function()return{[0]=1,0}
end)()end temp=br_map[4][band_i32(loc_3,255)]or 3 if temp<1 then break elseif
temp>1 then desired=3 break else desired=5 break end end if desired then if
desired==5 then desired=nil end break end if(if eq_i64(loc_12,i64_ZERO)then 1
else 0)==0 then desired=1 break end loc_4=bor_i64(shl_i64(load_i64(memory_at_0,
loc_5),i64_from_u32(12,0)),shl_i64(loc_13,i64_from_u32(22,0)))desired=4 break
end if desired then if desired==4 then desired=nil end break end loc_4=shl_i64(
loc_11,i64_from_u32(12,0))break end if desired then if desired==3 then desired=
nil end break end loc_4=bor_i64(loc_4,band_i64(loc_2,i64_from_u32(4095,0)))
loc_15=i64_ZERO desired=1 break end if desired then if desired==2 then desired=
nil end break end FUNC_LIST[120](1050348,14,1050364)error('out of code bounds')
end if desired then if desired==1 then desired=nil end break end break end
store_i64(memory_at_0,loc_0+8,loc_4)store_i64(memory_at_0,loc_0,loc_15)
GLOBAL_LIST[0].value=add_i32(loc_8,16)break end end FUNC_LIST[182]=function(
loc_0)local reg_0 while true do reg_0=FUNC_LIST[377](1065608,loc_0)break end
return reg_0 end FUNC_LIST[183]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0
local loc_5=i64_ZERO local loc_6=0 local loc_7=i64_ZERO local desired while true
do loc_4=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_4 FUNC_LIST[
184](loc_4,loc_2)while true do while true do loc_2=load_i32(memory_at_0,loc_4+8)
if loc_2>31 then break end loc_5=load_i64(memory_at_0,add_i32(add_i32(loc_1,
shl_i32(loc_2,3)),32768))while true do loc_6=load_i32_u8(memory_at_0,loc_1+37689
)if loc_6~=0 then break end loc_5=bor_i64(band_i64(shr_i64(shl_i64(loc_5,
i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,4294967295)),band_i64(
loc_5,i64_from_u32(4294967295,0)))break end if desired then if desired==2 then
desired=nil end break end loc_2=load_i32(memory_at_0,loc_4+12)if loc_2>=32 then
desired=1 break end loc_7=load_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(
loc_2,3)),32768))while true do if loc_6~=0 then break end loc_7=bor_i64(
band_i64(shr_i64(shl_i64(loc_7,i64_from_u32(32,0)),i64_from_u32(63,0)),
i64_from_u32(0,4294967295)),band_i64(loc_7,i64_from_u32(4294967295,0)))break end
if desired then if desired==2 then desired=nil end break end while true do if
ge_i64(loc_5,loc_7)then break end store_i64(memory_at_0,loc_1+33288,add_i64(
load_i64(memory_at_0,loc_4),loc_3))break end if desired then if desired==2 then
desired=nil end break end store_i32_n8(memory_at_0,loc_0+8,23)GLOBAL_LIST[0].
value=add_i32(loc_4,16)desired=0 break end if desired then if desired==1 then
desired=nil end break end FUNC_LIST[492](loc_2,32,1056644)error(
'out of code bounds')end if desired then if desired==0 then desired=nil end
break end FUNC_LIST[492](loc_2,32,1056660)error('out of code bounds')end end
FUNC_LIST[184]=function(loc_0,loc_1)local loc_2=0 while true do loc_2=shr_u32(
loc_1,20)store_i32(memory_at_0,loc_0+12,band_i32(loc_2,31))store_i32(memory_at_0
,loc_0+8,band_i32(shr_u32(loc_1,15),31))store_i64(memory_at_0,loc_0,
extend_i64_i32(bor_i32(bor_i32(bor_i32(band_i32(shr_i32(loc_1,31),4294963200),
band_i32(shl_i32(loc_1,4),2048)),band_i32(loc_2,2016)),band_i32(shr_u32(loc_1,7)
,30))))break end end FUNC_LIST[185]=function(loc_0,loc_1,loc_2,loc_3)local loc_4
=0 local loc_5=0 local loc_6=i64_ZERO local reg_0 local reg_1 local desired
while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4
FUNC_LIST[186](add_i32(loc_4,16),loc_2)while true do while true do loc_2=
load_i32(memory_at_0,loc_4+24)if loc_2>31 then break end loc_5=load_i32(
memory_at_0,loc_4+28)if loc_5>=32 then desired=1 break end reg_1=add_i32(loc_1,
33376)loc_1=add_i32(loc_1,32768)FUNC_LIST[173](loc_4,reg_1,add_i64(load_i64(
memory_at_0,add_i32(loc_1,shl_i32(loc_2,3))),load_i64(memory_at_0,loc_4+16)),
load_i32(memory_at_0,add_i32(loc_1,shl_i32(loc_5,3))))loc_6=load_i64(memory_at_0
,loc_4)store_i32_n8(memory_at_0,loc_0+8,load_i32_u8(memory_at_0,loc_4+8))
store_i64(memory_at_0,loc_0,loc_6)GLOBAL_LIST[0].value=add_i32(loc_4,32)desired=
0 break end if desired then if desired==1 then desired=nil end break end
FUNC_LIST[492](loc_2,32,1057404)error('out of code bounds')end if desired then
if desired==0 then desired=nil end break end FUNC_LIST[492](loc_5,32,1057420)
error('out of code bounds')end end FUNC_LIST[186]=function(loc_0,loc_1)local
loc_2=0 while true do loc_2=shr_u32(loc_1,20)store_i32(memory_at_0,loc_0+12,
band_i32(loc_2,31))store_i32(memory_at_0,loc_0+8,band_i32(shr_u32(loc_1,15),31))
store_i64(memory_at_0,loc_0,extend_i64_i32(bor_i32(bor_i32(band_i32(shr_i32(
loc_1,31),4294963200),band_i32(loc_2,4064)),band_i32(shr_u32(loc_1,7),31))))
break end end FUNC_LIST[187]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0
local loc_5=0 local loc_6=i64_ZERO local desired while true do loc_4=sub_i32(
GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_4 loc_5=band_i32(shr_u32(loc_2,
20),31)loc_6=load_i64(memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,
12),248)),32768))while true do while true do if load_i32_u8(memory_at_0,loc_1+
37689)~=0 then break end loc_6=mul_i64(load_i64_u32(memory_at_0,add_i32(add_i32(
loc_1,shl_i32(loc_5,3)),32768)),loc_6)loc_6=bor_i64(band_i64(shr_i64(loc_6,
i64_from_u32(63,0)),i64_from_u32(0,4294967295)),shr_u64(loc_6,i64_from_u32(32,0)
))desired=1 break end if desired then if desired==1 then desired=nil end break
end FUNC_LIST[552](loc_4,load_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(
loc_5,3)),32768)),i64_ZERO,loc_6,shr_i64(loc_6,i64_from_u32(63,0)))loc_6=
load_i64(memory_at_0,add_i32(loc_4,8))break end store_i64(memory_at_0,add_i32(
add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),32768),loc_6)store_i32_n8(
memory_at_0,loc_0+8,23)GLOBAL_LIST[0].value=add_i32(loc_4,16)break end end
FUNC_LIST[188]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0
local loc_6=i64_ZERO local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].
value,32)GLOBAL_LIST[0].value=loc_4 FUNC_LIST[189](loc_4,loc_2)while true do
loc_2=load_i32(memory_at_0,loc_4+12)if loc_2>31 then break end FUNC_LIST[164](
add_i32(loc_4,16),add_i32(loc_1,33376),add_i64(load_i64(memory_at_0,loc_4),
load_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768))))while true
do while true do loc_2=load_i32_u8(memory_at_0,loc_4+24)if loc_2~=23 then break
end while true do loc_5=load_i32(memory_at_0,loc_4+8)if loc_5>=32 then break end
store_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_5,3)),32768),
load_i64_u32(memory_at_0,loc_4+16))desired=2 break end if desired then if
desired==3 then desired=nil end break end FUNC_LIST[492](loc_5,32,1057180)error(
'out of code bounds')end if desired then if desired==2 then desired=nil end
break end loc_6=load_i64(memory_at_0,loc_4+16)break end if desired then if
desired==1 then desired=nil end break end store_i32_n8(memory_at_0,loc_0+8,loc_2
)store_i64(memory_at_0,loc_0,loc_6)GLOBAL_LIST[0].value=add_i32(loc_4,32)desired
=0 break end if desired then if desired==0 then desired=nil end break end
FUNC_LIST[492](loc_2,32,1057164)error('out of code bounds')end end FUNC_LIST[189
]=function(loc_0,loc_1)while true do store_i32(memory_at_0,loc_0+12,band_i32(
shr_u32(loc_1,15),31))store_i32(memory_at_0,loc_0+8,band_i32(shr_u32(loc_1,7),31
))store_i64(memory_at_0,loc_0,extend_i64_i32(bor_i32(band_i32(shr_i32(loc_1,31),
4294965248),band_i32(shr_u32(loc_1,20),2047))))break end end FUNC_LIST[190]=
function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=0 local
loc_7=i64_ZERO local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,16
)GLOBAL_LIST[0].value=loc_4 loc_5=add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,
12),248)),32768)FUNC_LIST[164](loc_4,add_i32(loc_1,33376),load_i64(memory_at_0,
loc_5))while true do while true do loc_6=load_i32_u8(memory_at_0,loc_4+8)if
loc_6==23 then break end loc_7=load_i64(memory_at_0,loc_4)desired=1 break end if
desired then if desired==1 then desired=nil end break end store_i32_n8(
memory_at_0,loc_1+37691,1)store_i64(memory_at_0,loc_1+33296,load_i64(memory_at_0
,loc_5))store_i64(memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,4),
248)),32768),load_i64_i32(memory_at_0,loc_4))break end store_i32_n8(memory_at_0,
loc_0+8,loc_6)store_i64(memory_at_0,loc_0,loc_7)GLOBAL_LIST[0].value=add_i32(
loc_4,16)break end end FUNC_LIST[191]=function(loc_0,loc_1,loc_2,loc_3)local
loc_4=0 local loc_5=0 local loc_6=i64_ZERO local loc_7=i64_ZERO local desired
while true do loc_4=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_4
loc_5=add_i32(loc_1,32768)loc_6=load_i64(memory_at_0,add_i32(loc_5,band_i32(
shr_u32(loc_2,17),248)))loc_7=load_i64(memory_at_0,add_i32(loc_5,band_i32(
shr_u32(loc_2,12),248)))while true do while true do if load_i32_u8(memory_at_0,
loc_1+37689)~=0 then break end loc_6=mul_i64(band_i64(loc_6,i64_from_u32(
4294967295,0)),band_i64(loc_7,i64_from_u32(4294967295,0)))loc_6=bor_i64(
band_i64(shr_i64(loc_6,i64_from_u32(63,0)),i64_from_u32(0,4294967295)),shr_u64(
loc_6,i64_from_u32(32,0)))desired=1 break end if desired then if desired==1 then
desired=nil end break end FUNC_LIST[552](loc_4,loc_6,i64_ZERO,loc_7,i64_ZERO)
loc_6=load_i64(memory_at_0,add_i32(loc_4,8))break end store_i64(memory_at_0,
add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),32768),loc_6)store_i32_n8(
memory_at_0,loc_0+8,23)GLOBAL_LIST[0].value=add_i32(loc_4,16)break end end
FUNC_LIST[192]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=i64_ZERO local loc_5
=0 local loc_6=i64_ZERO local desired while true do while true do while true do
loc_4=load_i64(memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,17),248)
),32768))loc_5=load_i32_u8(memory_at_0,loc_1+37689)loc_4=(if loc_5~=0 then loc_4
else band_i64(loc_4,i64_from_u32(4294967295,0)))if(if eq_i64(loc_4,i64_ZERO)then
1 else 0)==0 then break end loc_4=i64_from_u32(4294967295,4294967295)desired=1
break end if desired then if desired==1 then desired=nil end break end loc_6=
load_i64(memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,12),248)),
32768))loc_4=div_u64((if loc_5~=0 then loc_6 else band_i64(loc_6,i64_from_u32(
4294967295,0))),loc_4)if loc_5~=0 then break end loc_4=bor_i64(band_i64(shr_i64(
shl_i64(loc_4,i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,4294967295)
),band_i64(loc_4,i64_from_u32(4294967295,0)))break end store_i64(memory_at_0,
add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),32768),loc_4)store_i32_n8(
memory_at_0,loc_0+8,23)break end end FUNC_LIST[193]=function(loc_0,loc_1,loc_2,
loc_3)while true do loc_1=add_i32(loc_1,32768)store_i64(memory_at_0,add_i32(
loc_1,band_i32(shr_u32(loc_2,4),248)),extend_i64_i32(shl_i32(load_i32(
memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,12),248))),load_i32(memory_at_0
,add_i32(loc_1,band_i32(shr_u32(loc_2,17),248))))))store_i32_n8(memory_at_0,
loc_0+8,23)break end end FUNC_LIST[194]=function(loc_0,loc_1,loc_2,loc_3)while
true do loc_1=add_i32(loc_1,33024)store_f64(memory_at_0,add_i32(loc_1,band_i32(
shr_u32(loc_2,4),248)),(load_f64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(
loc_2,12),248)))*load_f64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,17),
248)))))store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[195]=
function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=i64_ZERO local
desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value
=loc_4 FUNC_LIST[189](loc_4,loc_2)while true do while true do loc_2=load_i32(
memory_at_0,loc_4+12)if loc_2>31 then break end loc_5=bor_i64(load_i64(
memory_at_0,loc_4),load_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),
32768)))while true do if load_i32_u8(memory_at_0,loc_1+37689)~=0 then break end
loc_5=bor_i64(band_i64(shr_i64(shl_i64(loc_5,i64_from_u32(32,0)),i64_from_u32(63
,0)),i64_from_u32(0,4294967295)),band_i64(loc_5,i64_from_u32(4294967295,0)))
break end if desired then if desired==2 then desired=nil end break end loc_2=
load_i32(memory_at_0,loc_4+8)if loc_2>=32 then desired=1 break end store_i64(
memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768),loc_5)store_i32_n8(
memory_at_0,loc_0+8,23)GLOBAL_LIST[0].value=add_i32(loc_4,16)desired=0 break end
if desired then if desired==1 then desired=nil end break end FUNC_LIST[492](
loc_2,32,1057212)error('out of code bounds')end if desired then if desired==0
then desired=nil end break end FUNC_LIST[492](loc_2,32,1057228)error(
'out of code bounds')end end FUNC_LIST[196]=function(loc_0,loc_1,loc_2,loc_3)
local loc_4=0 local loc_5=i64_ZERO while true do loc_4=add_i32(loc_1,32768)loc_5
=add_i64(load_i64(memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2,17),248))),
load_i64(memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2,12),248))))while true
do if load_i32_u8(memory_at_0,loc_1+37689)~=0 then break end loc_5=bor_i64(
band_i64(shr_i64(shl_i64(loc_5,i64_from_u32(32,0)),i64_from_u32(63,0)),
i64_from_u32(0,4294967295)),band_i64(loc_5,i64_from_u32(4294967295,0)))break end
store_i64(memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),
32768),loc_5)store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[197]=
function(loc_0,loc_1,loc_2,loc_3)while true do loc_1=add_i32(loc_1,33024)
store_i64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),bxor_i64(
band_i64(load_i64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,17),248))),
i64_from_u32(0,2147483648)),load_i64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(
loc_2,12),248)))))store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[
198]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=
i64_ZERO local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)
GLOBAL_LIST[0].value=loc_4 FUNC_LIST[189](loc_4,loc_2)while true do loc_2=
load_i32(memory_at_0,loc_4+12)if loc_2>31 then break end FUNC_LIST[163](add_i32(
loc_4,16),add_i32(loc_1,33376),add_i64(load_i64(memory_at_0,loc_4),load_i64(
memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768))))while true do while
true do loc_2=load_i32_u8(memory_at_0,loc_4+24)if loc_2~=23 then break end while
true do loc_5=load_i32(memory_at_0,loc_4+8)if loc_5>=32 then break end
store_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_5,3)),32768),
load_i64_u16(memory_at_0,loc_4+16))desired=2 break end if desired then if
desired==3 then desired=nil end break end FUNC_LIST[492](loc_5,32,1057116)error(
'out of code bounds')end if desired then if desired==2 then desired=nil end
break end loc_6=load_i64(memory_at_0,loc_4+16)break end if desired then if
desired==1 then desired=nil end break end store_i32_n8(memory_at_0,loc_0+8,loc_2
)store_i64(memory_at_0,loc_0,loc_6)GLOBAL_LIST[0].value=add_i32(loc_4,32)desired
=0 break end if desired then if desired==0 then desired=nil end break end
FUNC_LIST[492](loc_2,32,1057100)error('out of code bounds')end end FUNC_LIST[199
]=function(loc_0,loc_1,loc_2,loc_3)while true do store_i64(memory_at_0,add_i32(
add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),32768),load_i64(memory_at_0,
add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,12),248)),33024)))store_i32_n8(
memory_at_0,loc_0+8,23)break end end FUNC_LIST[200]=function(loc_0,loc_1,loc_2,
loc_3)local loc_4=0 local loc_5=0 while true do loc_4=add_i32(loc_1,32768)loc_5=
load_i32(memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2,12),248)))while true
do loc_4=load_i32(memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2,17),248)))if
loc_4==0 then break end loc_5=(loc_5%loc_4)break end store_i64(memory_at_0,
add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),32768),extend_i64_i32(
loc_5))store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[201]=function
(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=i64_ZERO local desired while
true do while true do while true do loc_4=load_i32(memory_at_0,add_i32(add_i32(
loc_1,band_i32(shr_u32(loc_2,17),248)),32768))if loc_4~=0 then break end loc_5=
i64_from_u32(4294967295,4294967295)desired=1 break end if desired then if
desired==1 then desired=nil end break end loc_5=extend_i64_i32(div_u32(load_i32(
memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,12),248)),32768)),loc_4
))break end store_i64(memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,4
),248)),32768),loc_5)store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST
[202]=function(loc_0,loc_1,loc_2,loc_3)while true do loc_1=add_i32(loc_1,32768)
store_i64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),
extend_i64_n32(add_i64(load_i64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2
,17),248))),load_i64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,12),248)))
)))store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[203]=function(
loc_0,loc_1,loc_2,loc_3)local loc_4=0 while true do loc_4=sub_i32(GLOBAL_LIST[0]
.value,16)GLOBAL_LIST[0].value=loc_4 FUNC_LIST[204](loc_4,loc_2)store_i64(
memory_at_0,add_i32(add_i32(loc_1,shl_i32(load_i32(memory_at_0,loc_4+8),3)),
32768),load_i64(memory_at_0,loc_4))store_i32_n8(memory_at_0,loc_0+8,23)
GLOBAL_LIST[0].value=add_i32(loc_4,16)break end end FUNC_LIST[204]=function(
loc_0,loc_1)while true do store_i32(memory_at_0,loc_0+8,band_i32(shr_u32(loc_1,7
),31))store_i64(memory_at_0,loc_0,bor_i64((if gt_i32(loc_1,4294967295)then
i64_ZERO else i64_from_u32(0,4294967295)),extend_i64_u32(band_i32(loc_1,
4294963200))))break end end FUNC_LIST[205]=function(loc_0,loc_1,loc_2,loc_3)
local loc_4=0 local loc_5=0 local loc_6=0 local loc_7=i64_ZERO local desired
while true do loc_4=band_i32(shr_u32(loc_2,7),31)while true do while true do
loc_5=add_i32(loc_1,32768)loc_6=load_i32(memory_at_0,add_i32(loc_5,band_i32(
shr_u32(loc_2,17),248)))if loc_6==0 then break end while true do while true do
loc_7=load_i64(memory_at_0,add_i32(loc_5,band_i32(shr_u32(loc_2,12),248)))loc_2=
wrap_i32_i64(loc_7)if loc_2~=2147483648 then break end if loc_6==4294967295 then
desired=3 break end break end if desired then if desired==3 then desired=nil end
break end store_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_4,3)),32768),
extend_i64_i32(div_i32(loc_2,loc_6)))desired=1 break end if desired then if
desired==2 then desired=nil end break end store_i64(memory_at_0,add_i32(add_i32(
loc_1,shl_i32(loc_4,3)),32768),extend_i64_n32(loc_7))desired=1 break end if
desired then if desired==1 then desired=nil end break end store_i64(memory_at_0,
add_i32(add_i32(loc_1,shl_i32(loc_4,3)),32768),i64_from_u32(4294967295,
4294967295))break end store_i32_n8(memory_at_0,loc_0+8,23)break end end
FUNC_LIST[206]=function(loc_0,loc_1,loc_2,loc_3)local reg_0 while true do reg_0=
add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),32768)loc_1=add_i32(loc_1,
33024)store_i64(memory_at_0,reg_0,extend_i64_u32((if load_f64(memory_at_0,
add_i32(loc_1,band_i32(shr_u32(loc_2,12),248)))==load_f64(memory_at_0,add_i32(
loc_1,band_i32(shr_u32(loc_2,17),248)))then 1 else 0)))store_i32_n8(memory_at_0,
loc_0+8,23)break end end FUNC_LIST[207]=function(loc_0,loc_1,loc_2,loc_3)local
loc_4=0 local loc_5=i64_ZERO local loc_6=i64_ZERO while true do loc_4=sub_i32(
GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_4 loc_5=load_i64(memory_at_0,
loc_1+33288)while true do if load_i32_u8(memory_at_0,loc_1+37689)~=0 then break
end loc_5=bor_i64(band_i64(shr_i64(shl_i64(loc_5,i64_from_u32(32,0)),
i64_from_u32(63,0)),i64_from_u32(0,4294967295)),band_i64(loc_5,i64_from_u32(
4294967295,0)))break end FUNC_LIST[208](loc_4,loc_2)loc_6=load_i64(memory_at_0,
loc_4)store_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(load_i32(memory_at_0,
loc_4+8),3)),32768),loc_5)store_i64(memory_at_0,loc_1+33288,add_i64(loc_6,loc_3)
)store_i32_n8(memory_at_0,loc_0+8,23)GLOBAL_LIST[0].value=add_i32(loc_4,16)break
end end FUNC_LIST[208]=function(loc_0,loc_1)while true do store_i32(memory_at_0,
loc_0+8,band_i32(shr_u32(loc_1,7),31))store_i64(memory_at_0,loc_0,
extend_i64_i32(bor_i32(bor_i32(bor_i32(band_i32(shr_i32(loc_1,31),4293918720),
band_i32(loc_1,1044480)),band_i32(shr_u32(loc_1,9),2048)),band_i32(shr_u32(loc_1
,20),2046))))break end end FUNC_LIST[209]=function(loc_0,loc_1,loc_2,loc_3)while
true do loc_1=add_i32(loc_1,33024)store_f64(memory_at_0,add_i32(loc_1,band_i32(
shr_u32(loc_2,4),248)),(load_f64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(
loc_2,24),248)))-(load_f64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,12),
248)))*load_f64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,17),248))))))
store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[210]=function(loc_0,
loc_1,loc_2,loc_3)while true do store_f64(memory_at_0,add_i32(add_i32(loc_1,
band_i32(shr_u32(loc_2,4),248)),33024),convert_f64_i64(load_i64(memory_at_0,
add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,12),248)),32768))))store_i32_n8(
memory_at_0,loc_0+8,23)break end end FUNC_LIST[211]=function(loc_0,loc_1,loc_2,
loc_3)local reg_0 while true do reg_0=add_i32(add_i32(loc_1,band_i32(shr_u32(
loc_2,4),248)),32768)loc_1=add_i32(loc_1,33024)store_i64(memory_at_0,reg_0,
extend_i64_u32((if load_f64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,12)
,248)))<=load_f64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,17),248)))
then 1 else 0)))store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[212]
=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=0
local loc_7=0 local loc_8=i64_ZERO local desired while true do loc_4=sub_i32(
GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4 loc_5=add_i32(loc_1,33376)
loc_6=add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,12),248)),32768)FUNC_LIST[165
](add_i32(loc_4,16),loc_5,load_i64(memory_at_0,loc_6))while true do while true
do loc_7=load_i32_u8(memory_at_0,loc_4+24)if loc_7==23 then break end loc_8=
load_i64(memory_at_0,loc_4+16)desired=1 break end if desired then if desired==1
then desired=nil end break end loc_8=load_i64(memory_at_0,loc_4+16)FUNC_LIST[174
](loc_4,loc_5,load_i64(memory_at_0,loc_6),bor_i64(load_i64(memory_at_0,add_i32(
add_i32(loc_1,band_i32(shr_u32(loc_2,17),248)),32768)),loc_8))while true do
loc_7=load_i32_u8(memory_at_0,loc_4+8)if loc_7==23 then break end loc_8=
load_i64(memory_at_0,loc_4)desired=1 break end if desired then if desired==1
then desired=nil end break end store_i64(memory_at_0,add_i32(add_i32(loc_1,
shl_i32(band_i32(shr_u32(loc_2,7),31),3)),32768),loc_8)loc_7=23 break end
store_i32_n8(memory_at_0,loc_0+8,loc_7)store_i64(memory_at_0,loc_0,loc_8)
GLOBAL_LIST[0].value=add_i32(loc_4,32)break end end FUNC_LIST[213]=function(
loc_0,loc_1,loc_2,loc_3)while true do FUNC_LIST[120](1057436,40,1057476)error(
'out of code bounds')end end FUNC_LIST[214]=function(loc_0,loc_1,loc_2,loc_3)
while true do loc_1=add_i32(loc_1,33024)store_f64(memory_at_0,add_i32(loc_1,
band_i32(shr_u32(loc_2,4),248)),(load_f64(memory_at_0,add_i32(loc_1,band_i32(
shr_u32(loc_2,12),248)))-load_f64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(
loc_2,17),248)))))store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[
215]=function(loc_0,loc_1,loc_2,loc_3)while true do loc_1=add_i32(loc_1,32768)
store_i64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),
extend_i64_n32(shl_i64(load_i64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2
,12),248))),extend_i64_u32(band_i32(shr_u32(loc_2,20),31)))))store_i32_n8(
memory_at_0,loc_0+8,23)break end end FUNC_LIST[216]=function(loc_0,loc_1,loc_2,
loc_3)local reg_0 while true do reg_0=add_i32(add_i32(loc_1,band_i32(shr_u32(
loc_2,4),248)),32768)loc_1=add_i32(loc_1,33024)store_i64(memory_at_0,reg_0,
extend_i64_u32((if load_f64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,12)
,248)))<load_f64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,17),248)))then
1 else 0)))store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[217]=
function(loc_0,loc_1,loc_2,loc_3)while true do store_i32_n8(memory_at_0,loc_0+8,
23)break end end FUNC_LIST[218]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0
local loc_5=0 local loc_6=0 local loc_7=i64_ZERO local loc_8=i64_ZERO local
desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value
=loc_4 loc_5=shr_u32(loc_2,20)FUNC_LIST[219](add_i32(loc_4,16),loc_1,loc_5)while
true do while true do loc_6=load_i32_u8(memory_at_0,loc_4+24)if loc_6==23 then
break end loc_7=load_i64(memory_at_0,loc_4+16)desired=1 break end if desired
then if desired==1 then desired=nil end break end loc_6=band_i32(shr_u32(loc_2,7
),31)loc_7=load_i64(memory_at_0,loc_4+16)loc_8=load_i64(memory_at_0,add_i32(
add_i32(loc_1,band_i32(shr_u32(loc_2,12),248)),32768))while true do loc_2=
load_i32_u8(memory_at_0,loc_1+37689)if loc_2~=0 then break end loc_7=bor_i64(
band_i64(shr_i64(shl_i64(loc_7,i64_from_u32(32,0)),i64_from_u32(63,0)),
i64_from_u32(0,4294967295)),band_i64(loc_7,i64_from_u32(4294967295,0)))break end
if desired then if desired==1 then desired=nil end break end store_i64(
memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_6,3)),32768),loc_7)loc_7=bor_i64(
loc_7,loc_8)FUNC_LIST[220](loc_4,loc_1,loc_5,(if loc_2~=0 then loc_7 else
band_i64(loc_7,i64_from_u32(4294967295,0))))loc_7=load_i64(memory_at_0,loc_4)
loc_6=load_i32_u8(memory_at_0,loc_4+8)break end store_i32_n8(memory_at_0,loc_0+8
,loc_6)store_i64(memory_at_0,loc_0,loc_7)GLOBAL_LIST[0].value=add_i32(loc_4,32)
break end end FUNC_LIST[219]=function(loc_0,loc_1,loc_2)local loc_3=i64_ZERO
local reg_0 local desired while true do while true do reg_0=FUNC_LIST[317](loc_1
,loc_2)if reg_0~=0 then break end store_i32_n8(memory_at_0,loc_0+8,2)store_i64(
memory_at_0,loc_0,add_i64(load_i64(memory_at_0,loc_1+33288),i64_from_u32(
4294967292,4294967295)))desired=0 break end if desired then if desired==0 then
desired=nil end break end reg_0=FUNC_LIST[316](loc_1,loc_2)loc_3=reg_0
store_i32_n8(memory_at_0,loc_0+8,23)store_i64(memory_at_0,loc_0,loc_3)break end
end FUNC_LIST[220]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0
local loc_6=i64_ZERO local loc_7=i64_ZERO local loc_8=i64_ZERO local reg_0 local
desired local br_map={}while true do loc_4=sub_i32(GLOBAL_LIST[0].value,48)
GLOBAL_LIST[0].value=loc_4 while true do while true do reg_0=FUNC_LIST[317](
loc_1,loc_2)if reg_0~=0 then break end loc_3=add_i64(load_i64(memory_at_0,loc_1+
33288),i64_from_u32(4294967292,4294967295))loc_5=2 desired=1 break end if
desired then if desired==1 then desired=nil end break end FUNC_LIST[315](loc_1,
loc_2,loc_3)loc_5=23 while true do if band_i32(loc_2,65535)~=384 then break end
while true do while true do if load_i32_u8(memory_at_0,loc_1+37689)~=0 then
break end loc_2=shr_u32(wrap_i32_i64(loc_3),31)loc_6=i64_from_u32(4194303,0)
desired=3 break end if desired then if desired==3 then desired=nil end break end
loc_6=i64_from_u32(4294967295,4095)while true do loc_7=shr_u64(loc_3,
i64_from_u32(60,0))loc_8=add_i64(loc_7,i64_from_u32(4294967288,4294967295))if
le_u64(loc_8,i64_ONE)then break end loc_2=0 if eq_i64(loc_7,i64_ZERO)then
desired=3 break end store_i64(memory_at_0,add_i32(loc_4,20),i64_ONE)store_i32(
memory_at_0,loc_4+12,2)store_i32(memory_at_0,loc_4+8,1056012)store_i32(
memory_at_0,loc_4+36,31)store_i64(memory_at_0,loc_4+40,loc_7)store_i32(
memory_at_0,loc_4+16,add_i32(loc_4,32))store_i32(memory_at_0,loc_4+32,add_i32(
loc_4,40))FUNC_LIST[445](add_i32(loc_4,8))FUNC_LIST[120](1052280,14,1056028)
error('out of code bounds')end if desired then if desired==3 then desired=nil
end break end while true do while true do if not br_map[1]then br_map[1]=(
function()return{[0]=1,0}end)()end temp=br_map[1][wrap_i32_i64(loc_8)]or 1 if
temp<1 then break else desired=4 break end end if desired then if desired==4
then desired=nil end break end loc_2=3 desired=3 break end if desired then if
desired==3 then desired=nil end break end loc_2=2 break end if desired then if
desired==2 then desired=nil end break end store_i64(memory_at_0,add_i32(loc_1,
33416),band_i64(loc_6,loc_3))store_i32_n8(memory_at_0,add_i32(loc_1,37680),loc_2
)break end if desired then if desired==1 then desired=nil end break end break
end store_i32_n8(memory_at_0,loc_0+8,loc_5)store_i64(memory_at_0,loc_0,loc_3)
GLOBAL_LIST[0].value=add_i32(loc_4,48)break end end FUNC_LIST[221]=function(
loc_0,loc_1,loc_2,loc_3)while true do loc_1=add_i32(loc_1,33024)store_i64(
memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),bor_i64(band_i64(
load_i64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,17),248))),
i64_from_u32(0,2147483648)),band_i64(load_i64(memory_at_0,add_i32(loc_1,
band_i32(shr_u32(loc_2,12),248))),i64_from_u32(4294967295,2147483647))))
store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[222]=function(loc_0,
loc_1,loc_2,loc_3)local loc_4=0 local loc_5=i64_ZERO local loc_6=0 local loc_7=
i64_ZERO local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,16)
GLOBAL_LIST[0].value=loc_4 FUNC_LIST[184](loc_4,loc_2)while true do while true
do loc_2=load_i32(memory_at_0,loc_4+8)if loc_2>31 then break end loc_5=load_i64(
memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768))while true do loc_6=
load_i32_u8(memory_at_0,loc_1+37689)if loc_6~=0 then break end loc_5=bor_i64(
band_i64(shr_i64(shl_i64(loc_5,i64_from_u32(32,0)),i64_from_u32(63,0)),
i64_from_u32(0,4294967295)),band_i64(loc_5,i64_from_u32(4294967295,0)))break end
if desired then if desired==2 then desired=nil end break end loc_2=load_i32(
memory_at_0,loc_4+12)if loc_2>=32 then desired=1 break end loc_7=load_i64(
memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768))while true do if
loc_6~=0 then break end loc_7=bor_i64(band_i64(shr_i64(shl_i64(loc_7,
i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,4294967295)),band_i64(
loc_7,i64_from_u32(4294967295,0)))break end if desired then if desired==2 then
desired=nil end break end while true do if ne_i64(loc_5,loc_7)then break end
store_i64(memory_at_0,loc_1+33288,add_i64(load_i64(memory_at_0,loc_4),loc_3))
break end if desired then if desired==2 then desired=nil end break end
store_i32_n8(memory_at_0,loc_0+8,23)GLOBAL_LIST[0].value=add_i32(loc_4,16)
desired=0 break end if desired then if desired==1 then desired=nil end break end
FUNC_LIST[492](loc_2,32,1056548)error('out of code bounds')end if desired then
if desired==0 then desired=nil end break end FUNC_LIST[492](loc_2,32,1056564)
error('out of code bounds')end end FUNC_LIST[223]=function(loc_0,loc_1,loc_2,
loc_3)local loc_4=0 local loc_5=0 local loc_6=i64_ZERO local loc_7=0 while true
do loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4 loc_5=
shr_u32(loc_2,20)FUNC_LIST[219](add_i32(loc_4,16),loc_1,loc_5)loc_6=load_i64(
memory_at_0,loc_4+16)while true do loc_7=load_i32_u8(memory_at_0,loc_4+24)if
loc_7~=23 then break end loc_7=band_i32(shr_u32(loc_2,7),31)loc_2=band_i32(
shr_u32(loc_2,15),31)while true do if load_i32_u8(memory_at_0,loc_1+37689)~=0
then break end loc_6=bor_i64(band_i64(shr_i64(shl_i64(loc_6,i64_from_u32(32,0)),
i64_from_u32(63,0)),i64_from_u32(0,4294967295)),band_i64(loc_6,i64_from_u32(
4294967295,0)))break end store_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(
loc_7,3)),32768),loc_6)FUNC_LIST[220](loc_4,loc_1,loc_5,extend_i64_u32(loc_2))
loc_6=load_i64(memory_at_0,loc_4)loc_7=load_i32_u8(memory_at_0,loc_4+8)break end
store_i32_n8(memory_at_0,loc_0+8,loc_7)store_i64(memory_at_0,loc_0,loc_6)
GLOBAL_LIST[0].value=add_i32(loc_4,32)break end end FUNC_LIST[224]=function(
loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=i64_ZERO local desired while
true do loc_4=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_4
FUNC_LIST[189](loc_4,loc_2)while true do while true do loc_2=load_i32(
memory_at_0,loc_4+12)if loc_2>31 then break end loc_5=add_i64(load_i64(
memory_at_0,loc_4),load_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),
32768)))while true do if load_i32_u8(memory_at_0,loc_1+37689)~=0 then break end
loc_5=bor_i64(band_i64(shr_i64(shl_i64(loc_5,i64_from_u32(32,0)),i64_from_u32(63
,0)),i64_from_u32(0,4294967295)),band_i64(loc_5,i64_from_u32(4294967295,0)))
break end if desired then if desired==2 then desired=nil end break end loc_2=
load_i32(memory_at_0,loc_4+8)if loc_2>=32 then desired=1 break end store_i64(
memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768),loc_5)store_i32_n8(
memory_at_0,loc_0+8,23)GLOBAL_LIST[0].value=add_i32(loc_4,16)desired=0 break end
if desired then if desired==1 then desired=nil end break end FUNC_LIST[492](
loc_2,32,1056452)error('out of code bounds')end if desired then if desired==0
then desired=nil end break end FUNC_LIST[492](loc_2,32,1056468)error(
'out of code bounds')end end FUNC_LIST[225]=function(loc_0,loc_1,loc_2,loc_3)
local loc_4=0 local loc_5=i64_ZERO while true do loc_4=load_i32_u8(memory_at_0,
loc_1+37689)loc_5=shr_i64(load_i64(memory_at_0,add_i32(add_i32(loc_1,band_i32(
shr_u32(loc_2,12),248)),32768)),extend_i64_u32(band_i32((if loc_4~=0 then 63
else 31),shr_u32(loc_2,20))))while true do if loc_4~=0 then break end loc_5=
bor_i64(band_i64(shr_i64(shl_i64(loc_5,i64_from_u32(32,0)),i64_from_u32(63,0)),
i64_from_u32(0,4294967295)),band_i64(loc_5,i64_from_u32(4294967295,0)))break end
store_i64(memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),
32768),loc_5)store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[226]=
function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=0 local
loc_7=0 local loc_8=i64_ZERO local loc_9=i64_ZERO local desired while true do
loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4 loc_5=add_i32(
loc_1,33376)loc_6=add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,12),248)),32768)
FUNC_LIST[165](add_i32(loc_4,16),loc_5,load_i64(memory_at_0,loc_6))while true do
while true do loc_7=load_i32_u8(memory_at_0,loc_4+24)if loc_7==23 then break end
loc_8=load_i64(memory_at_0,loc_4+16)desired=1 break end if desired then if
desired==1 then desired=nil end break end loc_9=load_i64(memory_at_0,add_i32(
add_i32(loc_1,band_i32(shr_u32(loc_2,17),248)),32768))loc_8=load_i64(memory_at_0
,loc_4+16)FUNC_LIST[174](loc_4,loc_5,load_i64(memory_at_0,loc_6),(if gt_u64(
loc_9,loc_8)then loc_9 else loc_8))while true do loc_7=load_i32_u8(memory_at_0,
loc_4+8)if loc_7==23 then break end loc_8=load_i64(memory_at_0,loc_4)desired=1
break end if desired then if desired==1 then desired=nil end break end
store_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(band_i32(shr_u32(loc_2,7),31
),3)),32768),loc_8)loc_7=23 break end store_i32_n8(memory_at_0,loc_0+8,loc_7)
store_i64(memory_at_0,loc_0,loc_8)GLOBAL_LIST[0].value=add_i32(loc_4,32)break
end end FUNC_LIST[227]=function(loc_0,loc_1,loc_2,loc_3)while true do loc_1=
add_i32(loc_1,33024)store_f64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,4
),248)),promote_f64_f32(demote_f32_f64(load_f64(memory_at_0,add_i32(loc_1,
band_i32(shr_u32(loc_2,12),248))))))store_i32_n8(memory_at_0,loc_0+8,23)break
end end FUNC_LIST[228]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local
loc_5=0 local loc_6=i64_ZERO local reg_0 local reg_1 local desired while true do
loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4 FUNC_LIST[186](
add_i32(loc_4,16),loc_2)while true do while true do loc_2=load_i32(memory_at_0,
loc_4+24)if loc_2>31 then break end loc_5=load_i32(memory_at_0,loc_4+28)if loc_5
>=32 then desired=1 break end reg_1=add_i32(loc_1,33376)loc_1=add_i32(loc_1,
32768)FUNC_LIST[172](loc_4,reg_1,add_i64(load_i64(memory_at_0,add_i32(loc_1,
shl_i32(loc_2,3))),load_i64(memory_at_0,loc_4+16)),load_i32_u16(memory_at_0,
add_i32(loc_1,shl_i32(loc_5,3))))loc_6=load_i64(memory_at_0,loc_4)store_i32_n8(
memory_at_0,loc_0+8,load_i32_u8(memory_at_0,loc_4+8))store_i64(memory_at_0,loc_0
,loc_6)GLOBAL_LIST[0].value=add_i32(loc_4,32)desired=0 break end if desired then
if desired==1 then desired=nil end break end FUNC_LIST[492](loc_2,32,1057308)
error('out of code bounds')end if desired then if desired==0 then desired=nil
end break end FUNC_LIST[492](loc_5,32,1057324)error('out of code bounds')end end
FUNC_LIST[229]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local desired
while true do while true do while true do loc_4=load_f64(memory_at_0,add_i32(
add_i32(loc_1,band_i32(shr_u32(loc_2,17),248)),33024))if loc_4==0e0 then break
end loc_4=(load_f64(memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,12)
,248)),33024))/loc_4)desired=1 break end if desired then if desired==1 then
desired=nil end break end store_i64(memory_at_0,loc_1+24,bor_i64(load_i64(
memory_at_0,loc_1+24),i64_from_u32(8,0)))loc_4=math.huge break end store_f64(
memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),33024),loc_4)
store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[230]=function(loc_0,
loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=i64_ZERO local desired
while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4
FUNC_LIST[189](loc_4,loc_2)while true do loc_2=load_i32(memory_at_0,loc_4+12)if
loc_2>31 then break end FUNC_LIST[165](add_i32(loc_4,16),add_i32(loc_1,33376),
add_i64(load_i64(memory_at_0,loc_4),load_i64(memory_at_0,add_i32(add_i32(loc_1,
shl_i32(loc_2,3)),32768))))while true do while true do loc_2=load_i32_u8(
memory_at_0,loc_4+24)if loc_2~=23 then break end while true do loc_5=load_i32(
memory_at_0,loc_4+8)if loc_5>=32 then break end store_i64(memory_at_0,add_i32(
add_i32(loc_1,shl_i32(loc_5,3)),32768),load_i64(memory_at_0,loc_4+16))desired=2
break end if desired then if desired==3 then desired=nil end break end FUNC_LIST
[492](loc_5,32,1057052)error('out of code bounds')end if desired then if desired
==2 then desired=nil end break end loc_6=load_i64(memory_at_0,loc_4+16)break end
if desired then if desired==1 then desired=nil end break end store_i32_n8(
memory_at_0,loc_0+8,loc_2)store_i64(memory_at_0,loc_0,loc_6)GLOBAL_LIST[0].value
=add_i32(loc_4,32)desired=0 break end if desired then if desired==0 then desired
=nil end break end FUNC_LIST[492](loc_2,32,1057036)error('out of code bounds')
end end FUNC_LIST[231]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local
loc_5=i64_ZERO local loc_6=i64_ZERO local loc_7=0 local desired while true do
loc_4=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_4 loc_5=i64_ONE
while true do while true do while true do if load_i32_u8(memory_at_0,loc_1+37691
)==0 then break end loc_6=load_i64(memory_at_0,loc_1+33296)if ne_i64(loc_6,
load_i64(memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,12),248)),
32768)))then break end FUNC_LIST[174](loc_4,add_i32(loc_1,33376),loc_6,load_i64(
memory_at_0,add_i32(add_i32(loc_1,shl_i32(band_i32(shr_u32(loc_2,20),31),3)),
32768)))loc_7=load_i32_u8(memory_at_0,loc_4+8)if loc_7~=23 then desired=2 break
end store_i32_n8(memory_at_0,loc_1+37691,0)loc_5=i64_ZERO break end if desired
then if desired==2 then desired=nil end break end store_i64(memory_at_0,add_i32(
add_i32(loc_1,shl_i32(band_i32(shr_u32(loc_2,7),31),3)),32768),loc_5)loc_7=23
desired=1 break end if desired then if desired==1 then desired=nil end break end
loc_5=load_i64(memory_at_0,loc_4)break end store_i32_n8(memory_at_0,loc_0+8,
loc_7)store_i64(memory_at_0,loc_0,loc_5)GLOBAL_LIST[0].value=add_i32(loc_4,16)
break end end FUNC_LIST[232]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0
local loc_5=0 local loc_6=i64_ZERO local desired while true do loc_4=sub_i32(
GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4 FUNC_LIST[186](add_i32(loc_4,
16),loc_2)while true do while true do loc_2=load_i32(memory_at_0,loc_4+24)if
loc_2>31 then break end loc_5=load_i32(memory_at_0,loc_4+28)if loc_5>=32 then
desired=1 break end FUNC_LIST[173](loc_4,add_i32(loc_1,33376),add_i64(load_i64(
memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768)),load_i64(memory_at_0
,loc_4+16)),load_i32(memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_5,3)),33024))
)loc_6=load_i64(memory_at_0,loc_4)store_i32_n8(memory_at_0,loc_0+8,load_i32_u8(
memory_at_0,loc_4+8))store_i64(memory_at_0,loc_0,loc_6)GLOBAL_LIST[0].value=
add_i32(loc_4,32)desired=0 break end if desired then if desired==1 then desired=
nil end break end FUNC_LIST[492](loc_2,32,1056876)error('out of code bounds')end
if desired then if desired==0 then desired=nil end break end FUNC_LIST[492](
loc_5,32,1056892)error('out of code bounds')end end FUNC_LIST[233]=function(
loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=0 local loc_7=
i64_ZERO local loc_8=i64_ZERO local desired while true do loc_4=sub_i32(
GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4 loc_5=shr_u32(loc_2,20)
FUNC_LIST[219](add_i32(loc_4,16),loc_1,loc_5)while true do while true do loc_6=
load_i32_u8(memory_at_0,loc_4+24)if loc_6==23 then break end loc_7=load_i64(
memory_at_0,loc_4+16)desired=1 break end if desired then if desired==1 then
desired=nil end break end loc_6=band_i32(shr_u32(loc_2,7),31)loc_7=load_i64(
memory_at_0,loc_4+16)loc_8=load_i64(memory_at_0,add_i32(add_i32(loc_1,band_i32(
shr_u32(loc_2,12),248)),32768))while true do loc_2=load_i32_u8(memory_at_0,loc_1
+37689)if loc_2~=0 then break end loc_7=bor_i64(band_i64(shr_i64(shl_i64(loc_7,
i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,4294967295)),band_i64(
loc_7,i64_from_u32(4294967295,0)))break end if desired then if desired==1 then
desired=nil end break end store_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(
loc_6,3)),32768),loc_7)FUNC_LIST[220](loc_4,loc_1,loc_5,(if loc_2~=0 then loc_8
else band_i64(loc_8,i64_from_u32(4294967295,0))))loc_7=load_i64(memory_at_0,
loc_4)loc_6=load_i32_u8(memory_at_0,loc_4+8)break end store_i32_n8(memory_at_0,
loc_0+8,loc_6)store_i64(memory_at_0,loc_0,loc_7)GLOBAL_LIST[0].value=add_i32(
loc_4,32)break end end FUNC_LIST[234]=function(loc_0,loc_1,loc_2,loc_3)local
loc_4=0 local loc_5=i64_ZERO local desired while true do loc_4=sub_i32(
GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_4 FUNC_LIST[189](loc_4,loc_2)
while true do while true do loc_2=load_i32(memory_at_0,loc_4+12)if loc_2>31 then
break end loc_5=bxor_i64(load_i64(memory_at_0,loc_4),load_i64(memory_at_0,
add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768)))while true do if load_i32_u8(
memory_at_0,loc_1+37689)~=0 then break end loc_5=bor_i64(band_i64(shr_i64(
shl_i64(loc_5,i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,4294967295)
),band_i64(loc_5,i64_from_u32(4294967295,0)))break end if desired then if
desired==2 then desired=nil end break end loc_2=load_i32(memory_at_0,loc_4+8)if
loc_2>=32 then desired=1 break end store_i64(memory_at_0,add_i32(add_i32(loc_1,
shl_i32(loc_2,3)),32768),loc_5)store_i32_n8(memory_at_0,loc_0+8,23)GLOBAL_LIST[0
].value=add_i32(loc_4,16)desired=0 break end if desired then if desired==1 then
desired=nil end break end FUNC_LIST[492](loc_2,32,1057492)error(
'out of code bounds')end if desired then if desired==0 then desired=nil end
break end FUNC_LIST[492](loc_2,32,1057508)error('out of code bounds')end end
FUNC_LIST[235]=function(loc_0,loc_1,loc_2,loc_3)while true do loc_1=add_i32(
loc_1,32768)store_i64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),
extend_i64_i32(shr_u32(load_i32(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2
,12),248))),shr_u32(loc_2,20))))store_i32_n8(memory_at_0,loc_0+8,23)break end
end FUNC_LIST[236]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=
i64_ZERO while true do loc_4=add_i32(loc_1,32768)loc_5=bxor_i64(load_i64(
memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2,17),248))),load_i64(memory_at_0
,add_i32(loc_4,band_i32(shr_u32(loc_2,12),248))))while true do if load_i32_u8(
memory_at_0,loc_1+37689)~=0 then break end loc_5=bor_i64(band_i64(shr_i64(
shl_i64(loc_5,i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,4294967295)
),band_i64(loc_5,i64_from_u32(4294967295,0)))break end store_i64(memory_at_0,
add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),32768),loc_5)store_i32_n8(
memory_at_0,loc_0+8,23)break end end FUNC_LIST[237]=function(loc_0,loc_1,loc_2,
loc_3)local loc_4=0 local loc_5=0 local loc_6=0 local loc_7=i64_ZERO local reg_0
local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0]
.value=loc_4 FUNC_LIST[184](loc_4,loc_2)while true do while true do loc_2=
load_i32(memory_at_0,loc_4+8)if loc_2>31 then break end loc_5=load_i32(
memory_at_0,loc_4+12)if loc_5>=32 then desired=1 break end while true do loc_6=
add_i32(loc_1,32768)loc_7=load_i64(memory_at_0,add_i32(loc_6,shl_i32(loc_2,3)))
loc_2=load_i32_u8(memory_at_0,loc_1+37689)reg_0=(if loc_2~=0 then loc_7 else
band_i64(loc_7,i64_from_u32(4294967295,0)))loc_7=load_i64(memory_at_0,add_i32(
loc_6,shl_i32(loc_5,3)))if ge_u64(reg_0,(if loc_2~=0 then loc_7 else band_i64(
loc_7,i64_from_u32(4294967295,0))))then break end store_i64(memory_at_0,loc_1+
33288,add_i64(load_i64(memory_at_0,loc_4),loc_3))break end if desired then if
desired==2 then desired=nil end break end store_i32_n8(memory_at_0,loc_0+8,23)
GLOBAL_LIST[0].value=add_i32(loc_4,16)desired=0 break end if desired then if
desired==1 then desired=nil end break end FUNC_LIST[492](loc_2,32,1056676)error(
'out of code bounds')end if desired then if desired==0 then desired=nil end
break end FUNC_LIST[492](loc_5,32,1056692)error('out of code bounds')end end
FUNC_LIST[238]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=
i64_ZERO local loc_6=0 local loc_7=i64_ZERO local desired while true do loc_4=
sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_4 FUNC_LIST[184](loc_4,
loc_2)while true do while true do loc_2=load_i32(memory_at_0,loc_4+8)if loc_2>31
then break end loc_5=load_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)
),32768))while true do loc_6=load_i32_u8(memory_at_0,loc_1+37689)if loc_6~=0
then break end loc_5=bor_i64(band_i64(shr_i64(shl_i64(loc_5,i64_from_u32(32,0)),
i64_from_u32(63,0)),i64_from_u32(0,4294967295)),band_i64(loc_5,i64_from_u32(
4294967295,0)))break end if desired then if desired==2 then desired=nil end
break end loc_2=load_i32(memory_at_0,loc_4+12)if loc_2>=32 then desired=1 break
end loc_7=load_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768))
while true do if loc_6~=0 then break end loc_7=bor_i64(band_i64(shr_i64(shl_i64(
loc_7,i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,4294967295)),
band_i64(loc_7,i64_from_u32(4294967295,0)))break end if desired then if desired
==2 then desired=nil end break end while true do if lt_i64(loc_5,loc_7)then
break end store_i64(memory_at_0,loc_1+33288,add_i64(load_i64(memory_at_0,loc_4),
loc_3))break end if desired then if desired==2 then desired=nil end break end
store_i32_n8(memory_at_0,loc_0+8,23)GLOBAL_LIST[0].value=add_i32(loc_4,16)
desired=0 break end if desired then if desired==1 then desired=nil end break end
FUNC_LIST[492](loc_2,32,1056580)error('out of code bounds')end if desired then
if desired==0 then desired=nil end break end FUNC_LIST[492](loc_2,32,1056596)
error('out of code bounds')end end FUNC_LIST[239]=function(loc_0,loc_1,loc_2,
loc_3)local loc_4=0 local loc_5=i64_ZERO local loc_6=i64_ZERO local loc_7=
i64_ZERO local desired while true do loc_4=add_i32(loc_1,32768)loc_5=load_i64(
memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2,12),248)))loc_6=band_i64(loc_5,
i64_from_u32(4294967295,0))while true do while true do loc_7=load_i64(
memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2,17),248)))loc_4=load_i32_u8(
memory_at_0,loc_1+37689)loc_7=(if loc_4~=0 then loc_7 else band_i64(loc_7,
i64_from_u32(4294967295,0)))if ne_i64(loc_7,i64_ZERO)then break end if loc_4~=0
then desired=1 break end loc_5=bor_i64(band_i64(shr_i64(shl_i64(loc_5,
i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,4294967295)),loc_6)
desired=1 break end if desired then if desired==1 then desired=nil end break end
loc_5=rem_u64((if loc_4~=0 then loc_5 else loc_6),loc_7)if loc_4~=0 then break
end loc_5=bor_i64(band_i64(shr_i64(shl_i64(loc_5,i64_from_u32(32,0)),
i64_from_u32(63,0)),i64_from_u32(0,4294967295)),band_i64(loc_5,i64_from_u32(
4294967295,0)))break end store_i64(memory_at_0,add_i32(add_i32(loc_1,band_i32(
shr_u32(loc_2,4),248)),32768),loc_5)store_i32_n8(memory_at_0,loc_0+8,23)break
end end FUNC_LIST[240]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local
loc_5=i64_ZERO local reg_0 local reg_1 while true do loc_4=add_i32(loc_1,32768)
loc_5=load_i64(memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2,12),248)))loc_1=
load_i32_u8(memory_at_0,loc_1+37689)reg_1=(if loc_1~=0 then loc_5 else band_i64(
loc_5,i64_from_u32(4294967295,0)))loc_5=load_i64(memory_at_0,add_i32(loc_4,
band_i32(shr_u32(loc_2,17),248)))store_i64(memory_at_0,add_i32(loc_4,band_i32(
shr_u32(loc_2,4),248)),extend_i64_u32((if lt_u64(reg_1,(if loc_1~=0 then loc_5
else band_i64(loc_5,i64_from_u32(4294967295,0))))then 1 else 0)))store_i32_n8(
memory_at_0,loc_0+8,23)break end end FUNC_LIST[241]=function(loc_0,loc_1,loc_2,
loc_3)local loc_4=0 local loc_5=i64_ZERO local loc_6=0 while true do loc_4=
add_i32(loc_1,32768)loc_5=load_i64(memory_at_0,add_i32(loc_4,band_i32(shr_u32(
loc_2,12),248)))loc_6=load_i32_u8(memory_at_0,loc_1+37689)loc_5=shr_u64((if
loc_6~=0 then loc_5 else band_i64(loc_5,i64_from_u32(4294967295,0))),load_i64(
memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2,17),248))))while true do if
loc_6~=0 then break end loc_5=bor_i64(band_i64(shr_i64(shl_i64(loc_5,
i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,4294967295)),band_i64(
loc_5,i64_from_u32(4294967295,0)))break end store_i64(memory_at_0,add_i32(
add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),32768),loc_5)store_i32_n8(
memory_at_0,loc_0+8,23)break end end FUNC_LIST[242]=function(loc_0,loc_1,loc_2,
loc_3)while true do loc_1=add_i32(loc_1,33024)store_f64(memory_at_0,add_i32(
loc_1,band_i32(shr_u32(loc_2,4),248)),promote_f64_f32(load_f32(memory_at_0,
add_i32(loc_1,band_i32(shr_u32(loc_2,12),248)))))store_i32_n8(memory_at_0,loc_0+
8,23)break end end FUNC_LIST[243]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0
local loc_5=i64_ZERO while true do loc_4=add_i32(loc_1,32768)loc_5=mul_i64(
load_i64(memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2,17),248))),load_i64(
memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2,12),248))))while true do if
load_i32_u8(memory_at_0,loc_1+37689)~=0 then break end loc_5=bor_i64(band_i64(
shr_i64(shl_i64(loc_5,i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,
4294967295)),band_i64(loc_5,i64_from_u32(4294967295,0)))break end store_i64(
memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),32768),loc_5)
store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[244]=function(loc_0,
loc_1,loc_2,loc_3)local loc_4=0 while true do loc_4=sub_i32(GLOBAL_LIST[0].value
,16)GLOBAL_LIST[0].value=loc_4 FUNC_LIST[204](loc_4,loc_2)loc_3=add_i64(
load_i64(memory_at_0,loc_4),loc_3)loc_2=load_i32(memory_at_0,loc_4+8)while true
do if load_i32_u8(memory_at_0,loc_1+37689)~=0 then break end loc_3=bor_i64(
band_i64(shr_i64(shl_i64(loc_3,i64_from_u32(32,0)),i64_from_u32(63,0)),
i64_from_u32(0,4294967295)),band_i64(loc_3,i64_from_u32(4294967295,0)))break end
store_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768),loc_3)
store_i32_n8(memory_at_0,loc_0+8,23)GLOBAL_LIST[0].value=add_i32(loc_4,16)break
end end FUNC_LIST[245]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local
loc_5=0 local loc_6=0 local loc_7=i64_ZERO local reg_0 local reg_1 local desired
while true do loc_4=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_4
FUNC_LIST[189](loc_4,loc_2)while true do while true do loc_2=load_i32(
memory_at_0,loc_4+12)if loc_2>31 then break end loc_5=load_i32(memory_at_0,loc_4
+8)if loc_5>=32 then desired=1 break end loc_6=add_i32(loc_1,32768)loc_7=
load_i64(memory_at_0,add_i32(loc_6,shl_i32(loc_2,3)))loc_1=load_i32_u8(
memory_at_0,loc_1+37689)reg_1=(if loc_1~=0 then loc_7 else band_i64(loc_7,
i64_from_u32(4294967295,0)))loc_7=load_i64(memory_at_0,loc_4)store_i64(
memory_at_0,add_i32(loc_6,shl_i32(loc_5,3)),extend_i64_u32((if lt_u64(reg_1,(if
loc_1~=0 then loc_7 else band_i64(loc_7,i64_from_u32(4294967295,0))))then 1 else
0)))store_i32_n8(memory_at_0,loc_0+8,23)GLOBAL_LIST[0].value=add_i32(loc_4,16)
desired=0 break end if desired then if desired==1 then desired=nil end break end
FUNC_LIST[492](loc_2,32,1057372)error('out of code bounds')end if desired then
if desired==0 then desired=nil end break end FUNC_LIST[492](loc_5,32,1057388)
error('out of code bounds')end end FUNC_LIST[246]=function(loc_0,loc_1,loc_2,
loc_3)local loc_4=0 local loc_5=0 local loc_6=i64_ZERO local desired while true
do loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4 FUNC_LIST[
189](loc_4,loc_2)while true do loc_2=load_i32(memory_at_0,loc_4+12)if loc_2>31
then break end FUNC_LIST[164](add_i32(loc_4,16),add_i32(loc_1,33376),add_i64(
load_i64(memory_at_0,loc_4),load_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(
loc_2,3)),32768))))while true do while true do loc_2=load_i32_u8(memory_at_0,
loc_4+24)if loc_2~=23 then break end while true do loc_5=load_i32(memory_at_0,
loc_4+8)if loc_5>=32 then break end store_i64(memory_at_0,add_i32(add_i32(loc_1,
shl_i32(loc_5,3)),32768),load_i64_i32(memory_at_0,loc_4+16))desired=2 break end
if desired then if desired==3 then desired=nil end break end FUNC_LIST[492](
loc_5,32,1057148)error('out of code bounds')end if desired then if desired==2
then desired=nil end break end loc_6=load_i64(memory_at_0,loc_4+16)break end if
desired then if desired==1 then desired=nil end break end store_i32_n8(
memory_at_0,loc_0+8,loc_2)store_i64(memory_at_0,loc_0,loc_6)GLOBAL_LIST[0].value
=add_i32(loc_4,32)desired=0 break end if desired then if desired==0 then desired
=nil end break end FUNC_LIST[492](loc_2,32,1057132)error('out of code bounds')
end end FUNC_LIST[247]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local
loc_5=0 local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,16)
GLOBAL_LIST[0].value=loc_4 FUNC_LIST[189](loc_4,loc_2)while true do while true
do loc_2=load_i32(memory_at_0,loc_4+12)if loc_2>31 then break end loc_5=
load_i32(memory_at_0,loc_4+8)if loc_5>=32 then desired=1 break end loc_1=
add_i32(loc_1,32768)store_i64(memory_at_0,add_i32(loc_1,shl_i32(loc_5,3)),
extend_i64_u32((if lt_i64(load_i64(memory_at_0,add_i32(loc_1,shl_i32(loc_2,3))),
load_i64(memory_at_0,loc_4))then 1 else 0)))store_i32_n8(memory_at_0,loc_0+8,23)
GLOBAL_LIST[0].value=add_i32(loc_4,16)desired=0 break end if desired then if
desired==1 then desired=nil end break end FUNC_LIST[492](loc_2,32,1057340)error(
'out of code bounds')end if desired then if desired==0 then desired=nil end
break end FUNC_LIST[492](loc_5,32,1057356)error('out of code bounds')end end
FUNC_LIST[248]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=
i64_ZERO local loc_6=i64_ZERO local loc_7=i64_ZERO local desired while true do
while true do while true do loc_4=add_i32(loc_1,32768)loc_5=load_i64(memory_at_0
,add_i32(loc_4,band_i32(shr_u32(loc_2,17),248)))if(if eq_i64(loc_5,i64_ZERO)then
1 else 0)==0 then break end loc_6=i64_from_u32(4294967295,4294967295)desired=1
break end if desired then if desired==1 then desired=nil end break end loc_6=
load_i64(memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2,12),248)))loc_4=
load_i32_u8(memory_at_0,loc_1+37689)loc_7=i64_from_u32(0,2147483648)while true
do if ne_i64(loc_5,i64_from_u32(4294967295,4294967295))then break end if eq_i64(
loc_6,(if loc_4~=0 then i64_from_u32(0,2147483648)else i64_from_u32(2147483648,
4294967295)))then desired=1 break end break end if desired then if desired==1
then desired=nil end break end while true do while true do if ne_i64(loc_6,
i64_from_u32(0,2147483648))then break end if eq_i64(loc_5,i64_from_u32(
4294967295,4294967295))then desired=2 break end break end if desired then if
desired==2 then desired=nil end break end loc_7=div_i64(loc_6,loc_5)break end if
desired then if desired==1 then desired=nil end break end while true do if loc_4
==0 then break end loc_6=loc_7 desired=1 break end if desired then if desired==1
then desired=nil end break end loc_6=bor_i64(band_i64(shr_i64(shl_i64(loc_7,
i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,4294967295)),band_i64(
loc_7,i64_from_u32(4294967295,0)))break end store_i64(memory_at_0,add_i32(
add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),32768),loc_6)store_i32_n8(
memory_at_0,loc_0+8,23)break end end FUNC_LIST[249]=function(loc_0,loc_1,loc_2,
loc_3)local loc_4=0 local loc_5=i64_ZERO while true do loc_4=add_i32(loc_1,32768
)loc_5=shr_i64(load_i64(memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2,12),248
))),load_i64(memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2,17),248))))while
true do if load_i32_u8(memory_at_0,loc_1+37689)~=0 then break end loc_5=bor_i64(
band_i64(shr_i64(shl_i64(loc_5,i64_from_u32(32,0)),i64_from_u32(63,0)),
i64_from_u32(0,4294967295)),band_i64(loc_5,i64_from_u32(4294967295,0)))break end
store_i64(memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),
32768),loc_5)store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[250]=
function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=i64_ZERO while true
do loc_4=add_i32(loc_1,32768)loc_5=band_i64(load_i64(memory_at_0,add_i32(loc_4,
band_i32(shr_u32(loc_2,17),248))),load_i64(memory_at_0,add_i32(loc_4,band_i32(
shr_u32(loc_2,12),248))))while true do if load_i32_u8(memory_at_0,loc_1+37689)~=
0 then break end loc_5=bor_i64(band_i64(shr_i64(shl_i64(loc_5,i64_from_u32(32,0)
),i64_from_u32(63,0)),i64_from_u32(0,4294967295)),band_i64(loc_5,i64_from_u32(
4294967295,0)))break end store_i64(memory_at_0,add_i32(add_i32(loc_1,band_i32(
shr_u32(loc_2,4),248)),32768),loc_5)store_i32_n8(memory_at_0,loc_0+8,23)break
end end FUNC_LIST[251]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local
loc_5=0 local loc_6=0 local loc_7=0 local loc_8=i64_ZERO local desired while
true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4 loc_5=
add_i32(loc_1,33376)loc_6=add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,12),248))
,32768)FUNC_LIST[165](add_i32(loc_4,16),loc_5,load_i64(memory_at_0,loc_6))while
true do while true do loc_7=load_i32_u8(memory_at_0,loc_4+24)if loc_7==23 then
break end loc_8=load_i64(memory_at_0,loc_4+16)desired=1 break end if desired
then if desired==1 then desired=nil end break end loc_8=load_i64(memory_at_0,
loc_4+16)FUNC_LIST[174](loc_4,loc_5,load_i64(memory_at_0,loc_6),band_i64(
load_i64(memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,17),248)),
32768)),loc_8))while true do loc_7=load_i32_u8(memory_at_0,loc_4+8)if loc_7==23
then break end loc_8=load_i64(memory_at_0,loc_4)desired=1 break end if desired
then if desired==1 then desired=nil end break end store_i64(memory_at_0,add_i32(
add_i32(loc_1,shl_i32(band_i32(shr_u32(loc_2,7),31),3)),32768),loc_8)loc_7=23
break end store_i32_n8(memory_at_0,loc_0+8,loc_7)store_i64(memory_at_0,loc_0,
loc_8)GLOBAL_LIST[0].value=add_i32(loc_4,32)break end end FUNC_LIST[252]=
function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=i64_ZERO local
desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value
=loc_4 FUNC_LIST[189](loc_4,loc_2)loc_5=load_i64(memory_at_0,loc_1+33288)while
true do if load_i32_u8(memory_at_0,loc_1+37689)~=0 then break end loc_5=bor_i64(
band_i64(shr_i64(shl_i64(loc_5,i64_from_u32(32,0)),i64_from_u32(63,0)),
i64_from_u32(0,4294967295)),band_i64(loc_5,i64_from_u32(4294967295,0)))break end
if desired then if desired==0 then desired=nil end break end while true do while
true do loc_2=load_i32(memory_at_0,loc_4+12)if loc_2>31 then break end
store_i64(memory_at_0,loc_1+33288,add_i64(load_i64(memory_at_0,loc_4),load_i64(
memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768))))loc_2=load_i32(
memory_at_0,loc_4+8)if loc_2>=32 then desired=1 break end store_i64(memory_at_0,
add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768),loc_5)store_i32_n8(memory_at_0,
loc_0+8,23)GLOBAL_LIST[0].value=add_i32(loc_4,16)desired=0 break end if desired
then if desired==1 then desired=nil end break end FUNC_LIST[492](loc_2,32,
1056908)error('out of code bounds')end if desired then if desired==0 then
desired=nil end break end FUNC_LIST[492](loc_2,32,1056924)error(
'out of code bounds')end end FUNC_LIST[253]=function(loc_0,loc_1,loc_2,loc_3)
while true do store_f64(memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2
,4),248)),33024),convert_f64_i32(load_i32(memory_at_0,add_i32(add_i32(loc_1,
band_i32(shr_u32(loc_2,12),248)),32768))))store_i32_n8(memory_at_0,loc_0+8,23)
break end end FUNC_LIST[254]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0
local loc_5=0 local loc_6=i64_ZERO local desired while true do loc_4=sub_i32(
GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4 FUNC_LIST[189](loc_4,loc_2)
while true do loc_2=load_i32(memory_at_0,loc_4+12)if loc_2>31 then break end
FUNC_LIST[164](add_i32(loc_4,16),add_i32(loc_1,33376),add_i64(load_i64(
memory_at_0,loc_4),load_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),
32768))))while true do while true do loc_2=load_i32_u8(memory_at_0,loc_4+24)if
loc_2~=23 then break end while true do loc_5=load_i32(memory_at_0,loc_4+8)if
loc_5>=32 then break end store_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(
loc_5,3)),33024),load_i64_i32(memory_at_0,loc_4+16))desired=2 break end if
desired then if desired==3 then desired=nil end break end FUNC_LIST[492](loc_5,
32,1056828)error('out of code bounds')end if desired then if desired==2 then
desired=nil end break end loc_6=load_i64(memory_at_0,loc_4+16)break end if
desired then if desired==1 then desired=nil end break end store_i32_n8(
memory_at_0,loc_0+8,loc_2)store_i64(memory_at_0,loc_0,loc_6)GLOBAL_LIST[0].value
=add_i32(loc_4,32)desired=0 break end if desired then if desired==0 then desired
=nil end break end FUNC_LIST[492](loc_2,32,1056812)error('out of code bounds')
end end FUNC_LIST[255]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local
loc_5=i64_ZERO while true do loc_4=load_i32_u8(memory_at_0,loc_1+37689)loc_5=
shl_i64(load_i64(memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,12),
248)),32768)),extend_i64_u32(band_i32((if loc_4~=0 then 63 else 31),shr_u32(
loc_2,20))))while true do if loc_4~=0 then break end loc_5=bor_i64(band_i64(
shr_i64(shl_i64(loc_5,i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,
4294967295)),band_i64(loc_5,i64_from_u32(4294967295,0)))break end store_i64(
memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),32768),loc_5)
store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[256]=function(loc_0,
loc_1,loc_2,loc_3)local loc_4=0 local loc_5=i64_ZERO local loc_6=0 local desired
while true do loc_4=add_i32(loc_1,32768)loc_5=load_i64(memory_at_0,add_i32(loc_4
,band_i32(shr_u32(loc_2,12),248)))loc_6=band_i32(shr_u32(loc_2,7),31)while true
do while true do loc_2=load_i32(memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2
,17),248)))if loc_2==0 then break end while true do while true do loc_4=
wrap_i32_i64(loc_5)if loc_4~=2147483648 then break end if loc_2==4294967295 then
desired=3 break end break end if desired then if desired==3 then desired=nil end
break end while true do while true do if loc_2~=4294967295 then break end loc_5=
i64_ZERO desired=4 break end if desired then if desired==4 then desired=nil end
break end loc_5=extend_i64_i32(rem_i32(loc_4,loc_2))break end if desired then if
desired==3 then desired=nil end break end store_i64(memory_at_0,add_i32(add_i32(
loc_1,shl_i32(loc_6,3)),32768),loc_5)desired=1 break end if desired then if
desired==2 then desired=nil end break end store_i64(memory_at_0,add_i32(add_i32(
loc_1,shl_i32(loc_6,3)),32768),i64_ZERO)desired=1 break end if desired then if
desired==1 then desired=nil end break end store_i64(memory_at_0,add_i32(add_i32(
loc_1,shl_i32(loc_6,3)),32768),extend_i64_n32(loc_5))break end store_i32_n8(
memory_at_0,loc_0+8,23)break end end FUNC_LIST[257]=function(loc_0,loc_1,loc_2,
loc_3)while true do loc_1=add_i32(loc_1,32768)store_i64(memory_at_0,add_i32(
loc_1,band_i32(shr_u32(loc_2,4),248)),extend_i64_i32(shr_u32(load_i32(
memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,12),248))),load_i32(memory_at_0
,add_i32(loc_1,band_i32(shr_u32(loc_2,17),248))))))store_i32_n8(memory_at_0,
loc_0+8,23)break end end FUNC_LIST[258]=function(loc_0,loc_1,loc_2,loc_3)local
loc_4=0 local loc_5=0 local loc_6=i64_ZERO local desired while true do loc_4=
sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4 FUNC_LIST[189](loc_4,
loc_2)while true do loc_2=load_i32(memory_at_0,loc_4+12)if loc_2>31 then break
end FUNC_LIST[159](add_i32(loc_4,16),add_i32(loc_1,33376),add_i64(load_i64(
memory_at_0,loc_4),load_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),
32768))))while true do while true do loc_2=load_i32_u8(memory_at_0,loc_4+24)if
loc_2~=23 then break end while true do loc_5=load_i32(memory_at_0,loc_4+8)if
loc_5>=32 then break end store_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(
loc_5,3)),32768),load_i64_u8(memory_at_0,loc_4+16))desired=2 break end if
desired then if desired==3 then desired=nil end break end FUNC_LIST[492](loc_5,
32,1057020)error('out of code bounds')end if desired then if desired==2 then
desired=nil end break end loc_6=load_i64(memory_at_0,loc_4+16)break end if
desired then if desired==1 then desired=nil end break end store_i32_n8(
memory_at_0,loc_0+8,loc_2)store_i64(memory_at_0,loc_0,loc_6)GLOBAL_LIST[0].value
=add_i32(loc_4,32)desired=0 break end if desired then if desired==0 then desired
=nil end break end FUNC_LIST[492](loc_2,32,1057004)error('out of code bounds')
end end FUNC_LIST[259]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local
loc_5=0 local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,16)
GLOBAL_LIST[0].value=loc_4 FUNC_LIST[189](loc_4,loc_2)while true do while true
do loc_2=load_i32(memory_at_0,loc_4+12)if loc_2>31 then break end loc_5=
load_i32(memory_at_0,loc_4+8)if loc_5>=32 then desired=1 break end loc_1=
add_i32(loc_1,32768)store_i64(memory_at_0,add_i32(loc_1,shl_i32(loc_5,3)),
extend_i64_n32(add_i64(load_i64(memory_at_0,add_i32(loc_1,shl_i32(loc_2,3))),
load_i64(memory_at_0,loc_4))))store_i32_n8(memory_at_0,loc_0+8,23)GLOBAL_LIST[0]
.value=add_i32(loc_4,16)desired=0 break end if desired then if desired==1 then
desired=nil end break end FUNC_LIST[492](loc_2,32,1056484)error(
'out of code bounds')end if desired then if desired==0 then desired=nil end
break end FUNC_LIST[492](loc_5,32,1056500)error('out of code bounds')end end
FUNC_LIST[260]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0
local loc_6=0 local loc_7=0 local loc_8=i64_ZERO local desired while true do
loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4 loc_5=add_i32(
loc_1,33376)loc_6=add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,12),248)),32768)
FUNC_LIST[164](add_i32(loc_4,16),loc_5,load_i64(memory_at_0,loc_6))while true do
while true do loc_7=load_i32_u8(memory_at_0,loc_4+24)if loc_7==23 then break end
loc_8=load_i64(memory_at_0,loc_4+16)desired=1 break end if desired then if
desired==1 then desired=nil end break end loc_8=load_i64_i32(memory_at_0,loc_4+
16)FUNC_LIST[173](loc_4,loc_5,load_i64(memory_at_0,loc_6),load_i32(memory_at_0,
add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,17),248)),32768)))while true do
loc_7=load_i32_u8(memory_at_0,loc_4+8)if loc_7==23 then break end loc_8=
load_i64(memory_at_0,loc_4)desired=1 break end if desired then if desired==1
then desired=nil end break end store_i64(memory_at_0,add_i32(add_i32(loc_1,
shl_i32(band_i32(shr_u32(loc_2,7),31),3)),32768),loc_8)loc_7=23 break end
store_i32_n8(memory_at_0,loc_0+8,loc_7)store_i64(memory_at_0,loc_0,loc_8)
GLOBAL_LIST[0].value=add_i32(loc_4,32)break end end FUNC_LIST[261]=function(
loc_0,loc_1,loc_2,loc_3)while true do loc_1=add_i32(loc_1,32768)store_i64(
memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),extend_i64_u32((if
lt_i64(load_i64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,12),248))),
load_i64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,17),248))))then 1 else
0)))store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[262]=function(
loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=i64_ZERO local
desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value
=loc_4 FUNC_LIST[189](loc_4,loc_2)while true do loc_2=load_i32(memory_at_0,loc_4
+12)if loc_2>31 then break end FUNC_LIST[159](add_i32(loc_4,16),add_i32(loc_1,
33376),add_i64(load_i64(memory_at_0,loc_4),load_i64(memory_at_0,add_i32(add_i32(
loc_1,shl_i32(loc_2,3)),32768))))while true do while true do loc_2=load_i32_u8(
memory_at_0,loc_4+24)if loc_2~=23 then break end while true do loc_5=load_i32(
memory_at_0,loc_4+8)if loc_5>=32 then break end store_i64(memory_at_0,add_i32(
add_i32(loc_1,shl_i32(loc_5,3)),32768),load_i64_i8(memory_at_0,loc_4+16))desired
=2 break end if desired then if desired==3 then desired=nil end break end
FUNC_LIST[492](loc_5,32,1056988)error('out of code bounds')end if desired then
if desired==2 then desired=nil end break end loc_6=load_i64(memory_at_0,loc_4+16
)break end if desired then if desired==1 then desired=nil end break end
store_i32_n8(memory_at_0,loc_0+8,loc_2)store_i64(memory_at_0,loc_0,loc_6)
GLOBAL_LIST[0].value=add_i32(loc_4,32)desired=0 break end if desired then if
desired==0 then desired=nil end break end FUNC_LIST[492](loc_2,32,1056972)error(
'out of code bounds')end end FUNC_LIST[263]=function(loc_0,loc_1,loc_2,loc_3)
local loc_4=0 local loc_5=0 local loc_6=i64_ZERO local loc_7=i64_ZERO local
desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value
=loc_4 loc_5=band_i32(shr_u32(loc_2,20),31)loc_6=load_i64(memory_at_0,add_i32(
add_i32(loc_1,band_i32(shr_u32(loc_2,12),248)),32768))while true do while true
do if load_i32_u8(memory_at_0,loc_1+37689)~=0 then break end loc_6=mul_i64(
load_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_5,3)),32768)),loc_6)loc_6
=bor_i64(band_i64(shr_i64(loc_6,i64_from_u32(63,0)),i64_from_u32(0,4294967295)),
shr_u64(loc_6,i64_from_u32(32,0)))desired=1 break end if desired then if desired
==1 then desired=nil end break end loc_7=load_i64(memory_at_0,add_i32(add_i32(
loc_1,shl_i32(loc_5,3)),32768))FUNC_LIST[552](loc_4,loc_7,shr_i64(loc_7,
i64_from_u32(63,0)),loc_6,shr_i64(loc_6,i64_from_u32(63,0)))loc_6=load_i64(
memory_at_0,add_i32(loc_4,8))break end store_i64(memory_at_0,add_i32(add_i32(
loc_1,band_i32(shr_u32(loc_2,4),248)),32768),loc_6)store_i32_n8(memory_at_0,
loc_0+8,23)GLOBAL_LIST[0].value=add_i32(loc_4,16)break end end FUNC_LIST[264]=
function(loc_0,loc_1,loc_2,loc_3)while true do store_i64(memory_at_0,add_i32(
add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),32768),load_i64_i32(memory_at_0,
add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,12),248)),33024)))store_i32_n8(
memory_at_0,loc_0+8,23)break end end FUNC_LIST[265]=function(loc_0,loc_1,loc_2,
loc_3)local loc_4=0 local loc_5=0 local loc_6=0 local loc_7=0 local loc_8=
i64_ZERO local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)
GLOBAL_LIST[0].value=loc_4 loc_5=add_i32(loc_1,33376)loc_6=add_i32(add_i32(loc_1
,band_i32(shr_u32(loc_2,12),248)),32768)FUNC_LIST[164](add_i32(loc_4,16),loc_5,
load_i64(memory_at_0,loc_6))while true do while true do loc_7=load_i32_u8(
memory_at_0,loc_4+24)if loc_7==23 then break end loc_8=load_i64(memory_at_0,
loc_4+16)desired=1 break end if desired then if desired==1 then desired=nil end
break end loc_6=load_i32(memory_at_0,loc_4+16)FUNC_LIST[173](loc_4,loc_5,
load_i64(memory_at_0,loc_6),band_i32(loc_6,load_i32(memory_at_0,add_i32(add_i32(
loc_1,band_i32(shr_u32(loc_2,17),248)),32768))))while true do loc_7=load_i32_u8(
memory_at_0,loc_4+8)if loc_7==23 then break end loc_8=load_i64(memory_at_0,loc_4
)desired=1 break end if desired then if desired==1 then desired=nil end break
end store_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(band_i32(shr_u32(loc_2,7
),31),3)),32768),extend_i64_i32(loc_6))loc_7=23 break end store_i32_n8(
memory_at_0,loc_0+8,loc_7)store_i64(memory_at_0,loc_0,loc_8)GLOBAL_LIST[0].value
=add_i32(loc_4,32)break end end FUNC_LIST[266]=function(loc_0,loc_1,loc_2,loc_3)
while true do loc_1=add_i32(loc_1,32768)store_i64(memory_at_0,add_i32(loc_1,
band_i32(shr_u32(loc_2,4),248)),extend_i64_i32(shr_i32(load_i32(memory_at_0,
add_i32(loc_1,band_i32(shr_u32(loc_2,12),248))),shr_u32(loc_2,20))))
store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[267]=function(loc_0,
loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=i64_ZERO local loc_7=0
local loc_8=0 while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0]
.value=loc_4 loc_5=shr_u32(loc_2,20)FUNC_LIST[219](add_i32(loc_4,16),loc_1,loc_5
)loc_6=load_i64(memory_at_0,loc_4+16)while true do loc_7=load_i32_u8(memory_at_0
,loc_4+24)if loc_7~=23 then break end loc_7=band_i32(shr_u32(loc_2,7),31)loc_2=
band_i32(shr_u32(loc_2,15),31)while true do loc_8=load_i32_u8(memory_at_0,loc_1+
37689)if loc_8~=0 then break end loc_6=bor_i64(band_i64(shr_i64(shl_i64(loc_6,
i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,4294967295)),band_i64(
loc_6,i64_from_u32(4294967295,0)))break end store_i64(memory_at_0,add_i32(
add_i32(loc_1,shl_i32(loc_7,3)),32768),loc_6)loc_6=bor_i64(loc_6,extend_i64_u32(
loc_2))FUNC_LIST[220](loc_4,loc_1,loc_5,(if loc_8~=0 then loc_6 else band_i64(
loc_6,i64_from_u32(4294967295,0))))loc_6=load_i64(memory_at_0,loc_4)loc_7=
load_i32_u8(memory_at_0,loc_4+8)break end store_i32_n8(memory_at_0,loc_0+8,loc_7
)store_i64(memory_at_0,loc_0,loc_6)GLOBAL_LIST[0].value=add_i32(loc_4,32)break
end end FUNC_LIST[268]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local
loc_5=i64_ZERO while true do loc_4=add_i32(loc_1,32768)loc_5=shl_i64(load_i64(
memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2,12),248))),load_i64(memory_at_0
,add_i32(loc_4,band_i32(shr_u32(loc_2,17),248))))while true do if load_i32_u8(
memory_at_0,loc_1+37689)~=0 then break end loc_5=bor_i64(band_i64(shr_i64(
shl_i64(loc_5,i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,4294967295)
),band_i64(loc_5,i64_from_u32(4294967295,0)))break end store_i64(memory_at_0,
add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),32768),loc_5)store_i32_n8(
memory_at_0,loc_0+8,23)break end end FUNC_LIST[269]=function(loc_0,loc_1,loc_2,
loc_3)while true do store_i64(memory_at_0,add_i32(add_i32(loc_1,band_i32(
shr_u32(loc_2,4),248)),33024),load_i64_u32(memory_at_0,add_i32(add_i32(loc_1,
band_i32(shr_u32(loc_2,12),248)),32768)))store_i32_n8(memory_at_0,loc_0+8,23)
break end end FUNC_LIST[270]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0
local loc_5=0 local loc_6=0 local loc_7=0 local loc_8=i64_ZERO local desired
while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4
loc_5=add_i32(loc_1,33376)loc_6=add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,12)
,248)),32768)FUNC_LIST[165](add_i32(loc_4,16),loc_5,load_i64(memory_at_0,loc_6))
while true do while true do loc_7=load_i32_u8(memory_at_0,loc_4+24)if loc_7==23
then break end loc_8=load_i64(memory_at_0,loc_4+16)desired=1 break end if
desired then if desired==1 then desired=nil end break end loc_8=load_i64(
memory_at_0,loc_4+16)FUNC_LIST[174](loc_4,loc_5,load_i64(memory_at_0,loc_6),
add_i64(load_i64(memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,17),
248)),32768)),loc_8))while true do loc_7=load_i32_u8(memory_at_0,loc_4+8)if
loc_7==23 then break end loc_8=load_i64(memory_at_0,loc_4)desired=1 break end if
desired then if desired==1 then desired=nil end break end store_i64(memory_at_0,
add_i32(add_i32(loc_1,shl_i32(band_i32(shr_u32(loc_2,7),31),3)),32768),loc_8)
loc_7=23 break end store_i32_n8(memory_at_0,loc_0+8,loc_7)store_i64(memory_at_0,
loc_0,loc_8)GLOBAL_LIST[0].value=add_i32(loc_4,32)break end end FUNC_LIST[271]=
function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=i64_ZERO local loc_6=
0 local loc_7=i64_ZERO local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].
value,16)GLOBAL_LIST[0].value=loc_4 FUNC_LIST[184](loc_4,loc_2)while true do
while true do loc_2=load_i32(memory_at_0,loc_4+8)if loc_2>31 then break end
loc_5=load_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768))while
true do loc_6=load_i32_u8(memory_at_0,loc_1+37689)if loc_6~=0 then break end
loc_5=bor_i64(band_i64(shr_i64(shl_i64(loc_5,i64_from_u32(32,0)),i64_from_u32(63
,0)),i64_from_u32(0,4294967295)),band_i64(loc_5,i64_from_u32(4294967295,0)))
break end if desired then if desired==2 then desired=nil end break end loc_2=
load_i32(memory_at_0,loc_4+12)if loc_2>=32 then desired=1 break end loc_7=
load_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768))while true
do if loc_6~=0 then break end loc_7=bor_i64(band_i64(shr_i64(shl_i64(loc_7,
i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,4294967295)),band_i64(
loc_7,i64_from_u32(4294967295,0)))break end if desired then if desired==2 then
desired=nil end break end while true do if eq_i64(loc_5,loc_7)then break end
store_i64(memory_at_0,loc_1+33288,add_i64(load_i64(memory_at_0,loc_4),loc_3))
break end if desired then if desired==2 then desired=nil end break end
store_i32_n8(memory_at_0,loc_0+8,23)GLOBAL_LIST[0].value=add_i32(loc_4,16)
desired=0 break end if desired then if desired==1 then desired=nil end break end
FUNC_LIST[492](loc_2,32,1056708)error('out of code bounds')end if desired then
if desired==0 then desired=nil end break end FUNC_LIST[492](loc_2,32,1056724)
error('out of code bounds')end end FUNC_LIST[272]=function(loc_0,loc_1,loc_2,
loc_3)while true do loc_1=add_i32(loc_1,33024)store_f64(memory_at_0,add_i32(
loc_1,band_i32(shr_u32(loc_2,4),248)),((load_f64(memory_at_0,add_i32(loc_1,
band_i32(shr_u32(loc_2,12),248)))*load_f64(memory_at_0,add_i32(loc_1,band_i32(
shr_u32(loc_2,17),248))))+load_f64(memory_at_0,add_i32(loc_1,band_i32(shr_u32(
loc_2,24),248)))))store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[
273]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=0
local loc_7=i64_ZERO local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].
value,16)GLOBAL_LIST[0].value=loc_4 loc_5=add_i32(add_i32(loc_1,band_i32(
shr_u32(loc_2,12),248)),32768)FUNC_LIST[165](loc_4,add_i32(loc_1,33376),
load_i64(memory_at_0,loc_5))while true do while true do loc_6=load_i32_u8(
memory_at_0,loc_4+8)if loc_6==23 then break end loc_7=load_i64(memory_at_0,loc_4
)desired=1 break end if desired then if desired==1 then desired=nil end break
end store_i32_n8(memory_at_0,loc_1+37691,1)store_i64(memory_at_0,loc_1+33296,
load_i64(memory_at_0,loc_5))store_i64(memory_at_0,add_i32(add_i32(loc_1,
band_i32(shr_u32(loc_2,4),248)),32768),load_i64(memory_at_0,loc_4))break end
store_i32_n8(memory_at_0,loc_0+8,loc_6)store_i64(memory_at_0,loc_0,loc_7)
GLOBAL_LIST[0].value=add_i32(loc_4,16)break end end FUNC_LIST[274]=function(
loc_0,loc_1,loc_2,loc_3)while true do store_f64(memory_at_0,add_i32(add_i32(
loc_1,band_i32(shr_u32(loc_2,4),248)),33024),convert_f64_u32(load_i32(
memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,12),248)),32768))))
store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[275]=function(loc_0,
loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=i64_ZERO local desired
while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4
FUNC_LIST[186](add_i32(loc_4,16),loc_2)while true do while true do loc_2=
load_i32(memory_at_0,loc_4+24)if loc_2>31 then break end loc_5=load_i32(
memory_at_0,loc_4+28)if loc_5>=32 then desired=1 break end FUNC_LIST[174](loc_4,
add_i32(loc_1,33376),add_i64(load_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(
loc_2,3)),32768)),load_i64(memory_at_0,loc_4+16)),load_i64(memory_at_0,add_i32(
add_i32(loc_1,shl_i32(loc_5,3)),33024)))loc_6=load_i64(memory_at_0,loc_4)
store_i32_n8(memory_at_0,loc_0+8,load_i32_u8(memory_at_0,loc_4+8))store_i64(
memory_at_0,loc_0,loc_6)GLOBAL_LIST[0].value=add_i32(loc_4,32)desired=0 break
end if desired then if desired==1 then desired=nil end break end FUNC_LIST[492](
loc_2,32,1056844)error('out of code bounds')end if desired then if desired==0
then desired=nil end break end FUNC_LIST[492](loc_5,32,1056860)error(
'out of code bounds')end end FUNC_LIST[276]=function(loc_0,loc_1,loc_2,loc_3)
local loc_4=0 local loc_5=0 local loc_6=0 local loc_7=i64_ZERO local reg_0 local
desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value
=loc_4 FUNC_LIST[184](loc_4,loc_2)while true do while true do loc_2=load_i32(
memory_at_0,loc_4+8)if loc_2>31 then break end loc_5=load_i32(memory_at_0,loc_4+
12)if loc_5>=32 then desired=1 break end while true do loc_6=add_i32(loc_1,32768
)loc_7=load_i64(memory_at_0,add_i32(loc_6,shl_i32(loc_2,3)))loc_2=load_i32_u8(
memory_at_0,loc_1+37689)reg_0=(if loc_2~=0 then loc_7 else band_i64(loc_7,
i64_from_u32(4294967295,0)))loc_7=load_i64(memory_at_0,add_i32(loc_6,shl_i32(
loc_5,3)))if lt_u64(reg_0,(if loc_2~=0 then loc_7 else band_i64(loc_7,
i64_from_u32(4294967295,0))))then break end store_i64(memory_at_0,loc_1+33288,
add_i64(load_i64(memory_at_0,loc_4),loc_3))break end if desired then if desired
==2 then desired=nil end break end store_i32_n8(memory_at_0,loc_0+8,23)
GLOBAL_LIST[0].value=add_i32(loc_4,16)desired=0 break end if desired then if
desired==1 then desired=nil end break end FUNC_LIST[492](loc_2,32,1056612)error(
'out of code bounds')end if desired then if desired==0 then desired=nil end
break end FUNC_LIST[492](loc_5,32,1056628)error('out of code bounds')end end
FUNC_LIST[277]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=
i64_ZERO local loc_6=i64_ZERO local loc_7=0 local desired while true do loc_4=
sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_4 loc_5=i64_ONE while
true do while true do while true do if load_i32_u8(memory_at_0,loc_1+37691)==0
then break end loc_6=load_i64(memory_at_0,loc_1+33296)if ne_i64(loc_6,load_i64(
memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,12),248)),32768)))then
break end FUNC_LIST[173](loc_4,add_i32(loc_1,33376),loc_6,load_i32(memory_at_0,
add_i32(add_i32(loc_1,shl_i32(band_i32(shr_u32(loc_2,20),31),3)),32768)))loc_7=
load_i32_u8(memory_at_0,loc_4+8)if loc_7~=23 then desired=2 break end
store_i32_n8(memory_at_0,loc_1+37691,0)loc_5=i64_ZERO break end if desired then
if desired==2 then desired=nil end break end store_i64(memory_at_0,add_i32(
add_i32(loc_1,shl_i32(band_i32(shr_u32(loc_2,7),31),3)),32768),loc_5)loc_7=23
desired=1 break end if desired then if desired==1 then desired=nil end break end
loc_5=load_i64(memory_at_0,loc_4)break end store_i32_n8(memory_at_0,loc_0+8,
loc_7)store_i64(memory_at_0,loc_0,loc_5)GLOBAL_LIST[0].value=add_i32(loc_4,16)
break end end FUNC_LIST[278]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0
local loc_5=0 local loc_6=0 local loc_7=0 local loc_8=i64_ZERO local desired
while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4
loc_5=add_i32(loc_1,33376)loc_6=add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,12)
,248)),32768)FUNC_LIST[164](add_i32(loc_4,16),loc_5,load_i64(memory_at_0,loc_6))
while true do while true do loc_7=load_i32_u8(memory_at_0,loc_4+24)if loc_7==23
then break end loc_8=load_i64(memory_at_0,loc_4+16)desired=1 break end if
desired then if desired==1 then desired=nil end break end loc_6=load_i32(
memory_at_0,loc_4+16)FUNC_LIST[173](loc_4,loc_5,load_i64(memory_at_0,loc_6),
bor_i32(loc_6,load_i32(memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,
17),248)),32768))))while true do loc_7=load_i32_u8(memory_at_0,loc_4+8)if loc_7
==23 then break end loc_8=load_i64(memory_at_0,loc_4)desired=1 break end if
desired then if desired==1 then desired=nil end break end store_i64(memory_at_0,
add_i32(add_i32(loc_1,shl_i32(band_i32(shr_u32(loc_2,7),31),3)),32768),
extend_i64_i32(loc_6))loc_7=23 break end store_i32_n8(memory_at_0,loc_0+8,loc_7)
store_i64(memory_at_0,loc_0,loc_8)GLOBAL_LIST[0].value=add_i32(loc_4,32)break
end end FUNC_LIST[279]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local
loc_5=0 local loc_6=i64_ZERO local reg_0 local reg_1 local desired while true do
loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4 FUNC_LIST[186](
add_i32(loc_4,16),loc_2)while true do while true do loc_2=load_i32(memory_at_0,
loc_4+24)if loc_2>31 then break end loc_5=load_i32(memory_at_0,loc_4+28)if loc_5
>=32 then desired=1 break end reg_1=add_i32(loc_1,33376)loc_1=add_i32(loc_1,
32768)FUNC_LIST[166](loc_4,reg_1,add_i64(load_i64(memory_at_0,add_i32(loc_1,
shl_i32(loc_2,3))),load_i64(memory_at_0,loc_4+16)),load_i32_u8(memory_at_0,
add_i32(loc_1,shl_i32(loc_5,3))))loc_6=load_i64(memory_at_0,loc_4)store_i32_n8(
memory_at_0,loc_0+8,load_i32_u8(memory_at_0,loc_4+8))store_i64(memory_at_0,loc_0
,loc_6)GLOBAL_LIST[0].value=add_i32(loc_4,32)desired=0 break end if desired then
if desired==1 then desired=nil end break end FUNC_LIST[492](loc_2,32,1057244)
error('out of code bounds')end if desired then if desired==0 then desired=nil
end break end FUNC_LIST[492](loc_5,32,1057260)error('out of code bounds')end end
FUNC_LIST[280]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0
local loc_6=0 local loc_7=i64_ZERO local loc_8=i64_ZERO local desired while true
do loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4 loc_5=
shr_u32(loc_2,20)FUNC_LIST[219](add_i32(loc_4,16),loc_1,loc_5)while true do
while true do loc_6=load_i32_u8(memory_at_0,loc_4+24)if loc_6==23 then break end
loc_7=load_i64(memory_at_0,loc_4+16)desired=1 break end if desired then if
desired==1 then desired=nil end break end loc_6=band_i32(shr_u32(loc_2,7),31)
loc_7=load_i64(memory_at_0,loc_4+16)loc_8=load_i64(memory_at_0,add_i32(add_i32(
loc_1,band_i32(shr_u32(loc_2,12),248)),32768))while true do if load_i32_u8(
memory_at_0,loc_1+37689)~=0 then break end loc_7=bor_i64(band_i64(shr_i64(
shl_i64(loc_7,i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,4294967295)
),band_i64(loc_7,i64_from_u32(4294967295,0)))break end if desired then if
desired==1 then desired=nil end break end store_i64(memory_at_0,add_i32(add_i32(
loc_1,shl_i32(loc_6,3)),32768),loc_7)FUNC_LIST[220](loc_4,loc_1,loc_5,band_i64(
loc_7,bxor_i64(loc_8,i64_from_u32(4294967295,4294967295))))loc_7=load_i64(
memory_at_0,loc_4)loc_6=load_i32_u8(memory_at_0,loc_4+8)break end store_i32_n8(
memory_at_0,loc_0+8,loc_6)store_i64(memory_at_0,loc_0,loc_7)GLOBAL_LIST[0].value
=add_i32(loc_4,32)break end end FUNC_LIST[281]=function(loc_0,loc_1,loc_2,loc_3)
local loc_4=0 local loc_5=i64_ZERO local loc_6=0 local loc_7=i64_ZERO local
loc_8=0 local reg_0 local reg_1 local desired local br_map={}while true do loc_4
=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_4 FUNC_LIST[219](loc_4
,loc_1,833)loc_5=load_i64(memory_at_0,loc_4)while true do loc_6=load_i32_u8(
memory_at_0,loc_4+8)if loc_6~=23 then break end store_i64(memory_at_0,loc_1+
33288,loc_5)loc_7=load_i64(memory_at_0,loc_1+6144)store_i64(memory_at_0,loc_1+
6144,bor_i64(bor_i64(band_i64(loc_7,i64_from_u32(4294961015,4294967295)),
band_i64(shr_u64(loc_7,i64_from_u32(4,0)),i64_from_u32(8,0))),i64_from_u32(128,0
)))while true do while true do while true do while true do loc_7=band_i64(
shr_u64(loc_7,i64_from_u32(11,0)),i64_from_u32(3,0))if gt_u64(loc_7,
i64_from_u32(3,0))then break end loc_8=0 if not br_map[1]then br_map[1]=(
function()return{[0]=3,1,0,2}end)()end temp=br_map[1][wrap_i32_i64(loc_7)]or 3
if temp<2 then if temp<1 then break else desired=4 break end elseif temp>2 then
desired=2 break else desired=3 break end end if desired then if desired==4 then
desired=nil end break end FUNC_LIST[120](1052280,14,1057196)error(
'out of code bounds')end if desired then if desired==3 then desired=nil end
break end loc_8=1 desired=2 break end if desired then if desired==2 then desired
=nil end break end loc_8=3 break end if desired then if desired==1 then desired=
nil end break end store_i32_n8(memory_at_0,loc_1+37688,loc_8)reg_1=FUNC_LIST[282
](add_i32(loc_1,37688))store_i32_n8(memory_at_0,add_i32(loc_1,37681),band_i32(
reg_1,255))break end store_i32_n8(memory_at_0,loc_0+8,loc_6)store_i64(
memory_at_0,loc_0,loc_5)GLOBAL_LIST[0].value=add_i32(loc_4,16)break end end
FUNC_LIST[282]=function(loc_0)local reg_0 while true do reg_0=load_i32_u8(
memory_at_0,loc_0)break end return reg_0 end FUNC_LIST[283]=function(loc_0,loc_1
,loc_2,loc_3)local loc_4=0 local loc_5=i64_ZERO local desired while true do
loc_4=add_i32(loc_1,32768)loc_5=mul_i64(load_i64(memory_at_0,add_i32(loc_4,
band_i32(shr_u32(loc_2,17),248))),load_i64(memory_at_0,add_i32(loc_4,band_i32(
shr_u32(loc_2,12),248))))while true do while true do if load_i32_u8(memory_at_0,
loc_1+37689)==0 then break end loc_5=extend_i64_n32(loc_5)desired=1 break end if
desired then if desired==1 then desired=nil end break end loc_5=bor_i64(
band_i64(shr_i64(shl_i64(loc_5,i64_from_u32(32,0)),i64_from_u32(63,0)),
i64_from_u32(0,4294967295)),band_i64(loc_5,i64_from_u32(4294967295,0)))break end
store_i64(memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),
32768),loc_5)store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[284]=
function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=
i64_ZERO local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)
GLOBAL_LIST[0].value=loc_4 FUNC_LIST[189](loc_4,loc_2)while true do loc_2=
load_i32(memory_at_0,loc_4+12)if loc_2>31 then break end FUNC_LIST[163](add_i32(
loc_4,16),add_i32(loc_1,33376),add_i64(load_i64(memory_at_0,loc_4),load_i64(
memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768))))while true do while
true do loc_2=load_i32_u8(memory_at_0,loc_4+24)if loc_2~=23 then break end while
true do loc_5=load_i32(memory_at_0,loc_4+8)if loc_5>=32 then break end
store_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_5,3)),32768),
load_i64_i16(memory_at_0,loc_4+16))desired=2 break end if desired then if
desired==3 then desired=nil end break end FUNC_LIST[492](loc_5,32,1057084)error(
'out of code bounds')end if desired then if desired==2 then desired=nil end
break end loc_6=load_i64(memory_at_0,loc_4+16)break end if desired then if
desired==1 then desired=nil end break end store_i32_n8(memory_at_0,loc_0+8,loc_2
)store_i64(memory_at_0,loc_0,loc_6)GLOBAL_LIST[0].value=add_i32(loc_4,32)desired
=0 break end if desired then if desired==0 then desired=nil end break end
FUNC_LIST[492](loc_2,32,1057068)error('out of code bounds')end end FUNC_LIST[285
]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=0
local loc_7=0 local loc_8=i64_ZERO local desired while true do loc_4=sub_i32(
GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4 loc_5=add_i32(loc_1,33376)
loc_6=add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,12),248)),32768)FUNC_LIST[164
](add_i32(loc_4,16),loc_5,load_i64(memory_at_0,loc_6))while true do while true
do loc_7=load_i32_u8(memory_at_0,loc_4+24)if loc_7==23 then break end loc_8=
load_i64(memory_at_0,loc_4+16)desired=1 break end if desired then if desired==1
then desired=nil end break end loc_6=load_i32(memory_at_0,loc_4+16)FUNC_LIST[173
](loc_4,loc_5,load_i64(memory_at_0,loc_6),add_i32(loc_6,load_i32(memory_at_0,
add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,17),248)),32768))))while true do
loc_7=load_i32_u8(memory_at_0,loc_4+8)if loc_7==23 then break end loc_8=
load_i64(memory_at_0,loc_4)desired=1 break end if desired then if desired==1
then desired=nil end break end store_i64(memory_at_0,add_i32(add_i32(loc_1,
shl_i32(band_i32(shr_u32(loc_2,7),31),3)),32768),extend_i64_i32(loc_6))loc_7=23
break end store_i32_n8(memory_at_0,loc_0+8,loc_7)store_i64(memory_at_0,loc_0,
loc_8)GLOBAL_LIST[0].value=add_i32(loc_4,32)break end end FUNC_LIST[286]=
function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=
i64_ZERO local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)
GLOBAL_LIST[0].value=loc_4 FUNC_LIST[189](loc_4,loc_2)while true do loc_2=
load_i32(memory_at_0,loc_4+12)if loc_2>31 then break end FUNC_LIST[165](add_i32(
loc_4,16),add_i32(loc_1,33376),add_i64(load_i64(memory_at_0,loc_4),load_i64(
memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768))))while true do while
true do loc_2=load_i32_u8(memory_at_0,loc_4+24)if loc_2~=23 then break end while
true do loc_5=load_i32(memory_at_0,loc_4+8)if loc_5>=32 then break end
store_f64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_5,3)),33024),load_f64(
memory_at_0,loc_4+16))desired=2 break end if desired then if desired==3 then
desired=nil end break end FUNC_LIST[492](loc_5,32,1056796)error(
'out of code bounds')end if desired then if desired==2 then desired=nil end
break end loc_6=load_i64(memory_at_0,loc_4+16)break end if desired then if
desired==1 then desired=nil end break end store_i32_n8(memory_at_0,loc_0+8,loc_2
)store_i64(memory_at_0,loc_0,loc_6)GLOBAL_LIST[0].value=add_i32(loc_4,32)desired
=0 break end if desired then if desired==0 then desired=nil end break end
FUNC_LIST[492](loc_2,32,1056780)error('out of code bounds')end end FUNC_LIST[287
]=function(loc_0,loc_1,loc_2,loc_3)while true do store_f64(memory_at_0,add_i32(
add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),33024),load_f64(memory_at_0,
add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,12),248)),32768)))store_i32_n8(
memory_at_0,loc_0+8,23)break end end FUNC_LIST[288]=function(loc_0,loc_1,loc_2,
loc_3)local loc_4=0 local loc_5=0 local loc_6=i64_ZERO local reg_0 local reg_1
local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0]
.value=loc_4 FUNC_LIST[186](add_i32(loc_4,16),loc_2)while true do while true do
loc_2=load_i32(memory_at_0,loc_4+24)if loc_2>31 then break end loc_5=load_i32(
memory_at_0,loc_4+28)if loc_5>=32 then desired=1 break end reg_1=add_i32(loc_1,
33376)loc_1=add_i32(loc_1,32768)FUNC_LIST[174](loc_4,reg_1,add_i64(load_i64(
memory_at_0,add_i32(loc_1,shl_i32(loc_2,3))),load_i64(memory_at_0,loc_4+16)),
load_i64(memory_at_0,add_i32(loc_1,shl_i32(loc_5,3))))loc_6=load_i64(memory_at_0
,loc_4)store_i32_n8(memory_at_0,loc_0+8,load_i32_u8(memory_at_0,loc_4+8))
store_i64(memory_at_0,loc_0,loc_6)GLOBAL_LIST[0].value=add_i32(loc_4,32)desired=
0 break end if desired then if desired==1 then desired=nil end break end
FUNC_LIST[492](loc_2,32,1057276)error('out of code bounds')end if desired then
if desired==0 then desired=nil end break end FUNC_LIST[492](loc_5,32,1057292)
error('out of code bounds')end end FUNC_LIST[289]=function(loc_0,loc_1,loc_2,
loc_3)local loc_4=0 local loc_5=0 local loc_6=0 local desired while true do
while true do while true do loc_4=load_f64(memory_at_0,add_i32(add_i32(loc_1,
band_i32(shr_u32(loc_2,12),248)),33024))loc_5=(if loc_4>=0e0 then 1 else 0)if
band_i32((if loc_4<4.294967296e9 then 1 else 0),loc_5)==0 then break end loc_6=
truncate_u32_f64(loc_4)desired=1 break end if desired then if desired==1 then
desired=nil end break end loc_6=0 break end store_i64(memory_at_0,add_i32(
add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),32768),extend_i64_i32((if loc_4>
4.294967295e9 then 4294967295 else(if loc_5~=0 then loc_6 else 0))))
store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[290]=function(loc_0,
loc_1,loc_2,loc_3,loc_4)local loc_5=0 local loc_6=0 local desired while true do
loc_5=sub_i32(GLOBAL_LIST[0].value,112)GLOBAL_LIST[0].value=loc_5 FUNC_LIST[189
](add_i32(loc_5,24),loc_2)store_i32(memory_at_0,loc_5+48,0)store_i64(memory_at_0
,loc_5+40,i64_ONE)loc_2=load_i32(memory_at_0,loc_5+32)FUNC_LIST[291](add_i32(
loc_5,16),loc_2)loc_6=add_i32(add_i32(loc_5,88),12)store_i64(memory_at_0,loc_6,
i64_ONE)store_i32(memory_at_0,loc_5+84,32)store_i32(memory_at_0,loc_5+92,1)
store_i32(memory_at_0,loc_5+88,1056080)store_i64(memory_at_0,loc_5+52,load_i64(
memory_at_0,loc_5+16))store_i32(memory_at_0,loc_5+80,add_i32(loc_5,52))
store_i32(memory_at_0,loc_5+96,add_i32(loc_5,80))FUNC_LIST[292](add_i32(loc_5,64
),add_i32(loc_5,88))FUNC_LIST[126](add_i32(loc_5,40),load_i32(memory_at_0,loc_5+
64),load_i32(memory_at_0,loc_5+72))FUNC_LIST[365](add_i32(loc_5,64))while true
do if loc_4==0 then break end while true do if loc_2>31 then break end
store_i64(memory_at_0,add_i32(loc_5,100),i64_ONE)store_i32(memory_at_0,loc_5+56,
31)store_i32(memory_at_0,loc_5+92,1)store_i32(memory_at_0,loc_5+88,1056140)
store_i32(memory_at_0,loc_5+52,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768))
store_i32(memory_at_0,loc_5+96,add_i32(loc_5,52))FUNC_LIST[292](add_i32(loc_5,64
),add_i32(loc_5,88))FUNC_LIST[126](add_i32(loc_5,40),load_i32(memory_at_0,loc_5+
64),load_i32(memory_at_0,loc_5+72))FUNC_LIST[365](add_i32(loc_5,64))desired=1
break end if desired then if desired==1 then desired=nil end break end FUNC_LIST
[492](loc_2,32,1056940)error('out of code bounds')end if desired then if desired
==0 then desired=nil end break end FUNC_LIST[291](add_i32(loc_5,8),load_i32(
memory_at_0,loc_5+36))store_i32(memory_at_0,add_i32(add_i32(loc_5,64),12),32)
store_i64(memory_at_0,loc_6,i64_from_u32(2,0))store_i32(memory_at_0,loc_5+68,31)
store_i32(memory_at_0,loc_5+92,2)store_i32(memory_at_0,loc_5+88,1056260)
store_i64(memory_at_0,loc_5+80,load_i64(memory_at_0,loc_5+8))store_i32(
memory_at_0,loc_5+72,add_i32(loc_5,80))store_i32(memory_at_0,loc_5+64,add_i32(
loc_5,24))store_i32(memory_at_0,loc_5+96,add_i32(loc_5,64))FUNC_LIST[292](
add_i32(loc_5,52),add_i32(loc_5,88))FUNC_LIST[126](add_i32(loc_5,40),load_i32(
memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5+60))FUNC_LIST[365](add_i32(
loc_5,52))while true do while true do if loc_4==0 then break end loc_4=load_i32(
memory_at_0,loc_5+36)if loc_4>31 then desired=1 break end store_i64(memory_at_0,
add_i32(loc_5,100),i64_ONE)store_i32(memory_at_0,loc_5+56,31)store_i32(
memory_at_0,loc_5+92,1)store_i32(memory_at_0,loc_5+88,1056140)store_i32(
memory_at_0,loc_5+52,add_i32(add_i32(loc_1,shl_i32(loc_4,3)),32768))store_i32(
memory_at_0,loc_5+96,add_i32(loc_5,52))FUNC_LIST[292](add_i32(loc_5,64),add_i32(
loc_5,88))FUNC_LIST[126](add_i32(loc_5,40),load_i32(memory_at_0,loc_5+64),
load_i32(memory_at_0,loc_5+72))FUNC_LIST[365](add_i32(loc_5,64))break end if
desired then if desired==1 then desired=nil end break end store_i64(memory_at_0,
add_i32(loc_5,100),i64_ZERO)store_i32(memory_at_0,loc_5+92,1)store_i32(
memory_at_0,loc_5+88,1056296)store_i32(memory_at_0,loc_5+96,1052280)FUNC_LIST[
292](add_i32(loc_5,64),add_i32(loc_5,88))FUNC_LIST[126](add_i32(loc_5,40),
load_i32(memory_at_0,loc_5+64),load_i32(memory_at_0,loc_5+72))FUNC_LIST[365](
add_i32(loc_5,64))store_i32(memory_at_0,add_i32(loc_0,8),load_i32(memory_at_0,
add_i32(add_i32(loc_5,40),8)))store_i64(memory_at_0,loc_0,load_i64(memory_at_0,
loc_5+40))GLOBAL_LIST[0].value=add_i32(loc_5,112)desired=0 break end if desired
then if desired==0 then desired=nil end break end FUNC_LIST[492](loc_4,32,
1056956)error('out of code bounds')end end FUNC_LIST[291]=function(loc_0,loc_1)
local loc_2=0 while true do loc_2=sub_i32(GLOBAL_LIST[0].value,48)GLOBAL_LIST[0]
.value=loc_2 store_i32(memory_at_0,loc_2+12,loc_1)while true do if loc_1<32 then
break end store_i64(memory_at_0,add_i32(loc_2,28),i64_ONE)store_i32(memory_at_0,
loc_2+20,1)store_i32(memory_at_0,loc_2+16,1056428)store_i32(memory_at_0,loc_2+44
,33)store_i32(memory_at_0,loc_2+24,add_i32(loc_2,40))store_i32(memory_at_0,loc_2
+40,add_i32(loc_2,12))FUNC_LIST[490](add_i32(loc_2,16),1056436)error(
'out of code bounds')end loc_1=shl_i32(loc_1,2)store_i32(memory_at_0,loc_0+4,
load_i32(memory_at_0,add_i32(loc_1,1057796)))store_i32(memory_at_0,loc_0,
load_i32(memory_at_0,add_i32(loc_1,1057924)))GLOBAL_LIST[0].value=add_i32(loc_2,
48)break end end FUNC_LIST[292]=function(loc_0,loc_1)local loc_2=0 local loc_3=0
local loc_4=0 local reg_0 local desired local br_map={}while true do loc_2=
sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_2 loc_3=load_i32(
memory_at_0,add_i32(loc_1,12))while true do while true do while true do while
true do while true do if not br_map[1]then br_map[1]=(function()return{[0]=0,1}
end)()end temp=br_map[1][load_i32(memory_at_0,loc_1+4)]or 2 if temp<1 then break
elseif temp>1 then desired=3 break else desired=4 break end end if desired then
if desired==4 then desired=nil end break end if loc_3~=0 then desired=3 break
end loc_3=1052280 loc_1=0 desired=2 break end if desired then if desired==3 then
desired=nil end break end if loc_3~=0 then break end loc_3=load_i32(memory_at_0,
loc_1)loc_1=load_i32(memory_at_0,loc_3+4)loc_3=load_i32(memory_at_0,loc_3)
desired=2 break end if desired then if desired==2 then desired=nil end break end
FUNC_LIST[484](loc_0,loc_1)desired=1 break end if desired then if desired==1
then desired=nil end break end FUNC_LIST[351](add_i32(loc_2,8),loc_1,0)loc_4=
load_i32(memory_at_0,loc_2+12)reg_0=FUNC_LIST[550](load_i32(memory_at_0,loc_2+8)
,loc_3,loc_1)loc_3=reg_0 store_i32(memory_at_0,loc_0+8,loc_1)store_i32(
memory_at_0,loc_0+4,loc_4)store_i32(memory_at_0,loc_0,loc_3)break end
GLOBAL_LIST[0].value=add_i32(loc_2,16)break end end FUNC_LIST[293]=function(
loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=i64_ZERO local
loc_7=0 while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value
=loc_4 loc_5=shr_u32(loc_2,20)FUNC_LIST[219](add_i32(loc_4,16),loc_1,loc_5)loc_6
=load_i64(memory_at_0,loc_4+16)while true do loc_7=load_i32_u8(memory_at_0,loc_4
+24)if loc_7~=23 then break end loc_7=band_i32(shr_u32(loc_2,7),31)loc_2=
band_i32(shr_u32(loc_2,15),31)while true do if load_i32_u8(memory_at_0,loc_1+
37689)~=0 then break end loc_6=bor_i64(band_i64(shr_i64(shl_i64(loc_6,
i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,4294967295)),band_i64(
loc_6,i64_from_u32(4294967295,0)))break end store_i64(memory_at_0,add_i32(
add_i32(loc_1,shl_i32(loc_7,3)),32768),loc_6)FUNC_LIST[220](loc_4,loc_1,loc_5,
band_i64(loc_6,bxor_i64(extend_i64_u32(loc_2),i64_from_u32(4294967295,4294967295
))))loc_6=load_i64(memory_at_0,loc_4)loc_7=load_i32_u8(memory_at_0,loc_4+8)break
end store_i32_n8(memory_at_0,loc_0+8,loc_7)store_i64(memory_at_0,loc_0,loc_6)
GLOBAL_LIST[0].value=add_i32(loc_4,32)break end end FUNC_LIST[294]=function(
loc_0,loc_1,loc_2,loc_3)while true do loc_1=add_i32(loc_1,33024)store_f64(
memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),(load_f64(memory_at_0,
add_i32(loc_1,band_i32(shr_u32(loc_2,12),248)))+load_f64(memory_at_0,add_i32(
loc_1,band_i32(shr_u32(loc_2,17),248)))))store_i32_n8(memory_at_0,loc_0+8,23)
break end end FUNC_LIST[295]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0
local loc_5=i64_ZERO local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].
value,16)GLOBAL_LIST[0].value=loc_4 FUNC_LIST[189](loc_4,loc_2)while true do
while true do loc_2=load_i32(memory_at_0,loc_4+12)if loc_2>31 then break end
loc_5=band_i64(load_i64(memory_at_0,loc_4),load_i64(memory_at_0,add_i32(add_i32(
loc_1,shl_i32(loc_2,3)),32768)))while true do if load_i32_u8(memory_at_0,loc_1+
37689)~=0 then break end loc_5=bor_i64(band_i64(shr_i64(shl_i64(loc_5,
i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,4294967295)),band_i64(
loc_5,i64_from_u32(4294967295,0)))break end if desired then if desired==2 then
desired=nil end break end loc_2=load_i32(memory_at_0,loc_4+8)if loc_2>=32 then
desired=1 break end store_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(loc_2,3)
),32768),loc_5)store_i32_n8(memory_at_0,loc_0+8,23)GLOBAL_LIST[0].value=add_i32(
loc_4,16)desired=0 break end if desired then if desired==1 then desired=nil end
break end FUNC_LIST[492](loc_2,32,1056516)error('out of code bounds')end if
desired then if desired==0 then desired=nil end break end FUNC_LIST[492](loc_2,
32,1056532)error('out of code bounds')end end FUNC_LIST[296]=function(loc_0,
loc_1,loc_2,loc_3)local loc_4=0 local loc_5=i64_ZERO local loc_6=i64_ZERO local
loc_7=i64_ZERO local desired while true do loc_4=add_i32(loc_1,32768)loc_5=
load_i64(memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2,12),248)))while true
do while true do loc_6=load_i64(memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2
,17),248)))if(if eq_i64(loc_6,i64_ZERO)then 1 else 0)==0 then break end loc_7=
loc_5 desired=1 break end if desired then if desired==1 then desired=nil end
break end loc_4=load_i32_u8(memory_at_0,loc_1+37689)while true do if ne_i64(
loc_6,i64_from_u32(4294967295,4294967295))then break end loc_7=i64_ZERO if
eq_i64(loc_5,(if loc_4~=0 then i64_from_u32(0,2147483648)else i64_from_u32(
2147483648,4294967295)))then desired=1 break end break end if desired then if
desired==1 then desired=nil end break end loc_7=i64_ZERO while true do if
eq_i64(loc_6,i64_from_u32(4294967295,4294967295))then break end loc_7=rem_i64(
loc_5,loc_6)break end if desired then if desired==1 then desired=nil end break
end if loc_4~=0 then break end loc_7=bor_i64(band_i64(shr_i64(shl_i64(loc_7,
i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,4294967295)),band_i64(
loc_7,i64_from_u32(4294967295,0)))break end store_i64(memory_at_0,add_i32(
add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),32768),loc_7)store_i32_n8(
memory_at_0,loc_0+8,23)break end end FUNC_LIST[297]=function(loc_0,loc_1,loc_2,
loc_3)while true do loc_1=add_i32(loc_1,32768)store_i64(memory_at_0,add_i32(
loc_1,band_i32(shr_u32(loc_2,4),248)),extend_i64_n32(sub_i64(load_i64(
memory_at_0,add_i32(loc_1,band_i32(shr_u32(loc_2,12),248))),load_i64(memory_at_0
,add_i32(loc_1,band_i32(shr_u32(loc_2,17),248))))))store_i32_n8(memory_at_0,
loc_0+8,23)break end end FUNC_LIST[298]=function(loc_0,loc_1,loc_2,loc_3)while
true do loc_1=add_i32(loc_1,32768)store_i64(memory_at_0,add_i32(loc_1,band_i32(
shr_u32(loc_2,4),248)),extend_i64_i32(shr_i32(load_i32(memory_at_0,add_i32(loc_1
,band_i32(shr_u32(loc_2,12),248))),load_i32(memory_at_0,add_i32(loc_1,band_i32(
shr_u32(loc_2,17),248))))))store_i32_n8(memory_at_0,loc_0+8,23)break end end
FUNC_LIST[299]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=
i64_ZERO while true do loc_4=add_i32(loc_1,32768)loc_5=bor_i64(load_i64(
memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2,17),248))),load_i64(memory_at_0
,add_i32(loc_4,band_i32(shr_u32(loc_2,12),248))))while true do if load_i32_u8(
memory_at_0,loc_1+37689)~=0 then break end loc_5=bor_i64(band_i64(shr_i64(
shl_i64(loc_5,i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,4294967295)
),band_i64(loc_5,i64_from_u32(4294967295,0)))break end store_i64(memory_at_0,
add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),32768),loc_5)store_i32_n8(
memory_at_0,loc_0+8,23)break end end FUNC_LIST[300]=function(loc_0,loc_1,loc_2,
loc_3)local loc_4=0 local loc_5=0 local loc_6=0 local loc_7=0 local loc_8=
i64_ZERO local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)
GLOBAL_LIST[0].value=loc_4 loc_5=add_i32(loc_1,33376)loc_6=add_i32(add_i32(loc_1
,band_i32(shr_u32(loc_2,12),248)),32768)FUNC_LIST[165](add_i32(loc_4,16),loc_5,
load_i64(memory_at_0,loc_6))while true do while true do loc_7=load_i32_u8(
memory_at_0,loc_4+24)if loc_7==23 then break end loc_8=load_i64(memory_at_0,
loc_4+16)desired=1 break end if desired then if desired==1 then desired=nil end
break end loc_8=load_i64(memory_at_0,loc_4+16)FUNC_LIST[174](loc_4,loc_5,
load_i64(memory_at_0,loc_6),load_i64(memory_at_0,add_i32(add_i32(loc_1,band_i32(
shr_u32(loc_2,17),248)),32768)))while true do loc_7=load_i32_u8(memory_at_0,
loc_4+8)if loc_7==23 then break end loc_8=load_i64(memory_at_0,loc_4)desired=1
break end if desired then if desired==1 then desired=nil end break end
store_i64(memory_at_0,add_i32(add_i32(loc_1,shl_i32(band_i32(shr_u32(loc_2,7),31
),3)),32768),loc_8)loc_7=23 break end store_i32_n8(memory_at_0,loc_0+8,loc_7)
store_i64(memory_at_0,loc_0,loc_8)GLOBAL_LIST[0].value=add_i32(loc_4,32)break
end end FUNC_LIST[301]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=i64_ZERO
local loc_5=0 while true do loc_4=load_i64(memory_at_0,add_i32(add_i32(loc_1,
band_i32(shr_u32(loc_2,12),248)),32768))loc_5=load_i32_u8(memory_at_0,loc_1+
37689)loc_4=shr_u64((if loc_5~=0 then loc_4 else band_i64(loc_4,i64_from_u32(
4294967295,0))),extend_i64_u32(band_i32((if loc_5~=0 then 63 else 31),shr_u32(
loc_2,20))))while true do if loc_5~=0 then break end loc_4=bor_i64(band_i64(
shr_i64(shl_i64(loc_4,i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,
4294967295)),band_i64(loc_4,i64_from_u32(4294967295,0)))break end store_i64(
memory_at_0,add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),32768),loc_4)
store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[302]=function(loc_0,
loc_1,loc_2,loc_3)local loc_4=0 local loc_5=i64_ZERO local loc_6=0 local loc_7=
i64_ZERO local reg_0 local reg_1 while true do loc_4=sub_i32(GLOBAL_LIST[0].
value,16)GLOBAL_LIST[0].value=loc_4 FUNC_LIST[219](loc_4,loc_1,321)loc_5=
load_i64(memory_at_0,loc_4)while true do loc_6=load_i32_u8(memory_at_0,loc_4+8)
if loc_6~=23 then break end store_i64(memory_at_0,loc_1+33288,loc_5)loc_7=
load_i64(memory_at_0,loc_1+6144)store_i32_n8(memory_at_0,loc_1+37688,band_i32(
shr_u32(wrap_i32_i64(loc_7),8),1))store_i64(memory_at_0,loc_1+6144,bor_i64(
bor_i64(band_i64(loc_7,i64_from_u32(4294967005,4294967295)),band_i64(shr_u64(
loc_7,i64_from_u32(4,0)),i64_from_u32(2,0))),i64_from_u32(32,0)))reg_1=FUNC_LIST
[282](add_i32(loc_1,37688))store_i32_n8(memory_at_0,add_i32(loc_1,37681),
band_i32(reg_1,255))break end store_i32_n8(memory_at_0,loc_0+8,loc_6)store_i64(
memory_at_0,loc_0,loc_5)GLOBAL_LIST[0].value=add_i32(loc_4,16)break end end
FUNC_LIST[303]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=
i64_ZERO while true do loc_4=add_i32(loc_1,32768)loc_5=sub_i64(load_i64(
memory_at_0,add_i32(loc_4,band_i32(shr_u32(loc_2,12),248))),load_i64(memory_at_0
,add_i32(loc_4,band_i32(shr_u32(loc_2,17),248))))while true do if load_i32_u8(
memory_at_0,loc_1+37689)~=0 then break end loc_5=bor_i64(band_i64(shr_i64(
shl_i64(loc_5,i64_from_u32(32,0)),i64_from_u32(63,0)),i64_from_u32(0,4294967295)
),band_i64(loc_5,i64_from_u32(4294967295,0)))break end store_i64(memory_at_0,
add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,4),248)),32768),loc_5)store_i32_n8(
memory_at_0,loc_0+8,23)break end end FUNC_LIST[304]=function(loc_0,loc_1,loc_2,
loc_3)local loc_4=0 local loc_5=0 local loc_6=0 local loc_7=0 local loc_8=
i64_ZERO local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)
GLOBAL_LIST[0].value=loc_4 loc_5=add_i32(loc_1,33376)loc_6=add_i32(add_i32(loc_1
,band_i32(shr_u32(loc_2,12),248)),32768)FUNC_LIST[164](add_i32(loc_4,16),loc_5,
load_i64(memory_at_0,loc_6))while true do while true do loc_7=load_i32_u8(
memory_at_0,loc_4+24)if loc_7==23 then break end loc_8=load_i64(memory_at_0,
loc_4+16)desired=1 break end if desired then if desired==1 then desired=nil end
break end loc_6=load_i32(memory_at_0,loc_4+16)loc_7=load_i32(memory_at_0,
add_i32(add_i32(loc_1,band_i32(shr_u32(loc_2,17),248)),32768))FUNC_LIST[173](
loc_4,loc_5,load_i64(memory_at_0,loc_6),(if loc_6>loc_7 then loc_6 else loc_7))
while true do loc_7=load_i32_u8(memory_at_0,loc_4+8)if loc_7==23 then break end
loc_8=load_i64(memory_at_0,loc_4)desired=1 break end if desired then if desired
==1 then desired=nil end break end store_i64(memory_at_0,add_i32(add_i32(loc_1,
shl_i32(band_i32(shr_u32(loc_2,7),31),3)),32768),extend_i64_i32(loc_6))loc_7=23
break end store_i32_n8(memory_at_0,loc_0+8,loc_7)store_i64(memory_at_0,loc_0,
loc_8)GLOBAL_LIST[0].value=add_i32(loc_4,32)break end end FUNC_LIST[305]=
function(loc_0,loc_1,loc_2,loc_3)while true do store_i32_n8(memory_at_0,loc_1+
37690,1)store_i32_n8(memory_at_0,loc_0+8,23)break end end FUNC_LIST[306]=
function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local desired local br_map={}
while true do loc_4=8 while true do while true do while true do while true do if
not br_map[1]then br_map[1]=(function()return{[0]=3,0,1,2}end)()end temp=br_map[
1][load_i32_u8(memory_at_0,loc_1+37688)]or 3 if temp<2 then if temp<1 then break
else desired=3 break end elseif temp>2 then desired=1 break else desired=2 break
end end if desired then if desired==3 then desired=nil end break end loc_4=9
desired=1 break end if desired then if desired==2 then desired=nil end break end
FUNC_LIST[120](1056740,22,1056764)error('out of code bounds')end if desired then
if desired==1 then desired=nil end break end loc_4=10 break end store_i32_n8(
memory_at_0,loc_0+8,loc_4)store_i64(memory_at_0,loc_0,loc_3)break end end
FUNC_LIST[307]=function(loc_0,loc_1)local reg_0 while true do reg_0=FUNC_LIST[
531](load_i32(memory_at_0,loc_0),load_i32(memory_at_0,loc_0+8),loc_1)break end
return reg_0 end FUNC_LIST[308]=function(loc_0,loc_1,loc_2)local loc_3=0 local
reg_0 while true do while true do loc_3=load_i32(memory_at_0,loc_0+8)if loc_3>
loc_1 then break end FUNC_LIST[492](loc_1,loc_3,loc_2)error('out of code bounds'
)end reg_0=add_i32(load_i32(memory_at_0,loc_0),shl_i32(loc_1,4))break end return
reg_0 end FUNC_LIST[309]=function(loc_0)local loc_1=0 local reg_0 local desired
local br_map={}while true do loc_1=0 while true do while true do while true do
while true do if not br_map[1]then br_map[1]=(function()return{[0]=3,0,1,2}end)(
)end temp=br_map[1][load_i32_u8(memory_at_0,loc_0)]or 3 if temp<2 then if temp<1
then break else desired=3 break end elseif temp>2 then desired=1 break else
desired=2 break end end if desired then if desired==3 then desired=nil end break
end reg_0=1 desired=0 break end if desired then if desired==2 then desired=nil
end break end FUNC_LIST[120](1052280,14,1052380)error('out of code bounds')end
if desired then if desired==1 then desired=nil end break end loc_1=3 break end
if desired then if desired==0 then desired=nil end break end reg_0=loc_1 break
end return reg_0 end FUNC_LIST[310]=function(loc_0,loc_1,loc_2)local loc_3=0
local loc_4=0 local loc_5=0 local loc_6=i64_ZERO local loc_7=i64_ZERO local
reg_0 local desired while true do loc_3=sub_i32(GLOBAL_LIST[0].value,31696)
GLOBAL_LIST[0].value=loc_3 loc_4=0 while true do while true do if loc_4==256
then desired=1 break end store_i64(memory_at_0,add_i32(add_i32(loc_3,27128),
loc_4),i64_ZERO)loc_4=add_i32(loc_4,8)continue end if desired then if desired==1
then desired=nil end break end break end FUNC_LIST[153](add_i32(loc_3,27384),1,
loc_1,loc_2)store_i64(memory_at_0,loc_3+432,i64_from_u32(4,0))loc_4=0 loc_1=4096
loc_2=0 while true do while true do store_i32(memory_at_0,loc_3+440,loc_4)if
loc_1==0 then desired=1 break end loc_5=(if loc_2~=0 then add_i32(loc_2,
4294967295)else 4096)while true do if loc_4~=load_i32(memory_at_0,loc_3+436)then
break end FUNC_LIST[361](add_i32(loc_3,432),loc_4)loc_4=load_i32(memory_at_0,
loc_3+440)break end if desired then if desired==2 then desired=nil continue end
break end loc_4=add_i32(load_i32(memory_at_0,loc_3+432),shl_i32(loc_4,4))
store_i32(memory_at_0,loc_4+12,loc_5)loc_2=add_i32(loc_2,1)store_i32(memory_at_0
,loc_4+8,loc_2)store_i64(memory_at_0,loc_4,i64_from_u32(0,116))loc_1=add_i32(
loc_1,4294967295)loc_4=add_i32(load_i32(memory_at_0,loc_3+440),1)continue end if
desired then if desired==1 then desired=nil end break end break end FUNC_LIST[
119](loc_3,1052268)loc_6=load_i64(memory_at_0,loc_3)loc_7=load_i64(memory_at_0,
loc_3+8)store_i32(memory_at_0,add_i32(loc_0,33360),load_i32(memory_at_0,add_i32(
loc_3,440)))store_i64(memory_at_0,loc_0+33352,load_i64(memory_at_0,loc_3+432))
store_i64(memory_at_0,loc_0+33336,i64_ZERO)store_i64(memory_at_0,add_i32(loc_0,
33344),i64_ZERO)reg_0=FUNC_LIST[551](add_i32(add_i32(loc_3,432),26608),0,88)
reg_0=FUNC_LIST[551](add_i32(loc_3,16),0,160)reg_0=FUNC_LIST[550](add_i32(
add_i32(loc_3,16),160),add_i32(loc_3,27128),256)reg_0=FUNC_LIST[551](loc_0,0,
6152)loc_4=reg_0 reg_0=FUNC_LIST[551](add_i32(loc_3,432),0,26608)reg_0=FUNC_LIST
[550](add_i32(loc_4,33376),add_i32(loc_3,27384),4312)store_i64(memory_at_0,loc_4
+6152,i64_from_u32(2148806959,2147483648))reg_0=FUNC_LIST[550](add_i32(loc_4,
6160),add_i32(loc_3,432),26696)store_i64(memory_at_0,loc_4+32856,i64_from_u32(
4128,0))reg_0=FUNC_LIST[550](add_i32(loc_4,32864),add_i32(loc_3,16),416)
store_i64(memory_at_0,add_i32(loc_4,33296),i64_ZERO)store_i64(memory_at_0,
add_i32(loc_4,33288),i64_ZERO)store_i64(memory_at_0,loc_4+33280,i64_ZERO)
store_i32_n8(memory_at_0,loc_4+37692,0)store_i32(memory_at_0,loc_4+37688,259)
store_i64(memory_at_0,loc_4+33364,i64_from_u32(0,4095))store_i64(memory_at_0,
loc_4+33328,loc_7)store_i64(memory_at_0,loc_4+33320,loc_6)store_i32(memory_at_0,
loc_4+33316,0)store_i64(memory_at_0,loc_4+33308,i64_ZERO)store_i32(memory_at_0,
loc_4+33304,1052272)GLOBAL_LIST[0].value=add_i32(loc_3,31696)break end end
FUNC_LIST[311]=function(loc_0)local loc_1=0 local loc_2=i64_ZERO local loc_3=0
local loc_4=i64_ZERO local loc_5=i64_ZERO local loc_6=0 local loc_7=0 local
loc_8=i64_ZERO local loc_9=0 local loc_10=0 local loc_11=i64_ZERO local loc_12=
i64_ZERO local loc_13=0 local reg_0 local reg_1 local reg_2 local desired while
true do loc_1=sub_i32(GLOBAL_LIST[0].value,96)GLOBAL_LIST[0].value=loc_1 while
true do if load_i32_u8(memory_at_0,loc_0+37690)~=0 then break end loc_2=
load_i64(memory_at_0,loc_0+33288)FUNC_LIST[155](add_i32(loc_1,56),add_i32(loc_0,
33376),loc_2)while true do while true do while true do while true do loc_3=
load_i32_u8(memory_at_0,loc_1+64)if loc_3~=23 then break end loc_3=load_i32(
memory_at_0,loc_1+56)store_i32(memory_at_0,loc_1+44,loc_3)loc_4=load_i64(
memory_at_0,loc_0+33288)store_i64(memory_at_0,loc_1+48,loc_4)while true do while
true do if band_i32(loc_3,3)~=3 then break end loc_5=add_i64(loc_4,i64_from_u32(
4,0))desired=6 break end if desired then if desired==6 then desired=nil end
break end loc_5=add_i64(loc_4,i64_from_u32(2,0))reg_0=FUNC_LIST[312](band_i32(
loc_3,65535))loc_3=reg_0 break end if desired then if desired==5 then desired=
nil end break end store_i64(memory_at_0,loc_0+33288,loc_5)store_i32(memory_at_0,
loc_1+56,loc_3)while true do if load_i32(memory_at_0,add_i32(loc_0,33316))==0
then break end reg_0=FUNC_LIST[124](add_i32(loc_0,33320),add_i32(loc_1,56))loc_5
=reg_0 loc_6=load_i32(memory_at_0,add_i32(loc_0,33308))loc_7=band_i32(loc_6,
wrap_i32_i64(loc_5))loc_8=mul_i64(band_i64(shr_u64(loc_5,i64_from_u32(25,0)),
i64_from_u32(127,0)),i64_from_u32(16843009,16843009))loc_9=load_i32(memory_at_0,
loc_0+33304)loc_10=0 while true do loc_11=load_i64(memory_at_0,add_i32(loc_9,
loc_7))loc_5=bxor_i64(loc_11,loc_8)loc_5=band_i64(band_i64(bxor_i64(loc_5,
i64_from_u32(4294967295,4294967295)),add_i64(loc_5,i64_from_u32(4278124287,
4278124286))),i64_from_u32(2155905152,2155905152))while true do while true do if
ne_i64(loc_5,i64_ZERO)then break end if(if eq_i64(band_i64(band_i64(loc_11,
shl_i64(loc_11,i64_ONE)),i64_from_u32(2155905152,2155905152)),i64_ZERO)then 1
else 0)==0 then desired=6 break end loc_10=add_i32(loc_10,8)loc_7=band_i32(
add_i32(loc_10,loc_7),loc_6)desired=7 break end if desired then if desired==8
then desired=nil continue end break end loc_12=ctz_i64(loc_5)loc_5=band_i64(
add_i64(loc_5,i64_from_u32(4294967295,4294967295)),loc_5)loc_13=sub_i32(loc_9,
shl_i32(band_i32(add_i32(shr_u32(wrap_i32_i64(loc_12),3),loc_7),loc_6),3))if
loc_3~=load_i32(memory_at_0,add_i32(loc_13,4294967288))then continue end break
end if desired then if desired==7 then desired=nil continue end break end break
end if desired then if desired==6 then desired=nil end break end loc_7=add_i32(
loc_0,33336)store_i64(memory_at_0,loc_7,add_i64(load_i64(memory_at_0,loc_7),
i64_ONE))while true do loc_9=load_i32(memory_at_0,add_i32(loc_0,33364))loc_7=
add_i32(loc_13,4294967292)loc_6=load_i32(memory_at_0,loc_7)if loc_9==loc_6 then
break end loc_9=add_i32(loc_0,33352)reg_0=FUNC_LIST[308](loc_9,loc_6,1057524)
loc_13=load_i32(memory_at_0,reg_0+8)reg_0=FUNC_LIST[308](loc_9,load_i32(
memory_at_0,loc_7),1057540)loc_6=load_i32(memory_at_0,reg_0+12)while true do
while true do if load_i32(memory_at_0,add_i32(loc_0,33368))==load_i32(
memory_at_0,loc_7)then break end reg_0=FUNC_LIST[308](loc_9,loc_13,1057556)
store_i32(memory_at_0,reg_0+12,loc_6)desired=8 break end if desired then if
desired==8 then desired=nil end break end store_i32(memory_at_0,loc_0+33368,
loc_6)break end if desired then if desired==7 then desired=nil end break end
reg_0=FUNC_LIST[308](loc_9,loc_6,1057572)store_i32(memory_at_0,reg_0+8,loc_13)
reg_0=FUNC_LIST[308](loc_9,load_i32(memory_at_0,loc_7),1057588)store_i32(
memory_at_0,reg_0+12,4096)loc_6=load_i32(memory_at_0,loc_0+33364)reg_0=FUNC_LIST
[308](loc_9,load_i32(memory_at_0,loc_7),1057604)store_i32(memory_at_0,reg_0+8,
loc_6)loc_6=load_i32(memory_at_0,loc_7)reg_0=FUNC_LIST[308](loc_9,load_i32(
memory_at_0,loc_0+33364),1057620)store_i32(memory_at_0,reg_0+12,loc_6)store_i32(
memory_at_0,loc_0+33364,load_i32(memory_at_0,loc_7))loc_9=load_i32(memory_at_0,
loc_7)break end if desired then if desired==6 then desired=nil end break end
reg_0=FUNC_LIST[308](add_i32(loc_0,33352),loc_9,1057636)loc_6=load_i32(
memory_at_0,reg_0+4)if loc_6<116 then desired=3 break end FUNC_LIST[492](loc_6,
116,1055820)error('out of code bounds')end if desired then if desired==5 then
desired=nil end break end loc_7=add_i32(loc_0,33344)store_i64(memory_at_0,loc_7,
add_i64(load_i64(memory_at_0,loc_7),i64_ONE))FUNC_LIST[313](add_i32(loc_1,32),
loc_3)if load_i32(memory_at_0,loc_1+32)==0 then desired=4 break end store_i32(
memory_at_0,add_i32(add_i32(loc_1,80),12),34)store_i64(memory_at_0,add_i32(
add_i32(loc_1,56),12),i64_from_u32(2,0))store_i32(memory_at_0,loc_1+60,2)
store_i32(memory_at_0,loc_1+56,1052428)store_i32(memory_at_0,loc_1+84,31)
store_i32(memory_at_0,loc_1+64,add_i32(loc_1,80))store_i32(memory_at_0,loc_1+88,
add_i32(loc_1,44))store_i32(memory_at_0,loc_1+80,add_i32(loc_1,48))FUNC_LIST[490
](add_i32(loc_1,56),1052444)error('out of code bounds')end if desired then if
desired==4 then desired=nil end break end store_i64(memory_at_0,loc_0+33288,
add_i64(load_i64(memory_at_0,loc_0+33288),i64_from_u32(4,0)))loc_5=load_i64(
memory_at_0,loc_1+56)desired=2 break end if desired then if desired==3 then
desired=nil end break end loc_13=add_i32(loc_0,33304)loc_6=load_i32(memory_at_0,
loc_1+36)while true do loc_9=add_i32(loc_0,33352)loc_7=load_i32(memory_at_0,
add_i32(loc_0,33368))reg_0=FUNC_LIST[308](loc_9,loc_7,1057652)if load_i32(
memory_at_0,reg_0+4)==116 then break end reg_2=FUNC_LIST[308](loc_9,loc_7,
1057668)FUNC_LIST[381](add_i32(loc_1,24),loc_13,reg_2)break end if desired then
if desired==3 then desired=nil end break end reg_1=FUNC_LIST[308](loc_9,loc_7,
1057684)loc_10=load_i32(memory_at_0,reg_1+12)store_i32(memory_at_0,loc_0+33368,
loc_10)reg_0=FUNC_LIST[308](loc_9,loc_10,1057700)store_i32(memory_at_0,reg_0+8,
4096)FUNC_LIST[380](add_i32(loc_1,16),loc_13,loc_3,loc_7)reg_0=FUNC_LIST[308](
loc_9,loc_7,1057716)store_i32(memory_at_0,reg_0+12,4096)loc_13=add_i32(loc_0,
33364)loc_10=load_i32(memory_at_0,loc_13)reg_0=FUNC_LIST[308](loc_9,loc_7,
1057732)store_i32(memory_at_0,reg_0+8,loc_10)reg_0=FUNC_LIST[308](loc_9,loc_7,
1057748)store_i32(memory_at_0,reg_0,loc_3)reg_0=FUNC_LIST[308](loc_9,loc_7,
1057764)store_i32(memory_at_0,reg_0+4,loc_6)reg_0=FUNC_LIST[308](loc_9,load_i32(
memory_at_0,loc_13),1057780)store_i32(memory_at_0,reg_0+12,loc_7)store_i32(
memory_at_0,loc_13,loc_7)if loc_6<116 then break end FUNC_LIST[492](loc_6,116,
1052460)error('out of code bounds')end if desired then if desired==2 then
desired=nil end break end TABLE_LIST[0].data[load_i32(memory_at_0,add_i32(
mul_i32(loc_6,24),1053044))](loc_1,loc_0,loc_3,loc_4)loc_5=load_i64(memory_at_0,
loc_1)loc_3=load_i32_u8(memory_at_0,loc_1+8)store_i64(memory_at_0,loc_0+32768,
i64_ZERO)if loc_3==23 then desired=1 break end break end if desired then if
desired==1 then desired=nil end break end reg_0=FUNC_LIST[314](loc_0,loc_5,loc_3
,loc_2,0)break end FUNC_LIST[154](add_i32(loc_0,33376),add_i32(loc_0,6688))
loc_12=load_i64(memory_at_0,loc_0+33288)while true do while true do while true
do loc_5=band_i64(load_i64(memory_at_0,loc_0+6176),load_i64(memory_at_0,loc_0+
6688))if eq_i64(band_i64(loc_5,i64_from_u32(2048,0)),i64_ZERO)then break end
loc_2=i64_from_u32(4294965247,4294967295)reg_0=FUNC_LIST[314](loc_0,loc_12,22,
loc_12,1)if reg_0~=0 then desired=2 break end break end if desired then if
desired==2 then desired=nil end break end while true do if eq_i64(band_i64(loc_5
,i64_from_u32(8,0)),i64_ZERO)then break end loc_2=i64_from_u32(4294967287,
4294967295)reg_0=FUNC_LIST[314](loc_0,load_i64(memory_at_0,loc_0+33288),16,
loc_12,1)if reg_0~=0 then desired=2 break end break end if desired then if
desired==2 then desired=nil end break end while true do if eq_i64(band_i64(loc_5
,i64_from_u32(128,0)),i64_ZERO)then break end loc_2=i64_from_u32(4294967167,
4294967295)reg_0=FUNC_LIST[314](loc_0,load_i64(memory_at_0,loc_0+33288),19,
loc_12,1)if reg_0~=0 then desired=2 break end break end if desired then if
desired==2 then desired=nil end break end while true do if eq_i64(band_i64(loc_5
,i64_from_u32(512,0)),i64_ZERO)then break end loc_2=i64_from_u32(4294966783,
4294967295)reg_0=FUNC_LIST[314](loc_0,load_i64(memory_at_0,loc_0+33288),21,
loc_12,1)if reg_0~=0 then desired=2 break end break end if desired then if
desired==2 then desired=nil end break end while true do if eq_i64(band_i64(loc_5
,i64_from_u32(2,0)),i64_ZERO)then break end loc_2=i64_from_u32(4294966783,
4294967295)reg_0=FUNC_LIST[314](loc_0,load_i64(memory_at_0,loc_0+33288),15,
loc_12,1)if reg_0~=0 then desired=2 break end break end if desired then if
desired==2 then desired=nil end break end if eq_i64(band_i64(loc_5,i64_from_u32(
32,0)),i64_ZERO)then desired=1 break end loc_2=i64_from_u32(4294967263,
4294967295)reg_0=FUNC_LIST[314](loc_0,load_i64(memory_at_0,loc_0+33288),18,
loc_12,1)if reg_0==0 then desired=1 break end break end if desired then if
desired==1 then desired=nil end break end store_i32_n8(memory_at_0,loc_0+37690,0
)store_i64(memory_at_0,loc_0+6688,band_i64(load_i64(memory_at_0,loc_0+6688),
loc_2))break end loc_5=add_i64(load_i64(memory_at_0,loc_0+33280),i64_ONE)
store_i64(memory_at_0,loc_0+24576,loc_5)store_i64(memory_at_0,loc_0+33280,loc_5)
GLOBAL_LIST[0].value=add_i32(loc_1,96)break end end FUNC_LIST[312]=function(
loc_0)local loc_1=0 local loc_2=0 local loc_3=0 local loc_4=0 local loc_5=0
local reg_0 local desired local br_map={}while true do loc_1=band_i32(shr_u32(
loc_0,13),7)loc_2=4294967295 while true do while true do while true do while
true do while true do while true do while true do while true do while true do
while true do while true do while true do while true do while true do while true
do while true do while true do while true do while true do while true do while
true do while true do while true do while true do while true do while true do
while true do while true do while true do while true do while true do while true
do while true do while true do if not br_map[1]then br_map[1]=(function()return{
[0]=0,1,2}end)()end temp=br_map[1][band_i32(loc_0,3)]or 33 if temp<2 then if
temp<1 then break else desired=33 break end elseif temp>2 then desired=1 break
else desired=32 break end end if desired then if desired==33 then desired=nil
end break end if not br_map[2]then br_map[2]=(function()return{[0]=8,2,3,4,32,5,
6,7}end)()end temp=br_map[2][loc_1]or 32 if temp<6 then if temp<4 then if temp<3
then desired=31 break else desired=30 break end elseif temp>4 then desired=28
break else desired=29 break end elseif temp>6 then if temp<8 then desired=26
break elseif temp>8 then desired=1 break else desired=25 break end else desired=
27 break end end if desired then if desired==32 then desired=nil end break end
if not br_map[3]then br_map[3]=(function()return{[0]=8,15,16,9,10,11,12,13}end)(
)end temp=br_map[3][loc_1]or 8 if temp<12 then if temp<10 then if temp<9 then
desired=24 break else desired=23 break end elseif temp>10 then desired=21 break
else desired=22 break end elseif temp>12 then if temp<15 then desired=19 break
elseif temp>15 then desired=16 break else desired=17 break end else desired=20
break end end if desired then if desired==31 then desired=nil end break end if
not br_map[4]then br_map[4]=(function()return{[0]=25,26,27,28,29,22,23,24}end)()
end temp=br_map[4][loc_1]or 25 if temp<26 then if temp<24 then if temp<23 then
desired=9 break else desired=8 break end elseif temp>24 then desired=6 break
else desired=7 break end elseif temp>26 then if temp<28 then desired=4 break
elseif temp>28 then desired=2 break else desired=3 break end else desired=5
break end end if desired then if desired==30 then desired=nil end break end
reg_0=bor_i32(bor_i32(bor_i32(band_i32(shl_i32(loc_0,8),229376),shl_i32(bor_i32(
band_i32(shr_u32(loc_0,7),56),band_i32(shl_i32(loc_0,1),192)),20)),band_i32(
shl_i32(loc_0,5),896)),275463)desired=0 break end if desired then if desired==29
then desired=nil end break end reg_0=bor_i32(bor_i32(bor_i32(band_i32(shl_i32(
loc_0,8),229376),shl_i32(bor_i32(bor_i32(band_i32(shr_u32(loc_0,7),56),band_i32(
shr_u32(loc_0,4),4)),band_i32(shl_i32(loc_0,1),64)),20)),band_i32(shl_i32(loc_0,
5),896)),271363)desired=0 break end if desired then if desired==28 then desired=
nil end break end reg_0=bor_i32(bor_i32(bor_i32(band_i32(shl_i32(loc_0,8),229376
),shl_i32(bor_i32(band_i32(shr_u32(loc_0,7),56),band_i32(shl_i32(loc_0,1),192)),
20)),band_i32(shl_i32(loc_0,5),896)),275459)desired=0 break end if desired then
if desired==27 then desired=nil end break end reg_0=bor_i32(bor_i32(bor_i32(
bor_i32(band_i32(shl_i32(loc_0,18),7340032),shl_i32(bor_i32(band_i32(shr_u32(
loc_0,7),32),band_i32(shl_i32(loc_0,1),192)),20)),band_i32(shl_i32(loc_0,8),
229376)),band_i32(loc_0,3072)),8663079)desired=0 break end if desired then if
desired==26 then desired=nil end break end loc_1=shr_u32(loc_0,7)reg_0=bor_i32(
bor_i32(bor_i32(bor_i32(band_i32(shl_i32(loc_0,18),7340032),shl_i32(bor_i32(
band_i32(loc_1,32),band_i32(shl_i32(loc_0,1),64)),20)),band_i32(shl_i32(loc_0,8)
,229376)),shl_i32(bor_i32(band_i32(loc_1,24),band_i32(shr_u32(loc_0,4),4)),7)),
8658979)desired=0 break end if desired then if desired==25 then desired=nil end
break end reg_0=bor_i32(bor_i32(bor_i32(bor_i32(band_i32(shl_i32(loc_0,18),
7340032),shl_i32(bor_i32(band_i32(shr_u32(loc_0,7),32),band_i32(shl_i32(loc_0,1)
,192)),20)),band_i32(shl_i32(loc_0,8),229376)),band_i32(loc_0,3072)),8663075)
desired=0 break end if desired then if desired==24 then desired=nil end break
end reg_0=bor_i32(bor_i32(band_i32(shr_u32(loc_0,7),48),band_i32(shr_u32(loc_0,1
),960)),band_i32(shr_u32(loc_0,4),4))loc_0=shr_u32(loc_0,2)loc_1=bor_i32(reg_0,
band_i32(loc_0,8))if loc_1==0 then desired=1 break end reg_0=bor_i32(bor_i32(
shl_i32(loc_1,20),band_i32(shl_i32(loc_0,7),896)),66579)desired=0 break end if
desired then if desired==23 then desired=nil end break end loc_1=shr_u32(loc_0,7
)loc_2=bor_i32(bor_i32(band_i32(shr_u32(loc_0,2),31),band_i32(loc_1,32)),
band_i32(shr_i32(shl_i32(loc_0,19),31),4294967232))loc_0=band_i32(loc_1,31)if
loc_0~=0 then desired=18 break end reg_0=(if bor_i32(loc_2,loc_0)~=0 then
4294967295 else 19)desired=0 break end if desired then if desired==22 then
desired=nil end break end loc_1=band_i32(shr_u32(loc_0,7),31)if not br_map[5]
then br_map[5]=(function()return{[0]=21,8,7}end)()end temp=br_map[5][loc_1]or 8
if temp<8 then desired=15 break elseif temp>8 then desired=1 break else desired=
14 break end end if desired then if desired==21 then desired=nil end break end
if not br_map[6]then br_map[6]=(function()return{[0]=8,9,10,11}end)()end temp=
br_map[6][band_i32(shr_u32(loc_0,10),3)]or 8 if temp<10 then if temp<9 then
desired=13 break else desired=12 break end elseif temp>10 then desired=10 break
else desired=11 break end end if desired then if desired==20 then desired=nil
end break end loc_1=shr_i32(shl_i32(loc_0,19),31)loc_2=shr_u32(loc_0,1)reg_0=
bor_i32(bor_i32(shl_i32(bor_i32(bor_i32(band_i32(loc_1,524288),band_i32(shl_i32(
bor_i32(bor_i32(bor_i32(bor_i32(bor_i32(bor_i32(band_i32(shr_u32(loc_0,2),14),
band_i32(shl_i32(loc_0,3),32)),band_i32(loc_2,768)),band_i32(shl_i32(loc_0,2),
1024)),band_i32(loc_2,64)),band_i32(shl_i32(loc_0,1),128)),band_i32(shr_u32(
loc_0,7),16)),8),523776)),band_i32(shr_u32(loc_0,4),256)),12),band_i32(loc_1,
1044480)),111)desired=0 break end if desired then if desired==19 then desired=
nil end break end loc_1=shr_i32(shl_i32(loc_0,19),31)loc_2=band_i32(loc_1,
4294966784)reg_0=bor_i32(bor_i32(bor_i32(band_i32(shl_i32(loc_0,13),7340032),
shl_i32(bor_i32(band_i32(shr_u32(bor_i32(bor_i32(bor_i32(band_i32(shr_u32(loc_0,
4),256),band_i32(shl_i32(loc_0,1),192)),band_i32(shl_i32(loc_0,3),32)),loc_2),5)
,63),band_i32(shr_u32(loc_2,6),64)),25)),shl_i32(bor_i32(band_i32(shr_u32(loc_1,
11),1),bor_i32(band_i32(shr_u32(loc_0,2),6),band_i32(shr_u32(loc_0,7),24))),7)),
8388707)desired=0 break end if desired then if desired==18 then desired=nil end
break end loc_1=shr_i32(shl_i32(loc_0,19),31)loc_2=band_i32(loc_1,4294966784)
reg_0=bor_i32(bor_i32(bor_i32(band_i32(shl_i32(loc_0,13),7340032),shl_i32(
bor_i32(band_i32(shr_u32(bor_i32(bor_i32(bor_i32(band_i32(shr_u32(loc_0,4),256),
band_i32(shl_i32(loc_0,1),192)),band_i32(shl_i32(loc_0,3),32)),loc_2),5),63),
band_i32(shr_u32(loc_2,6),64)),25)),shl_i32(bor_i32(band_i32(shr_u32(loc_1,11),1
),bor_i32(band_i32(shr_u32(loc_0,2),6),band_i32(shr_u32(loc_0,7),24))),7)),
8392803)desired=0 break end if desired then if desired==17 then desired=nil end
break end reg_0=bor_i32(bor_i32(bor_i32(shl_i32(loc_2,20),shl_i32(loc_0,15)),
shl_i32(loc_0,7)),19)desired=0 break end if desired then if desired==16 then
desired=nil end break end loc_3=shr_u32(loc_0,7)loc_1=band_i32(loc_3,31)if loc_1
==0 then desired=1 break end reg_0=bor_i32(bor_i32(bor_i32(shl_i32(bor_i32(
bor_i32(band_i32(loc_3,32),band_i32(shr_i32(shl_i32(loc_0,19),31),4032)),
band_i32(shr_u32(loc_0,2),31)),20),shl_i32(loc_1,15)),shl_i32(loc_1,7)),27)
desired=0 break end if desired then if desired==15 then desired=nil end break
end loc_1=shr_u32(loc_0,7)loc_3=band_i32(loc_1,31)if loc_3==0 then desired=1
break end reg_0=bor_i32(bor_i32(shl_i32(bor_i32(bor_i32(band_i32(loc_1,32),
band_i32(shr_i32(shl_i32(loc_0,19),31),4032)),band_i32(shr_u32(loc_0,2),31)),20)
,shl_i32(loc_3,7)),19)desired=0 break end if desired then if desired==14 then
desired=nil end break end loc_0=bor_i32(bor_i32(bor_i32(bor_i32(bor_i32(
band_i32(shr_u32(loc_0,2),16),band_i32(shr_u32(loc_0,3),512)),band_i32(shl_i32(
loc_0,1),64)),band_i32(shl_i32(loc_0,4),384)),band_i32(shl_i32(loc_0,3),32)),
band_i32(shr_i32(shl_i32(loc_0,19),31),4294966272))if loc_0==0 then desired=1
break end reg_0=bor_i32(shl_i32(loc_0,20),65811)desired=0 break end if desired
then if desired==13 then desired=nil end break end loc_0=bor_i32(bor_i32(
band_i32(shl_i32(loc_0,10),126976),band_i32(shl_i32(loc_0,5),131072)),band_i32(
shr_i32(shl_i32(loc_0,19),31),4294705152))if loc_0==0 then desired=1 break end
reg_0=bor_i32(bor_i32(loc_0,shl_i32(loc_1,7)),55)desired=0 break end if desired
then if desired==12 then desired=nil end break end loc_1=shr_u32(loc_0,7)reg_0=
shl_i32(bor_i32(band_i32(loc_1,32),band_i32(shr_u32(loc_0,2),31)),20)loc_0=
bor_i32(band_i32(loc_1,7),8)reg_0=bor_i32(bor_i32(bor_i32(reg_0,shl_i32(loc_0,15
)),shl_i32(loc_0,7)),20499)desired=0 break end if desired then if desired==11
then desired=nil end break end loc_1=shr_u32(loc_0,7)reg_0=shl_i32(bor_i32(
band_i32(loc_1,32),band_i32(shr_u32(loc_0,2),31)),20)loc_0=bor_i32(band_i32(
loc_1,7),8)reg_0=bor_i32(bor_i32(bor_i32(reg_0,shl_i32(loc_0,15)),shl_i32(loc_0,
7)),1073762323)desired=0 break end if desired then if desired==10 then desired=
nil end break end loc_1=shr_u32(loc_0,7)reg_0=shl_i32(bor_i32(bor_i32(band_i32(
loc_1,32),band_i32(shr_i32(shl_i32(loc_0,19),31),4032)),band_i32(shr_u32(loc_0,2
),31)),20)loc_0=bor_i32(band_i32(loc_1,7),8)reg_0=bor_i32(bor_i32(bor_i32(reg_0,
shl_i32(loc_0,15)),shl_i32(loc_0,7)),28691)desired=0 break end if desired then
if desired==9 then desired=nil end break end loc_3=band_i32(shr_u32(loc_0,2),7)
loc_4=band_i32(shr_u32(loc_0,7),7)loc_1=band_i32(shr_u32(loc_0,5),3)while true
do while true do while true do while true do while true do while true do while
true do if band_i32(loc_0,4096)~=0 then break end if not br_map[7]then br_map[7]
=(function()return{[0]=1,2,3,4}end)()end temp=br_map[7][loc_1]or 1 if temp<3
then if temp<2 then desired=15 break else desired=14 break end elseif temp>3
then desired=12 break else desired=13 break end end if desired then if desired==
15 then desired=nil end break end if not br_map[8]then br_map[8]=(function()
return{[0]=4,5}end)()end temp=br_map[8][loc_1]or 14 if temp<5 then desired=11
break elseif temp>5 then desired=1 break else desired=10 break end end if
desired then if desired==14 then desired=nil end break end loc_0=bor_i32(loc_4,8
)reg_0=bor_i32(bor_i32(bor_i32(shl_i32(loc_0,15),shl_i32(loc_3,20)),shl_i32(
loc_0,7)),1082130483)desired=0 break end if desired then if desired==13 then
desired=nil end break end loc_0=bor_i32(loc_4,8)reg_0=bor_i32(bor_i32(bor_i32(
shl_i32(loc_0,15),shl_i32(loc_3,20)),shl_i32(loc_0,7)),8405043)desired=0 break
end if desired then if desired==12 then desired=nil end break end loc_0=bor_i32(
loc_4,8)reg_0=bor_i32(bor_i32(bor_i32(shl_i32(loc_0,15),shl_i32(loc_3,20)),
shl_i32(loc_0,7)),8413235)desired=0 break end if desired then if desired==11
then desired=nil end break end loc_0=bor_i32(loc_4,8)reg_0=bor_i32(bor_i32(
bor_i32(shl_i32(loc_0,15),shl_i32(loc_3,20)),shl_i32(loc_0,7)),8417331)desired=0
break end if desired then if desired==10 then desired=nil end break end loc_0=
bor_i32(loc_4,8)reg_0=bor_i32(bor_i32(bor_i32(shl_i32(loc_0,15),shl_i32(loc_3,20
)),shl_i32(loc_0,7)),1082130491)desired=0 break end if desired then if desired==
9 then desired=nil end break end loc_0=bor_i32(loc_4,8)reg_0=bor_i32(bor_i32(
bor_i32(shl_i32(loc_0,15),shl_i32(loc_3,20)),shl_i32(loc_0,7)),8388667)desired=0
break end if desired then if desired==8 then desired=nil end break end reg_0=
bor_i32(bor_i32(bor_i32(shl_i32(bor_i32(band_i32(shr_u32(loc_0,7),32),band_i32(
shr_u32(loc_0,1),448)),20),band_i32(shl_i32(loc_0,18),32505856)),band_i32(loc_0,
3072)),77863)desired=0 break end if desired then if desired==7 then desired=nil
end break end reg_0=bor_i32(bor_i32(bor_i32(shl_i32(bor_i32(band_i32(shr_u32(
loc_0,7),32),band_i32(shr_u32(loc_0,1),192)),20),band_i32(shl_i32(loc_0,18),
32505856)),band_i32(loc_0,3584)),73763)desired=0 break end if desired then if
desired==6 then desired=nil end break end reg_0=bor_i32(bor_i32(bor_i32(shl_i32(
bor_i32(band_i32(shr_u32(loc_0,7),32),band_i32(shr_u32(loc_0,1),448)),20),
band_i32(shl_i32(loc_0,18),32505856)),band_i32(loc_0,3072)),77859)desired=0
break end if desired then if desired==5 then desired=nil end break end loc_3=
shr_u32(loc_0,7)loc_1=band_i32(loc_3,31)if loc_1==0 then desired=1 break end
reg_0=bor_i32(bor_i32(bor_i32(shl_i32(bor_i32(band_i32(loc_3,32),band_i32(
shr_u32(loc_0,2),31)),20),shl_i32(loc_1,15)),shl_i32(loc_1,7)),4115)desired=0
break end if desired then if desired==4 then desired=nil end break end loc_1=
shr_u32(loc_0,7)loc_3=band_i32(loc_1,31)if loc_3==0 then desired=1 break end
reg_0=bor_i32(bor_i32(shl_i32(bor_i32(bor_i32(band_i32(loc_1,32),band_i32(
shr_u32(loc_0,2),24)),band_i32(shl_i32(loc_0,4),448)),20),shl_i32(loc_3,7)),
77831)desired=0 break end if desired then if desired==3 then desired=nil end
break end loc_1=shr_u32(loc_0,7)loc_3=band_i32(loc_1,31)if loc_3==0 then desired
=1 break end reg_0=bor_i32(bor_i32(shl_i32(bor_i32(bor_i32(band_i32(loc_1,32),
band_i32(shr_u32(loc_0,2),28)),band_i32(shl_i32(loc_0,4),192)),20),shl_i32(loc_3
,7)),73731)desired=0 break end if desired then if desired==2 then desired=nil
end break end loc_1=shr_u32(loc_0,7)loc_3=band_i32(loc_1,31)if loc_3==0 then
desired=1 break end reg_0=bor_i32(bor_i32(shl_i32(bor_i32(bor_i32(band_i32(loc_1
,32),band_i32(shr_u32(loc_0,2),24)),band_i32(shl_i32(loc_0,4),448)),20),shl_i32(
loc_3,7)),77827)desired=0 break end if desired then if desired==1 then desired=
nil end break end loc_4=shr_u32(loc_0,2)loc_3=band_i32(loc_4,31)loc_5=shr_u32(
loc_0,7)loc_1=band_i32(loc_5,31)while true do if band_i32(loc_0,4096)==0 then
break end while true do if band_i32(bor_i32(loc_5,loc_4),31)~=0 then break end
reg_0=1048691 desired=0 break end if desired then if desired==2 then desired=nil
end break end while true do while true do if loc_1==0 then break end if loc_3==0
then desired=3 break end break end if desired then if desired==3 then desired=
nil end break end if loc_1==0 then desired=1 break end if loc_3==0 then desired=
1 break end loc_2=bor_i32(bor_i32(bor_i32(shl_i32(loc_3,20),shl_i32(loc_1,15)),
shl_i32(loc_1,7)),51)desired=1 break end if desired then if desired==2 then
desired=nil end break end reg_0=bor_i32(shl_i32(loc_1,15),231)desired=0 break
end if desired then if desired==1 then desired=nil end break end while true do
while true do if loc_1==0 then break end if loc_3==0 then desired=2 break end
break end if desired then if desired==2 then desired=nil end break end if loc_1
==0 then desired=1 break end if loc_3==0 then desired=1 break end reg_0=bor_i32(
bor_i32(shl_i32(loc_3,20),shl_i32(loc_1,7)),51)desired=0 break end if desired
then if desired==1 then desired=nil end break end reg_0=bor_i32(shl_i32(loc_1,15
),103)desired=0 break end if desired then if desired==0 then desired=nil end
break end reg_0=loc_2 break end return reg_0 end FUNC_LIST[313]=function(loc_0,
loc_1)local loc_2=0 local loc_3=0 local loc_4=0 local loc_5=0 local loc_6=0
local loc_7=0 local desired while true do loc_2=0 loc_3=1053052 loc_4=1 while
true do while true do loc_5=loc_2 if loc_5==116 then desired=1 break end loc_6=
load_i32(memory_at_0,loc_3)loc_7=add_i32(loc_3,4)loc_3=add_i32(loc_3,24)loc_2=
add_i32(loc_5,1)if band_i32(loc_6,loc_1)~=load_i32(memory_at_0,loc_7)then
continue end break end if desired then if desired==1 then desired=nil end break
end loc_4=0 break end store_i32(memory_at_0,loc_0+4,loc_5)store_i32(memory_at_0,
loc_0,loc_4)break end end FUNC_LIST[314]=function(loc_0,loc_1,loc_2,loc_3,loc_4)
local loc_5=0 local loc_6=0 local loc_7=0 local loc_8=i64_ZERO local loc_9=
i64_ZERO local loc_10=0 local loc_11=0 local loc_12=0 local loc_13=i64_ZERO
local reg_0 local reg_1 local desired local br_map={}while true do loc_5=
sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_5 loc_6=add_i32(loc_0,
37688)reg_0=FUNC_LIST[309](loc_6)loc_7=reg_0 loc_8=(if load_i32_u8(memory_at_0,
loc_0+37689)~=0 then i64_from_u32(0,2147483648)else i64_from_u32(2147483648,0))
loc_9=i64_ZERO while true do while true do while true do while true do while
true do while true do while true do while true do while true do while true do
while true do while true do while true do while true do while true do while true
do while true do while true do while true do while true do while true do while
true do while true do if not br_map[1]then br_map[1]=(function()return{[0]=22,0,
1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21}end)()end temp=br_map[1][
band_i32(loc_2,255)]or 22 if temp<11 then if temp<5 then if temp<2 then if temp<
1 then break else desired=22 break end elseif temp>2 then if temp<4 then desired
=20 break else desired=19 break end else desired=21 break end elseif temp>5 then
if temp<8 then if temp<7 then desired=17 break else desired=16 break end elseif
temp>8 then if temp<10 then desired=14 break else desired=13 break end else
desired=15 break end else desired=18 break end elseif temp>11 then if temp<17
then if temp<14 then if temp<13 then desired=11 break else desired=10 break end
elseif temp>14 then if temp<16 then desired=8 break else desired=7 break end
else desired=9 break end elseif temp>17 then if temp<20 then if temp<19 then
desired=5 break else desired=4 break end elseif temp>20 then if temp<22 then
desired=2 break else desired=1 break end else desired=3 break end else desired=6
break end else desired=12 break end end if desired then if desired==22 then
desired=nil end break end loc_9=i64_ONE desired=1 break end if desired then if
desired==21 then desired=nil end break end loc_9=i64_from_u32(2,0)desired=1
break end if desired then if desired==20 then desired=nil end break end loc_9=
i64_from_u32(3,0)desired=1 break end if desired then if desired==19 then desired
=nil end break end loc_9=i64_from_u32(4,0)desired=1 break end if desired then if
desired==18 then desired=nil end break end loc_9=i64_from_u32(5,0)desired=1
break end if desired then if desired==17 then desired=nil end break end loc_9=
i64_from_u32(6,0)desired=1 break end if desired then if desired==16 then desired
=nil end break end loc_9=i64_from_u32(7,0)desired=1 break end if desired then if
desired==15 then desired=nil end break end loc_9=i64_from_u32(8,0)desired=1
break end if desired then if desired==14 then desired=nil end break end loc_9=
i64_from_u32(9,0)desired=1 break end if desired then if desired==13 then desired
=nil end break end loc_9=i64_from_u32(11,0)desired=1 break end if desired then
if desired==12 then desired=nil end break end loc_9=i64_from_u32(12,0)desired=1
break end if desired then if desired==11 then desired=nil end break end loc_9=
i64_from_u32(13,0)desired=1 break end if desired then if desired==10 then
desired=nil end break end loc_9=i64_from_u32(15,0)desired=1 break end if desired
then if desired==9 then desired=nil end break end loc_9=loc_8 desired=1 break
end if desired then if desired==8 then desired=nil end break end loc_9=bor_i64(
loc_8,i64_ONE)desired=1 break end if desired then if desired==7 then desired=nil
end break end loc_9=bor_i64(loc_8,i64_from_u32(3,0))desired=1 break end if
desired then if desired==6 then desired=nil end break end loc_9=bor_i64(loc_8,
i64_from_u32(4,0))desired=1 break end if desired then if desired==5 then desired
=nil end break end loc_9=bor_i64(loc_8,i64_from_u32(5,0))desired=1 break end if
desired then if desired==4 then desired=nil end break end loc_9=bor_i64(loc_8,
i64_from_u32(7,0))desired=1 break end if desired then if desired==3 then desired
=nil end break end loc_9=bor_i64(loc_8,i64_from_u32(8,0))desired=1 break end if
desired then if desired==2 then desired=nil end break end loc_9=bor_i64(loc_8,
i64_from_u32(9,0))desired=1 break end if desired then if desired==1 then desired
=nil end break end loc_9=bor_i64(loc_8,i64_from_u32(11,0))break end while true
do while true do loc_8=shl_i64(i64_ONE,loc_9)if ne_i64(band_i64(load_i64(
memory_at_0,add_i32(loc_0,(if loc_4~=0 then 6168 else 6160))),loc_8),i64_ZERO)
then break end loc_10=3 desired=1 break end if desired then if desired==1 then
desired=nil end break end while true do if eq_i64(band_i64((if loc_4~=0 then
load_i64(memory_at_0,loc_0+2072)else load_i64(memory_at_0,loc_0+2064)),loc_8),
i64_ZERO)then break end loc_10=0 desired=1 break end if desired then if desired
==1 then desired=nil end break end loc_10=1 break end store_i32_n8(memory_at_0,
loc_5+15,loc_10)reg_0=FUNC_LIST[309](add_i32(loc_5,15))loc_11=reg_0 while true
do while true do while true do while true do while true do loc_12=load_i32_u8(
memory_at_0,loc_6)if not br_map[2]then br_map[2]=(function()return{[0]=0,1,2,3}
end)()end temp=br_map[2][loc_12]or 0 if temp<2 then if temp<1 then break else
desired=4 break end elseif temp>2 then desired=2 break else desired=3 break end
end if desired then if desired==4 then desired=nil end break end loc_8=load_i64(
memory_at_0,loc_0)desired=1 break end if desired then if desired==3 then desired
=nil end break end loc_8=band_i64(load_i64(memory_at_0,loc_0+6144),i64_from_u32(
909666,2147483651))desired=1 break end if desired then if desired==2 then
desired=nil end break end FUNC_LIST[120](1052280,14,1055852)error(
'out of code bounds')end if desired then if desired==1 then desired=nil end
break end loc_8=load_i64(memory_at_0,loc_0+6144)break end loc_7=band_i32(loc_7,
255)while true do while true do if loc_4==0 then break end while true do while
true do while true do while true do while true do if not br_map[3]then br_map[3]
=(function()return{[0]=0,1,2,3}end)()end temp=br_map[3][loc_10]or 0 if temp<2
then if temp<1 then break else desired=6 break end elseif temp>2 then desired=4
break else desired=5 break end end if desired then if desired==6 then desired=
nil end break end loc_13=load_i64(memory_at_0,loc_0+32)desired=3 break end if
desired then if desired==5 then desired=nil end break end loc_13=band_i64(
load_i64(memory_at_0,loc_0+6176),i64_from_u32(546,0))desired=3 break end if
desired then if desired==4 then desired=nil end break end FUNC_LIST[120](1052280
,14,1055868)error('out of code bounds')end if desired then if desired==3 then
desired=nil end break end loc_13=load_i64(memory_at_0,loc_0+6176)break end if
desired then if desired==2 then desired=nil end break end while true do loc_4=
band_i32(loc_11,255)if loc_4<loc_7 then break end while true do if loc_7~=loc_4
then break end while true do while true do while true do while true do if not
br_map[4]then br_map[4]=(function()return{[0]=0,1,2,3}end)()end temp=br_map[4][
loc_12]or 0 if temp<2 then if temp<1 then break else desired=7 break end elseif
temp>2 then desired=5 break else desired=6 break end end if desired then if
desired==7 then desired=nil end break end if(if eq_i64(band_i64(loc_8,i64_ONE),
i64_ZERO)then 1 else 0)==0 then desired=4 break end desired=3 break end if
desired then if desired==6 then desired=nil end break end if(if eq_i64(band_i64(
loc_8,i64_from_u32(2,0)),i64_ZERO)then 1 else 0)==0 then desired=4 break end
desired=3 break end if desired then if desired==5 then desired=nil end break end
FUNC_LIST[120](1052280,14,1055884)error('out of code bounds')end if desired then
if desired==4 then desired=nil end break end if eq_i64(band_i64(loc_8,
i64_from_u32(8,0)),i64_ZERO)then desired=3 break end break end if desired then
if desired==3 then desired=nil end break end while true do while true do while
true do while true do while true do while true do while true do while true do
while true do if not br_map[5]then br_map[5]=(function()return{[0]=0,1,2,3,4,5,6
,7,8}end)()end temp=br_map[5][add_i32(band_i32(loc_2,255),4294967282)]or 10 if
temp<5 then if temp<2 then if temp<1 then break else desired=11 break end elseif
temp>2 then if temp<4 then desired=9 break else desired=8 break end else desired
=10 break end elseif temp>5 then if temp<8 then if temp<7 then desired=6 break
else desired=5 break end elseif temp>8 then desired=2 break else desired=4 break
end else desired=7 break end end if desired then if desired==11 then desired=nil
end break end if(if eq_i64(band_i64(loc_13,i64_ONE),i64_ZERO)then 1 else 0)==0
then desired=2 break end desired=3 break end if desired then if desired==10 then
desired=nil end break end if(if eq_i64(band_i64(loc_13,i64_from_u32(2,0)),
i64_ZERO)then 1 else 0)==0 then desired=2 break end desired=3 break end if
desired then if desired==9 then desired=nil end break end if(if eq_i64(band_i64(
loc_13,i64_from_u32(8,0)),i64_ZERO)then 1 else 0)==0 then desired=2 break end
desired=3 break end if desired then if desired==8 then desired=nil end break end
if(if eq_i64(band_i64(loc_13,i64_from_u32(16,0)),i64_ZERO)then 1 else 0)==0 then
desired=2 break end desired=3 break end if desired then if desired==7 then
desired=nil end break end if(if eq_i64(band_i64(loc_13,i64_from_u32(32,0)),
i64_ZERO)then 1 else 0)==0 then desired=2 break end desired=3 break end if
desired then if desired==6 then desired=nil end break end if(if eq_i64(band_i64(
loc_13,i64_from_u32(128,0)),i64_ZERO)then 1 else 0)==0 then desired=2 break end
desired=3 break end if desired then if desired==5 then desired=nil end break end
if(if eq_i64(band_i64(loc_13,i64_from_u32(256,0)),i64_ZERO)then 1 else 0)==0
then desired=2 break end desired=3 break end if desired then if desired==4 then
desired=nil end break end if(if eq_i64(band_i64(loc_13,i64_from_u32(512,0)),
i64_ZERO)then 1 else 0)==0 then desired=2 break end desired=3 break end if
desired then if desired==3 then desired=nil end break end if ne_i64(band_i64(
loc_13,i64_from_u32(2048,0)),i64_ZERO)then desired=2 break end break end if
desired then if desired==2 then desired=nil end break end loc_0=0 desired=1
break end if desired then if desired==1 then desired=nil end break end
store_i32_n8(memory_at_0,loc_0+37688,loc_10)reg_1=FUNC_LIST[282](loc_6)
store_i32_n8(memory_at_0,add_i32(loc_0,37681),band_i32(reg_1,255))loc_4=261
loc_6=322 loc_2=321 loc_11=323 while true do while true do while true do while
true do if not br_map[6]then br_map[6]=(function()return{[0]=0,3,1,2}end)()end
temp=br_map[6][loc_10]or 0 if temp<2 then if temp<1 then break else desired=4
break end elseif temp>2 then desired=2 break else desired=3 break end end if
desired then if desired==4 then desired=nil end break end loc_4=5 loc_6=66 loc_2
=65 loc_11=67 desired=2 break end if desired then if desired==3 then desired=nil
end break end FUNC_LIST[120](1052280,14,1055900)error('out of code bounds')end
if desired then if desired==2 then desired=nil end break end loc_4=773 loc_6=834
loc_2=833 loc_11=835 break end if desired then if desired==1 then desired=nil
end break end loc_13=extend_i64_u32(loc_7)FUNC_LIST[315](loc_0,loc_2,loc_3)
FUNC_LIST[315](loc_0,loc_6,loc_9)FUNC_LIST[315](loc_0,loc_11,loc_1)reg_1=
FUNC_LIST[316](loc_0,loc_4)loc_8=reg_1 store_i64(memory_at_0,loc_0+33288,(if
eq_i64(band_i64(loc_8,i64_from_u32(3,0)),i64_ZERO)then loc_8 else add_i64(
band_i64(loc_8,i64_from_u32(4294967292,4294967295)),band_i64(shl_i64(loc_9,
i64_from_u32(2,0)),i64_from_u32(262140,0)))))while true do while true do while
true do while true do while true do if not br_map[7]then br_map[7]=(function()
return{[0]=0,1,2,3}end)()end temp=br_map[7][load_i32_u8(memory_at_0,loc_0+37688)
]or 0 if temp<2 then if temp<1 then break else desired=5 break end elseif temp>2
then desired=3 break else desired=4 break end end if desired then if desired==5
then desired=nil end break end FUNC_LIST[120](1055916,19,1055936)error(
'out of code bounds')end if desired then if desired==4 then desired=nil end
break end loc_9=load_i64(memory_at_0,loc_0+6144)store_i64(memory_at_0,loc_0+6144
,bor_i64(bor_i64(band_i64(loc_9,i64_from_u32(4294967005,4294967295)),band_i64(
shl_i64(loc_13,i64_from_u32(8,0)),i64_from_u32(256,0))),band_i64(shl_i64(loc_9,
i64_from_u32(4,0)),i64_from_u32(32,0))))desired=2 break end if desired then if
desired==3 then desired=nil end break end FUNC_LIST[120](1052280,14,1055952)
error('out of code bounds')end if desired then if desired==2 then desired=nil
end break end loc_9=load_i64(memory_at_0,loc_0+6144)store_i64(memory_at_0,loc_0+
6144,bor_i64(bor_i64(band_i64(loc_9,i64_from_u32(4294961015,4294967295)),
band_i64(shl_i64(loc_9,i64_from_u32(4,0)),i64_from_u32(128,0))),shl_i64(loc_13,
i64_from_u32(11,0))))break end if desired then if desired==1 then desired=nil
end break end loc_0=1 break end GLOBAL_LIST[0].value=add_i32(loc_5,16)reg_0=
loc_0 break end return reg_0 end FUNC_LIST[315]=function(loc_0,loc_1,loc_2)local
loc_3=0 local desired local br_map={}while true do while true do while true do
while true do while true do while true do while true do while true do while true
do loc_3=band_i32(loc_1,65535)if not br_map[1]then br_map[1]=(function()return{[
0]=1,2}end)()end temp=br_map[1][add_i32(loc_3,4294967295)]or 0 if temp<1 then
break elseif temp>1 then desired=6 break else desired=7 break end end if desired
then if desired==7 then desired=nil end break end while true do if not br_map[2]
then br_map[2]=(function()return{[0]=3,7,7,7,4}end)()end temp=br_map[2][add_i32(
loc_3,4294967040)]or 0 if temp<4 then if temp<3 then break else desired=5 break
end elseif temp>4 then desired=1 break else desired=4 break end end if desired
then if desired==7 then desired=nil end break end if loc_3==324 then desired=3
break end if loc_3==771 then desired=2 break end if loc_3~=3073 then desired=1
break end store_i64(memory_at_0,add_i32(loc_0,33392),loc_2)desired=0 break end
if desired then if desired==6 then desired=nil end break end store_i64(
memory_at_0,loc_0+24,bor_i64(band_i64(load_i64(memory_at_0,loc_0+24),
i64_from_u32(4294967264,4294967295)),band_i64(loc_2,i64_from_u32(31,0))))desired
=0 break end if desired then if desired==5 then desired=nil end break end
store_i64(memory_at_0,loc_0+24,bor_i64(band_i64(load_i64(memory_at_0,loc_0+24),
i64_from_u32(4294967071,4294967295)),band_i64(shl_i64(loc_2,i64_from_u32(5,0)),
i64_from_u32(224,0))))desired=0 break end if desired then if desired==4 then
desired=nil end break end store_i64(memory_at_0,loc_0+6144,bor_i64(band_i64(
load_i64(memory_at_0,loc_0+6144),i64_from_u32(4294057629,2147483644)),band_i64(
loc_2,i64_from_u32(909666,2147483651))))desired=0 break end if desired then if
desired==3 then desired=nil end break end store_i64(memory_at_0,loc_0+6176,
bor_i64(band_i64(load_i64(memory_at_0,loc_0+6176),i64_from_u32(4294966749,
4294967295)),band_i64(loc_2,i64_from_u32(546,0))))desired=0 break end if desired
then if desired==2 then desired=nil end break end store_i64(memory_at_0,loc_0+
6688,bor_i64(band_i64(load_i64(memory_at_0,loc_0+6688),i64_from_u32(4294966749,
4294967295)),band_i64(loc_2,i64_from_u32(546,0))))desired=0 break end if desired
then if desired==1 then desired=nil end break end store_i64(memory_at_0,loc_0+
6168,band_i64(loc_2,i64_from_u32(1638,0)))desired=0 break end if desired then if
desired==0 then desired=nil end break end store_i64(memory_at_0,add_i32(loc_0,
shl_i32(band_i32(loc_1,65535),3)),loc_2)break end end FUNC_LIST[316]=function(
loc_0,loc_1)local loc_2=0 local reg_0 local desired local br_map={}while true do
while true do while true do while true do while true do while true do while true
do while true do while true do loc_2=band_i32(loc_1,65535)if not br_map[1]then
br_map[1]=(function()return{[0]=1,2}end)()end temp=br_map[1][add_i32(loc_2,
4294967295)]or 0 if temp<1 then break elseif temp>1 then desired=6 break else
desired=7 break end end if desired then if desired==7 then desired=nil end break
end while true do while true do if not br_map[2]then br_map[2]=(function()return
{[0]=4,1,1,1,5}end)()end temp=br_map[2][add_i32(loc_2,4294967040)]or 0 if temp<4
then if temp<1 then break else desired=8 break end elseif temp>4 then desired=4
break else desired=5 break end end if desired then if desired==8 then desired=
nil end break end if loc_2==324 then desired=3 break end if loc_2==3073 then
desired=2 break end break end if desired then if desired==7 then desired=nil end
break end loc_1=band_i32(loc_1,65535)if loc_1>=4096 then desired=1 break end
reg_0=load_i64(memory_at_0,add_i32(loc_0,shl_i32(loc_1,3)))desired=0 break end
if desired then if desired==6 then desired=nil end break end reg_0=band_i64(
load_i64(memory_at_0,loc_0+24),i64_from_u32(31,0))desired=0 break end if desired
then if desired==5 then desired=nil end break end reg_0=band_i64(shr_u64(
load_i64(memory_at_0,loc_0+24),i64_from_u32(5,0)),i64_from_u32(7,0))desired=0
break end if desired then if desired==4 then desired=nil end break end reg_0=
band_i64(load_i64(memory_at_0,loc_0+6144),i64_from_u32(909666,2147483651))
desired=0 break end if desired then if desired==3 then desired=nil end break end
reg_0=band_i64(load_i64(memory_at_0,loc_0+6176),i64_from_u32(546,0))desired=0
break end if desired then if desired==2 then desired=nil end break end reg_0=
band_i64(load_i64(memory_at_0,loc_0+6688),i64_from_u32(546,0))desired=0 break
end if desired then if desired==1 then desired=nil end break end reg_0=load_i64(
memory_at_0,add_i32(loc_0,33392))desired=0 break end if desired then if desired
==0 then desired=nil end break end FUNC_LIST[492](loc_1,4096,1055968)error(
'out of code bounds')end return reg_0 end FUNC_LIST[317]=function(loc_0,loc_1)
local reg_0 local reg_1 while true do reg_1=FUNC_LIST[309](add_i32(loc_0,37688))
reg_0=(if band_i32(shr_u32(loc_1,8),3)<=band_i32(reg_1,255)then 1 else 0)break
end return reg_0 end FUNC_LIST[318]=function(loc_0,loc_1)local loc_2=0 local
loc_3=0 local loc_4=0 local loc_5=0 local loc_6=0 local loc_7=i64_ZERO local
reg_0 local desired while true do loc_2=sub_i32(GLOBAL_LIST[0].value,112)
GLOBAL_LIST[0].value=loc_2 FUNC_LIST[155](add_i32(loc_2,16),add_i32(loc_1,33376)
,load_i64(memory_at_0,loc_1+33288))loc_3=add_i32(loc_1,33288)while true do while
true do while true do if load_i32_u8(memory_at_0,loc_2+24)~=23 then break end
loc_4=load_i32(memory_at_0,loc_2+16)store_i32(memory_at_0,loc_2+12,loc_4)while
true do if band_i32(loc_4,3)==3 then break end loc_4=band_i32(loc_4,65535)
store_i32(memory_at_0,loc_2+12,loc_4)reg_0=FUNC_LIST[312](loc_4)loc_4=reg_0
break end if desired then if desired==3 then desired=nil end break end FUNC_LIST
[313](loc_2,loc_4)while true do if load_i32(memory_at_0,loc_2)~=0 then break end
loc_3=load_i32(memory_at_0,loc_2+4)if loc_3>=116 then desired=2 break end loc_5=
add_i32(loc_2,68)store_i32(memory_at_0,loc_5,1)loc_6=add_i32(add_i32(loc_2,48),
12)store_i32(memory_at_0,loc_6,1)store_i32(memory_at_0,loc_2+108,31)loc_7=
load_i64(memory_at_0,loc_1+33288)store_i64(memory_at_0,loc_2+16,(if load_i32_u8(
memory_at_0,loc_1+37689)~=0 then loc_7 else band_i64(loc_7,i64_from_u32(
4294967295,0))))store_i32(memory_at_0,loc_2+52,2)store_i32(memory_at_0,loc_2+48,
1056048)store_i32(memory_at_0,loc_2+104,add_i32(loc_2,16))store_i32_n8(
memory_at_0,loc_2+100,3)store_i32(memory_at_0,loc_2+96,8)store_i64(memory_at_0,
loc_2+88,i64_from_u32(32,0))store_i64(memory_at_0,loc_2+80,i64_from_u32(0,16))
store_i32(memory_at_0,loc_2+72,2)store_i32(memory_at_0,loc_2+64,add_i32(loc_2,72
))store_i32(memory_at_0,loc_2+56,add_i32(loc_2,104))FUNC_LIST[292](add_i32(loc_2
,36),add_i32(loc_2,48))store_i32(memory_at_0,loc_5,1)store_i32(memory_at_0,loc_6
,1)store_i32(memory_at_0,loc_2+108,34)store_i32(memory_at_0,loc_2+52,2)
store_i32(memory_at_0,loc_2+48,1056064)store_i32(memory_at_0,loc_2+104,add_i32(
loc_2,12))store_i32_n8(memory_at_0,loc_2+100,3)store_i32(memory_at_0,loc_2+96,8)
store_i64(memory_at_0,loc_2+88,i64_from_u32(32,0))store_i64(memory_at_0,loc_2+80
,i64_from_u32(0,8))store_i32(memory_at_0,loc_2+72,2)store_i32(memory_at_0,loc_2+
64,add_i32(loc_2,72))store_i32(memory_at_0,loc_2+56,add_i32(loc_2,104))FUNC_LIST
[292](add_i32(loc_2,16),add_i32(loc_2,48))FUNC_LIST[126](add_i32(loc_2,36),
load_i32(memory_at_0,loc_2+16),load_i32(memory_at_0,loc_2+24))FUNC_LIST[365](
add_i32(loc_2,16))loc_5=add_i32(add_i32(loc_2,72),12)store_i64(memory_at_0,loc_5
,i64_ONE)store_i32(memory_at_0,loc_2+76,2)store_i32(memory_at_0,loc_2+72,1056064
)store_i32(memory_at_0,loc_2+20,32)loc_3=mul_i32(loc_3,24)store_i32(memory_at_0,
loc_2+16,add_i32(loc_3,1053036))store_i32(memory_at_0,loc_2+80,add_i32(loc_2,16)
)FUNC_LIST[292](add_i32(loc_2,48),add_i32(loc_2,72))FUNC_LIST[126](add_i32(loc_2
,36),load_i32(memory_at_0,loc_2+48),load_i32(memory_at_0,loc_2+56))loc_3=
load_i32(memory_at_0,add_i32(loc_3,1053048))FUNC_LIST[365](add_i32(loc_2,48))
TABLE_LIST[0].data[loc_3](add_i32(loc_2,48),loc_1,loc_4,load_i64(memory_at_0,
loc_1+33288),1)store_i64(memory_at_0,loc_5,i64_ONE)store_i32(memory_at_0,loc_2+
108,35)store_i32(memory_at_0,loc_2+76,1)store_i32(memory_at_0,loc_2+72,1056080)
store_i32(memory_at_0,loc_2+104,add_i32(loc_2,48))store_i32(memory_at_0,loc_2+80
,add_i32(loc_2,104))FUNC_LIST[292](add_i32(loc_2,16),add_i32(loc_2,72))FUNC_LIST
[365](add_i32(loc_2,48))FUNC_LIST[126](add_i32(loc_2,36),load_i32(memory_at_0,
loc_2+16),load_i32(memory_at_0,loc_2+24))FUNC_LIST[365](add_i32(loc_2,16))
store_i32(memory_at_0,add_i32(loc_0,8),load_i32(memory_at_0,add_i32(add_i32(
loc_2,36),8)))store_i64(memory_at_0,loc_0,load_i64(memory_at_0,loc_2+36))desired
=1 break end if desired then if desired==3 then desired=nil end break end
store_i32(memory_at_0,add_i32(add_i32(loc_2,48),12),34)store_i64(memory_at_0,
add_i32(add_i32(loc_2,72),12),i64_from_u32(2,0))store_i32(memory_at_0,loc_2+76,2
)store_i32(memory_at_0,loc_2+72,1052428)store_i32(memory_at_0,loc_2+52,31)
store_i32(memory_at_0,loc_2+48,loc_3)store_i32(memory_at_0,loc_2+80,add_i32(
loc_2,48))store_i32(memory_at_0,loc_2+56,add_i32(loc_2,12))FUNC_LIST[292](loc_0,
add_i32(loc_2,72))desired=1 break end if desired then if desired==2 then desired
=nil end break end store_i32(memory_at_0,add_i32(loc_2,68),1)store_i32(
memory_at_0,add_i32(loc_2,60),1)store_i32(memory_at_0,loc_2+40,31)store_i32(
memory_at_0,loc_2+36,loc_3)store_i32(memory_at_0,loc_2+52,2)store_i32(
memory_at_0,loc_2+48,1056120)store_i32_n8(memory_at_0,loc_2+100,3)store_i32(
memory_at_0,loc_2+96,8)store_i64(memory_at_0,loc_2+88,i64_from_u32(32,0))
store_i64(memory_at_0,loc_2+80,i64_from_u32(0,16))store_i32(memory_at_0,loc_2+72
,2)store_i32(memory_at_0,loc_2+64,add_i32(loc_2,72))store_i32(memory_at_0,loc_2+
56,add_i32(loc_2,36))FUNC_LIST[292](loc_0,add_i32(loc_2,48))desired=1 break end
if desired then if desired==1 then desired=nil end break end FUNC_LIST[492](
loc_3,116,1055836)error('out of code bounds')end GLOBAL_LIST[0].value=add_i32(
loc_2,112)break end end FUNC_LIST[319]=function(loc_0,loc_1,loc_2,loc_3,loc_4)
local loc_5=0 local loc_6=0 local desired while true do loc_5=sub_i32(
GLOBAL_LIST[0].value,96)GLOBAL_LIST[0].value=loc_5 FUNC_LIST[184](add_i32(loc_5,
16),loc_2)store_i32(memory_at_0,loc_5+40,0)store_i64(memory_at_0,loc_5+32,
i64_ONE)loc_2=load_i32(memory_at_0,loc_5+24)FUNC_LIST[291](add_i32(loc_5,8),
loc_2)loc_6=add_i32(loc_5,68)store_i64(memory_at_0,loc_6,i64_ONE)store_i32(
memory_at_0,loc_5+84,32)store_i32(memory_at_0,loc_5+60,1)store_i32(memory_at_0,
loc_5+56,1056080)store_i64(memory_at_0,loc_5+88,load_i64(memory_at_0,loc_5+8))
store_i32(memory_at_0,loc_5+80,add_i32(loc_5,88))store_i32(memory_at_0,loc_5+64,
add_i32(loc_5,80))FUNC_LIST[292](add_i32(loc_5,44),add_i32(loc_5,56))FUNC_LIST[
126](add_i32(loc_5,32),load_i32(memory_at_0,loc_5+44),load_i32(memory_at_0,loc_5
+52))FUNC_LIST[365](add_i32(loc_5,44))while true do if loc_4==0 then break end
while true do if loc_2>31 then break end store_i64(memory_at_0,add_i32(loc_5,68)
,i64_ONE)store_i32(memory_at_0,loc_5+92,31)store_i32(memory_at_0,loc_5+60,1)
store_i32(memory_at_0,loc_5+56,1056140)store_i32(memory_at_0,loc_5+88,add_i32(
add_i32(loc_1,shl_i32(loc_2,3)),32768))store_i32(memory_at_0,loc_5+64,add_i32(
loc_5,88))FUNC_LIST[292](add_i32(loc_5,44),add_i32(loc_5,56))FUNC_LIST[126](
add_i32(loc_5,32),load_i32(memory_at_0,loc_5+44),load_i32(memory_at_0,loc_5+52))
FUNC_LIST[365](add_i32(loc_5,44))desired=1 break end if desired then if desired
==1 then desired=nil end break end FUNC_LIST[492](loc_2,32,1056148)error(
'out of code bounds')end loc_2=load_i32(memory_at_0,loc_5+28)FUNC_LIST[291](
loc_5,loc_2)store_i64(memory_at_0,loc_6,i64_ONE)store_i32(memory_at_0,loc_5+84,
32)store_i32(memory_at_0,loc_5+60,1)store_i32(memory_at_0,loc_5+56,1056168)
store_i64(memory_at_0,loc_5+88,load_i64(memory_at_0,loc_5))store_i32(memory_at_0
,loc_5+80,add_i32(loc_5,88))store_i32(memory_at_0,loc_5+64,add_i32(loc_5,80))
FUNC_LIST[292](add_i32(loc_5,44),add_i32(loc_5,56))FUNC_LIST[126](add_i32(loc_5,
32),load_i32(memory_at_0,loc_5+44),load_i32(memory_at_0,loc_5+52))FUNC_LIST[365
](add_i32(loc_5,44))while true do if loc_4==0 then break end while true do if
loc_2>31 then break end store_i64(memory_at_0,add_i32(loc_5,68),i64_ONE)
store_i32(memory_at_0,loc_5+92,31)store_i32(memory_at_0,loc_5+60,1)store_i32(
memory_at_0,loc_5+56,1056140)store_i32(memory_at_0,loc_5+88,add_i32(add_i32(
loc_1,shl_i32(loc_2,3)),32768))store_i32(memory_at_0,loc_5+64,add_i32(loc_5,88))
FUNC_LIST[292](add_i32(loc_5,44),add_i32(loc_5,56))FUNC_LIST[126](add_i32(loc_5,
32),load_i32(memory_at_0,loc_5+44),load_i32(memory_at_0,loc_5+52))FUNC_LIST[365
](add_i32(loc_5,44))desired=1 break end if desired then if desired==1 then
desired=nil end break end FUNC_LIST[492](loc_2,32,1056176)error(
'out of code bounds')end store_i64(memory_at_0,add_i32(loc_5,68),i64_ONE)
store_i32(memory_at_0,loc_5+60,1)store_i32(memory_at_0,loc_5+56,1056168)
store_i32(memory_at_0,loc_5+84,31)store_i64(memory_at_0,loc_5+88,add_i64(
load_i64(memory_at_0,loc_5+16),loc_3))store_i32(memory_at_0,loc_5+64,add_i32(
loc_5,80))store_i32(memory_at_0,loc_5+80,add_i32(loc_5,88))FUNC_LIST[292](
add_i32(loc_5,44),add_i32(loc_5,56))FUNC_LIST[126](add_i32(loc_5,32),load_i32(
memory_at_0,loc_5+44),load_i32(memory_at_0,loc_5+52))FUNC_LIST[365](add_i32(
loc_5,44))store_i32(memory_at_0,add_i32(loc_0,8),load_i32(memory_at_0,add_i32(
add_i32(loc_5,32),8)))store_i64(memory_at_0,loc_0,load_i64(memory_at_0,loc_5+32)
)GLOBAL_LIST[0].value=add_i32(loc_5,96)break end end FUNC_LIST[320]=function(
loc_0,loc_1,loc_2,loc_3,loc_4)local loc_5=0 local loc_6=0 local loc_7=0 local
loc_8=i64_ZERO local reg_0 local desired while true do loc_5=sub_i32(GLOBAL_LIST
[0].value,96)GLOBAL_LIST[0].value=loc_5 store_i32_n16(memory_at_0,loc_5+28,
shr_u32(loc_2,20))loc_6=band_i32(shr_u32(loc_2,7),31)store_i32(memory_at_0,loc_5
+24,loc_6)store_i32(memory_at_0,loc_5+20,band_i32(shr_u32(loc_2,15),31))
store_i32(memory_at_0,loc_5+40,0)store_i64(memory_at_0,loc_5+32,i64_ONE)
FUNC_LIST[291](add_i32(loc_5,8),loc_6)loc_2=add_i32(loc_5,76)store_i64(
memory_at_0,loc_2,i64_ONE)store_i32(memory_at_0,loc_5+48,32)store_i32(
memory_at_0,loc_5+68,1)store_i32(memory_at_0,loc_5+64,1056080)store_i64(
memory_at_0,loc_5+88,load_i64(memory_at_0,loc_5+8))store_i32(memory_at_0,loc_5+
44,add_i32(loc_5,88))store_i32(memory_at_0,loc_5+72,add_i32(loc_5,44))FUNC_LIST[
292](add_i32(loc_5,52),add_i32(loc_5,64))FUNC_LIST[126](add_i32(loc_5,32),
load_i32(memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5+60))FUNC_LIST[365](
add_i32(loc_5,52))loc_7=add_i32(loc_5,28)while true do if loc_4==0 then break
end store_i64(memory_at_0,loc_2,i64_ONE)store_i32(memory_at_0,loc_5+68,1)
store_i32(memory_at_0,loc_5+64,1056140)store_i32(memory_at_0,loc_5+92,31)
store_i32(memory_at_0,loc_5+88,add_i32(add_i32(loc_1,shl_i32(loc_6,3)),32768))
store_i32(memory_at_0,loc_5+72,add_i32(loc_5,88))FUNC_LIST[292](add_i32(loc_5,52
),add_i32(loc_5,64))FUNC_LIST[126](add_i32(loc_5,32),load_i32(memory_at_0,loc_5+
52),load_i32(memory_at_0,loc_5+60))FUNC_LIST[365](add_i32(loc_5,52))break end if
desired then if desired==0 then desired=nil end break end store_i64(memory_at_0,
loc_2,i64_ONE)store_i32(memory_at_0,loc_5+68,1)store_i32(memory_at_0,loc_5+64,
1056168)store_i32(memory_at_0,loc_5+92,36)store_i32(memory_at_0,loc_5+88,loc_7)
store_i32(memory_at_0,loc_5+72,add_i32(loc_5,88))FUNC_LIST[292](add_i32(loc_5,52
),add_i32(loc_5,64))FUNC_LIST[126](add_i32(loc_5,32),load_i32(memory_at_0,loc_5+
52),load_i32(memory_at_0,loc_5+60))FUNC_LIST[365](add_i32(loc_5,52))while true
do if loc_4==0 then break end reg_0=FUNC_LIST[316](loc_1,load_i32_u16(
memory_at_0,loc_5+28))loc_8=reg_0 store_i64(memory_at_0,add_i32(loc_5,76),
i64_ONE)store_i32(memory_at_0,loc_5+48,31)store_i64(memory_at_0,loc_5+88,loc_8)
store_i32(memory_at_0,loc_5+68,1)store_i32(memory_at_0,loc_5+64,1056140)
store_i32(memory_at_0,loc_5+44,add_i32(loc_5,88))store_i32(memory_at_0,loc_5+72,
add_i32(loc_5,44))FUNC_LIST[292](add_i32(loc_5,52),add_i32(loc_5,64))FUNC_LIST[
126](add_i32(loc_5,32),load_i32(memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5
+60))FUNC_LIST[365](add_i32(loc_5,52))break end if desired then if desired==0
then desired=nil end break end FUNC_LIST[291](loc_5,load_i32(memory_at_0,loc_5+
20))store_i64(memory_at_0,add_i32(loc_5,76),i64_ONE)store_i32(memory_at_0,loc_5+
48,32)store_i32(memory_at_0,loc_5+68,1)store_i32(memory_at_0,loc_5+64,1056168)
store_i64(memory_at_0,loc_5+88,load_i64(memory_at_0,loc_5))store_i32(memory_at_0
,loc_5+44,add_i32(loc_5,88))store_i32(memory_at_0,loc_5+72,add_i32(loc_5,44))
FUNC_LIST[292](add_i32(loc_5,52),add_i32(loc_5,64))FUNC_LIST[126](add_i32(loc_5,
32),load_i32(memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5+60))FUNC_LIST[365
](add_i32(loc_5,52))while true do while true do if loc_4==0 then break end loc_2
=load_i32(memory_at_0,loc_5+20)if loc_2>31 then desired=1 break end store_i64(
memory_at_0,add_i32(loc_5,76),i64_ONE)store_i32(memory_at_0,loc_5+92,31)
store_i32(memory_at_0,loc_5+68,1)store_i32(memory_at_0,loc_5+64,1056140)
store_i32(memory_at_0,loc_5+88,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768))
store_i32(memory_at_0,loc_5+72,add_i32(loc_5,88))FUNC_LIST[292](add_i32(loc_5,52
),add_i32(loc_5,64))FUNC_LIST[126](add_i32(loc_5,32),load_i32(memory_at_0,loc_5+
52),load_i32(memory_at_0,loc_5+60))FUNC_LIST[365](add_i32(loc_5,52))break end if
desired then if desired==1 then desired=nil end break end store_i64(memory_at_0,
loc_0,load_i64(memory_at_0,loc_5+32))store_i32(memory_at_0,add_i32(loc_0,8),
load_i32(memory_at_0,add_i32(add_i32(loc_5,32),8)))GLOBAL_LIST[0].value=add_i32(
loc_5,96)desired=0 break end if desired then if desired==0 then desired=nil end
break end FUNC_LIST[492](loc_2,32,1056192)error('out of code bounds')end end
FUNC_LIST[321]=function(loc_0,loc_1,loc_2,loc_3,loc_4)local loc_5=0 local loc_6=
0 local desired while true do loc_5=sub_i32(GLOBAL_LIST[0].value,96)GLOBAL_LIST[
0].value=loc_5 FUNC_LIST[189](add_i32(loc_5,16),loc_2)store_i32(memory_at_0,
loc_5+40,0)store_i64(memory_at_0,loc_5+32,i64_ONE)loc_2=load_i32(memory_at_0,
loc_5+24)FUNC_LIST[291](add_i32(loc_5,8),loc_2)loc_6=add_i32(loc_5,76)store_i64(
memory_at_0,loc_6,i64_ONE)store_i32(memory_at_0,loc_5+48,32)store_i32(
memory_at_0,loc_5+68,1)store_i32(memory_at_0,loc_5+64,1056080)store_i64(
memory_at_0,loc_5+88,load_i64(memory_at_0,loc_5+8))store_i32(memory_at_0,loc_5+
44,add_i32(loc_5,88))store_i32(memory_at_0,loc_5+72,add_i32(loc_5,44))FUNC_LIST[
292](add_i32(loc_5,52),add_i32(loc_5,64))FUNC_LIST[126](add_i32(loc_5,32),
load_i32(memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5+60))FUNC_LIST[365](
add_i32(loc_5,52))while true do if loc_4==0 then break end while true do if
loc_2>31 then break end store_i64(memory_at_0,add_i32(loc_5,76),i64_ONE)
store_i32(memory_at_0,loc_5+92,31)store_i32(memory_at_0,loc_5+68,1)store_i32(
memory_at_0,loc_5+64,1056140)store_i32(memory_at_0,loc_5+88,add_i32(add_i32(
loc_1,shl_i32(loc_2,3)),32768))store_i32(memory_at_0,loc_5+72,add_i32(loc_5,88))
FUNC_LIST[292](add_i32(loc_5,52),add_i32(loc_5,64))FUNC_LIST[126](add_i32(loc_5,
32),load_i32(memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5+60))FUNC_LIST[365
](add_i32(loc_5,52))desired=1 break end if desired then if desired==1 then
desired=nil end break end FUNC_LIST[492](loc_2,32,1056208)error(
'out of code bounds')end loc_2=load_i32(memory_at_0,loc_5+28)FUNC_LIST[291](
loc_5,loc_2)store_i64(memory_at_0,loc_6,i64_ONE)store_i32(memory_at_0,loc_5+48,
32)store_i32(memory_at_0,loc_5+68,1)store_i32(memory_at_0,loc_5+64,1056168)
store_i64(memory_at_0,loc_5+88,load_i64(memory_at_0,loc_5))store_i32(memory_at_0
,loc_5+44,add_i32(loc_5,88))store_i32(memory_at_0,loc_5+72,add_i32(loc_5,44))
FUNC_LIST[292](add_i32(loc_5,52),add_i32(loc_5,64))FUNC_LIST[126](add_i32(loc_5,
32),load_i32(memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5+60))FUNC_LIST[365
](add_i32(loc_5,52))while true do if loc_4==0 then break end while true do if
loc_2>31 then break end store_i64(memory_at_0,add_i32(loc_5,76),i64_ONE)
store_i32(memory_at_0,loc_5+92,31)store_i32(memory_at_0,loc_5+68,1)store_i32(
memory_at_0,loc_5+64,1056140)store_i32(memory_at_0,loc_5+88,add_i32(add_i32(
loc_1,shl_i32(loc_2,3)),32768))store_i32(memory_at_0,loc_5+72,add_i32(loc_5,88))
FUNC_LIST[292](add_i32(loc_5,52),add_i32(loc_5,64))FUNC_LIST[126](add_i32(loc_5,
32),load_i32(memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5+60))FUNC_LIST[365
](add_i32(loc_5,52))desired=1 break end if desired then if desired==1 then
desired=nil end break end FUNC_LIST[492](loc_2,32,1056224)error(
'out of code bounds')end store_i64(memory_at_0,add_i32(loc_5,76),i64_ONE)
store_i32(memory_at_0,loc_5+68,1)store_i32(memory_at_0,loc_5+64,1056168)
store_i32(memory_at_0,loc_5+92,31)store_i32(memory_at_0,loc_5+72,add_i32(loc_5,
88))store_i32(memory_at_0,loc_5+88,add_i32(loc_5,16))FUNC_LIST[292](add_i32(
loc_5,52),add_i32(loc_5,64))FUNC_LIST[126](add_i32(loc_5,32),load_i32(
memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5+60))FUNC_LIST[365](add_i32(
loc_5,52))store_i32(memory_at_0,add_i32(loc_0,8),load_i32(memory_at_0,add_i32(
add_i32(loc_5,32),8)))store_i64(memory_at_0,loc_0,load_i64(memory_at_0,loc_5+32)
)GLOBAL_LIST[0].value=add_i32(loc_5,96)break end end FUNC_LIST[322]=function(
loc_0,loc_1,loc_2,loc_3,loc_4)local loc_5=0 local loc_6=0 local desired while
true do loc_5=sub_i32(GLOBAL_LIST[0].value,112)GLOBAL_LIST[0].value=loc_5
FUNC_LIST[189](add_i32(loc_5,24),loc_2)store_i32(memory_at_0,loc_5+48,0)
store_i64(memory_at_0,loc_5+40,i64_ONE)loc_2=load_i32(memory_at_0,loc_5+32)
FUNC_LIST[291](add_i32(loc_5,16),loc_2)loc_6=add_i32(add_i32(loc_5,88),12)
store_i64(memory_at_0,loc_6,i64_ONE)store_i32(memory_at_0,loc_5+84,32)store_i32(
memory_at_0,loc_5+92,1)store_i32(memory_at_0,loc_5+88,1056080)store_i64(
memory_at_0,loc_5+52,load_i64(memory_at_0,loc_5+16))store_i32(memory_at_0,loc_5+
80,add_i32(loc_5,52))store_i32(memory_at_0,loc_5+96,add_i32(loc_5,80))FUNC_LIST[
292](add_i32(loc_5,64),add_i32(loc_5,88))FUNC_LIST[126](add_i32(loc_5,40),
load_i32(memory_at_0,loc_5+64),load_i32(memory_at_0,loc_5+72))FUNC_LIST[365](
add_i32(loc_5,64))while true do if loc_4==0 then break end while true do if
loc_2>31 then break end store_i64(memory_at_0,add_i32(loc_5,100),i64_ONE)
store_i32(memory_at_0,loc_5+56,31)store_i32(memory_at_0,loc_5+92,1)store_i32(
memory_at_0,loc_5+88,1056140)store_i32(memory_at_0,loc_5+52,add_i32(add_i32(
loc_1,shl_i32(loc_2,3)),32768))store_i32(memory_at_0,loc_5+96,add_i32(loc_5,52))
FUNC_LIST[292](add_i32(loc_5,64),add_i32(loc_5,88))FUNC_LIST[126](add_i32(loc_5,
40),load_i32(memory_at_0,loc_5+64),load_i32(memory_at_0,loc_5+72))FUNC_LIST[365
](add_i32(loc_5,64))desired=1 break end if desired then if desired==1 then
desired=nil end break end FUNC_LIST[492](loc_2,32,1056240)error(
'out of code bounds')end FUNC_LIST[291](add_i32(loc_5,8),load_i32(memory_at_0,
loc_5+36))store_i32(memory_at_0,add_i32(add_i32(loc_5,64),12),32)store_i64(
memory_at_0,loc_6,i64_from_u32(2,0))store_i32(memory_at_0,loc_5+68,31)store_i32(
memory_at_0,loc_5+92,2)store_i32(memory_at_0,loc_5+88,1056260)store_i64(
memory_at_0,loc_5+80,load_i64(memory_at_0,loc_5+8))store_i32(memory_at_0,loc_5+
72,add_i32(loc_5,80))store_i32(memory_at_0,loc_5+64,add_i32(loc_5,24))store_i32(
memory_at_0,loc_5+96,add_i32(loc_5,64))FUNC_LIST[292](add_i32(loc_5,52),add_i32(
loc_5,88))FUNC_LIST[126](add_i32(loc_5,40),load_i32(memory_at_0,loc_5+52),
load_i32(memory_at_0,loc_5+60))FUNC_LIST[365](add_i32(loc_5,52))while true do if
loc_4==0 then break end while true do loc_4=load_i32(memory_at_0,loc_5+36)if
loc_4>31 then break end store_i64(memory_at_0,add_i32(loc_5,100),i64_ONE)
store_i32(memory_at_0,loc_5+56,31)store_i32(memory_at_0,loc_5+92,1)store_i32(
memory_at_0,loc_5+88,1056140)store_i32(memory_at_0,loc_5+52,add_i32(add_i32(
loc_1,shl_i32(loc_4,3)),32768))store_i32(memory_at_0,loc_5+96,add_i32(loc_5,52))
FUNC_LIST[292](add_i32(loc_5,64),add_i32(loc_5,88))FUNC_LIST[126](add_i32(loc_5,
40),load_i32(memory_at_0,loc_5+64),load_i32(memory_at_0,loc_5+72))FUNC_LIST[365
](add_i32(loc_5,64))desired=1 break end if desired then if desired==1 then
desired=nil end break end FUNC_LIST[492](loc_4,32,1056276)error(
'out of code bounds')end store_i64(memory_at_0,add_i32(loc_5,100),i64_ZERO)
store_i32(memory_at_0,loc_5+92,1)store_i32(memory_at_0,loc_5+88,1056296)
store_i32(memory_at_0,loc_5+96,1052280)FUNC_LIST[292](add_i32(loc_5,64),add_i32(
loc_5,88))FUNC_LIST[126](add_i32(loc_5,40),load_i32(memory_at_0,loc_5+64),
load_i32(memory_at_0,loc_5+72))FUNC_LIST[365](add_i32(loc_5,64))store_i32(
memory_at_0,add_i32(loc_0,8),load_i32(memory_at_0,add_i32(add_i32(loc_5,40),8)))
store_i64(memory_at_0,loc_0,load_i64(memory_at_0,loc_5+40))GLOBAL_LIST[0].value=
add_i32(loc_5,112)break end end FUNC_LIST[323]=function(loc_0,loc_1,loc_2,loc_3,
loc_4)local loc_5=0 local loc_6=i64_ZERO local loc_7=0 while true do loc_5=
sub_i32(GLOBAL_LIST[0].value,96)GLOBAL_LIST[0].value=loc_5 FUNC_LIST[208](
add_i32(loc_5,16),loc_2)loc_6=load_i64(memory_at_0,loc_5+16)loc_2=load_i32(
memory_at_0,loc_5+24)store_i32(memory_at_0,loc_5+40,0)store_i64(memory_at_0,
loc_5+32,i64_ONE)FUNC_LIST[291](add_i32(loc_5,8),loc_2)loc_7=add_i32(loc_5,68)
store_i64(memory_at_0,loc_7,i64_ONE)store_i32(memory_at_0,loc_5+84,32)store_i32(
memory_at_0,loc_5+60,1)store_i32(memory_at_0,loc_5+56,1056080)store_i64(
memory_at_0,loc_5+88,load_i64(memory_at_0,loc_5+8))store_i32(memory_at_0,loc_5+
80,add_i32(loc_5,88))store_i32(memory_at_0,loc_5+64,add_i32(loc_5,80))FUNC_LIST[
292](add_i32(loc_5,44),add_i32(loc_5,56))FUNC_LIST[126](add_i32(loc_5,32),
load_i32(memory_at_0,loc_5+44),load_i32(memory_at_0,loc_5+52))FUNC_LIST[365](
add_i32(loc_5,44))while true do if loc_4==0 then break end store_i64(memory_at_0
,loc_7,i64_ONE)store_i32(memory_at_0,loc_5+60,1)store_i32(memory_at_0,loc_5+56,
1056140)store_i32(memory_at_0,loc_5+92,31)store_i32(memory_at_0,loc_5+88,
add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768))store_i32(memory_at_0,loc_5+64,
add_i32(loc_5,88))FUNC_LIST[292](add_i32(loc_5,44),add_i32(loc_5,56))FUNC_LIST[
126](add_i32(loc_5,32),load_i32(memory_at_0,loc_5+44),load_i32(memory_at_0,loc_5
+52))FUNC_LIST[365](add_i32(loc_5,44))break end store_i64(memory_at_0,loc_7,
i64_ONE)store_i32(memory_at_0,loc_5+60,1)store_i32(memory_at_0,loc_5+56,1056168)
store_i32(memory_at_0,loc_5+84,31)store_i64(memory_at_0,loc_5+88,add_i64(loc_6,
loc_3))store_i32(memory_at_0,loc_5+64,add_i32(loc_5,80))store_i32(memory_at_0,
loc_5+80,add_i32(loc_5,88))FUNC_LIST[292](add_i32(loc_5,44),add_i32(loc_5,56))
FUNC_LIST[126](add_i32(loc_5,32),load_i32(memory_at_0,loc_5+44),load_i32(
memory_at_0,loc_5+52))FUNC_LIST[365](add_i32(loc_5,44))store_i32(memory_at_0,
add_i32(loc_0,8),load_i32(memory_at_0,add_i32(add_i32(loc_5,32),8)))store_i64(
memory_at_0,loc_0,load_i64(memory_at_0,loc_5+32))GLOBAL_LIST[0].value=add_i32(
loc_5,96)break end end FUNC_LIST[324]=function(loc_0,loc_1,loc_2,loc_3,loc_4)
local loc_5=0 local loc_6=0 local loc_7=0 local loc_8=0 while true do loc_5=
sub_i32(GLOBAL_LIST[0].value,96)GLOBAL_LIST[0].value=loc_5 store_i32(memory_at_0
,loc_5+40,0)store_i64(memory_at_0,loc_5+32,i64_ONE)loc_6=band_i32(shr_u32(loc_2,
7),31)FUNC_LIST[291](add_i32(loc_5,24),loc_6)loc_7=add_i32(loc_5,76)store_i64(
memory_at_0,loc_7,i64_ONE)store_i32(memory_at_0,loc_5+48,32)store_i32(
memory_at_0,loc_5+68,1)store_i32(memory_at_0,loc_5+64,1056080)store_i64(
memory_at_0,loc_5+88,load_i64(memory_at_0,loc_5+24))store_i32(memory_at_0,loc_5+
44,add_i32(loc_5,88))store_i32(memory_at_0,loc_5+72,add_i32(loc_5,44))FUNC_LIST[
292](add_i32(loc_5,52),add_i32(loc_5,64))FUNC_LIST[126](add_i32(loc_5,32),
load_i32(memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5+60))loc_8=shr_u32(
loc_2,20)loc_2=band_i32(shr_u32(loc_2,15),31)FUNC_LIST[365](add_i32(loc_5,52))
while true do if loc_4==0 then break end store_i64(memory_at_0,loc_7,i64_ONE)
store_i32(memory_at_0,loc_5+68,1)store_i32(memory_at_0,loc_5+64,1056140)
store_i32(memory_at_0,loc_5+92,31)store_i32(memory_at_0,loc_5+88,add_i32(
add_i32(loc_1,shl_i32(loc_6,3)),32768))store_i32(memory_at_0,loc_5+72,add_i32(
loc_5,88))FUNC_LIST[292](add_i32(loc_5,52),add_i32(loc_5,64))FUNC_LIST[126](
add_i32(loc_5,32),load_i32(memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5+60))
FUNC_LIST[365](add_i32(loc_5,52))break end loc_8=band_i32(loc_8,31)FUNC_LIST[291
](add_i32(loc_5,16),loc_2)store_i64(memory_at_0,loc_7,i64_ONE)store_i32(
memory_at_0,loc_5+48,32)store_i32(memory_at_0,loc_5+68,1)store_i32(memory_at_0,
loc_5+64,1056168)store_i64(memory_at_0,loc_5+88,load_i64(memory_at_0,loc_5+16))
store_i32(memory_at_0,loc_5+44,add_i32(loc_5,88))store_i32(memory_at_0,loc_5+72,
add_i32(loc_5,44))FUNC_LIST[292](add_i32(loc_5,52),add_i32(loc_5,64))FUNC_LIST[
126](add_i32(loc_5,32),load_i32(memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5
+60))FUNC_LIST[365](add_i32(loc_5,52))while true do if loc_4==0 then break end
store_i64(memory_at_0,add_i32(loc_5,76),i64_ONE)store_i32(memory_at_0,loc_5+68,1
)store_i32(memory_at_0,loc_5+64,1056140)store_i32(memory_at_0,loc_5+92,31)
store_i32(memory_at_0,loc_5+88,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768))
store_i32(memory_at_0,loc_5+72,add_i32(loc_5,88))FUNC_LIST[292](add_i32(loc_5,52
),add_i32(loc_5,64))FUNC_LIST[126](add_i32(loc_5,32),load_i32(memory_at_0,loc_5+
52),load_i32(memory_at_0,loc_5+60))FUNC_LIST[365](add_i32(loc_5,52))break end
FUNC_LIST[291](add_i32(loc_5,8),loc_8)loc_2=add_i32(loc_5,76)store_i64(
memory_at_0,loc_2,i64_ONE)store_i32(memory_at_0,loc_5+48,32)store_i32(
memory_at_0,loc_5+68,1)store_i32(memory_at_0,loc_5+64,1056168)store_i64(
memory_at_0,loc_5+88,load_i64(memory_at_0,loc_5+8))store_i32(memory_at_0,loc_5+
44,add_i32(loc_5,88))store_i32(memory_at_0,loc_5+72,add_i32(loc_5,44))FUNC_LIST[
292](add_i32(loc_5,52),add_i32(loc_5,64))FUNC_LIST[126](add_i32(loc_5,32),
load_i32(memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5+60))FUNC_LIST[365](
add_i32(loc_5,52))while true do if loc_4==0 then break end store_i64(memory_at_0
,loc_2,i64_ONE)store_i32(memory_at_0,loc_5+68,1)store_i32(memory_at_0,loc_5+64,
1056140)store_i32(memory_at_0,loc_5+92,31)store_i32(memory_at_0,loc_5+88,
add_i32(add_i32(loc_1,shl_i32(loc_8,3)),32768))store_i32(memory_at_0,loc_5+72,
add_i32(loc_5,88))FUNC_LIST[292](add_i32(loc_5,52),add_i32(loc_5,64))FUNC_LIST[
126](add_i32(loc_5,32),load_i32(memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5
+60))FUNC_LIST[365](add_i32(loc_5,52))break end store_i64(memory_at_0,loc_0,
load_i64(memory_at_0,loc_5+32))store_i32(memory_at_0,add_i32(loc_0,8),load_i32(
memory_at_0,add_i32(add_i32(loc_5,32),8)))GLOBAL_LIST[0].value=add_i32(loc_5,96)
break end end FUNC_LIST[325]=function(loc_0,loc_1,loc_2,loc_3,loc_4)local loc_5=
0 local loc_6=0 local loc_7=0 local loc_8=0 local loc_9=0 while true do loc_5=
sub_i32(GLOBAL_LIST[0].value,96)GLOBAL_LIST[0].value=loc_5 store_i32(memory_at_0
,loc_5+40,0)store_i64(memory_at_0,loc_5+32,i64_ONE)loc_6=band_i32(shr_u32(loc_2,
7),31)FUNC_LIST[291](add_i32(loc_5,24),loc_6)loc_7=add_i32(loc_5,76)store_i64(
memory_at_0,loc_7,i64_ONE)store_i32(memory_at_0,loc_5+48,32)store_i32(
memory_at_0,loc_5+68,1)store_i32(memory_at_0,loc_5+64,1056080)store_i64(
memory_at_0,loc_5+88,load_i64(memory_at_0,loc_5+24))store_i32(memory_at_0,loc_5+
44,add_i32(loc_5,88))store_i32(memory_at_0,loc_5+72,add_i32(loc_5,44))FUNC_LIST[
292](add_i32(loc_5,52),add_i32(loc_5,64))FUNC_LIST[126](add_i32(loc_5,32),
load_i32(memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5+60))loc_8=shr_u32(
loc_2,20)loc_9=band_i32(shr_u32(loc_2,15),31)FUNC_LIST[365](add_i32(loc_5,52))
while true do if loc_4==0 then break end store_i64(memory_at_0,loc_7,i64_ONE)
store_i32(memory_at_0,loc_5+68,1)store_i32(memory_at_0,loc_5+64,1056140)
store_i32(memory_at_0,loc_5+92,31)store_i32(memory_at_0,loc_5+88,add_i32(
add_i32(loc_1,shl_i32(loc_6,3)),32768))store_i32(memory_at_0,loc_5+72,add_i32(
loc_5,88))FUNC_LIST[292](add_i32(loc_5,52),add_i32(loc_5,64))FUNC_LIST[126](
add_i32(loc_5,32),load_i32(memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5+60))
FUNC_LIST[365](add_i32(loc_5,52))break end loc_8=band_i32(loc_8,31)FUNC_LIST[291
](add_i32(loc_5,16),loc_9)store_i64(memory_at_0,loc_7,i64_ONE)store_i32(
memory_at_0,loc_5+48,32)store_i32(memory_at_0,loc_5+68,1)store_i32(memory_at_0,
loc_5+64,1056168)store_i64(memory_at_0,loc_5+88,load_i64(memory_at_0,loc_5+16))
store_i32(memory_at_0,loc_5+44,add_i32(loc_5,88))store_i32(memory_at_0,loc_5+72,
add_i32(loc_5,44))FUNC_LIST[292](add_i32(loc_5,52),add_i32(loc_5,64))FUNC_LIST[
126](add_i32(loc_5,32),load_i32(memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5
+60))FUNC_LIST[365](add_i32(loc_5,52))while true do if loc_4==0 then break end
store_i64(memory_at_0,add_i32(loc_5,76),i64_ONE)store_i32(memory_at_0,loc_5+68,1
)store_i32(memory_at_0,loc_5+64,1056140)store_i32(memory_at_0,loc_5+92,31)
store_i32(memory_at_0,loc_5+88,add_i32(add_i32(loc_1,shl_i32(loc_9,3)),32768))
store_i32(memory_at_0,loc_5+72,add_i32(loc_5,88))FUNC_LIST[292](add_i32(loc_5,52
),add_i32(loc_5,64))FUNC_LIST[126](add_i32(loc_5,32),load_i32(memory_at_0,loc_5+
52),load_i32(memory_at_0,loc_5+60))FUNC_LIST[365](add_i32(loc_5,52))break end
loc_2=shr_u32(loc_2,27)FUNC_LIST[291](add_i32(loc_5,8),loc_8)loc_7=add_i32(loc_5
,76)store_i64(memory_at_0,loc_7,i64_ONE)store_i32(memory_at_0,loc_5+48,32)
store_i32(memory_at_0,loc_5+68,1)store_i32(memory_at_0,loc_5+64,1056168)
store_i64(memory_at_0,loc_5+88,load_i64(memory_at_0,loc_5+8))store_i32(
memory_at_0,loc_5+44,add_i32(loc_5,88))store_i32(memory_at_0,loc_5+72,add_i32(
loc_5,44))FUNC_LIST[292](add_i32(loc_5,52),add_i32(loc_5,64))FUNC_LIST[126](
add_i32(loc_5,32),load_i32(memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5+60))
FUNC_LIST[365](add_i32(loc_5,52))while true do if loc_4==0 then break end
store_i64(memory_at_0,loc_7,i64_ONE)store_i32(memory_at_0,loc_5+68,1)store_i32(
memory_at_0,loc_5+64,1056140)store_i32(memory_at_0,loc_5+92,31)store_i32(
memory_at_0,loc_5+88,add_i32(add_i32(loc_1,shl_i32(loc_8,3)),32768))store_i32(
memory_at_0,loc_5+72,add_i32(loc_5,88))FUNC_LIST[292](add_i32(loc_5,52),add_i32(
loc_5,64))FUNC_LIST[126](add_i32(loc_5,32),load_i32(memory_at_0,loc_5+52),
load_i32(memory_at_0,loc_5+60))FUNC_LIST[365](add_i32(loc_5,52))break end
FUNC_LIST[291](loc_5,loc_2)store_i64(memory_at_0,loc_7,i64_ONE)store_i32(
memory_at_0,loc_5+48,32)store_i32(memory_at_0,loc_5+68,1)store_i32(memory_at_0,
loc_5+64,1056168)store_i64(memory_at_0,loc_5+88,load_i64(memory_at_0,loc_5))
store_i32(memory_at_0,loc_5+44,add_i32(loc_5,88))store_i32(memory_at_0,loc_5+72,
add_i32(loc_5,44))FUNC_LIST[292](add_i32(loc_5,52),add_i32(loc_5,64))FUNC_LIST[
126](add_i32(loc_5,32),load_i32(memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5
+60))FUNC_LIST[365](add_i32(loc_5,52))while true do if loc_4==0 then break end
store_i64(memory_at_0,add_i32(loc_5,76),i64_ONE)store_i32(memory_at_0,loc_5+68,1
)store_i32(memory_at_0,loc_5+64,1056140)store_i32(memory_at_0,loc_5+92,31)
store_i32(memory_at_0,loc_5+88,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768))
store_i32(memory_at_0,loc_5+72,add_i32(loc_5,88))FUNC_LIST[292](add_i32(loc_5,52
),add_i32(loc_5,64))FUNC_LIST[126](add_i32(loc_5,32),load_i32(memory_at_0,loc_5+
52),load_i32(memory_at_0,loc_5+60))FUNC_LIST[365](add_i32(loc_5,52))break end
store_i64(memory_at_0,loc_0,load_i64(memory_at_0,loc_5+32))store_i32(memory_at_0
,add_i32(loc_0,8),load_i32(memory_at_0,add_i32(add_i32(loc_5,32),8)))GLOBAL_LIST
[0].value=add_i32(loc_5,96)break end end FUNC_LIST[326]=function(loc_0,loc_1,
loc_2,loc_3,loc_4)local loc_5=0 local loc_6=0 local desired while true do loc_5=
sub_i32(GLOBAL_LIST[0].value,112)GLOBAL_LIST[0].value=loc_5 FUNC_LIST[186](
add_i32(loc_5,24),loc_2)store_i32(memory_at_0,loc_5+48,0)store_i64(memory_at_0,
loc_5+40,i64_ONE)loc_2=load_i32(memory_at_0,loc_5+36)FUNC_LIST[291](add_i32(
loc_5,16),loc_2)loc_6=add_i32(add_i32(loc_5,88),12)store_i64(memory_at_0,loc_6,
i64_ONE)store_i32(memory_at_0,loc_5+84,32)store_i32(memory_at_0,loc_5+92,1)
store_i32(memory_at_0,loc_5+88,1056080)store_i64(memory_at_0,loc_5+52,load_i64(
memory_at_0,loc_5+16))store_i32(memory_at_0,loc_5+80,add_i32(loc_5,52))
store_i32(memory_at_0,loc_5+96,add_i32(loc_5,80))FUNC_LIST[292](add_i32(loc_5,64
),add_i32(loc_5,88))FUNC_LIST[126](add_i32(loc_5,40),load_i32(memory_at_0,loc_5+
64),load_i32(memory_at_0,loc_5+72))FUNC_LIST[365](add_i32(loc_5,64))while true
do if loc_4==0 then break end while true do if loc_2>31 then break end
store_i64(memory_at_0,add_i32(loc_5,100),i64_ONE)store_i32(memory_at_0,loc_5+56,
31)store_i32(memory_at_0,loc_5+92,1)store_i32(memory_at_0,loc_5+88,1056140)
store_i32(memory_at_0,loc_5+52,add_i32(add_i32(loc_1,shl_i32(loc_2,3)),32768))
store_i32(memory_at_0,loc_5+96,add_i32(loc_5,52))FUNC_LIST[292](add_i32(loc_5,64
),add_i32(loc_5,88))FUNC_LIST[126](add_i32(loc_5,40),load_i32(memory_at_0,loc_5+
64),load_i32(memory_at_0,loc_5+72))FUNC_LIST[365](add_i32(loc_5,64))desired=1
break end if desired then if desired==1 then desired=nil end break end FUNC_LIST
[492](loc_2,32,1056304)error('out of code bounds')end FUNC_LIST[291](add_i32(
loc_5,8),load_i32(memory_at_0,loc_5+32))store_i32(memory_at_0,add_i32(add_i32(
loc_5,64),12),32)store_i64(memory_at_0,loc_6,i64_from_u32(2,0))store_i32(
memory_at_0,loc_5+68,31)store_i32(memory_at_0,loc_5+92,2)store_i32(memory_at_0,
loc_5+88,1056260)store_i64(memory_at_0,loc_5+80,load_i64(memory_at_0,loc_5+8))
store_i32(memory_at_0,loc_5+72,add_i32(loc_5,80))store_i32(memory_at_0,loc_5+64,
add_i32(loc_5,24))store_i32(memory_at_0,loc_5+96,add_i32(loc_5,64))FUNC_LIST[292
](add_i32(loc_5,52),add_i32(loc_5,88))FUNC_LIST[126](add_i32(loc_5,40),load_i32(
memory_at_0,loc_5+52),load_i32(memory_at_0,loc_5+60))FUNC_LIST[365](add_i32(
loc_5,52))while true do if loc_4==0 then break end while true do loc_4=load_i32(
memory_at_0,loc_5+32)if loc_4>31 then break end store_i64(memory_at_0,add_i32(
loc_5,100),i64_ONE)store_i32(memory_at_0,loc_5+56,31)store_i32(memory_at_0,loc_5
+92,1)store_i32(memory_at_0,loc_5+88,1056140)store_i32(memory_at_0,loc_5+52,
add_i32(add_i32(loc_1,shl_i32(loc_4,3)),32768))store_i32(memory_at_0,loc_5+96,
add_i32(loc_5,52))FUNC_LIST[292](add_i32(loc_5,64),add_i32(loc_5,88))FUNC_LIST[
126](add_i32(loc_5,40),load_i32(memory_at_0,loc_5+64),load_i32(memory_at_0,loc_5
+72))FUNC_LIST[365](add_i32(loc_5,64))desired=1 break end if desired then if
desired==1 then desired=nil end break end FUNC_LIST[492](loc_4,32,1056320)error(
'out of code bounds')end store_i64(memory_at_0,add_i32(loc_5,100),i64_ZERO)
store_i32(memory_at_0,loc_5+92,1)store_i32(memory_at_0,loc_5+88,1056296)
store_i32(memory_at_0,loc_5+96,1052280)FUNC_LIST[292](add_i32(loc_5,64),add_i32(
loc_5,88))FUNC_LIST[126](add_i32(loc_5,40),load_i32(memory_at_0,loc_5+64),
load_i32(memory_at_0,loc_5+72))FUNC_LIST[365](add_i32(loc_5,64))store_i32(
memory_at_0,add_i32(loc_0,8),load_i32(memory_at_0,add_i32(add_i32(loc_5,40),8)))
store_i64(memory_at_0,loc_0,load_i64(memory_at_0,loc_5+40))GLOBAL_LIST[0].value=
add_i32(loc_5,112)break end end FUNC_LIST[327]=function(loc_0,loc_1,loc_2,loc_3,
loc_4)local loc_5=0 local loc_6=0 while true do loc_5=sub_i32(GLOBAL_LIST[0].
value,112)GLOBAL_LIST[0].value=loc_5 FUNC_LIST[204](add_i32(loc_5,16),loc_2)
loc_2=load_i32(memory_at_0,loc_5+24)store_i32(memory_at_0,loc_5+40,loc_2)
store_i64(memory_at_0,loc_5+32,load_i64(memory_at_0,loc_5+16))store_i32(
memory_at_0,loc_5+56,0)store_i64(memory_at_0,loc_5+48,i64_ONE)FUNC_LIST[291](
add_i32(loc_5,8),loc_2)loc_6=add_i32(loc_5,92)store_i64(memory_at_0,loc_6,
i64_ONE)store_i32(memory_at_0,loc_5+64,32)store_i32(memory_at_0,loc_5+84,1)
store_i32(memory_at_0,loc_5+80,1056080)store_i64(memory_at_0,loc_5+104,load_i64(
memory_at_0,loc_5+8))store_i32(memory_at_0,loc_5+60,add_i32(loc_5,104))
store_i32(memory_at_0,loc_5+88,add_i32(loc_5,60))FUNC_LIST[292](add_i32(loc_5,68
),add_i32(loc_5,80))FUNC_LIST[126](add_i32(loc_5,48),load_i32(memory_at_0,loc_5+
68),load_i32(memory_at_0,loc_5+76))FUNC_LIST[365](add_i32(loc_5,68))while true
do if loc_4==0 then break end store_i64(memory_at_0,loc_6,i64_ONE)store_i32(
memory_at_0,loc_5+84,1)store_i32(memory_at_0,loc_5+80,1056140)store_i32(
memory_at_0,loc_5+108,31)store_i32(memory_at_0,loc_5+104,add_i32(add_i32(loc_1,
shl_i32(loc_2,3)),32768))store_i32(memory_at_0,loc_5+88,add_i32(loc_5,104))
FUNC_LIST[292](add_i32(loc_5,68),add_i32(loc_5,80))FUNC_LIST[126](add_i32(loc_5,
48),load_i32(memory_at_0,loc_5+68),load_i32(memory_at_0,loc_5+76))FUNC_LIST[365
](add_i32(loc_5,68))break end store_i64(memory_at_0,loc_6,i64_ONE)store_i32(
memory_at_0,loc_5+84,1)store_i32(memory_at_0,loc_5+80,1056168)store_i32(
memory_at_0,loc_5+108,31)store_i32(memory_at_0,loc_5+88,add_i32(loc_5,104))
store_i32(memory_at_0,loc_5+104,add_i32(loc_5,32))FUNC_LIST[292](add_i32(loc_5,
68),add_i32(loc_5,80))FUNC_LIST[126](add_i32(loc_5,48),load_i32(memory_at_0,
loc_5+68),load_i32(memory_at_0,loc_5+76))FUNC_LIST[365](add_i32(loc_5,68))
store_i32(memory_at_0,add_i32(loc_0,8),load_i32(memory_at_0,add_i32(add_i32(
loc_5,48),8)))store_i64(memory_at_0,loc_0,load_i64(memory_at_0,loc_5+48))
GLOBAL_LIST[0].value=add_i32(loc_5,112)break end end FUNC_LIST[328]=function(
loc_0,loc_1,loc_2,loc_3,loc_4)while true do store_i32(memory_at_0,loc_0+8,0)
store_i64(memory_at_0,loc_0,i64_ONE)break end end FUNC_LIST[329]=function(loc_0,
loc_1)local loc_2=0 local loc_3=0 local loc_4=0 local reg_0 local desired local
br_map={}while true do loc_2=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].
value=loc_2 loc_3=load_i32(memory_at_0,add_i32(loc_1,12))while true do while
true do while true do while true do while true do if not br_map[1]then br_map[1]
=(function()return{[0]=0,1}end)()end temp=br_map[1][load_i32(memory_at_0,loc_1+4
)]or 2 if temp<1 then break elseif temp>1 then desired=3 break else desired=4
break end end if desired then if desired==4 then desired=nil end break end if
loc_3~=0 then desired=3 break end loc_3=1058052 loc_1=0 desired=2 break end if
desired then if desired==3 then desired=nil end break end if loc_3~=0 then break
end loc_3=load_i32(memory_at_0,loc_1)loc_1=load_i32(memory_at_0,loc_3+4)loc_3=
load_i32(memory_at_0,loc_3)desired=2 break end if desired then if desired==2
then desired=nil end break end FUNC_LIST[484](loc_0,loc_1)desired=1 break end if
desired then if desired==1 then desired=nil end break end FUNC_LIST[351](
add_i32(loc_2,8),loc_1,0)loc_4=load_i32(memory_at_0,loc_2+12)reg_0=FUNC_LIST[550
](load_i32(memory_at_0,loc_2+8),loc_3,loc_1)loc_3=reg_0 store_i32(memory_at_0,
loc_0+8,loc_1)store_i32(memory_at_0,loc_0+4,loc_4)store_i32(memory_at_0,loc_0,
loc_3)break end GLOBAL_LIST[0].value=add_i32(loc_2,16)break end end FUNC_LIST[
330]=function(loc_0,loc_1,loc_2)local loc_3=0 local reg_0 while true do while
true do loc_3=load_i32(memory_at_0,loc_0+8)if loc_3>loc_1 then break end
FUNC_LIST[492](loc_1,loc_3,loc_2)error('out of code bounds')end reg_0=add_i32(
load_i32(memory_at_0,loc_0),mul_i32(loc_1,80))break end return reg_0 end
FUNC_LIST[331]=function(loc_0,loc_1,loc_2)local loc_3=0 local reg_0 while true
do while true do loc_3=load_i32(memory_at_0,loc_0+8)if loc_3>loc_1 then break
end FUNC_LIST[492](loc_1,loc_3,loc_2)error('out of code bounds')end reg_0=
add_i32(load_i32(memory_at_0,loc_0),loc_1)break end return reg_0 end FUNC_LIST[
332]=function(loc_0,loc_1,loc_2)while true do FUNC_LIST[310](add_i32(loc_0,8),
loc_1,loc_2)store_i64(memory_at_0,loc_0,i64_ZERO)store_i32_n8(memory_at_0,loc_0+
37704,0)break end end FUNC_LIST[333]=function(loc_0)while true do while true do
if load_i32_u8(memory_at_0,loc_0+37704)~=0 then break end FUNC_LIST[334](loc_0)
error('out of code bounds')end FUNC_LIST[335](loc_0)break end end FUNC_LIST[334]
=function(loc_0)while true do loc_0=add_i32(loc_0,8)while true do FUNC_LIST[311
](loc_0)continue end break end end FUNC_LIST[335]=function(loc_0)local loc_1=0
local loc_2=0 local loc_3=0 local loc_4=0 local reg_0 local reg_1 local desired
local br_map={}while true do loc_1=sub_i32(GLOBAL_LIST[0].value,64)GLOBAL_LIST[0
].value=loc_1 store_i64(memory_at_0,add_i32(loc_1,44),i64_ZERO)store_i32(
memory_at_0,loc_1+36,1)store_i32(memory_at_0,loc_1+32,1058116)store_i32(
memory_at_0,loc_1+40,1058052)loc_2=add_i32(loc_0,33384)loc_3=add_i32(loc_0,8)
FUNC_LIST[445](add_i32(loc_1,32))while true do while true do while true do while
true do FUNC_LIST[318](add_i32(loc_1,4),loc_3)FUNC_LIST[336](loc_0,load_i32(
memory_at_0,loc_1+4),load_i32(memory_at_0,loc_1+12))FUNC_LIST[336](loc_0,1058124
,1)FUNC_LIST[311](loc_3)reg_1=FUNC_LIST[158](loc_2,load_i64(memory_at_0,loc_0))
loc_4=reg_1 store_i32(memory_at_0,loc_1+16,loc_4)while true do if not br_map[1]
then br_map[1]=(function()return{[0]=0,2}end)()end temp=br_map[1][loc_4]or 3 if
temp<2 then break elseif temp>2 then desired=2 break else desired=3 break end
end if desired then if desired==4 then desired=nil continue end break end
FUNC_LIST[365](add_i32(loc_1,4))continue end if desired then if desired==3 then
desired=nil end break end break end if desired then if desired==2 then desired=
nil end break end store_i64(memory_at_0,add_i32(loc_1,44),i64_ONE)store_i32(
memory_at_0,loc_1+36,2)store_i32(memory_at_0,loc_1+32,1058144)store_i32(
memory_at_0,loc_1+60,162)store_i32(memory_at_0,loc_1+40,add_i32(loc_1,56))
store_i32(memory_at_0,loc_1+56,add_i32(loc_1,16))FUNC_LIST[329](add_i32(loc_1,20
),add_i32(loc_1,32))FUNC_LIST[336](loc_0,load_i32(memory_at_0,loc_1+20),
load_i32(memory_at_0,loc_1+28))FUNC_LIST[365](add_i32(loc_1,20))desired=1 break
end if desired then if desired==1 then desired=nil end break end store_i64(
memory_at_0,add_i32(loc_1,44),i64_ONE)store_i32(memory_at_0,loc_1+36,2)
store_i32(memory_at_0,loc_1+32,1058180)store_i32(memory_at_0,loc_1+60,162)
store_i32(memory_at_0,loc_1+40,add_i32(loc_1,56))store_i32(memory_at_0,loc_1+56,
add_i32(loc_1,16))FUNC_LIST[329](add_i32(loc_1,20),add_i32(loc_1,32))FUNC_LIST[
336](loc_0,load_i32(memory_at_0,loc_1+20),load_i32(memory_at_0,loc_1+28))
FUNC_LIST[365](add_i32(loc_1,20))break end FUNC_LIST[365](add_i32(loc_1,4))
GLOBAL_LIST[0].value=add_i32(loc_1,64)break end end FUNC_LIST[336]=function(
loc_0,loc_1,loc_2)local loc_3=0 local desired while true do loc_3=load_i32(
memory_at_0,add_i32(loc_0,37552))loc_0=load_i32(memory_at_0,add_i32(loc_0,37556)
)while true do while true do if loc_2~=0 then break end desired=0 break end if
desired then if desired==1 then desired=nil continue end break end TABLE_LIST[0]
.data[load_i32(memory_at_0,loc_0+12)](loc_3,load_i32_u8(memory_at_0,loc_1))loc_2
=add_i32(loc_2,4294967295)loc_1=add_i32(loc_1,1)continue end if desired then if
desired==0 then desired=nil end break end break end end FUNC_LIST[337]=function(
loc_0,loc_1)local loc_2=0 local loc_3=0 local loc_4=0 local loc_5=0 local loc_6=
0 local loc_7=0 local loc_8=i64_ZERO local loc_9=i64_ZERO local loc_10=i64_ZERO
local loc_11=i64_ZERO local loc_12=i64_ZERO local loc_13=i64_ZERO local loc_14=0
local loc_15=0 local loc_16=i64_ZERO local loc_17=i64_ZERO local loc_18=i64_ZERO
local loc_19=0 local loc_20=0 local loc_21=i64_ZERO local loc_22=i64_ZERO local
loc_23=i64_ZERO local loc_24=i64_ZERO local loc_25=i64_ZERO local reg_0 local
reg_1 local reg_2 local desired local br_map={}while true do loc_2=sub_i32(
GLOBAL_LIST[0].value,64)GLOBAL_LIST[0].value=loc_2 while true do while true do
while true do while true do reg_0=FUNC_LIST[331](loc_1,0,1058284)if load_i32_u8(
memory_at_0,reg_0)~=127 then break end reg_0=FUNC_LIST[331](loc_1,1,1058300)if
load_i32_u8(memory_at_0,reg_0)~=69 then break end reg_0=FUNC_LIST[331](loc_1,2,
1058316)if load_i32_u8(memory_at_0,reg_0)~=76 then break end reg_0=FUNC_LIST[331
](loc_1,3,1058332)if load_i32_u8(memory_at_0,reg_0)~=70 then break end reg_1=
FUNC_LIST[331](loc_1,4,1058348)loc_3=load_i32_u8(memory_at_0,reg_1)store_i32_n8(
memory_at_0,loc_2+15,loc_3)loc_4=32 if not br_map[1]then br_map[1]=(function()
return{[0]=3,2}end)()end temp=br_map[1][add_i32(loc_3,4294967295)]or 1 if temp<2
then desired=3 break elseif temp>2 then desired=1 break else desired=2 break end
end if desired then if desired==3 then desired=nil end break end FUNC_LIST[120](
1059024,32,1059056)error('out of code bounds')end if desired then if desired==2
then desired=nil end break end store_i64(memory_at_0,add_i32(loc_2,28),i64_ONE)
store_i32(memory_at_0,loc_2+20,1)store_i32(memory_at_0,loc_2+16,1059000)
store_i32(memory_at_0,loc_2+56,163)store_i32(memory_at_0,loc_2+24,add_i32(loc_2,
52))store_i32(memory_at_0,loc_2+52,add_i32(loc_2,15))FUNC_LIST[490](add_i32(
loc_2,16),1059008)error('out of code bounds')end if desired then if desired==1
then desired=nil end break end loc_4=64 break end reg_0=FUNC_LIST[331](loc_1,5,
1058364)reg_0=FUNC_LIST[331](loc_1,6,1058380)reg_0=FUNC_LIST[331](loc_1,7,
1058396)reg_0=FUNC_LIST[331](loc_1,8,1058412)loc_3=16 while true do while true
do while true do if loc_3~=18 then break end loc_3=18 while true do while true
do if loc_3~=20 then break end loc_3=20 while true do while true do if loc_3~=24
then break end loc_5=shr_u32(loc_4,2)loc_6=shr_u32(loc_4,3)loc_7=24 loc_8=
i64_ZERO loc_3=0 while true do while true do if loc_3~=loc_6 then break end
loc_7=add_i32(loc_5,24)while true do while true do if loc_5~=loc_3 then break
end loc_9=i64_ZERO loc_3=0 while true do while true do if loc_3~=loc_6 then
break end loc_3=0 while true do loc_5=add_i32(loc_7,loc_3)while true do if loc_3
~=4 then break end loc_7=0 while true do loc_3=add_i32(loc_5,loc_7)while true do
if loc_7~=2 then break end loc_7=0 while true do while true do if loc_7~=2 then
break end loc_7=0 while true do loc_5=add_i32(loc_3,loc_7)while true do if loc_7
~=2 then break end loc_7=0 while true do loc_3=add_i32(loc_5,loc_7)while true do
if loc_7~=2 then break end loc_10=i64_ZERO loc_11=i64_ZERO while true do while
true do if ne_i64(loc_10,i64_from_u32(16,0))then break end loc_7=0 while true do
while true do if loc_7~=2 then break end store_i32(memory_at_0,loc_2+48,0)
store_i64(memory_at_0,loc_2+40,i64_from_u32(8,0))store_i32(memory_at_0,loc_2+60,
0)store_i64(memory_at_0,loc_2+52,i64_from_u32(8,0))loc_7=shl_i32(loc_6,3)loc_3=
wrap_i32_i64(loc_9)loc_12=i64_ZERO while true do while true do while true do
while true do if eq_i64(loc_12,loc_11)then break end loc_10=i64_ZERO loc_13=
i64_ZERO desired=30 break end if desired then if desired==30 then desired=nil
end break end loc_14=0 reg_0=FUNC_LIST[42](8,1)loc_3=reg_0 if loc_3==0 then
desired=28 break end store_i64(memory_at_0,loc_3,i64_from_u32(1752134702,7631727
))store_i64(memory_at_0,loc_2+20,i64_from_u32(8,8))store_i32(memory_at_0,loc_2+
16,loc_3)loc_15=load_i32(memory_at_0,loc_2+48)while true do while true do if
loc_14~=loc_15 then break end loc_16=i64_ZERO desired=1 break end if desired
then if desired==31 then desired=nil continue end break end reg_0=FUNC_LIST[330
](add_i32(loc_2,40),loc_14,1058428)loc_17=load_i64(memory_at_0,reg_0+24)reg_0=
FUNC_LIST[330](add_i32(loc_2,40),loc_14,1058444)loc_18=load_i64(memory_at_0,
reg_0)loc_16=i64_ZERO loc_19=0 loc_20=load_i32(memory_at_0,loc_2+60)while true
do while true do if loc_19~=loc_20 then break end loc_14=add_i32(loc_14,1)if
eq_i64(loc_16,i64_ZERO)then desired=31 break end desired=1 break end if desired
then if desired==32 then desired=nil continue end break end loc_10=i64_ZERO
reg_1=FUNC_LIST[330](add_i32(loc_2,52),loc_19,1058552)loc_9=load_i64(memory_at_0
,reg_1+32)reg_2=FUNC_LIST[330](add_i32(loc_2,52),loc_19,1058568)loc_13=add_i64(
loc_9,load_i64(memory_at_0,reg_2+40))loc_21=add_i64(loc_9,loc_18)loc_9=sub_i64(
loc_13,loc_21)loc_9=(if gt_u64(loc_9,loc_13)then i64_ZERO else loc_9)loc_19=
add_i32(loc_19,1)loc_6=wrap_i32_i64(loc_21)loc_3=0 while true do while true do
if ne_i64(loc_10,i64_from_u32(8,0))then break end loc_16=loc_17 desired=32 break
end if desired then if desired==33 then desired=nil continue end break end if
eq_i64(loc_9,loc_10)then desired=32 break end reg_0=FUNC_LIST[331](loc_1,
add_i32(loc_6,loc_3),1058584)loc_7=load_i32_u8(memory_at_0,reg_0)reg_0=FUNC_LIST
[331](add_i32(loc_2,16),loc_3,1058600)loc_5=reg_0 loc_3=add_i32(loc_3,1)loc_10=
add_i64(loc_10,i64_ONE)if loc_7~=load_i32_u8(memory_at_0,loc_5)then desired=32
break end continue end if desired then if desired==32 then desired=nil continue
end break end break end if desired then if desired==31 then desired=nil continue
end break end break end if desired then if desired==30 then desired=nil end
break end break end if desired then if desired==29 then desired=nil continue end
break end while true do while true do if eq_i64(loc_10,i64_from_u32(32,0))then
desired=30 break end reg_0=FUNC_LIST[331](loc_1,loc_3,1058760)loc_13=bor_i64(
shl_i64(load_i64_u8(memory_at_0,reg_0),loc_10),loc_13)loc_10=add_i64(loc_10,
i64_from_u32(8,0))loc_3=add_i32(loc_3,1)continue end if desired then if desired
==30 then desired=nil end break end break end if desired then if desired==29
then desired=nil continue end break end loc_10=i64_ZERO loc_9=i64_ZERO while
true do while true do if ne_i64(loc_10,i64_from_u32(32,0))then break end loc_21=
i64_ZERO loc_5=0 while true do while true do if loc_7~=loc_5 then break end
loc_18=i64_ZERO loc_5=0 while true do while true do if loc_7~=loc_5 then break
end loc_16=i64_ZERO loc_5=0 while true do while true do if loc_7~=loc_5 then
break end loc_17=i64_ZERO loc_5=0 while true do while true do if loc_7~=loc_5
then break end loc_10=i64_ZERO loc_22=i64_ZERO while true do while true do if
ne_i64(loc_10,i64_from_u32(32,0))then break end loc_10=i64_ZERO loc_23=i64_ZERO
while true do while true do if ne_i64(loc_10,i64_from_u32(32,0))then break end
loc_10=i64_ZERO loc_5=0 while true do while true do if loc_7~=loc_5 then break
end loc_24=i64_ZERO loc_5=0 while true do while true do while true do while true
do if loc_7~=loc_5 then break end loc_12=add_i64(loc_12,i64_ONE)loc_25=add_i64(
loc_9,i64_from_u32(4294967295,4294967295))if gt_u64(loc_25,i64_from_u32(2,0))
then desired=29 break end loc_6=add_i32(loc_2,52)if not br_map[2]then br_map[2]=
(function()return{[0]=2,20,3}end)()end temp=br_map[2][wrap_i32_i64(loc_25)]or 2
if temp<3 then desired=47 break elseif temp>3 then desired=29 break else desired
=46 break end end if desired then if desired==48 then desired=nil continue end
break end reg_0=FUNC_LIST[331](loc_1,loc_3,1058616)loc_24=bor_i64(shl_i64(
load_i64_u8(memory_at_0,reg_0),extend_i64_u32(band_i32(loc_5,56))),loc_24)loc_5=
add_i32(loc_5,8)loc_3=add_i32(loc_3,1)continue end if desired then if desired==
47 then desired=nil end break end break end if desired then if desired==46 then
desired=nil end break end loc_6=add_i32(loc_2,40)break end if desired then if
desired==45 then desired=nil end break end while true do loc_5=load_i32(
memory_at_0,loc_6+8)if loc_5~=load_i32(memory_at_0,loc_6+4)then break end
FUNC_LIST[360](loc_6,loc_5)loc_5=load_i32(memory_at_0,loc_6+8)break end if
desired then if desired==45 then desired=nil end break end loc_5=add_i32(
load_i32(memory_at_0,loc_6),mul_i32(loc_5,80))store_i64(memory_at_0,loc_5+72,
loc_24)store_i64(memory_at_0,loc_5+64,loc_10)store_i64(memory_at_0,loc_5+56,
loc_23)store_i64(memory_at_0,loc_5+48,loc_22)store_i64(memory_at_0,loc_5+40,
loc_17)store_i64(memory_at_0,loc_5+32,loc_16)store_i64(memory_at_0,loc_5+24,
loc_18)store_i64(memory_at_0,loc_5+16,loc_21)store_i64(memory_at_0,loc_5+8,loc_9
)store_i64(memory_at_0,loc_5,loc_13)store_i32(memory_at_0,loc_6+8,add_i32(
load_i32(memory_at_0,loc_6+8),1))desired=29 break end if desired then if desired
==44 then desired=nil continue end break end reg_0=FUNC_LIST[331](loc_1,loc_3,
1058632)loc_10=bor_i64(shl_i64(load_i64_u8(memory_at_0,reg_0),extend_i64_u32(
band_i32(loc_5,56))),loc_10)loc_5=add_i32(loc_5,8)loc_3=add_i32(loc_3,1)continue
end if desired then if desired==43 then desired=nil end break end break end if
desired then if desired==42 then desired=nil continue end break end reg_0=
FUNC_LIST[331](loc_1,loc_3,1058648)loc_23=bor_i64(shl_i64(load_i64_u8(
memory_at_0,reg_0),loc_10),loc_23)loc_10=add_i64(loc_10,i64_from_u32(8,0))loc_3=
add_i32(loc_3,1)continue end if desired then if desired==41 then desired=nil end
break end break end if desired then if desired==40 then desired=nil continue end
break end reg_0=FUNC_LIST[331](loc_1,loc_3,1058664)loc_22=bor_i64(shl_i64(
load_i64_u8(memory_at_0,reg_0),loc_10),loc_22)loc_10=add_i64(loc_10,
i64_from_u32(8,0))loc_3=add_i32(loc_3,1)continue end if desired then if desired
==39 then desired=nil end break end break end if desired then if desired==38
then desired=nil continue end break end reg_0=FUNC_LIST[331](loc_1,loc_3,1058680
)loc_17=bor_i64(shl_i64(load_i64_u8(memory_at_0,reg_0),extend_i64_u32(band_i32(
loc_5,56))),loc_17)loc_5=add_i32(loc_5,8)loc_3=add_i32(loc_3,1)continue end if
desired then if desired==37 then desired=nil end break end break end if desired
then if desired==36 then desired=nil continue end break end reg_0=FUNC_LIST[331
](loc_1,loc_3,1058696)loc_16=bor_i64(shl_i64(load_i64_u8(memory_at_0,reg_0),
extend_i64_u32(band_i32(loc_5,56))),loc_16)loc_5=add_i32(loc_5,8)loc_3=add_i32(
loc_3,1)continue end if desired then if desired==35 then desired=nil end break
end break end if desired then if desired==34 then desired=nil continue end break
end reg_0=FUNC_LIST[331](loc_1,loc_3,1058712)loc_18=bor_i64(shl_i64(load_i64_u8(
memory_at_0,reg_0),extend_i64_u32(band_i32(loc_5,56))),loc_18)loc_5=add_i32(
loc_5,8)loc_3=add_i32(loc_3,1)continue end if desired then if desired==33 then
desired=nil end break end break end if desired then if desired==32 then desired=
nil continue end break end reg_0=FUNC_LIST[331](loc_1,loc_3,1058728)loc_21=
bor_i64(shl_i64(load_i64_u8(memory_at_0,reg_0),extend_i64_u32(band_i32(loc_5,56)
)),loc_21)loc_5=add_i32(loc_5,8)loc_3=add_i32(loc_3,1)continue end if desired
then if desired==31 then desired=nil end break end break end if desired then if
desired==30 then desired=nil continue end break end reg_0=FUNC_LIST[331](loc_1,
loc_3,1058744)loc_9=bor_i64(shl_i64(load_i64_u8(memory_at_0,reg_0),loc_10),loc_9
)loc_10=add_i64(loc_10,i64_from_u32(8,0))loc_3=add_i32(loc_3,1)continue end if
desired then if desired==29 then desired=nil continue end break end break end if
desired then if desired==28 then desired=nil end break end break end if desired
then if desired==27 then desired=nil end break end FUNC_LIST[478](1,8)error(
'out of code bounds')end if desired then if desired==26 then desired=nil
continue end break end reg_0=FUNC_LIST[331](loc_1,add_i32(loc_3,loc_7),1058776)
loc_7=add_i32(loc_7,1)continue end if desired then if desired==25 then desired=
nil end break end break end if desired then if desired==24 then desired=nil
continue end break end reg_0=FUNC_LIST[331](loc_1,loc_3,1058792)loc_11=bor_i64(
shl_i64(load_i64_u8(memory_at_0,reg_0),loc_10),loc_11)loc_10=add_i64(loc_10,
i64_from_u32(8,0))loc_3=add_i32(loc_3,1)continue end if desired then if desired
==23 then desired=nil end break end break end if desired then if desired==22
then desired=nil continue end break end reg_0=FUNC_LIST[331](loc_1,loc_3,1058808
)loc_7=add_i32(loc_7,1)continue end if desired then if desired==21 then desired=
nil end break end break end if desired then if desired==20 then desired=nil
continue end break end reg_0=FUNC_LIST[331](loc_1,loc_5,1058824)loc_7=add_i32(
loc_7,1)continue end if desired then if desired==19 then desired=nil end break
end break end if desired then if desired==18 then desired=nil continue end break
end reg_0=FUNC_LIST[331](loc_1,loc_3,1058840)loc_3=add_i32(loc_3,1)loc_7=
add_i32(loc_7,1)continue end if desired then if desired==17 then desired=nil end
break end break end if desired then if desired==16 then desired=nil continue end
break end reg_0=FUNC_LIST[331](loc_1,loc_3,1058856)loc_7=add_i32(loc_7,1)
continue end if desired then if desired==15 then desired=nil end break end break
end if desired then if desired==14 then desired=nil continue end break end reg_0
=FUNC_LIST[331](loc_1,loc_5,1058872)loc_3=add_i32(loc_3,1)continue end if
desired then if desired==13 then desired=nil end break end break end if desired
then if desired==12 then desired=nil continue end break end reg_0=FUNC_LIST[331
](loc_1,loc_7,1058888)loc_9=bor_i64(shl_i64(load_i64_u8(memory_at_0,reg_0),
extend_i64_u32(band_i32(shl_i32(loc_3,3),56))),loc_9)loc_7=add_i32(loc_7,1)loc_3
=add_i32(loc_3,1)continue end if desired then if desired==11 then desired=nil
end break end break end if desired then if desired==10 then desired=nil continue
end break end reg_0=FUNC_LIST[331](loc_1,add_i32(loc_3,24),1058904)loc_3=
add_i32(loc_3,1)continue end if desired then if desired==9 then desired=nil end
break end break end if desired then if desired==8 then desired=nil continue end
break end reg_0=FUNC_LIST[331](loc_1,loc_7,1058920)loc_8=bor_i64(shl_i64(
load_i64_u8(memory_at_0,reg_0),extend_i64_u32(band_i32(shl_i32(loc_3,3),56))),
loc_8)loc_7=add_i32(loc_7,1)loc_3=add_i32(loc_3,1)continue end if desired then
if desired==7 then desired=nil end break end break end if desired then if
desired==6 then desired=nil continue end break end reg_0=FUNC_LIST[331](loc_1,
loc_3,1058936)loc_3=add_i32(loc_3,1)continue end if desired then if desired==5
then desired=nil end break end break end if desired then if desired==4 then
desired=nil continue end break end reg_0=FUNC_LIST[331](loc_1,loc_3,1058952)
loc_3=add_i32(loc_3,1)continue end if desired then if desired==3 then desired=
nil end break end break end if desired then if desired==2 then desired=nil
continue end break end reg_0=FUNC_LIST[331](loc_1,loc_3,1058968)loc_3=add_i32(
loc_3,1)continue end if desired then if desired==1 then desired=nil end break
end break end loc_3=0 loc_7=0 while true do if loc_4==32 then break end while
true do if loc_4==64 then break end FUNC_LIST[120](1058524,9,1058536)error(
'out of code bounds')end if desired then if desired==1 then desired=nil end
break end loc_7=1 break end store_i64(memory_at_0,loc_0,loc_16)loc_5=(if ne_i64(
loc_16,i64_ZERO)then 1 else 0)store_i32_n8(memory_at_0,loc_0+37704,loc_5)
store_i32_n8(memory_at_0,add_i32(loc_0,37690),loc_7)store_i32_n8(memory_at_0,
add_i32(loc_0,37697),loc_7)FUNC_LIST[138](add_i32(loc_0,37664),(if loc_5~=0 then
i64_from_u32(524288,0)else i64_from_u32(134217728,0)))loc_7=add_i32(loc_0,33384)
loc_19=load_i32(memory_at_0,loc_2+48)while true do while true do if loc_3==
loc_19 then desired=1 break end reg_0=FUNC_LIST[330](add_i32(loc_2,40),loc_3,
1058460)loc_10=load_i64(memory_at_0,reg_0+24)reg_0=FUNC_LIST[330](add_i32(loc_2,
40),loc_3,1058476)loc_13=load_i64(memory_at_0,reg_0+32)reg_0=FUNC_LIST[330](
add_i32(loc_2,40),loc_3,1058492)loc_6=reg_0 loc_5=add_i32(loc_3,1)loc_3=loc_5 if
lt_u64(loc_10,i64_from_u32(2147483648,0))then continue end loc_3=loc_5 if
eq_i64(loc_13,i64_ZERO)then continue end loc_3=loc_5 loc_9=load_i64(memory_at_0,
loc_6+40)if eq_i64(loc_9,i64_ZERO)then continue end loc_9=band_i64(loc_9,
i64_from_u32(4294967295,0))loc_3=wrap_i32_i64(loc_13)while true do while true do
if(if eq_i64(loc_9,i64_ZERO)then 1 else 0)==0 then break end loc_3=loc_5 desired
=2 break end if desired then if desired==3 then desired=nil continue end break
end reg_2=FUNC_LIST[331](loc_1,loc_3,1058508)FUNC_LIST[167](loc_7,loc_10,
load_i32_u8(memory_at_0,reg_2))loc_9=add_i64(loc_9,i64_from_u32(4294967295,
4294967295))loc_3=add_i32(loc_3,1)loc_10=add_i64(loc_10,i64_ONE)continue end if
desired then if desired==2 then desired=nil continue end break end break end if
desired then if desired==1 then desired=nil end break end break end store_i64(
memory_at_0,add_i32(loc_0,33296),loc_8)FUNC_LIST[365](add_i32(loc_2,16))
FUNC_LIST[364](add_i32(loc_2,52))FUNC_LIST[364](add_i32(loc_2,40))FUNC_LIST[365
](loc_1)GLOBAL_LIST[0].value=add_i32(loc_2,64)break end end FUNC_LIST[338]=
function(loc_0,loc_1)while true do FUNC_LIST[343](add_i32(loc_0,37576),loc_1)
break end end FUNC_LIST[339]=function(loc_0)local reg_0 while true do reg_0=
add_i32(loc_0,37552)break end return reg_0 end FUNC_LIST[340]=function(loc_0,
loc_1)local loc_2=0 while true do while true do loc_2=load_i32(memory_at_0,loc_0
+8)if loc_2~=load_i32(memory_at_0,loc_0+4)then break end FUNC_LIST[358](loc_0,
loc_2)loc_2=load_i32(memory_at_0,loc_0+8)break end store_i64(memory_at_0,
add_i32(load_i32(memory_at_0,loc_0),shl_i32(loc_2,3)),loc_1)store_i32(
memory_at_0,loc_0+8,add_i32(load_i32(memory_at_0,loc_0+8),1))break end end
FUNC_LIST[341]=function(loc_0,loc_1,loc_2)local loc_3=0 local reg_0 while true
do while true do loc_3=load_i32(memory_at_0,loc_0+8)if loc_3>loc_1 then break
end FUNC_LIST[492](loc_1,loc_3,loc_2)error('out of code bounds')end reg_0=
add_i32(load_i32(memory_at_0,loc_0),shl_i32(loc_1,3))break end return reg_0 end
FUNC_LIST[342]=function(loc_0)local reg_0 while true do store_i32_n16(
memory_at_0,loc_0+84,0)reg_0=FUNC_LIST[551](loc_0,0,40)loc_0=reg_0 store_i64(
memory_at_0,loc_0+44,i64_ZERO)store_i32(memory_at_0,loc_0+40,4096)store_i64(
memory_at_0,add_i32(loc_0,52),i64_ZERO)store_i64(memory_at_0,add_i32(loc_0,76),
i64_ZERO)store_i64(memory_at_0,add_i32(loc_0,68),i64_from_u32(0,8))store_i64(
memory_at_0,loc_0+60,i64_from_u32(8,0))break end end FUNC_LIST[343]=function(
loc_0,loc_1)local loc_2=0 local loc_3=0 local loc_4=0 local loc_5=0 local loc_6=
0 local loc_7=0 local loc_8=i64_ZERO local loc_9=i64_ZERO local loc_10=i64_ZERO
local reg_0 local desired while true do loc_2=add_i32(loc_0,72)loc_3=load_i32(
memory_at_0,loc_1+8)loc_0=shr_u32(add_i32(loc_3,7),3)while true do while true do
while true do if loc_0~=0 then break end loc_4=load_i32(memory_at_0,loc_1)loc_5=
0 loc_0=0 while true do if loc_3==loc_0 then desired=1 break end loc_6=shr_u32(
loc_0,3)reg_0=FUNC_LIST[341](loc_2,loc_6,1059180)loc_7=reg_0 loc_8=load_i64_u8(
memory_at_0,add_i32(loc_4,loc_0))loc_9=load_i64(memory_at_0,loc_7)reg_0=
FUNC_LIST[341](loc_2,loc_6,1059196)loc_10=extend_i64_u32(band_i32(loc_5,56))
store_i64(memory_at_0,reg_0,bor_i64(shl_i64(loc_8,loc_10),band_i64(loc_9,
bxor_i64(shl_i64(i64_from_u32(255,0),loc_10),i64_from_u32(4294967295,4294967295)
))))loc_5=add_i32(loc_5,8)loc_0=add_i32(loc_0,1)continue end if desired then if
desired==3 then desired=nil end break end break end if desired then if desired==
2 then desired=nil continue end break end FUNC_LIST[340](loc_2,i64_ZERO)loc_0=
add_i32(loc_0,4294967295)continue end if desired then if desired==1 then desired
=nil end break end break end FUNC_LIST[365](loc_1)break end end FUNC_LIST[344]=
function(loc_0,loc_1)local loc_2=0 local loc_3=i64_ZERO local loc_4=0 local
loc_5=0 local loc_6=0 local loc_7=i64_ZERO local loc_8=i64_ZERO local loc_9=
i64_ZERO local loc_10=i64_ZERO local loc_11=i64_ZERO local loc_12=0 local loc_13
=i64_ZERO local loc_14=0 local loc_15=i64_ZERO local loc_16=0 local loc_17=
i64_ZERO local loc_18=0 local loc_19=0 local loc_20=0 local loc_21=i64_ZERO
local loc_22=i64_ZERO local loc_23=i64_ZERO local reg_0 local reg_1 local reg_2
local desired local br_map={}while true do loc_2=sub_i32(GLOBAL_LIST[0].value,48
)GLOBAL_LIST[0].value=loc_2 loc_3=load_i64(memory_at_0,loc_0)while true do while
true do while true do while true do while true do while true do while true do
while true do while true do if load_i32(memory_at_0,add_i32(loc_0,68))==0 then
break end loc_4=add_i32(loc_0,60)reg_1=FUNC_LIST[341](loc_4,0,1059212)if ne_i64(
loc_3,add_i64(load_i64(memory_at_0,reg_1),i64_from_u32(500,0)))then break end
store_i32(memory_at_0,loc_0+52,bor_i32(load_i32(memory_at_0,loc_0+52),1))loc_5=
load_i32(memory_at_0,loc_0+40)if loc_5==0 then desired=8 break end loc_6=
load_i32(memory_at_0,loc_0+36)loc_7=extend_i64_u32(loc_6)loc_8=mul_i64(
load_i64_u32(memory_at_0,loc_0+28),load_i64_u32(memory_at_0,loc_0+44))loc_3=
add_i64(shl_i64(loc_7,i64_from_u32(4,0)),loc_8)reg_0=FUNC_LIST[161](loc_1,loc_3)
reg_0=FUNC_LIST[161](loc_1,add_i64(loc_3,i64_from_u32(2,0)))loc_9=
extend_i64_u32(loc_5)loc_10=add_i64(add_i64(add_i64(loc_8,mul_i64(loc_7,
i64_from_u32(18,0))),loc_9),i64_from_u32(3,0))loc_9=rem_u64(loc_10,loc_9)if
loc_6==0 then desired=7 break end loc_11=sub_i64(loc_10,loc_9)loc_5=add_i32(
loc_0,72)loc_12=load_i32_u16(memory_at_0,loc_0+84)loc_13=band_i64(
extend_i64_u32(loc_12),i64_from_u32(65535,0))reg_0=FUNC_LIST[161](loc_1,add_i64(
add_i64(loc_3,shl_i64(loc_13,i64_ONE)),i64_from_u32(4,0)))loc_14=(band_i32(reg_0
,65535)%loc_6)loc_15=extend_i64_u32(loc_14)loc_16=0 loc_17=i64_ZERO while true
do loc_9=add_i64(shl_i64(loc_15,i64_from_u32(4,0)),loc_8)reg_0=FUNC_LIST[177](
loc_1,loc_9)loc_3=reg_0 reg_0=FUNC_LIST[176](loc_1,add_i64(loc_9,i64_from_u32(8,
0)))loc_18=reg_0 reg_0=FUNC_LIST[161](loc_1,add_i64(loc_9,i64_from_u32(12,0)))
loc_19=reg_0 reg_0=FUNC_LIST[161](loc_1,add_i64(loc_9,i64_from_u32(14,0)))loc_15
=rem_u64(band_i64(extend_i64_u32(reg_0),i64_from_u32(65535,0)),loc_7)while true
do while true do while true do while true do if not br_map[1]then br_map[1]=(
function()return{[0]=0,1,2}end)()end temp=br_map[1][loc_16]or 3 if temp<2 then
if temp<1 then break else desired=13 break end elseif temp>2 then desired=11
break else desired=12 break end end if desired then if desired==13 then desired=
nil end break end reg_0=FUNC_LIST[176](loc_1,loc_3)reg_0=FUNC_LIST[176](loc_1,
add_i64(loc_3,i64_from_u32(4,0)))reg_0=FUNC_LIST[177](loc_1,add_i64(loc_3,
i64_from_u32(8,0)))loc_17=reg_0 desired=11 break end if desired then if desired
==12 then desired=nil end break end loc_20=band_i32((if eq_i64(band_i64(loc_3,
i64_from_u32(7,0)),i64_ZERO)then 1 else 0),(if band_i32(loc_18,7)==0 then 1 else
0))while true do while true do if band_i32(loc_19,2)==0 then break end if loc_20
~=0 then desired=13 break end loc_10=shl_i64(loc_17,i64_from_u32(9,0))loc_21=
shl_i64(extend_i64_u32(loc_18),i64_from_u32(3,0))loc_9=i64_ZERO while true do if
eq_i64(loc_21,loc_9)then desired=11 break end reg_2=FUNC_LIST[341](loc_5,
wrap_i32_i64(shr_u64(loc_10,i64_from_u32(3,0))),1059444)FUNC_LIST[178](loc_1,
loc_3,wrap_i32_i64(shr_u64(load_i64(memory_at_0,reg_2),band_i64(loc_9,
i64_from_u32(56,0)))))loc_3=add_i64(loc_3,i64_ONE)loc_9=add_i64(loc_9,
i64_from_u32(8,0))loc_10=add_i64(loc_10,i64_ONE)continue end if desired then if
desired==14 then desired=nil end break end break end if desired then if desired
==13 then desired=nil end break end while true do if loc_20~=0 then break end
loc_10=shl_i64(loc_17,i64_from_u32(9,0))loc_22=shl_i64(extend_i64_u32(loc_18),
i64_from_u32(3,0))loc_9=i64_ZERO while true do if eq_i64(loc_22,loc_9)then
desired=11 break end reg_0=FUNC_LIST[175](loc_1,loc_3)loc_18=reg_0 loc_20=
wrap_i32_i64(shr_u64(loc_10,i64_from_u32(3,0)))reg_0=FUNC_LIST[341](loc_5,loc_20
,1059460)loc_21=load_i64(memory_at_0,reg_0)reg_0=FUNC_LIST[341](loc_5,loc_20,
1059476)loc_23=band_i64(loc_9,i64_from_u32(56,0))store_i64(memory_at_0,reg_0,
bor_i64(band_i64(loc_21,bxor_i64(shl_i64(i64_from_u32(255,0),loc_23),
i64_from_u32(4294967295,4294967295))),shl_i64(band_i64(extend_i64_u32(loc_18),
i64_from_u32(255,0)),loc_23)))loc_9=add_i64(loc_9,i64_from_u32(8,0))loc_10=
add_i64(loc_10,i64_ONE)loc_3=add_i64(loc_3,i64_ONE)continue end if desired then
if desired==14 then desired=nil end break end break end if desired then if
desired==13 then desired=nil end break end loc_9=extend_i64_u32(loc_18)
store_i64(memory_at_0,loc_2+8,loc_9)if ne_i64(band_i64(loc_9,i64_from_u32(7,0)),
i64_ZERO)then desired=6 break end loc_10=shl_i64(loc_17,i64_from_u32(9,0))loc_9=
shr_u64(loc_9,i64_from_u32(3,0))while true do if eq_i64(loc_9,i64_ZERO)then
desired=11 break end reg_0=FUNC_LIST[177](loc_1,loc_3)loc_21=reg_0 reg_0=
FUNC_LIST[341](loc_5,wrap_i32_i64(shr_u64(loc_10,i64_from_u32(3,0))),1059412)
store_i64(memory_at_0,reg_0,loc_21)loc_9=add_i64(loc_9,i64_from_u32(4294967295,
4294967295))loc_10=add_i64(loc_10,i64_from_u32(8,0))loc_3=add_i64(loc_3,
i64_from_u32(8,0))continue end if desired then if desired==13 then desired=nil
end break end break end if desired then if desired==12 then desired=nil end
break end loc_9=extend_i64_u32(loc_18)store_i64(memory_at_0,loc_2+8,loc_9)if
ne_i64(band_i64(loc_9,i64_from_u32(7,0)),i64_ZERO)then desired=5 break end
loc_10=shl_i64(loc_17,i64_from_u32(9,0))loc_9=shr_u64(loc_9,i64_from_u32(3,0))
while true do if eq_i64(loc_9,i64_ZERO)then desired=11 break end reg_2=FUNC_LIST
[341](loc_5,wrap_i32_i64(shr_u64(loc_10,i64_from_u32(3,0))),1059332)FUNC_LIST[
180](loc_1,loc_3,load_i64(memory_at_0,reg_2))loc_9=add_i64(loc_9,i64_from_u32(
4294967295,4294967295))loc_10=add_i64(loc_10,i64_from_u32(8,0))loc_3=add_i64(
loc_3,i64_from_u32(8,0))continue end if desired then if desired==12 then desired
=nil end break end break end if desired then if desired==11 then desired=nil end
break end if band_i32(loc_19,2)==0 then desired=1 break end if loc_18~=1 then
desired=4 break end FUNC_LIST[178](loc_1,loc_3,0)break end if desired then if
desired==10 then desired=nil continue end break end loc_16=add_i32(loc_16,1)if
band_i32(loc_19,1)~=0 then continue end break end if desired then if desired==9
then desired=nil end break end if loc_16~=3 then desired=3 break end FUNC_LIST[
179](loc_1,add_i64(add_i64(loc_11,shl_i64(loc_13,i64_from_u32(3,0))),
i64_from_u32(4,0)),loc_14)loc_5=band_i32(loc_6,65535)if loc_5==0 then desired=2
break end loc_5=(band_i32(add_i32(loc_12,1),65535)%loc_5)store_i32_n16(
memory_at_0,loc_0+84,loc_5)FUNC_LIST[171](loc_1,add_i64(loc_11,i64_from_u32(2,0)
),loc_5)reg_0=FUNC_LIST[129](loc_4,0,1059228)loc_3=load_i64(memory_at_0,loc_0)
break end if desired then if desired==8 then desired=nil end break end
store_i64(memory_at_0,loc_0,add_i64(loc_3,i64_ONE))GLOBAL_LIST[0].value=add_i32(
loc_2,48)desired=0 break end if desired then if desired==7 then desired=nil end
break end FUNC_LIST[495](1059520,25,1059492)error('out of code bounds')end if
desired then if desired==6 then desired=nil end break end FUNC_LIST[495](1059568
,57,1059548)error('out of code bounds')end if desired then if desired==5 then
desired=nil end break end store_i64(memory_at_0,add_i32(loc_2,28),i64_ONE)
store_i32(memory_at_0,loc_2+20,1)store_i32(memory_at_0,loc_2+16,1059388)
store_i32(memory_at_0,loc_2+44,30)store_i32(memory_at_0,loc_2+24,add_i32(loc_2,
40))store_i32(memory_at_0,loc_2+40,add_i32(loc_2,8))FUNC_LIST[490](add_i32(loc_2
,16),1059428)error('out of code bounds')end if desired then if desired==4 then
desired=nil end break end store_i64(memory_at_0,add_i32(loc_2,28),i64_ONE)
store_i32(memory_at_0,loc_2+20,1)store_i32(memory_at_0,loc_2+16,1059388)
store_i32(memory_at_0,loc_2+44,30)store_i32(memory_at_0,loc_2+24,add_i32(loc_2,
40))store_i32(memory_at_0,loc_2+40,add_i32(loc_2,8))FUNC_LIST[490](add_i32(loc_2
,16),1059396)error('out of code bounds')end if desired then if desired==3 then
desired=nil end break end FUNC_LIST[120](1059676,38,1059716)error(
'out of code bounds')end if desired then if desired==2 then desired=nil end
break end FUNC_LIST[120](1059748,38,1059788)error('out of code bounds')end if
desired then if desired==1 then desired=nil end break end FUNC_LIST[495](1059568
,57,1059732)error('out of code bounds')end if desired then if desired==0 then
desired=nil end break end FUNC_LIST[120](1059625,33,1059660)error(
'out of code bounds')end end FUNC_LIST[345]=function(loc_0,loc_1)local loc_2=0
local loc_3=i64_ZERO local reg_0 local desired local br_map={}while true do
loc_2=0 while true do while true do while true do while true do while true do
while true do while true do while true do while true do while true do while true
do while true do while true do while true do while true do while true do while
true do while true do while true do while true do while true do while true do
while true do while true do while true do while true do while true do while true
do while true do while true do while true do loc_3=add_i64(loc_1,i64_from_u32(
4026527744,4294967295))if le_u64(loc_3,i64_from_u32(19,0))then break end loc_3=
add_i64(loc_1,i64_from_u32(4026527648,4294967295))if le_u64(loc_3,i64_from_u32(
19,0))then desired=30 break end loc_3=add_i64(loc_1,i64_from_u32(4026527680,
4294967295))if le_u64(loc_3,i64_from_u32(3,0))then desired=29 break end while
true do loc_3=add_i64(loc_1,i64_from_u32(4026527487,4294967295))if le_u64(loc_3,
i64_ONE)then break end if ne_i64(loc_1,i64_from_u32(268439605,0))then desired=28
break end desired=1 break end if desired then if desired==31 then desired=nil
end break end while true do if not br_map[1]then br_map[1]=(function()return{[0]
=31,0}end)()end temp=br_map[1][wrap_i32_i64(loc_3)]or 31 if temp<31 then break
else desired=1 break end end if desired then if desired==31 then desired=nil end
break end loc_2=3 desired=28 break end if desired then if desired==30 then
desired=nil end break end if not br_map[2]then br_map[2]=(function()return{[0]=
28,27,26,25,24,2,2,2,23,2,2,2,22,21,20,19,18,17,16,15}end)()end temp=br_map[2][
wrap_i32_i64(loc_3)]or 28 if temp<21 then if temp<17 then if temp<15 then
desired=28 break elseif temp>15 then desired=14 break else desired=15 break end
elseif temp>17 then if temp<19 then desired=12 break elseif temp>19 then desired
=10 break else desired=11 break end else desired=13 break end elseif temp>21
then if temp<25 then if temp<23 then desired=8 break elseif temp>23 then desired
=6 break else desired=7 break end elseif temp>25 then if temp<27 then desired=4
break elseif temp>27 then desired=2 break else desired=3 break end else desired=
5 break end else desired=9 break end end if desired then if desired==29 then
desired=nil end break end if not br_map[3]then br_map[3]=(function()return{[0]=9
,8,7,6,1,1,1,1,1,1,1,1,1,1,1,1,5,4,3,2}end)()end temp=br_map[3][wrap_i32_i64(
loc_3)]or 9 if temp<5 then if temp<3 then if temp<2 then desired=28 break else
desired=27 break end elseif temp>3 then desired=25 break else desired=26 break
end elseif temp>5 then if temp<8 then if temp<7 then desired=23 break else
desired=22 break end elseif temp>8 then desired=20 break else desired=21 break
end else desired=24 break end end if desired then if desired==28 then desired=
nil end break end if not br_map[4]then br_map[4]=(function()return{[0]=12,11,10,
9}end)()end temp=br_map[4][wrap_i32_i64(loc_3)]or 12 if temp<11 then if temp<10
then desired=19 break else desired=18 break end elseif temp>11 then desired=16
break else desired=17 break end end if desired then if desired==27 then desired=
nil end break end reg_0=loc_2 desired=0 break end if desired then if desired==26
then desired=nil end break end reg_0=load_i32_u8(memory_at_0,add_i32(loc_0,59))
desired=0 break end if desired then if desired==25 then desired=nil end break
end reg_0=load_i32_u16(memory_at_0,add_i32(loc_0,58))desired=0 break end if
desired then if desired==24 then desired=nil end break end reg_0=shr_u32(
load_i32(memory_at_0,loc_0+56),8)desired=0 break end if desired then if desired
==23 then desired=nil end break end reg_0=load_i32(memory_at_0,loc_0+56)desired=
0 break end if desired then if desired==22 then desired=nil end break end reg_0=
load_i32_u8(memory_at_0,add_i32(loc_0,55))desired=0 break end if desired then if
desired==21 then desired=nil end break end reg_0=load_i32_u16(memory_at_0,
add_i32(loc_0,54))desired=0 break end if desired then if desired==20 then
desired=nil end break end reg_0=shr_u32(load_i32(memory_at_0,loc_0+52),8)desired
=0 break end if desired then if desired==19 then desired=nil end break end reg_0
=load_i32(memory_at_0,loc_0+52)desired=0 break end if desired then if desired==
18 then desired=nil end break end reg_0=load_i32_u8(memory_at_0,add_i32(loc_0,47
))desired=0 break end if desired then if desired==17 then desired=nil end break
end reg_0=load_i32_u16(memory_at_0,add_i32(loc_0,46))desired=0 break end if
desired then if desired==16 then desired=nil end break end reg_0=shr_u32(
load_i32(memory_at_0,loc_0+44),8)desired=0 break end if desired then if desired
==15 then desired=nil end break end reg_0=load_i32(memory_at_0,loc_0+44)desired=
0 break end if desired then if desired==14 then desired=nil end break end reg_0=
wrap_i32_i64(shr_u64(shr_u64(load_i64(memory_at_0,loc_0+8),shl_i64(load_i64_u32(
memory_at_0,loc_0+16),i64_from_u32(5,0))),i64_from_u32(24,0)))desired=0 break
end if desired then if desired==13 then desired=nil end break end reg_0=
wrap_i32_i64(shr_u64(shr_u64(load_i64(memory_at_0,loc_0+8),shl_i64(load_i64_u32(
memory_at_0,loc_0+16),i64_from_u32(5,0))),i64_from_u32(16,0)))desired=0 break
end if desired then if desired==12 then desired=nil end break end reg_0=
wrap_i32_i64(shr_u64(shr_u64(load_i64(memory_at_0,loc_0+8),shl_i64(load_i64_u32(
memory_at_0,loc_0+16),i64_from_u32(5,0))),i64_from_u32(8,0)))desired=0 break end
if desired then if desired==11 then desired=nil end break end reg_0=
wrap_i32_i64(shr_u64(load_i64(memory_at_0,loc_0+8),shl_i64(load_i64_u32(
memory_at_0,loc_0+16),i64_from_u32(5,0))))desired=0 break end if desired then if
desired==10 then desired=nil end break end reg_0=85 desired=0 break end if
desired then if desired==9 then desired=nil end break end reg_0=77 desired=0
break end if desired then if desired==8 then desired=nil end break end reg_0=69
desired=0 break end if desired then if desired==7 then desired=nil end break end
reg_0=81 desired=0 break end if desired then if desired==6 then desired=nil end
break end reg_0=2 desired=0 break end if desired then if desired==5 then desired
=nil end break end reg_0=1 desired=0 break end if desired then if desired==4
then desired=nil end break end reg_0=116 desired=0 break end if desired then if
desired==3 then desired=nil end break end reg_0=114 desired=0 break end if
desired then if desired==2 then desired=nil end break end reg_0=105 desired=0
break end if desired then if desired==1 then desired=nil end break end reg_0=118
desired=0 break end if desired then if desired==0 then desired=nil end break end
reg_0=32 break end return reg_0 end FUNC_LIST[346]=function(loc_0,loc_1,loc_2)
local loc_3=0 local loc_4=i64_ZERO local desired local br_map={}while true do
loc_3=sub_i32(GLOBAL_LIST[0].value,48)GLOBAL_LIST[0].value=loc_3 store_i32_n8(
memory_at_0,loc_3+15,loc_2)while true do while true do loc_4=add_i64(loc_1,
i64_from_u32(4026527724,4294967295))if le_u64(loc_4,i64_from_u32(80,0))then
break end loc_1=add_i64(loc_1,i64_from_u32(4026527632,4294967295))if gt_u64(
loc_1,i64_from_u32(3,0))then desired=1 break end while true do while true do
while true do while true do if not br_map[1]then br_map[1]=(function()return{[0]
=0,1,2,3}end)()end temp=br_map[1][wrap_i32_i64(loc_1)]or 0 if temp<2 then if
temp<1 then break else desired=5 break end elseif temp>2 then desired=3 break
else desired=4 break end end if desired then if desired==5 then desired=nil end
break end store_i32_n8(memory_at_0,loc_0+56,loc_2)desired=1 break end if desired
then if desired==4 then desired=nil end break end store_i32_n8(memory_at_0,
add_i32(loc_0,57),loc_2)desired=1 break end if desired then if desired==3 then
desired=nil end break end store_i32_n8(memory_at_0,add_i32(loc_0,58),loc_2)
desired=1 break end if desired then if desired==2 then desired=nil end break end
store_i32_n8(memory_at_0,add_i32(loc_0,59),loc_2)desired=1 break end if desired
then if desired==1 then desired=nil end break end while true do while true do
while true do while true do while true do while true do while true do while true
do while true do while true do while true do while true do while true do while
true do while true do while true do while true do while true do while true do
while true do while true do while true do while true do while true do while true
do while true do while true do while true do while true do while true do while
true do while true do while true do if not br_map[2]then br_map[2]=(function()
return{[0]=32,31,30,29,33,33,33,33,33,33,33,33,28,27,26,25,33,33,33,33,24,23,22,
21,33,33,33,33,20,19,18,1,33,33,33,33,17,16,15,14,13,12,11,10,9,8,7,6,33,33,33,
33,33,33,33,33,33,33,33,33,5,4,3,2,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,
33,0}end)()end temp=br_map[2][wrap_i32_i64(loc_4)]or 32 if temp<17 then if temp<
8 then if temp<4 then if temp<2 then if temp<1 then break else desired=33 break
end elseif temp>2 then desired=31 break else desired=32 break end elseif temp>4
then if temp<6 then desired=29 break elseif temp>6 then desired=27 break else
desired=28 break end else desired=30 break end elseif temp>8 then if temp<13
then if temp<11 then if temp<10 then desired=25 break else desired=24 break end
elseif temp>11 then desired=22 break else desired=23 break end elseif temp>13
then if temp<15 then desired=20 break elseif temp>15 then desired=18 break else
desired=19 break end else desired=21 break end else desired=26 break end elseif
temp>17 then if temp<26 then if temp<22 then if temp<20 then if temp<19 then
desired=16 break else desired=15 break end elseif temp>20 then desired=13 break
else desired=14 break end elseif temp>22 then if temp<24 then desired=11 break
elseif temp>24 then desired=9 break else desired=10 break end else desired=12
break end elseif temp>26 then if temp<30 then if temp<28 then desired=7 break
elseif temp>28 then desired=5 break else desired=6 break end elseif temp>30 then
if temp<32 then desired=3 break elseif temp>32 then desired=1 break else desired
=2 break end else desired=4 break end else desired=8 break end else desired=17
break end end if desired then if desired==33 then desired=nil end break end
while true do if band_i32(loc_2,1)==0 then break end store_i32(memory_at_0,loc_0
+52,band_i32(load_i32(memory_at_0,loc_0+52),4294967294))desired=1 break end if
desired then if desired==33 then desired=nil end break end store_i64(memory_at_0
,add_i32(loc_3,28),i64_ONE)store_i32(memory_at_0,loc_3+20,1)store_i32(
memory_at_0,loc_3+16,1059308)store_i32(memory_at_0,loc_3+44,163)store_i32(
memory_at_0,loc_3+24,add_i32(loc_3,40))store_i32(memory_at_0,loc_3+40,add_i32(
loc_3,15))FUNC_LIST[490](add_i32(loc_3,16),1059316)error('out of code bounds')
end if desired then if desired==32 then desired=nil end break end loc_2=bor_i32(
band_i32(load_i32(memory_at_0,loc_0+32),16777215),shl_i32(loc_2,24))store_i32(
memory_at_0,loc_0+32,loc_2)if loc_2==0 then desired=1 break end FUNC_LIST[120](
1059244,35,1059280)error('out of code bounds')end if desired then if desired==31
then desired=nil end break end store_i32_n8(memory_at_0,add_i32(loc_0,51),loc_2)
FUNC_LIST[340](add_i32(loc_0,60),load_i64(memory_at_0,loc_0))desired=1 break end
if desired then if desired==30 then desired=nil end break end store_i32_n8(
memory_at_0,add_i32(loc_0,50),loc_2)desired=1 break end if desired then if
desired==29 then desired=nil end break end store_i32_n8(memory_at_0,add_i32(
loc_0,49),loc_2)desired=1 break end if desired then if desired==28 then desired=
nil end break end store_i32_n8(memory_at_0,loc_0+48,loc_2)desired=1 break end if
desired then if desired==27 then desired=nil end break end store_i32_n8(
memory_at_0,add_i32(loc_0,47),loc_2)desired=1 break end if desired then if
desired==26 then desired=nil end break end store_i32_n8(memory_at_0,add_i32(
loc_0,46),loc_2)desired=1 break end if desired then if desired==25 then desired=
nil end break end store_i32_n8(memory_at_0,add_i32(loc_0,45),loc_2)desired=1
break end if desired then if desired==24 then desired=nil end break end
store_i32_n8(memory_at_0,loc_0+44,loc_2)desired=1 break end if desired then if
desired==23 then desired=nil end break end store_i32_n8(memory_at_0,add_i32(
loc_0,43),loc_2)desired=1 break end if desired then if desired==22 then desired=
nil end break end store_i32_n8(memory_at_0,add_i32(loc_0,42),loc_2)desired=1
break end if desired then if desired==21 then desired=nil end break end
store_i32_n8(memory_at_0,add_i32(loc_0,41),loc_2)desired=1 break end if desired
then if desired==20 then desired=nil end break end store_i32_n8(memory_at_0,
loc_0+40,loc_2)desired=1 break end if desired then if desired==19 then desired=
nil end break end store_i32_n8(memory_at_0,add_i32(loc_0,39),loc_2)desired=1
break end if desired then if desired==18 then desired=nil end break end
store_i32_n8(memory_at_0,add_i32(loc_0,38),loc_2)desired=1 break end if desired
then if desired==17 then desired=nil end break end store_i32_n8(memory_at_0,
add_i32(loc_0,37),loc_2)desired=1 break end if desired then if desired==16 then
desired=nil end break end store_i32_n8(memory_at_0,loc_0+36,loc_2)desired=1
break end if desired then if desired==15 then desired=nil end break end
store_i32_n8(memory_at_0,add_i32(loc_0,34),loc_2)desired=1 break end if desired
then if desired==14 then desired=nil end break end store_i32_n8(memory_at_0,
add_i32(loc_0,33),loc_2)desired=1 break end if desired then if desired==13 then
desired=nil end break end store_i32_n8(memory_at_0,loc_0+32,loc_2)desired=1
break end if desired then if desired==12 then desired=nil end break end
store_i32_n8(memory_at_0,add_i32(loc_0,31),loc_2)desired=1 break end if desired
then if desired==11 then desired=nil end break end store_i32_n8(memory_at_0,
add_i32(loc_0,30),loc_2)desired=1 break end if desired then if desired==10 then
desired=nil end break end store_i32_n8(memory_at_0,add_i32(loc_0,29),loc_2)
desired=1 break end if desired then if desired==9 then desired=nil end break end
store_i32_n8(memory_at_0,loc_0+28,loc_2)desired=1 break end if desired then if
desired==8 then desired=nil end break end store_i32_n8(memory_at_0,add_i32(loc_0
,23),loc_2)desired=1 break end if desired then if desired==7 then desired=nil
end break end store_i32_n8(memory_at_0,add_i32(loc_0,22),loc_2)desired=1 break
end if desired then if desired==6 then desired=nil end break end store_i32_n8(
memory_at_0,add_i32(loc_0,21),loc_2)desired=1 break end if desired then if
desired==5 then desired=nil end break end store_i32_n8(memory_at_0,loc_0+20,
loc_2)desired=1 break end if desired then if desired==4 then desired=nil end
break end store_i32_n8(memory_at_0,add_i32(loc_0,19),loc_2)desired=1 break end
if desired then if desired==3 then desired=nil end break end store_i32_n8(
memory_at_0,add_i32(loc_0,18),loc_2)desired=1 break end if desired then if
desired==2 then desired=nil end break end store_i32_n8(memory_at_0,add_i32(loc_0
,17),loc_2)desired=1 break end if desired then if desired==1 then desired=nil
end break end store_i32_n8(memory_at_0,loc_0+16,loc_2)break end GLOBAL_LIST[0].
value=add_i32(loc_3,48)break end end FUNC_LIST[347]=function(loc_0,loc_1,loc_2,
loc_3)local reg_0 local desired while true do while true do if loc_2==0 then
break end while true do if loc_3~=0 then break end reg_0=FUNC_LIST[42](loc_2,
loc_1)loc_1=reg_0 desired=1 break end if desired then if desired==1 then desired
=nil end break end reg_0=FUNC_LIST[46](loc_2,loc_1)loc_1=reg_0 break end
store_i32(memory_at_0,loc_0+4,loc_2)store_i32(memory_at_0,loc_0,loc_1)break end
end FUNC_LIST[348]=function(loc_0,loc_1,loc_2,loc_3,loc_4)local loc_5=0 local
loc_6=0 local reg_0 local desired while true do loc_5=sub_i32(GLOBAL_LIST[0].
value,16)GLOBAL_LIST[0].value=loc_5 while true do while true do while true do
while true do if loc_1==0 then break end if le_i32(loc_2,4294967295)then desired
=3 break end while true do while true do if load_i32(memory_at_0,loc_3+4)==0
then break end while true do loc_6=load_i32(memory_at_0,add_i32(loc_3,8))if
loc_6~=0 then break end FUNC_LIST[347](add_i32(loc_5,8),loc_1,loc_2,0)loc_6=
load_i32(memory_at_0,loc_5+12)loc_3=load_i32(memory_at_0,loc_5+8)desired=5 break
end if desired then if desired==6 then desired=nil end break end reg_0=FUNC_LIST
[45](load_i32(memory_at_0,loc_3),loc_6,loc_1,loc_2)loc_3=reg_0 loc_6=loc_2
desired=5 break end if desired then if desired==5 then desired=nil end break end
FUNC_LIST[349](loc_5,loc_1,loc_2)loc_6=load_i32(memory_at_0,loc_5+4)loc_3=
load_i32(memory_at_0,loc_5)break end if desired then if desired==4 then desired=
nil end break end while true do if loc_3==0 then break end store_i32(memory_at_0
,loc_0+4,loc_3)store_i32(memory_at_0,add_i32(loc_0,8),loc_6)loc_2=0 desired=1
break end if desired then if desired==4 then desired=nil end break end
store_i32(memory_at_0,loc_0+4,loc_1)store_i32(memory_at_0,add_i32(loc_0,8),loc_2
)desired=2 break end if desired then if desired==3 then desired=nil end break
end store_i32(memory_at_0,loc_0+4,0)store_i32(memory_at_0,add_i32(loc_0,8),loc_2
)desired=2 break end if desired then if desired==2 then desired=nil end break
end store_i32(memory_at_0,loc_0+4,0)break end if desired then if desired==1 then
desired=nil end break end loc_2=1 break end store_i32(memory_at_0,loc_0,loc_2)
GLOBAL_LIST[0].value=add_i32(loc_5,16)break end end FUNC_LIST[349]=function(
loc_0,loc_1,loc_2)local loc_3=0 while true do loc_3=sub_i32(GLOBAL_LIST[0].value
,16)GLOBAL_LIST[0].value=loc_3 FUNC_LIST[347](add_i32(loc_3,8),loc_1,loc_2,0)
loc_2=load_i32(memory_at_0,loc_3+12)store_i32(memory_at_0,loc_0,load_i32(
memory_at_0,loc_3+8))store_i32(memory_at_0,loc_0+4,loc_2)GLOBAL_LIST[0].value=
add_i32(loc_3,16)break end end FUNC_LIST[350]=function(loc_0,loc_1)local desired
while true do while true do while true do if loc_0==2147483649 then break end if
loc_0==0 then desired=1 break end FUNC_LIST[478](loc_0,loc_1)error(
'out of code bounds')end if desired then if desired==1 then desired=nil end
break end desired=0 break end if desired then if desired==0 then desired=nil end
break end FUNC_LIST[479]()error('out of code bounds')end end FUNC_LIST[351]=
function(loc_0,loc_1,loc_2)local loc_3=0 local desired while true do loc_3=
sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_3 while true do while
true do while true do while true do if loc_1~=0 then break end loc_2=1 desired=3
break end if desired then if desired==3 then desired=nil end break end if
le_i32(loc_1,4294967295)then desired=2 break end while true do while true do if
loc_2~=0 then break end FUNC_LIST[349](add_i32(loc_3,8),1,loc_1)loc_2=load_i32(
memory_at_0,loc_3+8)desired=4 break end if desired then if desired==4 then
desired=nil end break end FUNC_LIST[347](loc_3,1,loc_1,1)loc_2=load_i32(
memory_at_0,loc_3)break end if desired then if desired==3 then desired=nil end
break end if loc_2==0 then desired=1 break end break end if desired then if
desired==2 then desired=nil end break end store_i32(memory_at_0,loc_0+4,loc_1)
store_i32(memory_at_0,loc_0,loc_2)GLOBAL_LIST[0].value=add_i32(loc_3,16)desired=
0 break end if desired then if desired==1 then desired=nil end break end
FUNC_LIST[479]()error('out of code bounds')end if desired then if desired==0
then desired=nil end break end FUNC_LIST[478](1,loc_1)error('out of code bounds'
)end end FUNC_LIST[352]=function(loc_0,loc_1)local loc_2=0 local desired while
true do while true do loc_2=load_i32(memory_at_0,loc_1+4)if loc_2==0 then break
end store_i32(memory_at_0,loc_0+4,8)store_i32(memory_at_0,loc_0+8,shl_i32(loc_2,
3))store_i32(memory_at_0,loc_0,load_i32(memory_at_0,loc_1))desired=0 break end
if desired then if desired==0 then desired=nil end break end store_i32(
memory_at_0,loc_0+4,0)break end end FUNC_LIST[353]=function(loc_0,loc_1)local
loc_2=0 local desired while true do while true do loc_2=load_i32(memory_at_0,
loc_1+4)if loc_2==0 then break end store_i32(memory_at_0,loc_0+4,4)store_i32(
memory_at_0,loc_0+8,shl_i32(loc_2,4))store_i32(memory_at_0,loc_0,load_i32(
memory_at_0,loc_1))desired=0 break end if desired then if desired==0 then
desired=nil end break end store_i32(memory_at_0,loc_0+4,0)break end end
FUNC_LIST[354]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0
local loc_6=0 local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)
GLOBAL_LIST[0].value=loc_4 loc_5=0 while true do loc_3=add_i32(loc_2,loc_3)if
loc_3<loc_2 then break end loc_2=load_i32(memory_at_0,loc_1+4)loc_5=shl_i32(
loc_2,1)loc_3=(if loc_5>loc_3 then loc_5 else loc_3)loc_3=(if loc_3>4 then loc_3
else 4)loc_5=shl_i32(loc_3,4)loc_6=shl_i32((if loc_3<134217728 then 1 else 0),2)
while true do while true do if loc_2==0 then break end store_i32(memory_at_0,
loc_4+20,load_i32(memory_at_0,loc_1))store_i32(memory_at_0,loc_4+24,4)store_i32(
memory_at_0,loc_4+28,shl_i32(loc_2,4))desired=2 break end if desired then if
desired==2 then desired=nil end break end store_i32(memory_at_0,loc_4+24,0)break
end if desired then if desired==1 then desired=nil end break end FUNC_LIST[348](
add_i32(loc_4,8),loc_6,loc_5,add_i32(loc_4,20),loc_4)loc_5=load_i32(memory_at_0,
loc_4+12)while true do if load_i32(memory_at_0,loc_4+8)==0 then break end loc_3=
load_i32(memory_at_0,add_i32(loc_4,16))desired=1 break end if desired then if
desired==1 then desired=nil end break end store_i32(memory_at_0,loc_1+4,loc_3)
store_i32(memory_at_0,loc_1,loc_5)loc_5=2147483649 break end store_i32(
memory_at_0,loc_0+4,loc_3)store_i32(memory_at_0,loc_0,loc_5)GLOBAL_LIST[0].value
=add_i32(loc_4,32)break end end FUNC_LIST[355]=function(loc_0,loc_1,loc_2,loc_3)
local loc_4=0 local loc_5=0 local loc_6=0 local desired while true do loc_4=
sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4 loc_5=0 while true do
loc_3=add_i32(loc_2,loc_3)if loc_3<loc_2 then break end loc_2=load_i32(
memory_at_0,loc_1+4)loc_5=shl_i32(loc_2,1)loc_3=(if loc_5>loc_3 then loc_5 else
loc_3)loc_3=(if loc_3>4 then loc_3 else 4)loc_5=mul_i32(loc_3,80)loc_6=shl_i32((
if loc_3<26843546 then 1 else 0),3)while true do while true do if loc_2==0 then
break end store_i32(memory_at_0,loc_4+24,8)store_i32(memory_at_0,loc_4+28,
mul_i32(loc_2,80))store_i32(memory_at_0,loc_4+20,load_i32(memory_at_0,loc_1))
desired=2 break end if desired then if desired==2 then desired=nil end break end
store_i32(memory_at_0,loc_4+24,0)break end if desired then if desired==1 then
desired=nil end break end FUNC_LIST[348](add_i32(loc_4,8),loc_6,loc_5,add_i32(
loc_4,20),loc_4)loc_5=load_i32(memory_at_0,loc_4+12)while true do if load_i32(
memory_at_0,loc_4+8)==0 then break end loc_3=load_i32(memory_at_0,add_i32(loc_4,
16))desired=1 break end if desired then if desired==1 then desired=nil end break
end store_i32(memory_at_0,loc_1+4,loc_3)store_i32(memory_at_0,loc_1,loc_5)loc_5=
2147483649 break end store_i32(memory_at_0,loc_0+4,loc_3)store_i32(memory_at_0,
loc_0,loc_5)GLOBAL_LIST[0].value=add_i32(loc_4,32)break end end FUNC_LIST[356]=
function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=0 local
desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value
=loc_4 loc_5=0 while true do loc_3=add_i32(loc_2,loc_3)if loc_3<loc_2 then break
end loc_2=load_i32(memory_at_0,loc_1+4)loc_5=shl_i32(loc_2,1)loc_3=(if loc_5>
loc_3 then loc_5 else loc_3)loc_3=(if loc_3>4 then loc_3 else 4)loc_5=shl_i32(
loc_3,3)loc_6=shl_i32((if loc_3<268435456 then 1 else 0),3)while true do while
true do if loc_2==0 then break end store_i32(memory_at_0,loc_4+24,8)store_i32(
memory_at_0,loc_4+28,shl_i32(loc_2,3))store_i32(memory_at_0,loc_4+20,load_i32(
memory_at_0,loc_1))desired=2 break end if desired then if desired==2 then
desired=nil end break end store_i32(memory_at_0,loc_4+24,0)break end if desired
then if desired==1 then desired=nil end break end FUNC_LIST[348](add_i32(loc_4,8
),loc_6,loc_5,add_i32(loc_4,20),loc_4)loc_5=load_i32(memory_at_0,loc_4+12)while
true do if load_i32(memory_at_0,loc_4+8)==0 then break end loc_3=load_i32(
memory_at_0,add_i32(loc_4,16))desired=1 break end if desired then if desired==1
then desired=nil end break end store_i32(memory_at_0,loc_1+4,loc_3)store_i32(
memory_at_0,loc_1,loc_5)loc_5=2147483649 break end store_i32(memory_at_0,loc_0+4
,loc_3)store_i32(memory_at_0,loc_0,loc_5)GLOBAL_LIST[0].value=add_i32(loc_4,32)
break end end FUNC_LIST[357]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0
local loc_5=0 local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,32)
GLOBAL_LIST[0].value=loc_4 loc_5=0 while true do loc_3=add_i32(loc_2,loc_3)if
loc_3<loc_2 then break end loc_2=load_i32(memory_at_0,loc_1+4)loc_5=shl_i32(
loc_2,1)loc_3=(if loc_5>loc_3 then loc_5 else loc_3)loc_3=(if loc_3>8 then loc_3
else 8)loc_5=shr_u32(bxor_i32(loc_3,4294967295),31)while true do while true do
if loc_2==0 then break end store_i32(memory_at_0,loc_4+28,loc_2)store_i32(
memory_at_0,loc_4+24,1)store_i32(memory_at_0,loc_4+20,load_i32(memory_at_0,loc_1
))desired=2 break end if desired then if desired==2 then desired=nil end break
end store_i32(memory_at_0,loc_4+24,0)break end if desired then if desired==1
then desired=nil end break end FUNC_LIST[348](add_i32(loc_4,8),loc_5,loc_3,
add_i32(loc_4,20),loc_4)loc_5=load_i32(memory_at_0,loc_4+12)while true do if
load_i32(memory_at_0,loc_4+8)==0 then break end loc_3=load_i32(memory_at_0,
add_i32(loc_4,16))desired=1 break end if desired then if desired==1 then desired
=nil end break end store_i32(memory_at_0,loc_1+4,loc_3)store_i32(memory_at_0,
loc_1,loc_5)loc_5=2147483649 break end store_i32(memory_at_0,loc_0+4,loc_3)
store_i32(memory_at_0,loc_0,loc_5)GLOBAL_LIST[0].value=add_i32(loc_4,32)break
end end FUNC_LIST[358]=function(loc_0,loc_1)local loc_2=0 while true do loc_2=
sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_2 FUNC_LIST[356](
add_i32(loc_2,8),loc_0,loc_1,1)FUNC_LIST[350](load_i32(memory_at_0,loc_2+8),
load_i32(memory_at_0,loc_2+12))GLOBAL_LIST[0].value=add_i32(loc_2,16)break end
end FUNC_LIST[359]=function(loc_0,loc_1)local loc_2=0 while true do loc_2=
sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_2 FUNC_LIST[357](
add_i32(loc_2,8),loc_0,loc_1,1)FUNC_LIST[350](load_i32(memory_at_0,loc_2+8),
load_i32(memory_at_0,loc_2+12))GLOBAL_LIST[0].value=add_i32(loc_2,16)break end
end FUNC_LIST[360]=function(loc_0,loc_1)local loc_2=0 while true do loc_2=
sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_2 FUNC_LIST[355](
add_i32(loc_2,8),loc_0,loc_1,1)FUNC_LIST[350](load_i32(memory_at_0,loc_2+8),
load_i32(memory_at_0,loc_2+12))GLOBAL_LIST[0].value=add_i32(loc_2,16)break end
end FUNC_LIST[361]=function(loc_0,loc_1)local loc_2=0 while true do loc_2=
sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_2 FUNC_LIST[354](
add_i32(loc_2,8),loc_0,loc_1,1)FUNC_LIST[350](load_i32(memory_at_0,loc_2+8),
load_i32(memory_at_0,loc_2+12))GLOBAL_LIST[0].value=add_i32(loc_2,16)break end
end FUNC_LIST[362]=function(loc_0,loc_1,loc_2)local loc_3=0 while true do loc_3=
sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_3 FUNC_LIST[357](
add_i32(loc_3,8),loc_0,loc_1,loc_2)FUNC_LIST[350](load_i32(memory_at_0,loc_3+8),
load_i32(memory_at_0,loc_3+12))GLOBAL_LIST[0].value=add_i32(loc_3,16)break end
end FUNC_LIST[363]=function(loc_0,loc_1,loc_2)while true do while true do if
loc_2==0 then break end FUNC_LIST[43](loc_0,loc_2,loc_1)break end break end end
FUNC_LIST[364]=function(loc_0)local loc_1=0 while true do while true do loc_1=
load_i32(memory_at_0,loc_0+4)if loc_1==0 then break end FUNC_LIST[363](load_i32(
memory_at_0,loc_0),8,mul_i32(loc_1,80))break end break end end FUNC_LIST[365]=
function(loc_0)local loc_1=0 while true do while true do loc_1=load_i32(
memory_at_0,loc_0+4)if loc_1==0 then break end FUNC_LIST[363](load_i32(
memory_at_0,loc_0),1,loc_1)break end break end end FUNC_LIST[366]=function(loc_0
,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=0 local loc_7=
i64_ZERO local loc_8=0 local loc_9=0 local loc_10=i64_ZERO local loc_11=i64_ZERO
local loc_12=0 local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,16
)GLOBAL_LIST[0].value=loc_4 loc_5=load_i32(memory_at_0,loc_1+4)loc_6=band_i32(
loc_5,wrap_i32_i64(loc_2))loc_7=mul_i64(band_i64(shr_u64(loc_2,i64_from_u32(25,0
)),i64_from_u32(127,0)),i64_from_u32(16843009,16843009))loc_8=load_i32(
memory_at_0,loc_3)loc_3=load_i32(memory_at_0,loc_1)loc_9=0 while true do while
true do loc_10=load_i64(memory_at_0,add_i32(loc_3,loc_6))loc_2=bxor_i64(loc_10,
loc_7)loc_2=band_i64(band_i64(bxor_i64(loc_2,i64_from_u32(4294967295,4294967295)
),add_i64(loc_2,i64_from_u32(4278124287,4278124286))),i64_from_u32(2155905152,
2155905152))while true do while true do if ne_i64(loc_2,i64_ZERO)then break end
while true do if(if eq_i64(band_i64(band_i64(loc_10,shl_i64(loc_10,i64_ONE)),
i64_from_u32(2155905152,2155905152)),i64_ZERO)then 1 else 0)==0 then break end
loc_9=add_i32(loc_9,8)loc_6=band_i32(add_i32(loc_9,loc_6),loc_5)desired=2 break
end if desired then if desired==4 then desired=nil end break end store_i32(
memory_at_0,loc_0,0)desired=1 break end if desired then if desired==3 then
desired=nil continue end break end loc_11=ctz_i64(loc_2)loc_2=band_i64(add_i64(
loc_2,i64_from_u32(4294967295,4294967295)),loc_2)loc_12=sub_i32(loc_3,shl_i32(
band_i32(add_i32(shr_u32(wrap_i32_i64(loc_11),3),loc_6),loc_5),3))if loc_8~=
load_i32(memory_at_0,add_i32(loc_12,4294967288))then continue end break end if
desired then if desired==2 then desired=nil continue end break end break end if
desired then if desired==1 then desired=nil end break end FUNC_LIST[367](
add_i32(loc_4,4),loc_1,loc_12)store_i32(memory_at_0,loc_0,1)store_i64(
memory_at_0,loc_0+4,load_i64(memory_at_0,loc_4+4))break end GLOBAL_LIST[0].value
=add_i32(loc_4,16)break end end FUNC_LIST[367]=function(loc_0,loc_1,loc_2)local
loc_3=0 while true do loc_3=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value
=loc_3 store_i32(memory_at_0,loc_3+12,loc_2)FUNC_LIST[368](loc_1,add_i32(loc_3,
12))store_i64(memory_at_0,loc_0,load_i64(memory_at_0,add_i32(loc_2,4294967288)))
store_i32(memory_at_0,loc_0+8,shr_i32(sub_i32(load_i32(memory_at_0,loc_1),loc_2)
,3))GLOBAL_LIST[0].value=add_i32(loc_3,16)break end end FUNC_LIST[368]=function(
loc_0,loc_1)local loc_2=0 local loc_3=0 local loc_4=0 local loc_5=i64_ZERO local
reg_0 while true do loc_2=128 while true do loc_3=load_i32(memory_at_0,loc_0)
loc_1=shr_i32(sub_i32(loc_3,load_i32(memory_at_0,loc_1)),3)loc_4=add_i32(loc_3,
loc_1)loc_5=load_i64(memory_at_0,loc_4)loc_3=add_i32(loc_3,band_i32(add_i32(
loc_1,4294967288),load_i32(memory_at_0,loc_0+4)))reg_0=shr_u32(wrap_i32_i64(
ctz_i64(band_i64(band_i64(loc_5,shl_i64(loc_5,i64_ONE)),i64_from_u32(2155905152,
2155905152)))),3)loc_5=load_i64(memory_at_0,loc_3)if add_i32(reg_0,shr_u32(
wrap_i32_i64(clz_i64(band_i64(band_i64(loc_5,shl_i64(loc_5,i64_ONE)),
i64_from_u32(2155905152,2155905152)))),3))>7 then break end store_i32(
memory_at_0,loc_0+8,add_i32(load_i32(memory_at_0,loc_0+8),1))loc_2=255 break end
store_i32_n8(memory_at_0,loc_4,loc_2)store_i32_n8(memory_at_0,add_i32(loc_3,8),
loc_2)store_i32(memory_at_0,loc_0+12,add_i32(load_i32(memory_at_0,loc_0+12),
4294967295))break end end FUNC_LIST[369]=function(loc_0,loc_1,loc_2,loc_3,loc_4)
local loc_5=0 local loc_6=0 local loc_7=0 local loc_8=0 local loc_9=0 local
loc_10=0 local loc_11=0 local loc_12=0 local loc_13=0 local loc_14=0 local
loc_15=i64_ZERO local loc_16=0 local loc_17=0 local loc_18=i64_ZERO local reg_0
local reg_1 local reg_2 local desired while true do loc_5=sub_i32(GLOBAL_LIST[0]
.value,80)GLOBAL_LIST[0].value=loc_5 store_i32(memory_at_0,loc_5+16,loc_3)loc_6=
load_i32(memory_at_0,loc_1+12)store_i32(memory_at_0,loc_5+20,add_i32(loc_5,16))
while true do while true do loc_3=add_i32(loc_6,loc_2)if loc_3>=loc_6 then break
end FUNC_LIST[467](loc_5,loc_4)loc_7=load_i32(memory_at_0,loc_5+4)loc_3=
load_i32(memory_at_0,loc_5)desired=1 break end if desired then if desired==1
then desired=nil end break end while true do while true do while true do loc_7=
load_i32(memory_at_0,loc_1+4)loc_8=add_i32(loc_7,1)loc_2=shr_u32(loc_8,3)loc_9=(
if loc_7<8 then loc_7 else mul_i32(loc_2,7))if loc_3<=shr_u32(loc_9,1)then break
end loc_2=add_i32(loc_9,1)loc_3=(if loc_3>loc_2 then loc_3 else loc_2)if loc_3<8
then desired=3 break end while true do if loc_3>=536870912 then break end loc_7=
1 loc_3=shl_i32(loc_3,3)if loc_3<14 then desired=2 break end loc_7=add_i32(
shr_u32(4294967295,clz_i32(add_i32(div_u32(loc_3,7),4294967295))),1)desired=2
break end if desired then if desired==4 then desired=nil end break end FUNC_LIST
[467](add_i32(loc_5,8),loc_4)loc_7=load_i32(memory_at_0,loc_5+12)loc_3=load_i32(
memory_at_0,loc_5+8)if loc_3~=2147483649 then desired=1 break end desired=2
break end if desired then if desired==3 then desired=nil end break end loc_2=
add_i32(loc_2,(if band_i32(loc_8,7)~=0 then 1 else 0))loc_10=load_i32(
memory_at_0,loc_1)loc_3=loc_10 while true do while true do if loc_2~=0 then
break end while true do while true do if loc_8<8 then break end store_i64(
memory_at_0,add_i32(loc_10,loc_8),load_i64(memory_at_0,loc_10))desired=6 break
end if desired then if desired==6 then desired=nil end break end reg_0=FUNC_LIST
[549](add_i32(loc_10,8),loc_10,loc_8)break end if desired then if desired==5
then desired=nil end break end loc_11=0 loc_12=loc_10 while true do while true
do while true do while true do if loc_11==loc_8 then break end loc_13=add_i32(
loc_10,loc_11)if load_i32_u8(memory_at_0,loc_13)~=128 then desired=7 break end
loc_14=add_i32(sub_i32(loc_10,shl_i32(loc_11,3)),4294967288)while true do reg_2=
FUNC_LIST[370](add_i32(loc_5,20),loc_1,loc_11)loc_15=reg_2 loc_2=wrap_i32_i64(
loc_15)loc_4=band_i32(loc_7,loc_2)reg_1=FUNC_LIST[371](loc_1,loc_15)loc_3=reg_1
if band_i32(bxor_i32(sub_i32(loc_11,loc_4),sub_i32(loc_3,loc_4)),loc_7)<8 then
desired=8 break end loc_4=add_i32(loc_10,loc_3)loc_16=load_i32_u8(memory_at_0,
loc_4)loc_2=shr_u32(loc_2,25)store_i32_n8(memory_at_0,loc_4,loc_2)store_i32_n8(
memory_at_0,add_i32(add_i32(band_i32(add_i32(loc_3,4294967288),loc_7),loc_10),8)
,loc_2)loc_17=sub_i32(loc_10,shl_i32(loc_3,3))while true do if loc_16==255 then
break end loc_3=4294967288 while true do if loc_3==0 then desired=10 break end
loc_2=add_i32(loc_12,loc_3)loc_4=load_i32_u8(memory_at_0,loc_2)loc_16=add_i32(
loc_17,loc_3)store_i32_n8(memory_at_0,loc_2,load_i32_u8(memory_at_0,loc_16))
store_i32_n8(memory_at_0,loc_16,loc_4)loc_3=add_i32(loc_3,1)continue end if
desired then if desired==11 then desired=nil end break end break end if desired
then if desired==10 then desired=nil continue end break end break end if desired
then if desired==9 then desired=nil end break end store_i32_n8(memory_at_0,
loc_13,255)store_i32_n8(memory_at_0,add_i32(add_i32(band_i32(add_i32(loc_11,
4294967288),loc_7),loc_10),8),255)store_i64(memory_at_0,add_i32(loc_17,
4294967288),load_i64(memory_at_0,loc_14))desired=7 break end if desired then if
desired==8 then desired=nil end break end store_i32(memory_at_0,loc_1+8,sub_i32(
loc_9,loc_6))loc_3=2147483649 desired=1 break end if desired then if desired==7
then desired=nil end break end loc_3=shr_u32(loc_2,25)store_i32_n8(memory_at_0,
loc_13,loc_3)store_i32_n8(memory_at_0,add_i32(add_i32(band_i32(add_i32(loc_11,
4294967288),loc_7),loc_10),8),loc_3)break end if desired then if desired==6 then
desired=nil continue end break end loc_11=add_i32(loc_11,1)loc_12=add_i32(loc_12
,4294967288)continue end if desired then if desired==5 then desired=nil end
break end break end if desired then if desired==4 then desired=nil continue end
break end loc_15=load_i64(memory_at_0,loc_3)store_i64(memory_at_0,loc_3,add_i64(
band_i64(shr_u64(bxor_i64(loc_15,i64_from_u32(4294967295,4294967295)),
i64_from_u32(7,0)),i64_from_u32(16843009,16843009)),bor_i64(loc_15,i64_from_u32(
2139062143,2139062143))))loc_3=add_i32(loc_3,8)loc_2=add_i32(loc_2,4294967295)
continue end if desired then if desired==3 then desired=nil end break end break
end if desired then if desired==2 then desired=nil end break end loc_7=(if loc_3
<4 then 4 else 8)break end if desired then if desired==1 then desired=nil end
break end FUNC_LIST[372](add_i32(loc_5,48),8,8,loc_7,loc_4)while true do loc_3=
load_i32(memory_at_0,loc_5+48)if loc_3~=0 then break end loc_7=load_i32(
memory_at_0,add_i32(add_i32(loc_5,48),8))loc_3=load_i32(memory_at_0,loc_5+52)
desired=1 break end if desired then if desired==1 then desired=nil end break end
loc_2=load_i32(memory_at_0,loc_5+56)loc_10=load_i32(memory_at_0,loc_5+52)reg_0=
FUNC_LIST[551](loc_3,255,add_i32(loc_10,9))loc_4=reg_0 store_i64(memory_at_0,
loc_5+40,i64_from_u32(8,8))store_i32(memory_at_0,loc_5+28,loc_10)store_i32(
memory_at_0,loc_5+24,loc_4)store_i32(memory_at_0,loc_5+36,loc_6)loc_7=sub_i32(
loc_2,loc_6)store_i32(memory_at_0,loc_5+32,loc_7)loc_17=load_i32(memory_at_0,
loc_1)loc_2=4294967288 loc_3=0 while true do while true do if loc_8~=loc_3 then
break end loc_15=load_i64(memory_at_0,loc_1)store_i64(memory_at_0,loc_1,
load_i64(memory_at_0,loc_5+24))loc_3=add_i32(add_i32(loc_5,24),8)loc_18=
load_i64(memory_at_0,loc_3)loc_2=add_i32(loc_1,8)store_i64(memory_at_0,loc_3,
load_i64(memory_at_0,loc_2))store_i64(memory_at_0,loc_2,loc_18)store_i64(
memory_at_0,loc_5+24,loc_15)while true do loc_3=load_i32(memory_at_0,loc_5+28)if
loc_3==0 then break end loc_2=shl_i32(loc_3,3)loc_3=add_i32(add_i32(loc_3,loc_2)
,17)if loc_3==0 then break end FUNC_LIST[43](add_i32(sub_i32(load_i32(
memory_at_0,loc_5+24),loc_2),4294967288),loc_3,8)break end if desired then if
desired==3 then desired=nil end break end loc_3=2147483649 desired=1 break end
if desired then if desired==2 then desired=nil continue end break end while true
do if lt_i32(load_i32_i8(memory_at_0,add_i32(loc_17,loc_3)),0)then break end
reg_2=FUNC_LIST[370](add_i32(loc_5,20),loc_1,loc_3)loc_15=reg_2 reg_1=FUNC_LIST[
371](add_i32(loc_5,24),loc_15)loc_16=reg_1 loc_12=shr_u32(wrap_i32_i64(loc_15),
25)store_i32_n8(memory_at_0,add_i32(loc_4,loc_16),loc_12)store_i32_n8(
memory_at_0,add_i32(add_i32(band_i32(add_i32(loc_16,4294967288),loc_10),loc_4),8
),loc_12)store_i64(memory_at_0,add_i32(sub_i32(loc_4,shl_i32(loc_16,3)),
4294967288),load_i64(memory_at_0,add_i32(loc_17,loc_2)))break end if desired
then if desired==2 then desired=nil continue end break end loc_3=add_i32(loc_3,1
)loc_2=add_i32(loc_2,4294967288)continue end if desired then if desired==1 then
desired=nil end break end break end store_i32(memory_at_0,loc_0+4,loc_7)
store_i32(memory_at_0,loc_0,loc_3)GLOBAL_LIST[0].value=add_i32(loc_5,80)break
end end FUNC_LIST[370]=function(loc_0,loc_1,loc_2)local reg_0 while true do
reg_0=FUNC_LIST[124](load_i32(memory_at_0,load_i32(memory_at_0,loc_0)),add_i32(
sub_i32(load_i32(memory_at_0,loc_1),shl_i32(loc_2,3)),4294967288))break end
return reg_0 end FUNC_LIST[371]=function(loc_0,loc_1)local loc_2=0 local loc_3=0
local loc_4=0 local reg_0 local desired while true do loc_2=load_i32(memory_at_0
,loc_0+4)loc_3=band_i32(loc_2,wrap_i32_i64(loc_1))loc_4=load_i32(memory_at_0,
loc_0)loc_0=8 while true do while true do loc_1=band_i64(load_i64(memory_at_0,
add_i32(loc_4,loc_3)),i64_from_u32(2155905152,2155905152))if ne_i64(loc_1,
i64_ZERO)then desired=1 break end loc_3=band_i32(add_i32(loc_3,loc_0),loc_2)
loc_0=add_i32(loc_0,8)continue end if desired then if desired==1 then desired=
nil end break end break end while true do loc_3=band_i32(add_i32(shr_u32(
wrap_i32_i64(ctz_i64(loc_1)),3),loc_3),loc_2)if lt_i32(load_i32_i8(memory_at_0,
add_i32(loc_4,loc_3)),0)then break end loc_3=shr_u32(wrap_i32_i64(ctz_i64(
band_i64(load_i64(memory_at_0,loc_4),i64_from_u32(2155905152,2155905152)))),3)
break end reg_0=loc_3 break end return reg_0 end FUNC_LIST[372]=function(loc_0,
loc_1,loc_2,loc_3,loc_4)local loc_5=0 local loc_6=i64_ZERO local loc_7=0 local
loc_8=0 local reg_0 local desired while true do loc_5=sub_i32(GLOBAL_LIST[0].
value,32)GLOBAL_LIST[0].value=loc_5 while true do while true do while true do
loc_6=mul_i64(extend_i64_u32(loc_1),extend_i64_u32(loc_3))if wrap_i32_i64(
shr_u64(loc_6,i64_from_u32(32,0)))~=0 then break end loc_1=wrap_i32_i64(loc_6)
loc_7=add_i32(add_i32(loc_2,loc_1),4294967295)if loc_7<loc_1 then break end
loc_7=band_i32(loc_7,sub_i32(0,loc_2))loc_1=add_i32(add_i32(loc_3,loc_7),8)if
loc_1<loc_7 then break end if loc_1<=sub_i32(2147483648,loc_2)then desired=2
break end break end if desired then if desired==2 then desired=nil end break end
FUNC_LIST[467](add_i32(loc_5,8),loc_4)store_i64(memory_at_0,loc_0+4,load_i64(
memory_at_0,loc_5+8))store_i32(memory_at_0,loc_0,0)desired=1 break end if
desired then if desired==1 then desired=nil end break end while true do reg_0=
FUNC_LIST[382](add_i32(loc_5,31),loc_2,loc_1)loc_8=reg_0 if loc_8==0 then break
end store_i32(memory_at_0,loc_0+12,0)loc_2=add_i32(loc_3,4294967295)store_i32(
memory_at_0,loc_0+4,loc_2)store_i32(memory_at_0,loc_0,add_i32(loc_8,loc_7))
store_i32(memory_at_0,loc_0+8,(if loc_2<8 then loc_2 else mul_i32(shr_u32(loc_3,
3),7)))desired=1 break end if desired then if desired==1 then desired=nil end
break end FUNC_LIST[468](add_i32(loc_5,16),loc_4,loc_2,loc_1)store_i64(
memory_at_0,loc_0+4,load_i64(memory_at_0,loc_5+16))store_i32(memory_at_0,loc_0,0
)break end GLOBAL_LIST[0].value=add_i32(loc_5,32)break end end FUNC_LIST[373]=
function(loc_0,loc_1,loc_2)local loc_3=0 while true do loc_3=sub_i32(GLOBAL_LIST
[0].value,16)GLOBAL_LIST[0].value=loc_3 while true do if load_i32(memory_at_0,
loc_0+8)>=loc_1 then break end FUNC_LIST[369](add_i32(loc_3,8),loc_0,loc_1,loc_2
,1)break end GLOBAL_LIST[0].value=add_i32(loc_3,16)break end end FUNC_LIST[374]=
function(loc_0,loc_1)while true do store_i64(memory_at_0,loc_0+8,i64_from_u32(
11661156,4256962177))store_i64(memory_at_0,loc_0,i64_from_u32(3441327041,
3248670876))break end end FUNC_LIST[375]=function(loc_0)while true do FUNC_LIST[
376](loc_0)error('out of code bounds')end end FUNC_LIST[376]=function(loc_0)
local loc_1=0 while true do loc_1=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0]
.value=loc_1 store_i64(memory_at_0,loc_1+8,load_i64(memory_at_0,loc_0))FUNC_LIST
[461](add_i32(loc_1,8),1059804,0,load_i32(memory_at_0,loc_0+8),1)error(
'out of code bounds')end end FUNC_LIST[377]=function(loc_0,loc_1)local reg_0
local desired while true do while true do if eq_i64(load_i64(memory_at_0,loc_0),
i64_ZERO)then break end reg_0=add_i32(loc_0,8)desired=0 break end if desired
then if desired==0 then desired=nil end break end reg_0=FUNC_LIST[118](loc_0,
loc_1)break end return reg_0 end FUNC_LIST[378]=function(loc_0)while true do
break end end FUNC_LIST[379]=function(loc_0,loc_1,loc_2)local reg_0 local reg_1
local reg_2 while true do reg_2=FUNC_LIST[124](add_i32(loc_1,16),loc_2)FUNC_LIST
[366](loc_0,loc_1,reg_2,loc_2)break end end FUNC_LIST[380]=function(loc_0,loc_1,
loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=i64_ZERO local loc_7=
i64_ZERO local loc_8=i64_ZERO local loc_9=0 local loc_10=0 local loc_11=0 local
loc_12=0 local loc_13=i64_ZERO local loc_14=0 local loc_15=i64_ZERO local loc_16
=0 local reg_0 local desired while true do loc_4=sub_i32(GLOBAL_LIST[0].value,16
)GLOBAL_LIST[0].value=loc_4 store_i32(memory_at_0,loc_4+12,loc_2)loc_5=add_i32(
loc_1,16)reg_0=FUNC_LIST[124](loc_5,add_i32(loc_4,12))loc_6=reg_0 FUNC_LIST[373
](loc_1,1,loc_5)loc_7=shr_u64(loc_6,i64_from_u32(25,0))loc_8=mul_i64(band_i64(
loc_7,i64_from_u32(127,0)),i64_from_u32(16843009,16843009))loc_9=load_i32(
memory_at_0,loc_1+4)loc_5=band_i32(loc_9,wrap_i32_i64(loc_6))loc_10=load_i32(
memory_at_0,loc_1)loc_11=0 loc_12=0 while true do while true do loc_13=load_i64(
memory_at_0,add_i32(loc_10,loc_5))loc_6=bxor_i64(loc_13,loc_8)loc_6=band_i64(
band_i64(bxor_i64(loc_6,i64_from_u32(4294967295,4294967295)),add_i64(loc_6,
i64_from_u32(4278124287,4278124286))),i64_from_u32(2155905152,2155905152))while
true do while true do while true do while true do if ne_i64(loc_6,i64_ZERO)then
break end loc_6=band_i64(loc_13,i64_from_u32(2155905152,2155905152))loc_14=1 if
loc_12~=1 then desired=4 break end desired=3 break end if desired then if
desired==5 then desired=nil continue end break end loc_15=ctz_i64(loc_6)loc_6=
band_i64(add_i64(loc_6,i64_from_u32(4294967295,4294967295)),loc_6)loc_14=
sub_i32(loc_10,shl_i32(band_i32(add_i32(shr_u32(wrap_i32_i64(loc_15),3),loc_5),
loc_9),3))if load_i32(memory_at_0,add_i32(loc_14,4294967288))~=loc_2 then
continue end break end if desired then if desired==4 then desired=nil end break
end loc_10=add_i32(loc_14,4294967292)loc_9=load_i32(memory_at_0,loc_10)loc_5=1
desired=1 break end if desired then if desired==3 then desired=nil end break end
loc_14=(if ne_i64(loc_6,i64_ZERO)then 1 else 0)loc_16=band_i32(add_i32(shr_u32(
wrap_i32_i64(ctz_i64(loc_6)),3),loc_5),loc_9)break end if desired then if
desired==2 then desired=nil continue end break end while true do if(if eq_i64(
band_i64(loc_6,shl_i64(loc_13,i64_ONE)),i64_ZERO)then 1 else 0)==0 then break
end loc_11=add_i32(loc_11,8)loc_5=band_i32(add_i32(loc_5,loc_11),loc_9)loc_12=
loc_14 desired=2 break end if desired then if desired==2 then desired=nil
continue end break end break end if desired then if desired==1 then desired=nil
end break end loc_5=0 while true do loc_14=load_i32_i8(memory_at_0,add_i32(
loc_10,loc_16))if lt_i32(loc_14,0)then break end loc_16=shr_u32(wrap_i32_i64(
ctz_i64(band_i64(load_i64(memory_at_0,loc_10),i64_from_u32(2155905152,2155905152
)))),3)loc_14=load_i32_u8(memory_at_0,add_i32(loc_10,loc_16))break end if
desired then if desired==1 then desired=nil end break end loc_12=band_i32(
wrap_i32_i64(loc_7),127)store_i32_n8(memory_at_0,add_i32(loc_10,loc_16),loc_12)
store_i32_n8(memory_at_0,add_i32(add_i32(band_i32(add_i32(loc_16,4294967288),
loc_9),loc_10),8),loc_12)store_i32(memory_at_0,loc_1+8,sub_i32(load_i32(
memory_at_0,loc_1+8),band_i32(loc_14,1)))store_i32(memory_at_0,loc_1+12,add_i32(
load_i32(memory_at_0,loc_1+12),1))loc_10=sub_i32(loc_10,shl_i32(loc_16,3))
store_i32(memory_at_0,add_i32(loc_10,4294967288),loc_2)loc_10=add_i32(loc_10,
4294967292)break end store_i32(memory_at_0,loc_10,loc_3)store_i32(memory_at_0,
loc_0+4,loc_9)store_i32(memory_at_0,loc_0,loc_5)GLOBAL_LIST[0].value=add_i32(
loc_4,16)break end end FUNC_LIST[381]=function(loc_0,loc_1,loc_2)local loc_3=0
while true do loc_3=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_3
FUNC_LIST[379](add_i32(loc_3,4),loc_1,loc_2)loc_2=load_i32(memory_at_0,loc_3+4)
store_i32(memory_at_0,loc_0+4,load_i32(memory_at_0,add_i32(loc_3,12)))store_i32(
memory_at_0,loc_0,loc_2)GLOBAL_LIST[0].value=add_i32(loc_3,16)break end end
FUNC_LIST[382]=function(loc_0,loc_1,loc_2)local reg_0 while true do while true
do if loc_2==0 then break end reg_0=FUNC_LIST[42](loc_2,loc_1)loc_1=reg_0 break
end reg_0=loc_1 break end return reg_0 end FUNC_LIST[383]=function(loc_0,loc_1,
loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=0 local loc_7=0 local loc_8=
0 local desired while true do loc_4=GLOBAL_LIST[0].value store_i64(memory_at_0,
loc_0+4096,add_i64(load_i64(memory_at_0,loc_0+4096),i64_ONE))loc_5=load_i32(
memory_at_0,loc_0+4)loc_6=load_i32(memory_at_0,loc_0+40)loc_7=load_i32(
memory_at_0,loc_0+4104)loc_4=sub_i32(loc_4,32)store_i32_n8(memory_at_0,loc_4+13,
loc_2)store_i32_n8(memory_at_0,loc_4+12,loc_1)store_i32_n8(memory_at_0,loc_4+15,
band_i32(shr_u32(loc_7,10),1))store_i32_n8(memory_at_0,loc_4+14,band_i32(
shr_u32(loc_7,1),1))store_i32(memory_at_0,loc_4+20,loc_6)store_i32(memory_at_0,
loc_4+16,loc_5)store_i64(memory_at_0,loc_4+24,i64_from_u32(1,10))loc_6=load_i32(
memory_at_0,loc_0+4116)loc_7=0 loc_1=0 loc_8=0 while true do loc_5=(if loc_6>
loc_1 then loc_6 else loc_1)loc_2=shl_i32(loc_7,2)while true do while true do if
loc_7~=2 then break end while true do if loc_8==0 then break end store_i32(
memory_at_0,loc_0+4112,loc_8)store_i64(memory_at_0,loc_3,bor_i64(load_i64(
memory_at_0,loc_3),i64_from_u32(512,0)))break end if desired then if desired==3
then desired=nil end break end desired=0 break end if desired then if desired==2
then desired=nil continue end break end while true do while true do if
load_i32_u8(memory_at_0,add_i32(add_i32(loc_4,12),loc_7))==0 then break end if
load_i32_u8(memory_at_0,add_i32(add_i32(loc_4,14),loc_7))==0 then break end
loc_1=load_i32(memory_at_0,add_i32(add_i32(loc_4,16),loc_2))if loc_1>loc_5 then
desired=3 break end break end if desired then if desired==3 then desired=nil end
break end loc_7=add_i32(loc_7,1)loc_2=add_i32(loc_2,4)desired=2 break end if
desired then if desired==2 then desired=nil continue end break end break end if
desired then if desired==1 then desired=nil continue end break end loc_7=
add_i32(loc_7,1)loc_8=load_i32(memory_at_0,add_i32(add_i32(loc_4,24),loc_2))
continue end if desired then if desired==0 then desired=nil end break end break
end end FUNC_LIST[384]=function(loc_0,loc_1)local loc_2=i64_ZERO local loc_3=0
local reg_0 local desired local br_map={}while true do while true do if eq_i64(
band_i64(loc_1,i64_from_u32(4294963200,4294967295)),i64_from_u32(201326592,0))
then break end while true do while true do while true do while true do while
true do while true do while true do while true do while true do while true do
while true do while true do while true do while true do while true do while true
do while true do while true do loc_2=add_i64(loc_1,i64_from_u32(4093632384,
4294967295))if le_u64(loc_2,i64_from_u32(7,0))then break end loc_1=add_i64(loc_1
,i64_from_u32(4091539456,4294967295))if le_u64(loc_1,i64_from_u32(7,0))then
desired=18 break end reg_0=0 desired=0 break end if desired then if desired==18
then desired=nil end break end if not br_map[1]then br_map[1]=(function()return{
[0]=1,2,3,4,5,6,7,8}end)()end temp=br_map[1][wrap_i32_i64(loc_2)]or 1 if temp<5
then if temp<3 then if temp<2 then desired=17 break else desired=16 break end
elseif temp>3 then desired=14 break else desired=15 break end elseif temp>5 then
if temp<7 then desired=12 break elseif temp>7 then desired=10 break else desired
=11 break end else desired=13 break end end if desired then if desired==17 then
desired=nil end break end if not br_map[2]then br_map[2]=(function()return{[0]=8
,9,10,11,12,13,14,15}end)()end temp=br_map[2][wrap_i32_i64(loc_1)]or 8 if temp<
12 then if temp<10 then if temp<9 then desired=9 break else desired=8 break end
elseif temp>10 then desired=6 break else desired=7 break end elseif temp>12 then
if temp<14 then desired=4 break elseif temp>14 then desired=2 break else desired
=3 break end else desired=5 break end end if desired then if desired==16 then
desired=nil end break end reg_0=load_i32_u8(memory_at_0,loc_0+4104)desired=0
break end if desired then if desired==15 then desired=nil end break end reg_0=
load_i32_u8(memory_at_0,add_i32(loc_0,4105))desired=0 break end if desired then
if desired==14 then desired=nil end break end reg_0=load_i32_u8(memory_at_0,
add_i32(loc_0,4106))desired=0 break end if desired then if desired==13 then
desired=nil end break end reg_0=load_i32_u8(memory_at_0,add_i32(loc_0,4107))
desired=0 break end if desired then if desired==12 then desired=nil end break
end reg_0=load_i32_u8(memory_at_0,add_i32(loc_0,4108))desired=0 break end if
desired then if desired==11 then desired=nil end break end reg_0=load_i32_u8(
memory_at_0,add_i32(loc_0,4109))desired=0 break end if desired then if desired==
10 then desired=nil end break end reg_0=load_i32_u8(memory_at_0,add_i32(loc_0,
4110))desired=0 break end if desired then if desired==9 then desired=nil end
break end reg_0=load_i32_u8(memory_at_0,add_i32(loc_0,4111))desired=0 break end
if desired then if desired==8 then desired=nil end break end reg_0=load_i32(
memory_at_0,loc_0+4116)desired=0 break end if desired then if desired==7 then
desired=nil end break end reg_0=shr_u32(load_i32(memory_at_0,loc_0+4116),8)
desired=0 break end if desired then if desired==6 then desired=nil end break end
reg_0=load_i32_u16(memory_at_0,add_i32(loc_0,4118))desired=0 break end if
desired then if desired==5 then desired=nil end break end reg_0=load_i32_u8(
memory_at_0,add_i32(loc_0,4119))desired=0 break end if desired then if desired==
4 then desired=nil end break end reg_0=load_i32(memory_at_0,loc_0+4112)desired=0
break end if desired then if desired==3 then desired=nil end break end reg_0=
shr_u32(load_i32(memory_at_0,loc_0+4112),8)desired=0 break end if desired then
if desired==2 then desired=nil end break end reg_0=load_i32_u16(memory_at_0,
add_i32(loc_0,4114))desired=0 break end if desired then if desired==1 then
desired=nil end break end reg_0=load_i32_u8(memory_at_0,add_i32(loc_0,4115))
desired=0 break end if desired then if desired==0 then desired=nil end break end
loc_3=wrap_i32_i64(loc_1)reg_0=shr_u32(load_i32(memory_at_0,add_i32(loc_0,
band_i32(add_i32(loc_3,4093640704),4294967292))),shl_i32(loc_3,3))break end
return reg_0 end FUNC_LIST[385]=function(loc_0,loc_1,loc_2)local loc_3=i64_ZERO
local loc_4=0 local reg_0 local desired local br_map={}while true do while true
do while true do if eq_i64(band_i64(loc_1,i64_from_u32(4294963200,4294967295)),
i64_from_u32(201326592,0))then break end loc_3=add_i64(loc_1,i64_from_u32(
4093632384,4294967295))if le_u64(loc_3,i64_from_u32(7,0))then desired=1 break
end while true do loc_1=add_i64(loc_1,i64_from_u32(4091539456,4294967295))if
gt_u64(loc_1,i64_from_u32(4,0))then break end while true do while true do while
true do while true do while true do if not br_map[1]then br_map[1]=(function()
return{[0]=0,1,2,3,4}end)()end temp=br_map[1][wrap_i32_i64(loc_1)]or 0 if temp<2
then if temp<1 then break else desired=7 break end elseif temp>2 then if temp<4
then desired=5 break else desired=4 break end else desired=6 break end end if
desired then if desired==7 then desired=nil end break end store_i32_n8(
memory_at_0,loc_0+4116,loc_2)desired=0 break end if desired then if desired==6
then desired=nil end break end store_i32_n8(memory_at_0,add_i32(loc_0,4117),
loc_2)desired=0 break end if desired then if desired==5 then desired=nil end
break end store_i32_n8(memory_at_0,add_i32(loc_0,4118),loc_2)desired=0 break end
if desired then if desired==4 then desired=nil end break end store_i32_n8(
memory_at_0,add_i32(loc_0,4119),loc_2)desired=0 break end if desired then if
desired==3 then desired=nil end break end if load_i32_u8(memory_at_0,loc_0+4112)
~=band_i32(loc_2,255)then break end store_i32(memory_at_0,loc_0+4112,0)break end
if desired then if desired==2 then desired=nil end break end desired=0 break end
if desired then if desired==1 then desired=nil end break end loc_4=wrap_i32_i64(
loc_1)loc_0=add_i32(loc_0,band_i32(add_i32(loc_4,4093640704),4294967292))reg_0=
loc_0 loc_0=shl_i32(loc_4,3)store_i32(memory_at_0,reg_0,bor_i32(band_i32(
load_i32(memory_at_0,loc_0),bxor_i32(shl_i32(255,loc_0),4294967295)),shl_i32(
band_i32(loc_2,255),loc_0)))desired=0 break end if desired then if desired==0
then desired=nil end break end while true do while true do while true do while
true do while true do while true do while true do while true do if not br_map[2]
then br_map[2]=(function()return{[0]=7,6,5,4,3,2,1,0}end)()end temp=br_map[2][
wrap_i32_i64(loc_3)]or 7 if temp<4 then if temp<2 then if temp<1 then break else
desired=7 break end elseif temp>2 then desired=5 break else desired=6 break end
elseif temp>4 then if temp<6 then desired=3 break elseif temp>6 then desired=1
break else desired=2 break end else desired=4 break end end if desired then if
desired==7 then desired=nil end break end store_i64_n8(memory_at_0,add_i32(loc_0
,4111),extend_i64_u32(loc_2))desired=0 break end if desired then if desired==6
then desired=nil end break end store_i64_n8(memory_at_0,add_i32(loc_0,4110),
extend_i64_u32(loc_2))desired=0 break end if desired then if desired==5 then
desired=nil end break end store_i64_n8(memory_at_0,add_i32(loc_0,4109),
extend_i64_u32(loc_2))desired=0 break end if desired then if desired==4 then
desired=nil end break end store_i64_n8(memory_at_0,add_i32(loc_0,4108),
extend_i64_u32(loc_2))desired=0 break end if desired then if desired==3 then
desired=nil end break end store_i64_n8(memory_at_0,add_i32(loc_0,4107),
extend_i64_u32(loc_2))desired=0 break end if desired then if desired==2 then
desired=nil end break end store_i64_n8(memory_at_0,add_i32(loc_0,4106),
extend_i64_u32(loc_2))desired=0 break end if desired then if desired==1 then
desired=nil end break end store_i64_n8(memory_at_0,add_i32(loc_0,4105),
extend_i64_u32(loc_2))desired=0 break end if desired then if desired==0 then
desired=nil end break end store_i32_n8(memory_at_0,loc_0+4104,loc_2)break end
end FUNC_LIST[386]=function(loc_0)local loc_1=i64_ZERO local loc_2=0 local reg_0
local desired while true do loc_1=add_i64(load_i64(memory_at_0,loc_0+8),i64_ONE)
store_i64(memory_at_0,loc_0+8,loc_1)while true do if ne_i64(rem_u64(loc_1,
i64_from_u32(230400,0)),i64_ZERO)then break end if band_i32(load_i32_u8(
memory_at_0,loc_0+16),255)~=0 then break end reg_0=TABLE_LIST[0].data[load_i32(
memory_at_0,load_i32(memory_at_0,loc_0+4)+24)](load_i32(memory_at_0,loc_0))loc_2
=reg_0 if band_i32(loc_2,255)==0 then break end store_i32_n8(memory_at_0,loc_0+
16,loc_2)store_i32_n8(memory_at_0,loc_0+22,bor_i32(load_i32_u8(memory_at_0,loc_0
+22),1))break end if desired then if desired==0 then desired=nil end break end
while true do while true do if ne_i64(band_i64(loc_1,i64_from_u32(15,0)),
i64_ZERO)then break end loc_2=load_i32_u8(memory_at_0,loc_0+17)if band_i32(loc_2
,255)~=0 then desired=1 break end break end if desired then if desired==1 then
desired=nil end break end desired=0 break end if desired then if desired==0 then
desired=nil end break end TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(
memory_at_0,loc_0+4)+12)](load_i32(memory_at_0,loc_0),loc_2)store_i32_n8(
memory_at_0,loc_0+17,0)store_i32_n8(memory_at_0,loc_0+22,bor_i32(load_i32_u8(
memory_at_0,loc_0+22),32))break end end FUNC_LIST[387]=function(loc_0)local
loc_1=0 local reg_0 local desired while true do while true do while true do
while true do loc_1=load_i32_u8(memory_at_0,loc_0+18)if band_i32(loc_1,1)==0
then break end if band_i32(load_i32_u8(memory_at_0,loc_0+16),255)~=0 then
desired=2 break end break end if desired then if desired==2 then desired=nil end
break end while true do while true do if band_i32(loc_1,2)==0 then break end if
band_i32(load_i32_u8(memory_at_0,loc_0+17),255)==0 then desired=3 break end
break end if desired then if desired==3 then desired=nil end break end
store_i32_n8(memory_at_0,loc_0+19,15)reg_0=0 desired=0 break end if desired then
if desired==2 then desired=nil end break end store_i32_n8(memory_at_0,loc_0+19,2
)desired=1 break end if desired then if desired==1 then desired=nil end break
end store_i32_n8(memory_at_0,loc_0+19,4)break end if desired then if desired==0
then desired=nil end break end reg_0=1 break end return reg_0 end FUNC_LIST[388]
=function(loc_0,loc_1)local loc_2=0 local reg_0 local desired local br_map={}
while true do loc_2=0 while true do loc_1=add_i64(loc_1,i64_from_u32(4026531840,
4294967295))if gt_u64(loc_1,i64_from_u32(7,0))then break end while true do while
true do while true do while true do while true do while true do while true do if
not br_map[1]then br_map[1]=(function()return{[0]=5,6,0,1,2,3,7,4}end)()end temp
=br_map[1][wrap_i32_i64(loc_1)]or 5 if temp<4 then if temp<2 then if temp<1 then
break else desired=7 break end elseif temp>2 then desired=5 break else desired=6
break end elseif temp>4 then if temp<6 then desired=3 break elseif temp>6 then
desired=1 break else desired=2 break end else desired=4 break end end if desired
then if desired==7 then desired=nil end break end reg_0=load_i32_u8(memory_at_0,
loc_0+19)desired=0 break end if desired then if desired==6 then desired=nil end
break end reg_0=load_i32_u8(memory_at_0,loc_0+20)desired=0 break end if desired
then if desired==5 then desired=nil end break end reg_0=load_i32_u8(memory_at_0,
loc_0+21)desired=0 break end if desired then if desired==4 then desired=nil end
break end reg_0=load_i32_u8(memory_at_0,loc_0+22)desired=0 break end if desired
then if desired==3 then desired=nil end break end reg_0=load_i32_u8(memory_at_0,
loc_0+23)desired=0 break end if desired then if desired==2 then desired=nil end
break end if le_i32(load_i32_i8(memory_at_0,loc_0+20),4294967295)then desired=1
break end loc_2=load_i32_u8(memory_at_0,loc_0+16)store_i32_n8(memory_at_0,loc_0+
16,0)store_i32_n8(memory_at_0,loc_0+22,band_i32(load_i32_u8(memory_at_0,loc_0+22
),254))desired=1 break end if desired then if desired==1 then desired=nil end
break end if le_i32(load_i32_i8(memory_at_0,loc_0+20),4294967295)then break end
reg_0=load_i32_u8(memory_at_0,loc_0+18)desired=0 break end if desired then if
desired==0 then desired=nil end break end reg_0=loc_2 break end return reg_0 end
FUNC_LIST[389]=function(loc_0,loc_1,loc_2)local desired local br_map={}while
true do while true do loc_1=add_i64(loc_1,i64_from_u32(4026531840,4294967295))if
gt_u64(loc_1,i64_from_u32(7,0))then break end while true do while true do while
true do while true do while true do if not br_map[1]then br_map[1]=(function()
return{[0]=3,4,5,0,1,5,5,2}end)()end temp=br_map[1][wrap_i32_i64(loc_1)]or 3 if
temp<3 then if temp<1 then break elseif temp>1 then desired=4 break else desired
=5 break end elseif temp>3 then if temp<5 then desired=2 break else desired=1
break end else desired=3 break end end if desired then if desired==5 then
desired=nil end break end store_i32_n8(memory_at_0,loc_0+20,loc_2)desired=0
break end if desired then if desired==4 then desired=nil end break end
store_i32_n8(memory_at_0,loc_0+21,loc_2)desired=0 break end if desired then if
desired==3 then desired=nil end break end store_i32_n8(memory_at_0,loc_0+23,
loc_2)desired=1 break end if desired then if desired==2 then desired=nil end
break end if le_i32(load_i32_i8(memory_at_0,loc_0+20),4294967295)then desired=1
break end store_i32_n8(memory_at_0,loc_0+17,loc_2)store_i32_n8(memory_at_0,loc_0
+22,band_i32(load_i32_u8(memory_at_0,loc_0+22),223))desired=0 break end if
desired then if desired==1 then desired=nil end break end if le_i32(load_i32_i8(
memory_at_0,loc_0+20),4294967295)then break end store_i32_n8(memory_at_0,loc_0+
18,loc_2)desired=0 break end if desired then if desired==0 then desired=nil end
break end break end end FUNC_LIST[390]=function(loc_0)while true do break end
end FUNC_LIST[391]=function(loc_0)while true do break end end FUNC_LIST[392]=
function(loc_0)local loc_1=0 local loc_2=0 local loc_3=0 while true do while
true do loc_1=load_i32(memory_at_0,loc_0)loc_2=band_i32(loc_1,4294967292)if
loc_2==0 then break end if band_i32(loc_1,2)~=0 then break end store_i32(
memory_at_0,loc_2+4,bor_i32(band_i32(load_i32(memory_at_0,loc_2+4),3),band_i32(
load_i32(memory_at_0,loc_0+4),4294967292)))loc_1=load_i32(memory_at_0,loc_0)
break end while true do loc_2=load_i32(memory_at_0,loc_0+4)loc_3=band_i32(loc_2,
4294967292)if loc_3==0 then break end store_i32(memory_at_0,loc_3,bor_i32(
band_i32(load_i32(memory_at_0,loc_3),3),band_i32(loc_1,4294967292)))loc_2=
load_i32(memory_at_0,loc_0+4)loc_1=load_i32(memory_at_0,loc_0)break end
store_i32(memory_at_0,loc_0+4,band_i32(loc_2,3))store_i32(memory_at_0,loc_0,
band_i32(loc_1,3))break end end FUNC_LIST[393]=function(loc_0,loc_1,loc_2,loc_3)
local loc_4=0 local loc_5=0 local reg_0 local desired while true do loc_4=
sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_4 loc_5=load_i32(
memory_at_0,loc_1)store_i32(memory_at_0,loc_4+12,load_i32(memory_at_0,loc_5))
loc_1=add_i32(loc_2,2)loc_1=mul_i32(loc_1,loc_1)loc_2=(if loc_1>2048 then loc_1
else 2048)reg_0=FUNC_LIST[394](loc_2,4,add_i32(loc_4,12),1059824,1059848)loc_1=
reg_0 store_i32(memory_at_0,loc_5,load_i32(memory_at_0,loc_4+12))while true do
while true do if loc_1~=0 then break end loc_2=1 desired=1 break end if desired
then if desired==1 then desired=nil end break end store_i64(memory_at_0,loc_1+4,
i64_ZERO)store_i32(memory_at_0,loc_1,bor_i32(add_i32(loc_1,shl_i32(loc_2,2)),2))
loc_2=0 break end store_i32(memory_at_0,loc_0+4,loc_1)store_i32(memory_at_0,
loc_0,loc_2)GLOBAL_LIST[0].value=add_i32(loc_4,16)break end end FUNC_LIST[394]=
function(loc_0,loc_1,loc_2,loc_3,loc_4)local loc_5=0 local loc_6=0 local reg_0
while true do loc_5=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_5
while true do reg_0=FUNC_LIST[400](loc_0,loc_1,loc_2,loc_3,loc_4)loc_6=reg_0 if
loc_6~=0 then break end TABLE_LIST[0].data[load_i32(memory_at_0,loc_4+12)](
add_i32(loc_5,8),loc_3,loc_0,loc_1)loc_6=0 if load_i32(memory_at_0,loc_5+8)~=0
then break end loc_6=load_i32(memory_at_0,loc_5+12)store_i32(memory_at_0,loc_6+8
,load_i32(memory_at_0,loc_2))store_i32(memory_at_0,loc_2,loc_6)reg_0=FUNC_LIST[
400](loc_0,loc_1,loc_2,loc_3,loc_4)loc_6=reg_0 break end GLOBAL_LIST[0].value=
add_i32(loc_5,16)reg_0=loc_6 break end return reg_0 end FUNC_LIST[395]=function(
loc_0,loc_1)local reg_0 while true do reg_0=loc_1 break end return reg_0 end
FUNC_LIST[396]=function(loc_0)local reg_0 while true do reg_0=0 break end return
reg_0 end FUNC_LIST[397]=function(loc_0,loc_1,loc_2,loc_3)local reg_0 local
desired while true do while true do while true do loc_2=shl_i32(loc_2,2)loc_3=
add_i32(shl_i32(loc_3,3),16384)loc_3=add_i32((if loc_2>loc_3 then loc_2 else
loc_3),65543)reg_0=rt.allocator.grow(memory_at_0,shr_u32(loc_3,16))loc_2=reg_0
if loc_2~=4294967295 then break end loc_3=1 loc_2=0 desired=1 break end if
desired then if desired==1 then desired=nil end break end loc_2=shl_i32(loc_2,16
)store_i64(memory_at_0,loc_2+4,i64_ZERO)store_i32(memory_at_0,loc_2,bor_i32(
add_i32(loc_2,band_i32(loc_3,4294901760)),2))loc_3=0 break end store_i32(
memory_at_0,loc_0+4,loc_2)store_i32(memory_at_0,loc_0,loc_3)break end end
FUNC_LIST[398]=function(loc_0,loc_1)local reg_0 while true do reg_0=512 break
end return reg_0 end FUNC_LIST[399]=function(loc_0)local reg_0 while true do
reg_0=1 break end return reg_0 end FUNC_LIST[400]=function(loc_0,loc_1,loc_2,
loc_3,loc_4)local loc_5=0 local loc_6=0 local loc_7=0 local loc_8=0 local loc_9=
0 local loc_10=0 local loc_11=0 local reg_0 local reg_1 local desired while true
do loc_5=add_i32(loc_1,4294967295)loc_6=0 loc_7=sub_i32(0,loc_1)loc_8=shl_i32(
loc_0,2)loc_9=load_i32(memory_at_0,loc_2)while true do while true do if loc_9==0
then desired=1 break end loc_1=loc_9 while true do while true do while true do
while true do while true do while true do while true do loc_9=load_i32(
memory_at_0,loc_1+8)if band_i32(loc_9,1)~=0 then break end loc_10=band_i32(
load_i32(memory_at_0,loc_1),4294967292)loc_11=add_i32(loc_1,8)if sub_i32(loc_10,
loc_11)<loc_8 then desired=6 break end while true do reg_1=TABLE_LIST[0].data[
load_i32(memory_at_0,loc_4+16)](loc_3,loc_0)loc_9=band_i32(sub_i32(loc_10,loc_8)
,loc_7)if add_i32(add_i32(loc_11,shl_i32(reg_1,2)),8)<=loc_9 then break end
loc_9=load_i32(memory_at_0,loc_11)if band_i32(loc_5,loc_11)~=0 then desired=6
break end store_i32(memory_at_0,loc_2,band_i32(loc_9,4294967292))loc_2=load_i32(
memory_at_0,loc_1)loc_9=loc_1 desired=7 break end if desired then if desired==9
then desired=nil end break end loc_2=0 store_i32(memory_at_0,loc_9,0)loc_9=
add_i32(loc_9,4294967288)store_i64(memory_at_0,loc_9,i64_ZERO)store_i32(
memory_at_0,loc_9,band_i32(load_i32(memory_at_0,loc_1),4294967292))while true do
loc_8=load_i32(memory_at_0,loc_1)loc_11=band_i32(loc_8,4294967292)if loc_11==0
then break end if band_i32(loc_8,2)~=0 then break end store_i32(memory_at_0,
loc_11+4,bor_i32(band_i32(load_i32(memory_at_0,loc_11+4),3),loc_9))loc_2=
band_i32(load_i32(memory_at_0,loc_9+4),3)break end if desired then if desired==9
then desired=nil end break end store_i32(memory_at_0,loc_9+4,bor_i32(loc_2,loc_1
))store_i32(memory_at_0,loc_1+8,band_i32(load_i32(memory_at_0,loc_1+8),
4294967294))loc_2=load_i32(memory_at_0,loc_1)loc_11=bor_i32(band_i32(loc_2,3),
loc_9)store_i32(memory_at_0,loc_1,loc_11)if band_i32(loc_2,2)~=0 then desired=8
break end loc_2=load_i32(memory_at_0,loc_9)desired=7 break end if desired then
if desired==8 then desired=nil end break end store_i32(memory_at_0,loc_1+8,
band_i32(loc_9,4294967294))while true do while true do loc_9=band_i32(load_i32(
memory_at_0,loc_1+4),4294967292)if loc_9~=0 then break end loc_9=0 desired=9
break end if desired then if desired==9 then desired=nil end break end loc_9=(if
band_i32(load_i32_u8(memory_at_0,loc_9),1)~=0 then 0 else loc_9)break end if
desired then if desired==8 then desired=nil end break end FUNC_LIST[392](loc_1)
if band_i32(load_i32_u8(memory_at_0,loc_1),2)~=0 then desired=5 break end
desired=4 break end if desired then if desired==7 then desired=nil end break end
store_i32(memory_at_0,loc_1,band_i32(loc_11,4294967293))loc_2=bor_i32(load_i32(
memory_at_0,loc_9),2)break end if desired then if desired==6 then desired=nil
end break end store_i32(memory_at_0,loc_9,bor_i32(loc_2,1))loc_6=add_i32(loc_9,8
)desired=1 break end if desired then if desired==5 then desired=nil end break
end store_i32(memory_at_0,loc_2,loc_9)desired=2 break end if desired then if
desired==4 then desired=nil end break end store_i32(memory_at_0,loc_9,bor_i32(
load_i32(memory_at_0,loc_9),2))break end if desired then if desired==3 then
desired=nil continue end break end store_i32(memory_at_0,loc_2,loc_9)loc_1=loc_9
continue end if desired then if desired==2 then desired=nil continue end break
end break end if desired then if desired==1 then desired=nil end break end break
end reg_0=loc_6 break end return reg_0 end FUNC_LIST[401]=function(loc_0,loc_1,
loc_2,loc_3)local loc_4=0 local reg_0 local desired while true do loc_4=
load_i32(memory_at_0,loc_0)store_i32(memory_at_0,loc_4,0)loc_0=add_i32(loc_4,
4294967288)store_i32(memory_at_0,loc_0,band_i32(load_i32(memory_at_0,loc_0),
4294967294))while true do reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,loc_3+20
)](loc_2)if reg_0==0 then break end while true do while true do loc_3=band_i32(
load_i32(memory_at_0,add_i32(loc_4,4294967292)),4294967292)if loc_3==0 then
break end if band_i32(load_i32_u8(memory_at_0,loc_3),1)~=0 then break end
FUNC_LIST[392](loc_0)if band_i32(load_i32_u8(memory_at_0,loc_0),2)==0 then
desired=2 break end store_i32(memory_at_0,loc_3,bor_i32(load_i32(memory_at_0,
loc_3),2))desired=0 break end if desired then if desired==2 then desired=nil end
break end loc_2=load_i32(memory_at_0,loc_0)loc_3=band_i32(loc_2,4294967292)if
loc_3==0 then desired=1 break end if band_i32(loc_2,2)~=0 then desired=1 break
end if band_i32(load_i32_u8(memory_at_0,loc_3),1)~=0 then desired=1 break end
store_i32(memory_at_0,loc_4,band_i32(load_i32(memory_at_0,loc_3+8),4294967292))
store_i32(memory_at_0,loc_3+8,bor_i32(loc_0,1))break end if desired then if
desired==1 then desired=nil end break end desired=0 break end if desired then if
desired==0 then desired=nil end break end store_i32(memory_at_0,loc_4,load_i32(
memory_at_0,loc_1))store_i32(memory_at_0,loc_1,loc_0)break end end FUNC_LIST[402
]=function(loc_0,loc_1,loc_2)local loc_3=0 local loc_4=0 local reg_0 local
desired while true do loc_3=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value
=loc_3 while true do if loc_2==0 then break end loc_2=shr_u32(add_i32(loc_2,3),2
)while true do if loc_1>=5 then break end loc_4=add_i32(loc_2,4294967295)if
loc_4>255 then break end store_i32(memory_at_0,loc_3+4,add_i32(loc_0,1024))loc_0
=add_i32(loc_0,shl_i32(loc_4,2))store_i32(memory_at_0,loc_3+12,load_i32(
memory_at_0,loc_0))reg_0=FUNC_LIST[394](loc_2,loc_1,add_i32(loc_3,12),add_i32(
loc_3,4),1059824)loc_1=reg_0 store_i32(memory_at_0,loc_0,load_i32(memory_at_0,
loc_3+12))desired=1 break end if desired then if desired==1 then desired=nil end
break end store_i32(memory_at_0,loc_3+8,load_i32(memory_at_0,loc_0+1024))reg_0=
FUNC_LIST[394](loc_2,loc_1,add_i32(loc_3,8),1059824,1059848)loc_1=reg_0
store_i32(memory_at_0,loc_0+1024,load_i32(memory_at_0,loc_3+8))break end
GLOBAL_LIST[0].value=add_i32(loc_3,16)reg_0=loc_1 break end return reg_0 end
FUNC_LIST[403]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local desired
while true do loc_4=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_4
while true do if loc_1==0 then break end store_i32(memory_at_0,loc_4+4,loc_1)if
loc_3==0 then break end while true do if loc_2>=5 then break end loc_1=add_i32(
shr_u32(add_i32(loc_3,3),2),4294967295)if loc_1>255 then break end store_i32(
memory_at_0,loc_4+8,add_i32(loc_0,1024))loc_1=add_i32(loc_0,shl_i32(loc_1,2))
store_i32(memory_at_0,loc_4+12,load_i32(memory_at_0,loc_1))FUNC_LIST[401](
add_i32(loc_4,4),add_i32(loc_4,12),add_i32(loc_4,8),1059824)store_i32(
memory_at_0,loc_1,load_i32(memory_at_0,loc_4+12))desired=1 break end if desired
then if desired==1 then desired=nil end break end store_i32(memory_at_0,loc_4+12
,load_i32(memory_at_0,loc_0+1024))FUNC_LIST[401](add_i32(loc_4,4),add_i32(loc_4,
12),1059824,1059848)store_i32(memory_at_0,loc_0+1024,load_i32(memory_at_0,loc_4+
12))break end GLOBAL_LIST[0].value=add_i32(loc_4,16)break end end FUNC_LIST[404]
=function(loc_0,loc_1)while true do store_i64(memory_at_0,loc_0+8,i64_from_u32(
1229464069,3025884056))store_i64(memory_at_0,loc_0,i64_from_u32(482422035,
4015249626))break end end FUNC_LIST[405]=function(loc_0,loc_1)while true do
store_i64(memory_at_0,loc_0+8,i64_from_u32(512226615,2735273938))store_i64(
memory_at_0,loc_0,i64_from_u32(3830209246,2757655119))break end end FUNC_LIST[
406]=function(loc_0,loc_1)while true do store_i64(memory_at_0,loc_0+8,
i64_from_u32(11661156,4256962177))store_i64(memory_at_0,loc_0,i64_from_u32(
3441327041,3248670876))break end end FUNC_LIST[407]=function(loc_0,loc_1)local
reg_0 while true do reg_0=FUNC_LIST[530](load_i32(memory_at_0,loc_0),loc_1)break
end return reg_0 end FUNC_LIST[408]=function(loc_0,loc_1)local reg_0 while true
do reg_0=FUNC_LIST[531](load_i32(memory_at_0,loc_0),load_i32(memory_at_0,loc_0+4
),loc_1)break end return reg_0 end FUNC_LIST[409]=function(loc_0,loc_1)local
loc_2=0 local loc_3=0 local loc_4=i64_ZERO local loc_5=0 local loc_6=0 local
loc_7=0 local reg_0 local desired while true do loc_2=sub_i32(GLOBAL_LIST[0].
value,16)GLOBAL_LIST[0].value=loc_2 store_i32(memory_at_0,loc_2+4,0)while true
do while true do while true do while true do if loc_1<128 then break end if
loc_1<2048 then desired=3 break end if loc_1>=65536 then desired=2 break end
store_i32_n8(memory_at_0,loc_2+6,bor_i32(band_i32(loc_1,63),128))store_i32_n8(
memory_at_0,loc_2+4,bor_i32(shr_u32(loc_1,12),224))store_i32_n8(memory_at_0,
loc_2+5,bor_i32(band_i32(shr_u32(loc_1,6),63),128))loc_1=3 desired=1 break end
if desired then if desired==3 then desired=nil end break end store_i32_n8(
memory_at_0,loc_2+4,loc_1)loc_1=1 desired=1 break end if desired then if desired
==2 then desired=nil end break end store_i32_n8(memory_at_0,loc_2+5,bor_i32(
band_i32(loc_1,63),128))store_i32_n8(memory_at_0,loc_2+4,bor_i32(shr_u32(loc_1,6
),192))loc_1=2 desired=1 break end if desired then if desired==1 then desired=
nil end break end store_i32_n8(memory_at_0,loc_2+7,bor_i32(band_i32(loc_1,63),
128))store_i32_n8(memory_at_0,loc_2+6,bor_i32(band_i32(shr_u32(loc_1,6),63),128)
)store_i32_n8(memory_at_0,loc_2+5,bor_i32(band_i32(shr_u32(loc_1,12),63),128))
store_i32_n8(memory_at_0,loc_2+4,bor_i32(band_i32(shr_u32(loc_1,18),7),240))
loc_1=4 break end FUNC_LIST[410](add_i32(loc_2,8),load_i32(memory_at_0,loc_0+8),
add_i32(loc_2,4),loc_1)while true do loc_1=load_i32_u8(memory_at_0,loc_2+8)if
loc_1==4 then break end loc_3=load_i32(memory_at_0,loc_0+4)loc_4=load_i64(
memory_at_0,loc_2+8)while true do while true do loc_5=load_i32_u8(memory_at_0,
loc_0)if loc_5>4 then break end if loc_5~=3 then desired=2 break end break end
if desired then if desired==2 then desired=nil end break end loc_6=load_i32(
memory_at_0,loc_3)loc_5=load_i32(memory_at_0,add_i32(loc_3,4))TABLE_LIST[0].data
[load_i32(memory_at_0,loc_5)](loc_6)while true do loc_7=load_i32(memory_at_0,
loc_5+4)if loc_7==0 then break end FUNC_LIST[43](loc_6,loc_7,load_i32(
memory_at_0,loc_5+8))break end if desired then if desired==2 then desired=nil
end break end FUNC_LIST[43](loc_3,12,4)break end if desired then if desired==1
then desired=nil end break end store_i64(memory_at_0,loc_0,loc_4)break end
GLOBAL_LIST[0].value=add_i32(loc_2,16)reg_0=(if loc_1~=4 then 1 else 0)break end
return reg_0 end FUNC_LIST[410]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0
local loc_5=0 local loc_6=0 local reg_0 local desired while true do loc_4=
sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_4 while true do while
true do while true do while true do while true do loc_1=load_i32(memory_at_0,
loc_1)if load_i32(memory_at_0,loc_1+8)~=0 then break end store_i32(memory_at_0,
loc_1+8,4294967295)FUNC_LIST[533](add_i32(loc_4,8),10,loc_2,loc_3)while true do
if load_i32(memory_at_0,loc_4+8)~=0 then break end while true do while true do
loc_5=load_i32(memory_at_0,add_i32(loc_1,20))if loc_5~=0 then break end loc_5=0
desired=7 break end if desired then if desired==7 then desired=nil end break end
if load_i32_u8(memory_at_0,add_i32(add_i32(loc_5,load_i32(memory_at_0,loc_1+12))
,4294967295))~=10 then break end loc_5=0 store_i32(memory_at_0,loc_1+20,0)
store_i32_n8(memory_at_0,add_i32(loc_1,24),0)break end if desired then if
desired==6 then desired=nil end break end if sub_i32(load_i32(memory_at_0,
add_i32(loc_1,16)),loc_5)>loc_3 then desired=3 break end FUNC_LIST[441](loc_0,
add_i32(loc_1,12),loc_2,loc_3)desired=1 break end if desired then if desired==5
then desired=nil end break end loc_5=add_i32(load_i32(memory_at_0,loc_4+12),1)if
loc_3<loc_5 then desired=4 break end loc_6=load_i32(memory_at_0,add_i32(loc_1,20
))if loc_6==0 then desired=2 break end while true do while true do while true do
if sub_i32(load_i32(memory_at_0,add_i32(loc_1,16)),loc_6)<=loc_5 then break end
reg_0=FUNC_LIST[550](add_i32(load_i32(memory_at_0,loc_1+12),loc_6),loc_2,loc_5)
loc_6=add_i32(loc_6,loc_5)store_i32(memory_at_0,loc_1+20,loc_6)desired=7 break
end if desired then if desired==7 then desired=nil end break end FUNC_LIST[441](
add_i32(loc_4,20),add_i32(loc_1,12),loc_2,loc_5)loc_6=load_i32_u8(memory_at_0,
loc_4+20)if loc_6~=4 then desired=6 break end loc_6=load_i32(memory_at_0,loc_1+
20)break end if desired then if desired==6 then desired=nil end break end if
loc_6==0 then desired=2 break end store_i32(memory_at_0,loc_1+20,0)store_i32_n8(
memory_at_0,add_i32(loc_1,24),0)desired=2 break end if desired then if desired==
5 then desired=nil end break end store_i32(memory_at_0,loc_0+1,load_i32(
memory_at_0,loc_4+21))store_i32(memory_at_0,add_i32(loc_0,4),load_i32(
memory_at_0,add_i32(add_i32(loc_4,20),4)))store_i32_n8(memory_at_0,loc_0,loc_6)
desired=1 break end if desired then if desired==4 then desired=nil end break end
FUNC_LIST[506](1061172,16,add_i32(loc_4,31),1061188,1061248)error(
'out of code bounds')end if desired then if desired==3 then desired=nil end
break end FUNC_LIST[495](1060057,35,1060368)error('out of code bounds')end if
desired then if desired==2 then desired=nil end break end reg_0=FUNC_LIST[550](
add_i32(load_i32(memory_at_0,loc_1+12),loc_5),loc_2,loc_3)store_i32_n8(
memory_at_0,loc_0,4)store_i32(memory_at_0,loc_1+20,add_i32(loc_5,loc_3))desired=
1 break end if desired then if desired==1 then desired=nil end break end loc_2=
add_i32(loc_2,loc_5)while true do loc_3=sub_i32(loc_3,loc_5)if load_i32(
memory_at_0,add_i32(loc_1,16))>loc_3 then break end FUNC_LIST[441](loc_0,
add_i32(loc_1,12),loc_2,loc_3)desired=1 break end if desired then if desired==1
then desired=nil end break end reg_0=FUNC_LIST[550](load_i32(memory_at_0,loc_1+
12),loc_2,loc_3)store_i32_n8(memory_at_0,loc_0,4)store_i32(memory_at_0,loc_1+20,
loc_3)break end store_i32(memory_at_0,loc_1+8,add_i32(load_i32(memory_at_0,loc_1
+8),1))GLOBAL_LIST[0].value=add_i32(loc_4,32)break end end FUNC_LIST[411]=
function(loc_0,loc_1)local loc_2=0 local loc_3=0 local reg_0 local desired while
true do loc_2=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_2
store_i32(memory_at_0,loc_2+12,0)while true do while true do while true do while
true do if loc_1<128 then break end if loc_1<2048 then desired=3 break end if
loc_1>=65536 then desired=2 break end store_i32_n8(memory_at_0,loc_2+14,bor_i32(
band_i32(loc_1,63),128))store_i32_n8(memory_at_0,loc_2+12,bor_i32(shr_u32(loc_1,
12),224))store_i32_n8(memory_at_0,loc_2+13,bor_i32(band_i32(shr_u32(loc_1,6),63)
,128))loc_3=3 desired=1 break end if desired then if desired==3 then desired=nil
end break end store_i32_n8(memory_at_0,loc_2+12,loc_1)loc_3=1 desired=1 break
end if desired then if desired==2 then desired=nil end break end store_i32_n8(
memory_at_0,loc_2+13,bor_i32(band_i32(loc_1,63),128))store_i32_n8(memory_at_0,
loc_2+12,bor_i32(shr_u32(loc_1,6),192))loc_3=2 desired=1 break end if desired
then if desired==1 then desired=nil end break end store_i32_n8(memory_at_0,loc_2
+15,bor_i32(band_i32(loc_1,63),128))store_i32_n8(memory_at_0,loc_2+14,bor_i32(
band_i32(shr_u32(loc_1,6),63),128))store_i32_n8(memory_at_0,loc_2+13,bor_i32(
band_i32(shr_u32(loc_1,12),63),128))store_i32_n8(memory_at_0,loc_2+12,bor_i32(
band_i32(shr_u32(loc_1,18),7),240))loc_3=4 break end while true do loc_1=
load_i32(memory_at_0,loc_0+8)loc_0=load_i32(memory_at_0,loc_1+8)if sub_i32(
load_i32(memory_at_0,loc_1+4),loc_0)>=loc_3 then break end FUNC_LIST[412](loc_1,
loc_0,loc_3)loc_0=load_i32(memory_at_0,loc_1+8)break end reg_0=FUNC_LIST[550](
add_i32(load_i32(memory_at_0,loc_1),loc_0),add_i32(loc_2,12),loc_3)store_i32(
memory_at_0,loc_1+8,add_i32(loc_0,loc_3))GLOBAL_LIST[0].value=add_i32(loc_2,16)
reg_0=0 break end return reg_0 end FUNC_LIST[412]=function(loc_0,loc_1,loc_2)
local loc_3=0 local loc_4=0 local desired while true do loc_3=sub_i32(
GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_3 while true do while true do
loc_2=add_i32(loc_1,loc_2)if loc_2<loc_1 then break end loc_1=load_i32(
memory_at_0,loc_0+4)loc_4=shl_i32(loc_1,1)loc_2=(if loc_4>loc_2 then loc_4 else
loc_2)loc_2=(if loc_2>8 then loc_2 else 8)loc_4=shr_u32(bxor_i32(loc_2,
4294967295),31)while true do while true do if loc_1==0 then break end store_i32(
memory_at_0,loc_3+28,loc_1)store_i32(memory_at_0,loc_3+24,1)store_i32(
memory_at_0,loc_3+20,load_i32(memory_at_0,loc_0))desired=3 break end if desired
then if desired==3 then desired=nil end break end store_i32(memory_at_0,loc_3+24
,0)break end if desired then if desired==2 then desired=nil end break end
FUNC_LIST[434](add_i32(loc_3,8),loc_4,loc_2,add_i32(loc_3,20))loc_1=load_i32(
memory_at_0,loc_3+12)while true do if load_i32(memory_at_0,loc_3+8)~=0 then
break end store_i32(memory_at_0,loc_0+4,loc_2)store_i32(memory_at_0,loc_0,loc_1)
desired=1 break end if desired then if desired==2 then desired=nil end break end
if loc_1==2147483649 then desired=1 break end if loc_1==0 then break end
FUNC_LIST[478](loc_1,load_i32(memory_at_0,add_i32(loc_3,16)))error(
'out of code bounds')end if desired then if desired==1 then desired=nil end
break end FUNC_LIST[479]()error('out of code bounds')end GLOBAL_LIST[0].value=
add_i32(loc_3,32)break end end FUNC_LIST[413]=function(loc_0,loc_1)local loc_2=0
local reg_0 while true do loc_2=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].
value=loc_2 store_i32(memory_at_0,loc_2+12,loc_0)reg_0=FUNC_LIST[499](add_i32(
loc_2,12),1059872,loc_1)loc_0=reg_0 GLOBAL_LIST[0].value=add_i32(loc_2,16)reg_0=
loc_0 break end return reg_0 end FUNC_LIST[414]=function(loc_0,loc_1)local loc_2
=0 local reg_0 while true do loc_2=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0
].value=loc_2 store_i32(memory_at_0,loc_2+12,loc_0)reg_0=FUNC_LIST[499](add_i32(
loc_2,12),1059896,loc_1)loc_0=reg_0 GLOBAL_LIST[0].value=add_i32(loc_2,16)reg_0=
loc_0 break end return reg_0 end FUNC_LIST[415]=function(loc_0,loc_1,loc_2,loc_3
,loc_4)local loc_5=0 local desired while true do loc_5=sub_i32(GLOBAL_LIST[0].
value,32)GLOBAL_LIST[0].value=loc_5 while true do if loc_2<loc_4 then break end
if add_i32(loc_4,1)<loc_2 then break end store_i32(memory_at_0,loc_0+16,0)
store_i32(memory_at_0,loc_0+4,loc_2)store_i32(memory_at_0,loc_0,loc_1)store_i32(
memory_at_0,loc_0+8,loc_3)store_i32(memory_at_0,add_i32(loc_0,12),loc_4)
GLOBAL_LIST[0].value=add_i32(loc_5,32)desired=0 break end if desired then if
desired==0 then desired=nil end break end store_i64(memory_at_0,add_i32(loc_5,20
),i64_ZERO)store_i32(memory_at_0,loc_5+12,1)store_i32(memory_at_0,loc_5+8,
1059956)store_i32(memory_at_0,loc_5+16,1059964)FUNC_LIST[490](add_i32(loc_5,8),
1060040)error('out of code bounds')end end FUNC_LIST[416]=function(loc_0)while
true do break end end FUNC_LIST[417]=function()local reg_0 while true do reg_0=(
if load_i32(memory_at_0,0+1065576)==0 then 1 else 0)break end return reg_0 end
FUNC_LIST[418]=function(loc_0)while true do break end end FUNC_LIST[419]=
function(loc_0)local loc_1=0 while true do while true do loc_1=load_i32(
memory_at_0,loc_0+4)if loc_1==0 then break end FUNC_LIST[43](load_i32(
memory_at_0,loc_0),loc_1,1)break end break end end FUNC_LIST[420]=function(loc_0
)local loc_1=0 while true do while true do loc_1=load_i32(memory_at_0,loc_0+4)if
loc_1==0 then break end loc_0=load_i32(memory_at_0,add_i32(loc_0,8))if loc_0==0
then break end FUNC_LIST[43](loc_1,loc_0,1)break end break end end FUNC_LIST[421
]=function(loc_0)local loc_1=0 local loc_2=0 local loc_3=0 local desired while
true do loc_1=load_i32(memory_at_0,loc_0+4)while true do while true do loc_0=
load_i32_u8(memory_at_0,loc_0)if loc_0>4 then break end if loc_0~=3 then desired
=1 break end break end if desired then if desired==1 then desired=nil end break
end loc_2=load_i32(memory_at_0,loc_1)loc_0=load_i32(memory_at_0,add_i32(loc_1,4)
)TABLE_LIST[0].data[load_i32(memory_at_0,loc_0)](loc_2)while true do loc_3=
load_i32(memory_at_0,loc_0+4)if loc_3==0 then break end FUNC_LIST[43](loc_2,
loc_3,load_i32(memory_at_0,loc_0+8))break end if desired then if desired==1 then
desired=nil end break end FUNC_LIST[43](loc_1,12,4)break end break end end
FUNC_LIST[422]=function(loc_0,loc_1)local loc_2=0 while true do loc_2=sub_i32(
GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_2 store_i32(memory_at_0,loc_2+
12,1060056)store_i32(memory_at_0,loc_2+8,loc_0)FUNC_LIST[514](0,add_i32(loc_2,8)
,1060092,add_i32(loc_2,12),1060092,loc_1,1061500)error('out of code bounds')end
end FUNC_LIST[423]=function(loc_0,loc_1)local reg_0 while true do reg_0=
FUNC_LIST[411](load_i32(memory_at_0,loc_0),loc_1)break end return reg_0 end
FUNC_LIST[424]=function(loc_0,loc_1)local loc_2=0 local loc_3=0 local reg_0
local desired while true do loc_2=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0]
.value=loc_2 loc_0=load_i32(memory_at_0,loc_0)while true do while true do while
true do while true do if loc_1<128 then break end store_i32(memory_at_0,loc_2+12
,0)if loc_1<2048 then desired=3 break end while true do if loc_1>=65536 then
break end store_i32_n8(memory_at_0,loc_2+14,bor_i32(band_i32(loc_1,63),128))
store_i32_n8(memory_at_0,loc_2+12,bor_i32(shr_u32(loc_1,12),224))store_i32_n8(
memory_at_0,loc_2+13,bor_i32(band_i32(shr_u32(loc_1,6),63),128))loc_1=3 desired=
2 break end if desired then if desired==4 then desired=nil end break end
store_i32_n8(memory_at_0,loc_2+15,bor_i32(band_i32(loc_1,63),128))store_i32_n8(
memory_at_0,loc_2+14,bor_i32(band_i32(shr_u32(loc_1,6),63),128))store_i32_n8(
memory_at_0,loc_2+13,bor_i32(band_i32(shr_u32(loc_1,12),63),128))store_i32_n8(
memory_at_0,loc_2+12,bor_i32(band_i32(shr_u32(loc_1,18),7),240))loc_1=4 desired=
2 break end if desired then if desired==3 then desired=nil end break end while
true do loc_3=load_i32(memory_at_0,loc_0+8)if loc_3~=load_i32(memory_at_0,loc_0+
4)then break end FUNC_LIST[425](loc_0,loc_3)loc_3=load_i32(memory_at_0,loc_0+8)
break end if desired then if desired==3 then desired=nil end break end
store_i32(memory_at_0,loc_0+8,add_i32(loc_3,1))store_i32_n8(memory_at_0,add_i32(
load_i32(memory_at_0,loc_0),loc_3),loc_1)desired=1 break end if desired then if
desired==2 then desired=nil end break end store_i32_n8(memory_at_0,loc_2+13,
bor_i32(band_i32(loc_1,63),128))store_i32_n8(memory_at_0,loc_2+12,bor_i32(
shr_u32(loc_1,6),192))loc_1=2 break end if desired then if desired==1 then
desired=nil end break end while true do loc_3=load_i32(memory_at_0,loc_0+8)if
sub_i32(load_i32(memory_at_0,loc_0+4),loc_3)>=loc_1 then break end FUNC_LIST[412
](loc_0,loc_3,loc_1)loc_3=load_i32(memory_at_0,loc_0+8)break end if desired then
if desired==1 then desired=nil end break end reg_0=FUNC_LIST[550](add_i32(
load_i32(memory_at_0,loc_0),loc_3),add_i32(loc_2,12),loc_1)store_i32(memory_at_0
,loc_0+8,add_i32(loc_3,loc_1))break end GLOBAL_LIST[0].value=add_i32(loc_2,16)
reg_0=0 break end return reg_0 end FUNC_LIST[425]=function(loc_0,loc_1)local
loc_2=0 local loc_3=0 local loc_4=0 local desired while true do loc_2=sub_i32(
GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_2 while true do while true do
loc_1=add_i32(loc_1,1)if loc_1==0 then break end loc_3=load_i32(memory_at_0,
loc_0+4)loc_4=shl_i32(loc_3,1)loc_1=(if loc_4>loc_1 then loc_4 else loc_1)loc_1=
(if loc_1>8 then loc_1 else 8)loc_4=shr_u32(bxor_i32(loc_1,4294967295),31)while
true do while true do if loc_3==0 then break end store_i32(memory_at_0,loc_2+28,
loc_3)store_i32(memory_at_0,loc_2+24,1)store_i32(memory_at_0,loc_2+20,load_i32(
memory_at_0,loc_0))desired=3 break end if desired then if desired==3 then
desired=nil end break end store_i32(memory_at_0,loc_2+24,0)break end if desired
then if desired==2 then desired=nil end break end FUNC_LIST[434](add_i32(loc_2,8
),loc_4,loc_1,add_i32(loc_2,20))loc_3=load_i32(memory_at_0,loc_2+12)while true
do if load_i32(memory_at_0,loc_2+8)~=0 then break end store_i32(memory_at_0,
loc_0+4,loc_1)store_i32(memory_at_0,loc_0,loc_3)desired=1 break end if desired
then if desired==2 then desired=nil end break end if loc_3==2147483649 then
desired=1 break end if loc_3==0 then break end FUNC_LIST[478](loc_3,load_i32(
memory_at_0,add_i32(loc_2,16)))error('out of code bounds')end if desired then if
desired==1 then desired=nil end break end FUNC_LIST[479]()error(
'out of code bounds')end GLOBAL_LIST[0].value=add_i32(loc_2,32)break end end
FUNC_LIST[426]=function(loc_0,loc_1)local reg_0 while true do reg_0=FUNC_LIST[
409](load_i32(memory_at_0,loc_0),loc_1)break end return reg_0 end FUNC_LIST[427]
=function(loc_0,loc_1)local loc_2=0 local reg_0 while true do loc_2=sub_i32(
GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_2 store_i32(memory_at_0,loc_2+
12,load_i32(memory_at_0,loc_0))reg_0=FUNC_LIST[499](add_i32(loc_2,12),1059872,
loc_1)loc_0=reg_0 GLOBAL_LIST[0].value=add_i32(loc_2,16)reg_0=loc_0 break end
return reg_0 end FUNC_LIST[428]=function(loc_0,loc_1)local loc_2=0 local reg_0
while true do loc_2=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_2
store_i32(memory_at_0,loc_2+12,load_i32(memory_at_0,loc_0))reg_0=FUNC_LIST[499](
add_i32(loc_2,12),1059920,loc_1)loc_0=reg_0 GLOBAL_LIST[0].value=add_i32(loc_2,
16)reg_0=loc_0 break end return reg_0 end FUNC_LIST[429]=function(loc_0,loc_1)
local loc_2=0 local reg_0 while true do loc_2=sub_i32(GLOBAL_LIST[0].value,16)
GLOBAL_LIST[0].value=loc_2 store_i32(memory_at_0,loc_2+12,load_i32(memory_at_0,
loc_0))reg_0=FUNC_LIST[499](add_i32(loc_2,12),1059896,loc_1)loc_0=reg_0
GLOBAL_LIST[0].value=add_i32(loc_2,16)reg_0=loc_0 break end return reg_0 end
FUNC_LIST[430]=function(loc_0,loc_1,loc_2)local loc_3=0 local reg_0 while true
do while true do loc_0=load_i32(memory_at_0,loc_0)loc_3=load_i32(memory_at_0,
loc_0+8)if sub_i32(load_i32(memory_at_0,loc_0+4),loc_3)>=loc_2 then break end
FUNC_LIST[412](loc_0,loc_3,loc_2)loc_3=load_i32(memory_at_0,loc_0+8)break end
reg_0=FUNC_LIST[550](add_i32(load_i32(memory_at_0,loc_0),loc_3),loc_1,loc_2)
store_i32(memory_at_0,loc_0+8,add_i32(loc_3,loc_2))reg_0=0 break end return
reg_0 end FUNC_LIST[431]=function(loc_0,loc_1,loc_2)local loc_3=0 local reg_0
while true do while true do loc_0=load_i32(memory_at_0,load_i32(memory_at_0,
loc_0)+8)loc_3=load_i32(memory_at_0,loc_0+8)if sub_i32(load_i32(memory_at_0,
loc_0+4),loc_3)>=loc_2 then break end FUNC_LIST[412](loc_0,loc_3,loc_2)loc_3=
load_i32(memory_at_0,loc_0+8)break end reg_0=FUNC_LIST[550](add_i32(load_i32(
memory_at_0,loc_0),loc_3),loc_1,loc_2)store_i32(memory_at_0,loc_0+8,add_i32(
loc_3,loc_2))reg_0=0 break end return reg_0 end FUNC_LIST[432]=function(loc_0,
loc_1,loc_2)local loc_3=0 local loc_4=0 local loc_5=i64_ZERO local loc_6=0 local
loc_7=0 local reg_0 local desired while true do loc_3=sub_i32(GLOBAL_LIST[0].
value,16)GLOBAL_LIST[0].value=loc_3 loc_0=load_i32(memory_at_0,loc_0)FUNC_LIST[
410](add_i32(loc_3,8),load_i32(memory_at_0,loc_0+8),loc_1,loc_2)while true do
loc_2=load_i32_u8(memory_at_0,loc_3+8)if loc_2==4 then break end loc_4=load_i32(
memory_at_0,loc_0+4)loc_5=load_i64(memory_at_0,loc_3+8)while true do while true
do loc_1=load_i32_u8(memory_at_0,loc_0)if loc_1>4 then break end if loc_1~=3
then desired=2 break end break end if desired then if desired==2 then desired=
nil end break end loc_6=load_i32(memory_at_0,loc_4)loc_1=load_i32(memory_at_0,
add_i32(loc_4,4))TABLE_LIST[0].data[load_i32(memory_at_0,loc_1)](loc_6)while
true do loc_7=load_i32(memory_at_0,loc_1+4)if loc_7==0 then break end FUNC_LIST[
43](loc_6,loc_7,load_i32(memory_at_0,loc_1+8))break end if desired then if
desired==2 then desired=nil end break end FUNC_LIST[43](loc_4,12,4)break end if
desired then if desired==1 then desired=nil end break end store_i64(memory_at_0,
loc_0,loc_5)break end GLOBAL_LIST[0].value=add_i32(loc_3,16)reg_0=(if loc_2~=4
then 1 else 0)break end return reg_0 end FUNC_LIST[433]=function(loc_0)local
loc_1=0 while true do while true do loc_0=load_i32(memory_at_0,loc_0)loc_1=
load_i32(memory_at_0,add_i32(loc_0,16))if loc_1==0 then break end FUNC_LIST[43](
load_i32(memory_at_0,add_i32(loc_0,12)),loc_1,1)break end while true do if loc_0
==4294967295 then break end loc_1=load_i32(memory_at_0,loc_0+4)store_i32(
memory_at_0,loc_0+4,add_i32(loc_1,4294967295))if loc_1~=1 then break end
FUNC_LIST[43](loc_0,24,4)break end break end end FUNC_LIST[434]=function(loc_0,
loc_1,loc_2,loc_3)local loc_4=0 local reg_0 local desired while true do while
true do while true do while true do if loc_1==0 then break end if le_i32(loc_2,
4294967295)then desired=2 break end while true do while true do while true do if
load_i32(memory_at_0,loc_3+4)==0 then break end while true do loc_4=load_i32(
memory_at_0,add_i32(loc_3,8))if loc_4~=0 then break end while true do if loc_2~=
0 then break end loc_3=loc_1 desired=4 break end if desired then if desired==7
then desired=nil end break end desired=5 break end if desired then if desired==6
then desired=nil end break end reg_0=FUNC_LIST[45](load_i32(memory_at_0,loc_3),
loc_4,loc_1,loc_2)loc_3=reg_0 desired=4 break end if desired then if desired==5
then desired=nil end break end while true do if loc_2~=0 then break end loc_3=
loc_1 desired=4 break end if desired then if desired==5 then desired=nil end
break end break end if desired then if desired==4 then desired=nil end break end
reg_0=FUNC_LIST[42](loc_2,loc_1)loc_3=reg_0 break end if desired then if desired
==3 then desired=nil end break end while true do if loc_3==0 then break end
store_i32(memory_at_0,loc_0+4,loc_3)store_i32(memory_at_0,add_i32(loc_0,8),loc_2
)store_i32(memory_at_0,loc_0,0)desired=0 break end if desired then if desired==3
then desired=nil end break end store_i32(memory_at_0,loc_0+4,loc_1)store_i32(
memory_at_0,add_i32(loc_0,8),loc_2)desired=1 break end if desired then if
desired==2 then desired=nil end break end store_i32(memory_at_0,loc_0+4,0)
store_i32(memory_at_0,add_i32(loc_0,8),loc_2)desired=1 break end if desired then
if desired==1 then desired=nil end break end store_i32(memory_at_0,loc_0+4,0)
break end if desired then if desired==0 then desired=nil end break end
store_i32(memory_at_0,loc_0,1)break end end FUNC_LIST[435]=function(loc_0,loc_1)
local reg_0 while true do reg_0=FUNC_LIST[531](load_i32(memory_at_0,loc_0),
load_i32(memory_at_0,loc_0+8),loc_1)break end return reg_0 end FUNC_LIST[436]=
function(loc_0)local loc_1=0 local loc_2=0 local loc_3=0 local desired local
br_map={}while true do loc_1=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].
value=loc_1 while true do while true do while true do while true do while true
do while true do while true do if not br_map[1]then br_map[1]=(function()return{
[0]=0,2,6,1}end)()end temp=br_map[1][load_i32_u8(memory_at_0,0+1065502)]or 0 if
temp<2 then if temp<1 then break else desired=6 break end elseif temp>2 then
desired=1 break else desired=5 break end end if desired then if desired==6 then
desired=nil end break end store_i32_n8(memory_at_0,0+1065502,2)loc_2=
load_i32_u8(memory_at_0,loc_0)store_i32_n8(memory_at_0,loc_0,0)if loc_2==0 then
desired=4 break end store_i32_n8(memory_at_0,loc_1+31,0)while true do while true
do if load_i32_u8(memory_at_0,0+1065536)==3 then break end FUNC_LIST[450](
add_i32(loc_1,31))if load_i32_u8(memory_at_0,loc_1+31)~=0 then desired=7 break
end break end if desired then if desired==7 then desired=nil end break end while
true do while true do if load_i32(memory_at_0,0+1065504)==1065592 then break end
loc_2=load_i32_u8(memory_at_0,0+1065532)loc_0=1 store_i32_n8(memory_at_0,0+
1065532,1)if loc_2~=0 then desired=7 break end store_i32(memory_at_0,0+1065504,
1065592)desired=8 break end if desired then if desired==8 then desired=nil end
break end loc_0=add_i32(load_i32(memory_at_0,0+1065508),1)if loc_0==0 then
desired=3 break end break end if desired then if desired==7 then desired=nil end
break end loc_2=0 store_i32(memory_at_0,0+1065508,loc_0)if load_i32(memory_at_0,
0+1065512)~=0 then desired=2 break end store_i32(memory_at_0,0+1065512,
4294967295)while true do loc_3=load_i32(memory_at_0,0+1065520)if loc_3==0 then
break end FUNC_LIST[43](load_i32(memory_at_0,0+1065516),loc_3,1)loc_2=add_i32(
load_i32(memory_at_0,0+1065512),1)loc_0=load_i32(memory_at_0,0+1065508)break end
if desired then if desired==7 then desired=nil end break end store_i64(
memory_at_0,0+1065520,i64_ZERO)store_i32(memory_at_0,0+1065516,1)store_i32(
memory_at_0,0+1065512,loc_2)loc_0=add_i32(loc_0,4294967295)store_i32(memory_at_0
,0+1065508,loc_0)store_i32_n8(memory_at_0,0+1065528,0)if loc_0~=0 then break end
store_i32_n8(memory_at_0,0+1065532,0)store_i32(memory_at_0,0+1065504,0)break end
if desired then if desired==6 then desired=nil end break end store_i32_n8(
memory_at_0,0+1065502,3)break end if desired then if desired==5 then desired=nil
end break end GLOBAL_LIST[0].value=add_i32(loc_1,32)desired=0 break end if
desired then if desired==4 then desired=nil end break end store_i64(memory_at_0,
add_i32(loc_1,16),i64_ZERO)store_i32(memory_at_0,loc_1+8,1)store_i32(memory_at_0
,loc_1+4,1062120)store_i32(memory_at_0,loc_1+12,1059964)FUNC_LIST[490](add_i32(
loc_1,4),1060176)error('out of code bounds')end if desired then if desired==3
then desired=nil end break end FUNC_LIST[495](1060108,43,1061544)error(
'out of code bounds')end if desired then if desired==2 then desired=nil end
break end FUNC_LIST[507](1061592,38,1061664)error('out of code bounds')end if
desired then if desired==1 then desired=nil end break end FUNC_LIST[506](1061172
,16,add_i32(loc_1,4),1061188,1061232)error('out of code bounds')end if desired
then if desired==0 then desired=nil end break end store_i64(memory_at_0,add_i32(
loc_1,16),i64_ZERO)store_i32(memory_at_0,loc_1+8,1)store_i32(memory_at_0,loc_1+4
,1062184)store_i32(memory_at_0,loc_1+12,1059964)FUNC_LIST[490](add_i32(loc_1,4),
1060176)error('out of code bounds')end end FUNC_LIST[437]=function(loc_0,loc_1,
loc_2,loc_3,loc_4)local loc_5=0 local loc_6=0 local loc_7=0 local loc_8=0 local
loc_9=0 local loc_10=0 local loc_11=i64_ZERO local loc_12=i64_ZERO local loc_13=
i64_ZERO local reg_0 local desired while true do loc_5=sub_i32(GLOBAL_LIST[0].
value,32)GLOBAL_LIST[0].value=loc_5 FUNC_LIST[482](add_i32(loc_5,16),1060151,4)
while true do if load_i32(memory_at_0,loc_5+16)~=0 then break end loc_6=
load_i32(memory_at_0,add_i32(add_i32(loc_5,16),8))loc_7=load_i32(memory_at_0,
loc_5+20)FUNC_LIST[485](add_i32(loc_5,8),8,16)loc_8=load_i32(memory_at_0,loc_5+8
)while true do while true do loc_9=load_i32(memory_at_0,loc_5+12)if loc_9~=0
then break end loc_10=loc_8 desired=2 break end if desired then if desired==2
then desired=nil end break end reg_0=FUNC_LIST[42](loc_9,loc_8)loc_10=reg_0
break end if desired then if desired==1 then desired=nil end break end while
true do while true do while true do if loc_10==0 then break end store_i64(
memory_at_0,loc_10,i64_from_u32(1,1))store_i32(memory_at_0,loc_10+20,loc_6)
store_i32(memory_at_0,add_i32(loc_10,16),loc_7)loc_11=load_i64(memory_at_0,0+
1065568)while true do loc_12=add_i64(loc_11,i64_ONE)if eq_i64(loc_12,i64_ZERO)
then desired=3 break end loc_13=load_i64(memory_at_0,0+1065568)loc_8=(if eq_i64(
loc_13,loc_11)then 1 else 0)store_i64(memory_at_0,0+1065568,(if loc_8~=0 then
loc_12 else loc_13))loc_11=loc_13 if loc_8==0 then continue end break end if
desired then if desired==4 then desired=nil end break end store_i64(memory_at_0,
loc_10+8,loc_12)if load_i32(memory_at_0,0+1065584)~=0 then desired=2 break end
store_i32(memory_at_0,0+1065584,4294967295)if load_i32(memory_at_0,0+1065588)~=0
then desired=1 break end store_i32(memory_at_0,0+1065588,loc_10)store_i32(
memory_at_0,0+1065584,0)reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,add_i32(
loc_1,20))](loc_0)loc_8=reg_0 while true do if load_i32_u8(memory_at_0,0+1065502
)==3 then break end store_i32_n8(memory_at_0,loc_5+16,1)FUNC_LIST[436](add_i32(
loc_5,16))break end if desired then if desired==4 then desired=nil end break end
GLOBAL_LIST[0].value=add_i32(loc_5,32)reg_0=loc_8 desired=0 break end if desired
then if desired==3 then desired=nil end break end FUNC_LIST[478](loc_8,loc_9)
error('out of code bounds')end if desired then if desired==2 then desired=nil
end break end FUNC_LIST[438]()error('out of code bounds')end if desired then if
desired==1 then desired=nil end break end FUNC_LIST[506](1061172,16,add_i32(
loc_5,16),1061188,1061724)error('out of code bounds')end if desired then if
desired==0 then desired=nil end break end error('out of code bounds')end return
reg_0 end FUNC_LIST[438]=function()local loc_0=0 while true do loc_0=sub_i32(
GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_0 store_i64(memory_at_0,
add_i32(loc_0,20),i64_ZERO)store_i32(memory_at_0,loc_0+12,1)store_i32(
memory_at_0,loc_0+8,1060288)store_i32(memory_at_0,loc_0+16,1059964)FUNC_LIST[490
](add_i32(loc_0,8),1060296)error('out of code bounds')end end FUNC_LIST[439]=
function(loc_0,loc_1)local loc_2=0 local reg_0 while true do loc_2=sub_i32(
GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_2 FUNC_LIST[529](add_i32(loc_2,
8),loc_1,1060192,11)reg_0=FUNC_LIST[518](add_i32(loc_2,8))loc_1=reg_0
GLOBAL_LIST[0].value=add_i32(loc_2,16)reg_0=loc_1 break end return reg_0 end
FUNC_LIST[440]=function(loc_0,loc_1)local loc_2=0 local reg_0 local desired
local br_map={}while true do loc_2=sub_i32(GLOBAL_LIST[0].value,64)GLOBAL_LIST[0
].value=loc_2 while true do while true do while true do while true do while true
do while true do if not br_map[1]then br_map[1]=(function()return{[0]=0,1,2,3}
end)()end temp=br_map[1][load_i32_u8(memory_at_0,loc_0)]or 0 if temp<2 then if
temp<1 then break else desired=5 break end elseif temp>2 then desired=3 break
else desired=4 break end end if desired then if desired==5 then desired=nil end
break end store_i32(memory_at_0,loc_2+8,load_i32(memory_at_0,loc_0+4))reg_0=
FUNC_LIST[42](20,1)loc_0=reg_0 if loc_0==0 then desired=1 break end store_i32(
memory_at_0,add_i32(loc_0,16),load_i32(memory_at_0,0+1062072))store_i64(
memory_at_0,add_i32(loc_0,8),load_i64(memory_at_0,0+1062064))store_i64(
memory_at_0,loc_0,load_i64(memory_at_0,0+1062056))store_i64(memory_at_0,loc_2+16
,i64_from_u32(20,20))store_i32(memory_at_0,loc_2+12,loc_0)store_i64(memory_at_0,
add_i32(add_i32(loc_2,40),12),i64_from_u32(2,0))store_i32(memory_at_0,add_i32(
add_i32(loc_2,24),12),175)store_i32(memory_at_0,loc_2+44,3)store_i32(memory_at_0
,loc_2+40,1061148)store_i32(memory_at_0,loc_2+28,176)store_i32(memory_at_0,loc_2
+48,add_i32(loc_2,24))store_i32(memory_at_0,loc_2+32,add_i32(loc_2,8))store_i32(
memory_at_0,loc_2+24,add_i32(loc_2,12))reg_0=FUNC_LIST[528](loc_1,add_i32(loc_2,
40))loc_0=reg_0 loc_1=load_i32(memory_at_0,loc_2+16)if loc_1==0 then desired=2
break end FUNC_LIST[43](load_i32(memory_at_0,loc_2+12),loc_1,1)desired=2 break
end if desired then if desired==4 then desired=nil end break end loc_0=
load_i32_u8(memory_at_0,loc_0+1)store_i64(memory_at_0,add_i32(loc_2,52),i64_ONE)
store_i32(memory_at_0,loc_2+44,1)store_i32(memory_at_0,loc_2+40,1060312)
store_i32(memory_at_0,loc_2+16,177)loc_0=shl_i32(loc_0,2)store_i32(memory_at_0,
loc_2+28,load_i32(memory_at_0,add_i32(loc_0,1062192)))store_i32(memory_at_0,
loc_2+24,load_i32(memory_at_0,add_i32(loc_0,1062356)))store_i32(memory_at_0,
loc_2+48,add_i32(loc_2,12))store_i32(memory_at_0,loc_2+12,add_i32(loc_2,24))
reg_0=FUNC_LIST[528](loc_1,add_i32(loc_2,40))loc_0=reg_0 desired=2 break end if
desired then if desired==3 then desired=nil end break end loc_0=load_i32(
memory_at_0,loc_0+4)reg_0=FUNC_LIST[531](load_i32(memory_at_0,loc_0),load_i32(
memory_at_0,loc_0+4),loc_1)loc_0=reg_0 desired=2 break end if desired then if
desired==2 then desired=nil end break end loc_0=load_i32(memory_at_0,loc_0+4)
reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(memory_at_0,loc_0+4)+16)
](load_i32(memory_at_0,loc_0),loc_1)loc_0=reg_0 break end if desired then if
desired==1 then desired=nil end break end GLOBAL_LIST[0].value=add_i32(loc_2,64)
reg_0=loc_0 desired=0 break end if desired then if desired==0 then desired=nil
end break end FUNC_LIST[478](1,20)error('out of code bounds')end return reg_0
end FUNC_LIST[441]=function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0
local reg_0 local desired while true do loc_4=load_i32(memory_at_0,loc_1+4)while
true do loc_5=load_i32(memory_at_0,loc_1+8)if loc_5==0 then break end if
sub_i32(loc_4,loc_5)>=loc_3 then break end loc_5=0 store_i32(memory_at_0,loc_1+8
,0)store_i32_n8(memory_at_0,loc_1+12,0)break end if desired then if desired==0
then desired=nil end break end while true do if loc_4<=loc_3 then break end
reg_0=FUNC_LIST[550](add_i32(load_i32(memory_at_0,loc_1),loc_5),loc_2,loc_3)
store_i32_n8(memory_at_0,loc_0,4)store_i32(memory_at_0,loc_1+8,add_i32(loc_5,
loc_3))desired=0 break end if desired then if desired==0 then desired=nil end
break end store_i64(memory_at_0,loc_0,i64_from_u32(4,0))store_i32_n8(memory_at_0
,loc_1+12,0)break end end FUNC_LIST[442]=function()local loc_0=0 while true do
loc_0=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_0 while true do
if load_i32_u8(memory_at_0,0+1065536)==3 then break end store_i32(memory_at_0,
loc_0+4,1065504)store_i32(memory_at_0,loc_0+8,add_i32(loc_0,15))FUNC_LIST[449](
add_i32(loc_0,4))break end GLOBAL_LIST[0].value=add_i32(loc_0,16)break end end
FUNC_LIST[443]=function(loc_0,loc_1,loc_2)local loc_3=0 local loc_4=0 local
reg_0 local desired while true do loc_3=sub_i32(GLOBAL_LIST[0].value,32)
GLOBAL_LIST[0].value=loc_3 while true do while true do while true do while true
do loc_1=load_i32(memory_at_0,load_i32(memory_at_0,loc_1))if load_i32(
memory_at_0,loc_1)==1065592 then break end loc_4=load_i32_u8(memory_at_0,loc_1+
28)store_i32_n8(memory_at_0,loc_1+28,1)store_i32_n8(memory_at_0,loc_3+4,loc_4)if
loc_4~=0 then desired=1 break end store_i32(memory_at_0,loc_1+4,1)store_i32(
memory_at_0,loc_1,1065592)desired=3 break end if desired then if desired==3 then
desired=nil end break end loc_4=add_i32(load_i32(memory_at_0,loc_1+4),1)if loc_4
==0 then desired=2 break end store_i32(memory_at_0,loc_1+4,loc_4)break end if
desired then if desired==2 then desired=nil end break end store_i32(memory_at_0,
loc_3+4,loc_1)store_i32_n8(memory_at_0,loc_3+8,4)store_i32(memory_at_0,loc_3+16,
add_i32(loc_3,4))while true do while true do reg_0=FUNC_LIST[499](add_i32(loc_3,
8),1061380,loc_2)if reg_0==0 then break end while true do if load_i32_u8(
memory_at_0,loc_3+8)~=4 then break end store_i32(memory_at_0,loc_0+4,1061368)
store_i32_n8(memory_at_0,loc_0,2)desired=3 break end if desired then if desired
==4 then desired=nil end break end store_i64(memory_at_0,loc_0,load_i64(
memory_at_0,loc_3+8))desired=3 break end if desired then if desired==3 then
desired=nil end break end store_i32_n8(memory_at_0,loc_0,4)loc_0=load_i32(
memory_at_0,loc_3+12)while true do loc_1=load_i32_u8(memory_at_0,loc_3+8)if
loc_1>4 then break end if loc_1~=3 then desired=3 break end break end if desired
then if desired==3 then desired=nil end break end loc_2=load_i32(memory_at_0,
loc_0)loc_1=load_i32(memory_at_0,add_i32(loc_0,4))TABLE_LIST[0].data[load_i32(
memory_at_0,loc_1)](loc_2)while true do loc_4=load_i32(memory_at_0,loc_1+4)if
loc_4==0 then break end FUNC_LIST[43](loc_2,loc_4,load_i32(memory_at_0,loc_1+8))
break end if desired then if desired==3 then desired=nil end break end FUNC_LIST
[43](loc_0,12,4)break end if desired then if desired==2 then desired=nil end
break end loc_1=load_i32(memory_at_0,loc_3+4)loc_0=add_i32(load_i32(memory_at_0,
loc_1+4),4294967295)store_i32(memory_at_0,loc_1+4,loc_0)while true do if loc_0~=
0 then break end store_i32_n8(memory_at_0,loc_1+28,0)store_i32(memory_at_0,loc_1
,0)break end if desired then if desired==2 then desired=nil end break end
GLOBAL_LIST[0].value=add_i32(loc_3,32)desired=0 break end if desired then if
desired==1 then desired=nil end break end FUNC_LIST[507](1061592,38,1061664)
error('out of code bounds')end if desired then if desired==0 then desired=nil
end break end store_i64(memory_at_0,loc_3+20,i64_ZERO)store_i32(memory_at_0,
loc_3+16,1059964)store_i32(memory_at_0,loc_3+12,1)store_i32(memory_at_0,loc_3+8,
1061436)FUNC_LIST[422](add_i32(loc_3,4),add_i32(loc_3,8))error(
'out of code bounds')end end FUNC_LIST[444]=function(loc_0)local loc_1=0 local
loc_2=0 local loc_3=0 local loc_4=0 local loc_5=0 local loc_6=0 local reg_0
local desired while true do loc_1=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0]
.value=loc_1 loc_2=0 while true do while true do if load_i32_u8(memory_at_0,0+
1065503)==0 then break end loc_2=0 while true do if load_i32_u8(memory_at_0,0+
1065596)~=0 then break end store_i32_n8(memory_at_0,0+1065596,1)store_i32(
memory_at_0,0+1065600,0)desired=2 break end if desired then if desired==2 then
desired=nil end break end loc_2=0 loc_3=load_i32(memory_at_0,0+1065600)
store_i32(memory_at_0,0+1065600,0)if loc_3==0 then break end loc_2=load_i32_u8(
memory_at_0,loc_3+8)loc_4=1 store_i32_n8(memory_at_0,loc_3+8,1)store_i32_n8(
memory_at_0,loc_1+7,loc_2)if loc_2~=0 then desired=1 break end while true do if
band_i32(load_i32(memory_at_0,0+1065560),2147483647)==0 then break end reg_0=
FUNC_LIST[417]()loc_4=reg_0 break end if desired then if desired==2 then desired
=nil end break end store_i32_n8(memory_at_0,loc_1+8,4)store_i32(memory_at_0,
loc_1+16,add_i32(loc_3,12))reg_0=FUNC_LIST[499](add_i32(loc_1,8),1061328,loc_0)
loc_0=reg_0 loc_2=load_i32_u8(memory_at_0,loc_1+8)while true do while true do if
loc_0==0 then break end if loc_2==4 then desired=3 break end loc_0=load_i32(
memory_at_0,loc_1+12)while true do loc_2=load_i32_u8(memory_at_0,loc_1+8)if
loc_2>4 then break end if loc_2~=3 then desired=3 break end break end if desired
then if desired==4 then desired=nil end break end loc_5=load_i32(memory_at_0,
loc_0)loc_2=load_i32(memory_at_0,add_i32(loc_0,4))TABLE_LIST[0].data[load_i32(
memory_at_0,loc_2)](loc_5)while true do loc_6=load_i32(memory_at_0,loc_2+4)if
loc_6==0 then break end FUNC_LIST[43](loc_5,loc_6,load_i32(memory_at_0,loc_2+8))
break end if desired then if desired==4 then desired=nil end break end FUNC_LIST
[43](loc_0,12,4)desired=3 break end if desired then if desired==3 then desired=
nil end break end loc_0=load_i32(memory_at_0,loc_1+12)while true do if loc_2>4
then break end if loc_2~=3 then desired=3 break end break end if desired then if
desired==3 then desired=nil end break end loc_5=load_i32(memory_at_0,loc_0)loc_2
=load_i32(memory_at_0,add_i32(loc_0,4))TABLE_LIST[0].data[load_i32(memory_at_0,
loc_2)](loc_5)while true do loc_6=load_i32(memory_at_0,loc_2+4)if loc_6==0 then
break end FUNC_LIST[43](loc_5,loc_6,load_i32(memory_at_0,loc_2+8))break end if
desired then if desired==3 then desired=nil end break end FUNC_LIST[43](loc_0,12
,4)break end if desired then if desired==2 then desired=nil end break end while
true do if loc_4==0 then break end if band_i32(load_i32(memory_at_0,0+1065560),
2147483647)==0 then break end reg_0=FUNC_LIST[417]()if reg_0~=0 then break end
store_i32_n8(memory_at_0,loc_3+9,1)break end if desired then if desired==2 then
desired=nil end break end store_i32_n8(memory_at_0,loc_3+8,0)loc_2=load_i32(
memory_at_0,0+1065600)store_i32(memory_at_0,0+1065600,loc_3)store_i32(
memory_at_0,loc_1+8,loc_2)while true do if loc_2==0 then break end loc_3=
load_i32(memory_at_0,loc_2)store_i32(memory_at_0,loc_2,add_i32(loc_3,4294967295)
)if loc_3~=1 then break end FUNC_LIST[433](add_i32(loc_1,8))break end if desired
then if desired==2 then desired=nil end break end loc_2=1 break end if desired
then if desired==1 then desired=nil end break end GLOBAL_LIST[0].value=add_i32(
loc_1,32)reg_0=loc_2 desired=0 break end if desired then if desired==0 then
desired=nil end break end store_i64(memory_at_0,loc_1+20,i64_ZERO)store_i32(
memory_at_0,loc_1+16,1059964)store_i32(memory_at_0,loc_1+12,1)store_i32(
memory_at_0,loc_1+8,1061436)FUNC_LIST[422](add_i32(loc_1,7),add_i32(loc_1,8))
error('out of code bounds')end return reg_0 end FUNC_LIST[445]=function(loc_0)
local loc_1=0 local reg_0 local desired while true do loc_1=sub_i32(GLOBAL_LIST[
0].value,80)GLOBAL_LIST[0].value=loc_1 store_i32(memory_at_0,loc_1+12,6)
store_i32(memory_at_0,loc_1+8,1061320)while true do while true do reg_0=
FUNC_LIST[444](loc_0)if reg_0~=0 then break end while true do if load_i32_u8(
memory_at_0,0+1065536)==3 then break end FUNC_LIST[442]()break end if desired
then if desired==2 then desired=nil end break end store_i32(memory_at_0,loc_1+28
,1065504)store_i32(memory_at_0,loc_1+40,add_i32(loc_1,28))FUNC_LIST[443](
add_i32(loc_1,16),add_i32(loc_1,40),loc_0)if load_i32_u8(memory_at_0,loc_1+16)~=
4 then desired=1 break end break end if desired then if desired==1 then desired=
nil end break end GLOBAL_LIST[0].value=add_i32(loc_1,80)desired=0 break end if
desired then if desired==0 then desired=nil end break end store_i64(memory_at_0,
loc_1+32,load_i64(memory_at_0,loc_1+16))store_i32(memory_at_0,add_i32(loc_1,76),
178)store_i32(memory_at_0,loc_1+68,177)store_i32(memory_at_0,loc_1+72,add_i32(
loc_1,32))store_i32(memory_at_0,loc_1+64,add_i32(loc_1,8))FUNC_LIST[415](
add_i32(loc_1,40),1061288,2,add_i32(loc_1,64),2)FUNC_LIST[490](add_i32(loc_1,40)
,1061304)error('out of code bounds')end end FUNC_LIST[446]=function(loc_0,loc_1,
loc_2)local loc_3=0 local reg_0 while true do while true do loc_0=load_i32(
memory_at_0,loc_0+8)loc_3=load_i32(memory_at_0,loc_0+8)if sub_i32(load_i32(
memory_at_0,loc_0+4),loc_3)>=loc_2 then break end FUNC_LIST[412](loc_0,loc_3,
loc_2)loc_3=load_i32(memory_at_0,loc_0+8)break end reg_0=FUNC_LIST[550](add_i32(
load_i32(memory_at_0,loc_0),loc_3),loc_1,loc_2)store_i32(memory_at_0,loc_0+8,
add_i32(loc_3,loc_2))reg_0=0 break end return reg_0 end FUNC_LIST[447]=function(
loc_0,loc_1,loc_2)local loc_3=0 local loc_4=0 local loc_5=i64_ZERO local loc_6=0
local loc_7=0 local reg_0 local desired while true do loc_3=sub_i32(GLOBAL_LIST[
0].value,16)GLOBAL_LIST[0].value=loc_3 FUNC_LIST[410](add_i32(loc_3,8),load_i32(
memory_at_0,loc_0+8),loc_1,loc_2)while true do loc_2=load_i32_u8(memory_at_0,
loc_3+8)if loc_2==4 then break end loc_4=load_i32(memory_at_0,loc_0+4)loc_5=
load_i64(memory_at_0,loc_3+8)while true do while true do loc_1=load_i32_u8(
memory_at_0,loc_0)if loc_1>4 then break end if loc_1~=3 then desired=2 break end
break end if desired then if desired==2 then desired=nil end break end loc_6=
load_i32(memory_at_0,loc_4)loc_1=load_i32(memory_at_0,add_i32(loc_4,4))
TABLE_LIST[0].data[load_i32(memory_at_0,loc_1)](loc_6)while true do loc_7=
load_i32(memory_at_0,loc_1+4)if loc_7==0 then break end FUNC_LIST[43](loc_6,
loc_7,load_i32(memory_at_0,loc_1+8))break end if desired then if desired==2 then
desired=nil end break end FUNC_LIST[43](loc_4,12,4)break end if desired then if
desired==1 then desired=nil end break end store_i64(memory_at_0,loc_0,loc_5)
break end GLOBAL_LIST[0].value=add_i32(loc_3,16)reg_0=(if loc_2~=4 then 1 else 0
)break end return reg_0 end FUNC_LIST[448]=function()while true do error(
'out of code bounds')end end FUNC_LIST[449]=function(loc_0)local loc_1=0 local
loc_2=0 local reg_0 local desired local br_map={}while true do loc_1=sub_i32(
GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_1 while true do while true do
while true do while true do while true do loc_2=load_i32_u8(memory_at_0,0+
1065536)if loc_2<2 then break end if not br_map[1]then br_map[1]=(function()
return{[0]=4,1}end)()end temp=br_map[1][add_i32(loc_2,4294967294)]or 4 if temp<4
then desired=4 break else desired=1 break end end if desired then if desired==4
then desired=nil end break end store_i32_n8(memory_at_0,0+1065536,2)loc_2=
load_i32(memory_at_0,loc_0)store_i32(memory_at_0,loc_0,0)if loc_2==0 then
desired=3 break end reg_0=FUNC_LIST[42](1024,1)loc_0=reg_0 if loc_0==0 then
desired=2 break end store_i32_n8(memory_at_0,loc_2+28,0)store_i32_n8(memory_at_0
,loc_2+24,0)store_i64(memory_at_0,loc_2+16,i64_from_u32(1024,0))store_i32(
memory_at_0,loc_2+12,loc_0)store_i32(memory_at_0,loc_2+8,0)store_i64(memory_at_0
,loc_2,i64_ZERO)store_i32_n8(memory_at_0,0+1065536,3)break end if desired then
if desired==3 then desired=nil end break end GLOBAL_LIST[0].value=add_i32(loc_1,
32)desired=0 break end if desired then if desired==2 then desired=nil end break
end FUNC_LIST[495](1060108,43,1061576)error('out of code bounds')end if desired
then if desired==1 then desired=nil end break end FUNC_LIST[478](1,1024)error(
'out of code bounds')end if desired then if desired==0 then desired=nil end
break end store_i64(memory_at_0,add_i32(loc_1,20),i64_ZERO)store_i32(memory_at_0
,loc_1+12,1)store_i32(memory_at_0,loc_1+8,1062184)store_i32(memory_at_0,loc_1+16
,1059964)FUNC_LIST[490](add_i32(loc_1,8),1061560)error('out of code bounds')end
end FUNC_LIST[450]=function(loc_0)local loc_1=0 while true do loc_1=sub_i32(
GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_1 while true do if load_i32_u8(
memory_at_0,0+1065536)==3 then break end store_i32(memory_at_0,loc_1+4,1065504)
store_i32(memory_at_0,loc_1,loc_0)store_i32(memory_at_0,loc_1+8,add_i32(loc_1,15
))FUNC_LIST[451](loc_1)break end GLOBAL_LIST[0].value=add_i32(loc_1,16)break end
end FUNC_LIST[451]=function(loc_0)local loc_1=0 local loc_2=0 local desired
local br_map={}while true do loc_1=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0
].value=loc_1 while true do while true do while true do while true do loc_2=
load_i32_u8(memory_at_0,0+1065536)if loc_2<2 then break end if not br_map[1]then
br_map[1]=(function()return{[0]=3,1}end)()end temp=br_map[1][add_i32(loc_2,
4294967294)]or 3 if temp<3 then desired=3 break else desired=1 break end end if
desired then if desired==3 then desired=nil end break end store_i32_n8(
memory_at_0,0+1065536,2)loc_2=load_i32(memory_at_0,loc_0)store_i32(memory_at_0,
loc_0,0)if loc_2==0 then desired=2 break end loc_0=load_i32(memory_at_0,loc_0+4)
store_i32_n8(memory_at_0,loc_2,1)store_i64(memory_at_0,loc_0+16,i64_ZERO)
store_i64(memory_at_0,loc_0+8,i64_from_u32(0,1))store_i64(memory_at_0,loc_0,
i64_ZERO)store_i32_n8(memory_at_0,add_i32(loc_0,24),0)store_i32_n8(memory_at_0,
loc_0+28,0)store_i32_n8(memory_at_0,0+1065536,3)break end if desired then if
desired==2 then desired=nil end break end GLOBAL_LIST[0].value=add_i32(loc_1,32)
desired=0 break end if desired then if desired==1 then desired=nil end break end
FUNC_LIST[495](1060108,43,1061576)error('out of code bounds')end if desired then
if desired==0 then desired=nil end break end store_i64(memory_at_0,add_i32(loc_1
,20),i64_ZERO)store_i32(memory_at_0,loc_1+12,1)store_i32(memory_at_0,loc_1+8,
1062184)store_i32(memory_at_0,loc_1+16,1059964)FUNC_LIST[490](add_i32(loc_1,8),
1061560)error('out of code bounds')end end FUNC_LIST[452]=function(loc_0)while
true do FUNC_LIST[453](loc_0)error('out of code bounds')end end FUNC_LIST[453]=
function(loc_0)local loc_1=0 local loc_2=0 local loc_3=0 local reg_0 local reg_1
local reg_2 local reg_3 local reg_4 local desired local br_map={}while true do
loc_1=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_1 loc_2=load_i32(
memory_at_0,loc_0)loc_3=load_i32(memory_at_0,add_i32(loc_2,12))while true do
while true do while true do while true do if not br_map[1]then br_map[1]=(
function()return{[0]=0,1}end)()end temp=br_map[1][load_i32(memory_at_0,loc_2+4)]
or 3 if temp<1 then break elseif temp>1 then desired=1 break else desired=3
break end end if desired then if desired==3 then desired=nil end break end if
loc_3~=0 then desired=1 break end loc_2=1059964 loc_3=0 desired=2 break end if
desired then if desired==2 then desired=nil end break end if loc_3~=0 then
desired=1 break end loc_2=load_i32(memory_at_0,loc_2)loc_3=load_i32(memory_at_0,
loc_2+4)loc_2=load_i32(memory_at_0,loc_2)break end if desired then if desired==1
then desired=nil end break end store_i32(memory_at_0,loc_1+4,loc_3)store_i32(
memory_at_0,loc_1,loc_2)loc_2=load_i32(memory_at_0,loc_0+4)reg_2=FUNC_LIST[509](
loc_2)reg_3=load_i32(memory_at_0,loc_0+8)reg_4=FUNC_LIST[511](loc_2)FUNC_LIST[
461](loc_1,1062000,reg_2,reg_3,reg_4)error('out of code bounds')end store_i32(
memory_at_0,loc_1+4,0)store_i32(memory_at_0,loc_1,loc_2)loc_2=load_i32(
memory_at_0,loc_0+4)reg_2=FUNC_LIST[509](loc_2)reg_3=load_i32(memory_at_0,loc_0+
8)reg_4=FUNC_LIST[511](loc_2)FUNC_LIST[461](loc_1,1062020,reg_2,reg_3,reg_4)
error('out of code bounds')end end FUNC_LIST[454]=function(loc_0,loc_1)local
loc_2=0 while true do loc_2=sub_i32(GLOBAL_LIST[0].value,48)GLOBAL_LIST[0].value
=loc_2 while true do if load_i32_u8(memory_at_0,0+1065500)==0 then break end
store_i32(memory_at_0,loc_2+40,33)store_i32(memory_at_0,loc_2+44,loc_1)
store_i32(memory_at_0,loc_2+36,add_i32(loc_2,44))FUNC_LIST[415](add_i32(loc_2,12
),1061776,2,add_i32(loc_2,36),1)FUNC_LIST[490](add_i32(loc_2,12),1061816)error(
'out of code bounds')end GLOBAL_LIST[0].value=add_i32(loc_2,48)break end end
FUNC_LIST[455]=function(loc_0,loc_1)local loc_2=0 local loc_3=0 local loc_4=0
local loc_5=0 local reg_0 local desired while true do loc_2=sub_i32(GLOBAL_LIST[
0].value,32)GLOBAL_LIST[0].value=loc_2 while true do while true do while true do
while true do while true do while true do if band_i32(load_i32(memory_at_0,0+
1065560),2147483647)==0 then break end reg_0=FUNC_LIST[417]()if reg_0==0 then
desired=5 break end break end if desired then if desired==5 then desired=nil end
break end loc_3=load_i32(memory_at_0,0+1065544)store_i32(memory_at_0,0+1065544,
4294967295)if loc_3~=0 then desired=1 break end if band_i32(load_i32(memory_at_0
,0+1065560),2147483647)~=0 then desired=4 break end loc_4=load_i32(memory_at_0,0
+1065556)store_i32(memory_at_0,0+1065556,loc_1)loc_3=load_i32(memory_at_0,0+
1065552)store_i32(memory_at_0,0+1065552,loc_0)desired=3 break end if desired
then if desired==4 then desired=nil end break end store_i64(memory_at_0,add_i32(
loc_2,20),i64_ZERO)store_i32(memory_at_0,loc_2+12,1)store_i32(memory_at_0,loc_2+
8,1061884)store_i32(memory_at_0,loc_2+16,1059964)FUNC_LIST[490](add_i32(loc_2,8)
,1061920)error('out of code bounds')end if desired then if desired==3 then
desired=nil end break end reg_0=FUNC_LIST[417]()loc_5=reg_0 loc_4=load_i32(
memory_at_0,0+1065556)store_i32(memory_at_0,0+1065556,loc_1)loc_3=load_i32(
memory_at_0,0+1065552)store_i32(memory_at_0,0+1065552,loc_0)if loc_5==0 then
desired=2 break end break end if desired then if desired==2 then desired=nil end
break end if band_i32(load_i32(memory_at_0,0+1065560),2147483647)==0 then break
end reg_0=FUNC_LIST[417]()if reg_0~=0 then break end store_i32_n8(memory_at_0,0+
1065548,1)break end if desired then if desired==1 then desired=nil end break end
store_i32(memory_at_0,0+1065544,0)while true do if loc_3==0 then break end
TABLE_LIST[0].data[load_i32(memory_at_0,loc_4)](loc_3)loc_1=load_i32(memory_at_0
,loc_4+4)if loc_1==0 then break end FUNC_LIST[43](loc_3,loc_1,load_i32(
memory_at_0,loc_4+8))break end if desired then if desired==1 then desired=nil
end break end GLOBAL_LIST[0].value=add_i32(loc_2,32)desired=0 break end if
desired then if desired==0 then desired=nil end break end error(
'out of code bounds')end end FUNC_LIST[456]=function(loc_0)local loc_1=0 local
loc_2=0 local loc_3=0 local reg_0 local desired while true do loc_1=sub_i32(
GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_1 while true do while true do
reg_0=FUNC_LIST[510](loc_0)loc_2=reg_0 if loc_2==0 then break end reg_0=
FUNC_LIST[509](loc_0)loc_3=reg_0 if loc_3==0 then desired=1 break end store_i32(
memory_at_0,loc_1+12,loc_2)store_i32(memory_at_0,loc_1+8,loc_0)store_i32(
memory_at_0,loc_1+4,loc_3)FUNC_LIST[452](add_i32(loc_1,4))error(
'out of code bounds')end if desired then if desired==1 then desired=nil end
break end FUNC_LIST[495](1060108,43,1061936)error('out of code bounds')end
FUNC_LIST[495](1060108,43,1061952)error('out of code bounds')end end FUNC_LIST[
457]=function(loc_0,loc_1)local loc_2=0 local loc_3=0 local loc_4=0 local loc_5=
0 local loc_6=i64_ZERO local reg_0 while true do loc_2=sub_i32(GLOBAL_LIST[0].
value,48)GLOBAL_LIST[0].value=loc_2 loc_3=add_i32(loc_1,4)while true do if
load_i32(memory_at_0,loc_1+4)~=0 then break end loc_4=load_i32(memory_at_0,loc_1
)loc_5=add_i32(add_i32(loc_2,32),8)store_i32(memory_at_0,loc_5,0)store_i64(
memory_at_0,loc_2+32,i64_ONE)store_i32(memory_at_0,loc_2+44,add_i32(loc_2,32))
reg_0=FUNC_LIST[499](add_i32(loc_2,44),1059920,loc_4)loc_4=load_i32(memory_at_0,
loc_5)store_i32(memory_at_0,add_i32(add_i32(loc_2,16),8),loc_4)loc_6=load_i64(
memory_at_0,loc_2+32)store_i64(memory_at_0,loc_2+16,loc_6)store_i32(memory_at_0,
add_i32(loc_3,8),loc_4)store_i64(memory_at_0,loc_3,loc_6)break end loc_4=
add_i32(loc_2,8)store_i32(memory_at_0,loc_4,load_i32(memory_at_0,add_i32(loc_3,8
)))store_i32(memory_at_0,add_i32(loc_1,12),0)loc_6=load_i64(memory_at_0,loc_3)
store_i64(memory_at_0,loc_1+4,i64_ONE)store_i64(memory_at_0,loc_2,loc_6)while
true do reg_0=FUNC_LIST[42](12,4)loc_1=reg_0 if loc_1~=0 then break end
FUNC_LIST[478](4,12)error('out of code bounds')end store_i64(memory_at_0,loc_1,
load_i64(memory_at_0,loc_2))store_i32(memory_at_0,add_i32(loc_1,8),load_i32(
memory_at_0,loc_4))store_i32(memory_at_0,loc_0+4,1061968)store_i32(memory_at_0,
loc_0,loc_1)GLOBAL_LIST[0].value=add_i32(loc_2,48)break end end FUNC_LIST[458]=
function(loc_0,loc_1)local loc_2=0 local loc_3=0 local loc_4=0 local loc_5=
i64_ZERO local reg_0 while true do loc_2=sub_i32(GLOBAL_LIST[0].value,32)
GLOBAL_LIST[0].value=loc_2 loc_3=add_i32(loc_1,4)while true do if load_i32(
memory_at_0,loc_1+4)~=0 then break end loc_1=load_i32(memory_at_0,loc_1)loc_4=
add_i32(add_i32(loc_2,16),8)store_i32(memory_at_0,loc_4,0)store_i64(memory_at_0,
loc_2+16,i64_ONE)store_i32(memory_at_0,loc_2+28,add_i32(loc_2,16))reg_0=
FUNC_LIST[499](add_i32(loc_2,28),1059920,loc_1)loc_1=load_i32(memory_at_0,loc_4)
store_i32(memory_at_0,add_i32(loc_2,8),loc_1)loc_5=load_i64(memory_at_0,loc_2+16
)store_i64(memory_at_0,loc_2,loc_5)store_i32(memory_at_0,add_i32(loc_3,8),loc_1)
store_i64(memory_at_0,loc_3,loc_5)break end store_i32(memory_at_0,loc_0+4,
1061968)store_i32(memory_at_0,loc_0,loc_3)GLOBAL_LIST[0].value=add_i32(loc_2,32)
break end end FUNC_LIST[459]=function(loc_0,loc_1)local loc_2=0 local loc_3=0
local reg_0 while true do loc_2=load_i32(memory_at_0,loc_1+4)loc_3=load_i32(
memory_at_0,loc_1)while true do reg_0=FUNC_LIST[42](8,4)loc_1=reg_0 if loc_1~=0
then break end FUNC_LIST[478](4,8)error('out of code bounds')end store_i32(
memory_at_0,loc_1+4,loc_2)store_i32(memory_at_0,loc_1,loc_3)store_i32(
memory_at_0,loc_0+4,1061984)store_i32(memory_at_0,loc_0,loc_1)break end end
FUNC_LIST[460]=function(loc_0,loc_1)while true do store_i32(memory_at_0,loc_0+4,
1061984)store_i32(memory_at_0,loc_0,loc_1)break end end FUNC_LIST[461]=function(
loc_0,loc_1,loc_2,loc_3,loc_4)local loc_5=0 local loc_6=0 local desired while
true do loc_5=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_5 loc_6=
load_i32(memory_at_0,0+1065560)store_i32(memory_at_0,0+1065560,add_i32(loc_6,1))
while true do while true do if lt_i32(loc_6,0)then break end if band_i32(
load_i32_u8(memory_at_0,0+1065580),255)~=0 then break end store_i32_n8(
memory_at_0,0+1065580,1)store_i32(memory_at_0,0+1065576,add_i32(load_i32(
memory_at_0,0+1065576),1))store_i32(memory_at_0,loc_5+24,loc_2)store_i32(
memory_at_0,loc_5+16,1062040)store_i32(memory_at_0,loc_5+12,1059964)
store_i32_n8(memory_at_0,loc_5+28,loc_4)store_i32(memory_at_0,loc_5+20,loc_3)
loc_6=load_i32(memory_at_0,0+1065544)if le_i32(loc_6,4294967295)then break end
store_i32(memory_at_0,0+1065544,add_i32(loc_6,1))while true do if load_i32(
memory_at_0,0+1065552)==0 then break end TABLE_LIST[0].data[load_i32(memory_at_0
,loc_1+16)](loc_5,loc_0)store_i64(memory_at_0,loc_5+12,load_i64(memory_at_0,
loc_5))TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(memory_at_0,0+1065556)+
20)](load_i32(memory_at_0,0+1065552),add_i32(loc_5,12))loc_6=add_i32(load_i32(
memory_at_0,0+1065544),4294967295)break end if desired then if desired==2 then
desired=nil end break end store_i32(memory_at_0,0+1065544,loc_6)store_i32_n8(
memory_at_0,0+1065580,0)if loc_4~=0 then desired=1 break end break end if
desired then if desired==1 then desired=nil end break end error(
'out of code bounds')end FUNC_LIST[462](loc_0,loc_1)error('out of code bounds')
end end FUNC_LIST[462]=function(loc_0,loc_1)local reg_0 while true do reg_0=
FUNC_LIST[466](loc_0,loc_1)error('out of code bounds')end end FUNC_LIST[463]=
function(loc_0)local reg_0 while true do reg_0=load_i32_u8(memory_at_0,loc_0)
break end return reg_0 end FUNC_LIST[464]=function(loc_0)while true do
store_i64(memory_at_0,loc_0+8,i64_from_u32(2,0))store_i64(memory_at_0,loc_0,
i64_ONE)break end end FUNC_LIST[465]=function(loc_0,loc_1)local loc_2=0 while
true do loc_2=load_i32(memory_at_0,0+1065540)TABLE_LIST[0].data[(if loc_2~=0
then loc_2 else 179)](loc_1,loc_0)error('out of code bounds')end end FUNC_LIST[
466]=function(loc_0,loc_1)while true do error('out of code bounds')end return
reg_spill[1]end FUNC_LIST[467]=function(loc_0,loc_1)local loc_2=0 local desired
while true do loc_2=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_2
while true do if loc_1~=0 then break end store_i32(memory_at_0,loc_0,0)
GLOBAL_LIST[0].value=add_i32(loc_2,32)desired=0 break end if desired then if
desired==0 then desired=nil end break end store_i64(memory_at_0,add_i32(loc_2,20
),i64_ZERO)store_i32(memory_at_0,loc_2+12,1)store_i32(memory_at_0,loc_2+8,
1062548)store_i32(memory_at_0,loc_2+16,1062556)FUNC_LIST[490](add_i32(loc_2,8),
1062640)error('out of code bounds')end end FUNC_LIST[468]=function(loc_0,loc_1,
loc_2,loc_3)local desired while true do while true do if loc_1~=0 then break end
store_i32(memory_at_0,loc_0+4,loc_3)store_i32(memory_at_0,loc_0,loc_2)desired=0
break end if desired then if desired==0 then desired=nil end break end FUNC_LIST
[478](loc_2,loc_3)error('out of code bounds')end end FUNC_LIST[469]=function(
loc_0,loc_1,loc_2,loc_3,loc_4)local loc_5=0 local desired while true do loc_5=
sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_5 while true do if
loc_2<loc_4 then break end if add_i32(loc_4,1)<loc_2 then break end store_i32(
memory_at_0,loc_0+16,0)store_i32(memory_at_0,loc_0+4,loc_2)store_i32(memory_at_0
,loc_0,loc_1)store_i32(memory_at_0,loc_0+8,loc_3)store_i32(memory_at_0,add_i32(
loc_0,12),loc_4)GLOBAL_LIST[0].value=add_i32(loc_5,32)desired=0 break end if
desired then if desired==0 then desired=nil end break end store_i64(memory_at_0,
add_i32(loc_5,20),i64_ZERO)store_i32(memory_at_0,loc_5+12,1)store_i32(
memory_at_0,loc_5+8,1062768)store_i32(memory_at_0,loc_5+16,1062776)FUNC_LIST[490
](add_i32(loc_5,8),1062776)error('out of code bounds')end end FUNC_LIST[470]=
function(loc_0)while true do break end end FUNC_LIST[471]=function(loc_0)while
true do break end end FUNC_LIST[472]=function(loc_0,loc_1)local reg_0 while true
do FUNC_LIST[473](load_i32(memory_at_0,loc_0),loc_1)reg_0=0 break end return
reg_0 end FUNC_LIST[473]=function(loc_0,loc_1)local loc_2=0 local loc_3=0 local
reg_0 local desired while true do loc_2=sub_i32(GLOBAL_LIST[0].value,16)
GLOBAL_LIST[0].value=loc_2 while true do while true do while true do while true
do if loc_1<128 then break end store_i32(memory_at_0,loc_2+12,0)if loc_1<2048
then desired=3 break end while true do if loc_1>=65536 then break end
store_i32_n8(memory_at_0,loc_2+14,bor_i32(band_i32(loc_1,63),128))store_i32_n8(
memory_at_0,loc_2+12,bor_i32(shr_u32(loc_1,12),224))store_i32_n8(memory_at_0,
loc_2+13,bor_i32(band_i32(shr_u32(loc_1,6),63),128))loc_1=3 desired=2 break end
if desired then if desired==4 then desired=nil end break end store_i32_n8(
memory_at_0,loc_2+15,bor_i32(band_i32(loc_1,63),128))store_i32_n8(memory_at_0,
loc_2+14,bor_i32(band_i32(shr_u32(loc_1,6),63),128))store_i32_n8(memory_at_0,
loc_2+13,bor_i32(band_i32(shr_u32(loc_1,12),63),128))store_i32_n8(memory_at_0,
loc_2+12,bor_i32(band_i32(shr_u32(loc_1,18),7),240))loc_1=4 desired=2 break end
if desired then if desired==3 then desired=nil end break end while true do loc_3
=load_i32(memory_at_0,loc_0+8)if loc_3~=load_i32(memory_at_0,loc_0+4)then break
end FUNC_LIST[480](loc_0,loc_3)loc_3=load_i32(memory_at_0,loc_0+8)break end if
desired then if desired==3 then desired=nil end break end store_i32(memory_at_0,
loc_0+8,add_i32(loc_3,1))store_i32_n8(memory_at_0,add_i32(load_i32(memory_at_0,
loc_0),loc_3),loc_1)desired=1 break end if desired then if desired==2 then
desired=nil end break end store_i32_n8(memory_at_0,loc_2+13,bor_i32(band_i32(
loc_1,63),128))store_i32_n8(memory_at_0,loc_2+12,bor_i32(shr_u32(loc_1,6),192))
loc_1=2 break end if desired then if desired==1 then desired=nil end break end
while true do loc_3=load_i32(memory_at_0,loc_0+8)if sub_i32(load_i32(memory_at_0
,loc_0+4),loc_3)>=loc_1 then break end FUNC_LIST[476](loc_0,loc_3,loc_1)loc_3=
load_i32(memory_at_0,loc_0+8)break end if desired then if desired==1 then
desired=nil end break end reg_0=FUNC_LIST[550](add_i32(load_i32(memory_at_0,
loc_0),loc_3),add_i32(loc_2,12),loc_1)store_i32(memory_at_0,loc_0+8,add_i32(
loc_3,loc_1))break end GLOBAL_LIST[0].value=add_i32(loc_2,16)break end end
FUNC_LIST[474]=function(loc_0,loc_1)local loc_2=0 local reg_0 while true do
loc_2=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_2 store_i32(
memory_at_0,loc_2+12,load_i32(memory_at_0,loc_0))reg_0=FUNC_LIST[499](add_i32(
loc_2,12),1062656,loc_1)loc_0=reg_0 GLOBAL_LIST[0].value=add_i32(loc_2,16)reg_0=
loc_0 break end return reg_0 end FUNC_LIST[475]=function(loc_0,loc_1,loc_2)local
loc_3=0 local reg_0 while true do while true do loc_0=load_i32(memory_at_0,loc_0
)loc_3=load_i32(memory_at_0,loc_0+8)if sub_i32(load_i32(memory_at_0,loc_0+4),
loc_3)>=loc_2 then break end FUNC_LIST[476](loc_0,loc_3,loc_2)loc_3=load_i32(
memory_at_0,loc_0+8)break end reg_0=FUNC_LIST[550](add_i32(load_i32(memory_at_0,
loc_0),loc_3),loc_1,loc_2)store_i32(memory_at_0,loc_0+8,add_i32(loc_3,loc_2))
reg_0=0 break end return reg_0 end FUNC_LIST[476]=function(loc_0,loc_1,loc_2)
local loc_3=0 local loc_4=0 local desired while true do loc_3=sub_i32(
GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_3 while true do while true do
loc_2=add_i32(loc_1,loc_2)if loc_2<loc_1 then break end loc_1=load_i32(
memory_at_0,loc_0+4)loc_4=shl_i32(loc_1,1)loc_2=(if loc_4>loc_2 then loc_4 else
loc_2)loc_2=(if loc_2>8 then loc_2 else 8)loc_4=shr_u32(bxor_i32(loc_2,
4294967295),31)while true do while true do if loc_1==0 then break end store_i32(
memory_at_0,loc_3+28,loc_1)store_i32(memory_at_0,loc_3+24,1)store_i32(
memory_at_0,loc_3+20,load_i32(memory_at_0,loc_0))desired=3 break end if desired
then if desired==3 then desired=nil end break end store_i32(memory_at_0,loc_3+24
,0)break end if desired then if desired==2 then desired=nil end break end
FUNC_LIST[477](add_i32(loc_3,8),loc_4,loc_2,add_i32(loc_3,20))loc_1=load_i32(
memory_at_0,loc_3+12)while true do if load_i32(memory_at_0,loc_3+8)~=0 then
break end store_i32(memory_at_0,loc_0+4,loc_2)store_i32(memory_at_0,loc_0,loc_1)
desired=1 break end if desired then if desired==2 then desired=nil end break end
if loc_1==2147483649 then desired=1 break end if loc_1==0 then break end
FUNC_LIST[478](loc_1,load_i32(memory_at_0,add_i32(loc_3,16)))error(
'out of code bounds')end if desired then if desired==1 then desired=nil end
break end FUNC_LIST[479]()error('out of code bounds')end GLOBAL_LIST[0].value=
add_i32(loc_3,32)break end end FUNC_LIST[477]=function(loc_0,loc_1,loc_2,loc_3)
local reg_0 local desired while true do while true do while true do if loc_1==0
then break end if le_i32(loc_2,4294967295)then desired=1 break end while true do
while true do while true do while true do if load_i32(memory_at_0,loc_3+4)==0
then break end while true do loc_1=load_i32(memory_at_0,add_i32(loc_3,8))if
loc_1~=0 then break end while true do if loc_2~=0 then break end loc_1=1 desired
=4 break end if desired then if desired==7 then desired=nil end break end reg_0=
FUNC_LIST[42](loc_2,1)loc_1=reg_0 desired=5 break end if desired then if desired
==6 then desired=nil end break end reg_0=FUNC_LIST[45](load_i32(memory_at_0,
loc_3),loc_1,1,loc_2)loc_1=reg_0 desired=5 break end if desired then if desired
==5 then desired=nil end break end while true do if loc_2~=0 then break end
loc_1=1 desired=4 break end if desired then if desired==5 then desired=nil end
break end reg_0=FUNC_LIST[42](loc_2,1)loc_1=reg_0 break end if desired then if
desired==4 then desired=nil end break end if loc_1==0 then desired=3 break end
break end if desired then if desired==3 then desired=nil end break end
store_i32(memory_at_0,loc_0+4,loc_1)store_i32(memory_at_0,add_i32(loc_0,8),loc_2
)store_i32(memory_at_0,loc_0,0)desired=0 break end if desired then if desired==2
then desired=nil end break end store_i32(memory_at_0,loc_0+4,1)store_i32(
memory_at_0,add_i32(loc_0,8),loc_2)store_i32(memory_at_0,loc_0,1)desired=0 break
end if desired then if desired==1 then desired=nil end break end store_i32(
memory_at_0,loc_0+4,0)store_i32(memory_at_0,add_i32(loc_0,8),loc_2)store_i32(
memory_at_0,loc_0,1)desired=0 break end if desired then if desired==0 then
desired=nil end break end store_i32(memory_at_0,loc_0+4,0)store_i32(memory_at_0,
loc_0,1)break end end FUNC_LIST[478]=function(loc_0,loc_1)while true do
FUNC_LIST[481](loc_0,loc_1)error('out of code bounds')end end FUNC_LIST[479]=
function()local loc_0=0 while true do loc_0=sub_i32(GLOBAL_LIST[0].value,32)
GLOBAL_LIST[0].value=loc_0 store_i64(memory_at_0,add_i32(loc_0,20),i64_ZERO)
store_i32(memory_at_0,loc_0+12,1)store_i32(memory_at_0,loc_0+8,1062840)
store_i32(memory_at_0,loc_0+16,1062776)FUNC_LIST[490](add_i32(loc_0,8),1062848)
error('out of code bounds')end end FUNC_LIST[480]=function(loc_0,loc_1)local
loc_2=0 local loc_3=0 local loc_4=0 local desired while true do loc_2=sub_i32(
GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_2 while true do while true do
loc_1=add_i32(loc_1,1)if loc_1==0 then break end loc_3=load_i32(memory_at_0,
loc_0+4)loc_4=shl_i32(loc_3,1)loc_1=(if loc_4>loc_1 then loc_4 else loc_1)loc_1=
(if loc_1>8 then loc_1 else 8)loc_4=shr_u32(bxor_i32(loc_1,4294967295),31)while
true do while true do if loc_3==0 then break end store_i32(memory_at_0,loc_2+28,
loc_3)store_i32(memory_at_0,loc_2+24,1)store_i32(memory_at_0,loc_2+20,load_i32(
memory_at_0,loc_0))desired=3 break end if desired then if desired==3 then
desired=nil end break end store_i32(memory_at_0,loc_2+24,0)break end if desired
then if desired==2 then desired=nil end break end FUNC_LIST[477](add_i32(loc_2,8
),loc_4,loc_1,add_i32(loc_2,20))loc_3=load_i32(memory_at_0,loc_2+12)while true
do if load_i32(memory_at_0,loc_2+8)~=0 then break end store_i32(memory_at_0,
loc_0+4,loc_1)store_i32(memory_at_0,loc_0,loc_3)desired=1 break end if desired
then if desired==2 then desired=nil end break end if loc_3==2147483649 then
desired=1 break end if loc_3==0 then break end FUNC_LIST[478](loc_3,load_i32(
memory_at_0,add_i32(loc_2,16)))error('out of code bounds')end if desired then if
desired==1 then desired=nil end break end FUNC_LIST[479]()error(
'out of code bounds')end GLOBAL_LIST[0].value=add_i32(loc_2,32)break end end
FUNC_LIST[481]=function(loc_0,loc_1)while true do FUNC_LIST[48](loc_1,loc_0)
error('out of code bounds')end end FUNC_LIST[482]=function(loc_0,loc_1,loc_2)
local loc_3=0 local loc_4=0 local loc_5=0 local loc_6=0 local loc_7=0 local
loc_8=0 local reg_0 local desired while true do loc_3=sub_i32(GLOBAL_LIST[0].
value,32)GLOBAL_LIST[0].value=loc_3 while true do while true do while true do
while true do while true do loc_4=add_i32(loc_2,1)if loc_4==0 then break end if
le_i32(loc_4,4294967295)then desired=4 break end reg_0=FUNC_LIST[42](loc_4,1)
loc_5=reg_0 if loc_5==0 then desired=3 break end reg_0=FUNC_LIST[550](loc_5,
loc_1,loc_2)loc_6=reg_0 while true do if loc_2<8 then break end FUNC_LIST[532](
add_i32(loc_3,8),0,loc_1,loc_2)loc_7=load_i32(memory_at_0,loc_3+12)loc_8=
load_i32(memory_at_0,loc_3+8)desired=1 break end if desired then if desired==5
then desired=nil end break end while true do if loc_2~=0 then break end loc_7=0
loc_8=0 desired=1 break end if desired then if desired==5 then desired=nil end
break end while true do if load_i32_u8(memory_at_0,loc_1)~=0 then break end
loc_8=1 loc_7=0 desired=1 break end if desired then if desired==5 then desired=
nil end break end loc_8=1 if loc_2==1 then desired=2 break end while true do if
load_i32_u8(memory_at_0,loc_1+1)~=0 then break end loc_7=1 desired=1 break end
if desired then if desired==5 then desired=nil end break end loc_7=2 if loc_2==2
then desired=2 break end if load_i32_u8(memory_at_0,loc_1+2)==0 then desired=1
break end loc_7=3 if loc_2==3 then desired=2 break end if load_i32_u8(
memory_at_0,loc_1+3)==0 then desired=1 break end loc_7=4 if loc_2==4 then
desired=2 break end if load_i32_u8(memory_at_0,loc_1+4)==0 then desired=1 break
end loc_7=5 if loc_2==5 then desired=2 break end if load_i32_u8(memory_at_0,
loc_1+5)==0 then desired=1 break end loc_7=loc_2 loc_8=0 if loc_2==6 then
desired=1 break end loc_1=load_i32_u8(memory_at_0,loc_1+6)loc_7=(if loc_1~=0
then loc_2 else 6)loc_8=(if loc_1==0 then 1 else 0)desired=1 break end if
desired then if desired==4 then desired=nil end break end FUNC_LIST[495](1062864
,43,1062940)error('out of code bounds')end if desired then if desired==3 then
desired=nil end break end FUNC_LIST[479]()error('out of code bounds')end if
desired then if desired==2 then desired=nil end break end FUNC_LIST[478](1,loc_4
)error('out of code bounds')end if desired then if desired==1 then desired=nil
end break end loc_7=loc_2 loc_8=0 break end while true do while true do if loc_8
~=0 then break end store_i32(memory_at_0,loc_3+28,loc_2)store_i32(memory_at_0,
loc_3+24,loc_4)store_i32(memory_at_0,loc_3+20,loc_6)FUNC_LIST[483](loc_3,
add_i32(loc_3,20))store_i64(memory_at_0,loc_0+4,load_i64(memory_at_0,loc_3))
loc_5=0 desired=1 break end if desired then if desired==1 then desired=nil end
break end store_i32(memory_at_0,loc_0+8,loc_2)store_i32(memory_at_0,loc_0+4,
loc_4)store_i32(memory_at_0,loc_0+12,loc_7)break end store_i32(memory_at_0,loc_0
,loc_5)GLOBAL_LIST[0].value=add_i32(loc_3,32)break end end FUNC_LIST[483]=
function(loc_0,loc_1)local loc_2=0 local loc_3=0 local loc_4=0 local loc_5=0
local reg_0 local desired while true do loc_2=sub_i32(GLOBAL_LIST[0].value,32)
GLOBAL_LIST[0].value=loc_2 while true do while true do while true do while true
do while true do loc_3=load_i32(memory_at_0,loc_1+4)loc_4=load_i32(memory_at_0,
loc_1+8)if loc_3~=loc_4 then break end loc_3=add_i32(loc_4,1)if loc_3==0 then
desired=3 break end loc_5=shr_u32(bxor_i32(loc_3,4294967295),31)while true do
while true do if loc_4==0 then break end store_i32(memory_at_0,loc_2+28,loc_4)
store_i32(memory_at_0,loc_2+24,1)store_i32(memory_at_0,loc_2+20,load_i32(
memory_at_0,loc_1))desired=6 break end if desired then if desired==6 then
desired=nil end break end store_i32(memory_at_0,loc_2+24,0)break end if desired
then if desired==5 then desired=nil end break end FUNC_LIST[477](add_i32(loc_2,8
),loc_5,loc_3,add_i32(loc_2,20))loc_5=load_i32(memory_at_0,loc_2+12)if load_i32(
memory_at_0,loc_2+8)~=0 then desired=4 break end store_i32(memory_at_0,loc_1+4,
loc_3)store_i32(memory_at_0,loc_1,loc_5)break end if desired then if desired==4
then desired=nil end break end if loc_4~=loc_3 then desired=1 break end desired=
2 break end if desired then if desired==3 then desired=nil end break end if
loc_5==2147483649 then desired=2 break end if loc_5==0 then break end FUNC_LIST[
478](loc_5,load_i32(memory_at_0,add_i32(loc_2,16)))error('out of code bounds')
end if desired then if desired==2 then desired=nil end break end FUNC_LIST[479](
)error('out of code bounds')end if desired then if desired==1 then desired=nil
end break end FUNC_LIST[480](loc_1,loc_4)loc_3=load_i32(memory_at_0,loc_1+4)
loc_4=load_i32(memory_at_0,loc_1+8)break end if desired then if desired==0 then
desired=nil end break end loc_5=add_i32(loc_4,1)store_i32(memory_at_0,loc_1+8,
loc_5)loc_1=load_i32(memory_at_0,loc_1)store_i32_n8(memory_at_0,add_i32(loc_1,
loc_4),0)while true do while true do while true do if loc_3>loc_5 then break end
loc_4=loc_1 desired=2 break end if desired then if desired==2 then desired=nil
end break end while true do if loc_5~=0 then break end loc_4=1 FUNC_LIST[43](
loc_1,loc_3,1)desired=2 break end if desired then if desired==2 then desired=nil
end break end reg_0=FUNC_LIST[45](loc_1,loc_3,1,loc_5)loc_4=reg_0 if loc_4==0
then desired=1 break end break end if desired then if desired==1 then desired=
nil end break end store_i32(memory_at_0,loc_0+4,loc_5)store_i32(memory_at_0,
loc_0,loc_4)GLOBAL_LIST[0].value=add_i32(loc_2,32)desired=0 break end if desired
then if desired==0 then desired=nil end break end FUNC_LIST[478](1,loc_5)error(
'out of code bounds')end end FUNC_LIST[484]=function(loc_0,loc_1)local loc_2=0
local loc_3=0 local loc_4=0 local loc_5=0 local loc_6=0 local loc_7=0 local
loc_8=0 local reg_0 local desired while true do loc_2=sub_i32(GLOBAL_LIST[0].
value,32)GLOBAL_LIST[0].value=loc_2 while true do while true do while true do
while true do while true do while true do loc_3=load_i32(memory_at_0,loc_1+4)if
loc_3==0 then break end loc_4=load_i32(memory_at_0,loc_1)loc_5=band_i32(loc_3,3)
while true do while true do if loc_3>=4 then break end loc_3=0 loc_6=0 desired=7
break end if desired then if desired==7 then desired=nil end break end loc_7=
add_i32(loc_4,28)loc_8=band_i32(loc_3,4294967292)loc_3=0 loc_6=0 while true do
loc_3=add_i32(load_i32(memory_at_0,loc_7),add_i32(load_i32(memory_at_0,add_i32(
loc_7,4294967288)),add_i32(load_i32(memory_at_0,add_i32(loc_7,4294967280)),
add_i32(load_i32(memory_at_0,add_i32(loc_7,4294967272)),loc_3))))loc_7=add_i32(
loc_7,32)loc_6=add_i32(loc_6,4)if loc_8~=loc_6 then continue end break end if
desired then if desired==7 then desired=nil end break end break end if desired
then if desired==6 then desired=nil end break end while true do if loc_5==0 then
break end loc_7=add_i32(add_i32(shl_i32(loc_6,3),loc_4),4)while true do loc_3=
add_i32(load_i32(memory_at_0,loc_7),loc_3)loc_7=add_i32(loc_7,8)loc_5=add_i32(
loc_5,4294967295)if loc_5~=0 then continue end break end if desired then if
desired==7 then desired=nil end break end break end if desired then if desired==
6 then desired=nil end break end while true do if load_i32(memory_at_0,add_i32(
loc_1,12))==0 then break end if lt_i32(loc_3,0)then desired=6 break end if
band_i32((if loc_3<16 then 1 else 0),(if load_i32(memory_at_0,loc_4+4)==0 then 1
else 0))~=0 then desired=6 break end loc_3=shl_i32(loc_3,1)break end if desired
then if desired==6 then desired=nil end break end if loc_3~=0 then desired=5
break end break end if desired then if desired==5 then desired=nil end break end
loc_7=1 loc_3=0 desired=4 break end if desired then if desired==4 then desired=
nil end break end if le_i32(loc_3,4294967295)then desired=3 break end reg_0=
FUNC_LIST[42](loc_3,1)loc_7=reg_0 if loc_7==0 then desired=2 break end break end
if desired then if desired==3 then desired=nil end break end store_i32(
memory_at_0,loc_2+20,0)store_i32(memory_at_0,loc_2+16,loc_3)store_i32(
memory_at_0,loc_2+12,loc_7)store_i32(memory_at_0,loc_2+24,add_i32(loc_2,12))
reg_0=FUNC_LIST[499](add_i32(loc_2,24),1062656,loc_1)if reg_0==0 then desired=1
break end FUNC_LIST[506](1062956,51,add_i32(loc_2,31),1063008,1063048)error(
'out of code bounds')end if desired then if desired==2 then desired=nil end
break end FUNC_LIST[479]()error('out of code bounds')end if desired then if
desired==1 then desired=nil end break end FUNC_LIST[478](1,loc_3)error(
'out of code bounds')end store_i64(memory_at_0,loc_0,load_i64(memory_at_0,loc_2+
12))store_i32(memory_at_0,add_i32(loc_0,8),load_i32(memory_at_0,add_i32(add_i32(
loc_2,12),8)))GLOBAL_LIST[0].value=add_i32(loc_2,32)break end end FUNC_LIST[485]
=function(loc_0,loc_1,loc_2)local loc_3=0 local loc_4=0 local desired while true
do loc_3=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_3 while true
do loc_4=band_i32(add_i32(loc_1,7),sub_i32(0,loc_1))if loc_4<add_i32(loc_4,
4294967288)then break end loc_2=add_i32(loc_4,loc_2)if loc_2<loc_4 then break
end loc_1=(if loc_1>4 then loc_1 else 4)if loc_2>sub_i32(2147483648,loc_1)then
break end store_i32(memory_at_0,loc_0,loc_1)store_i32(memory_at_0,loc_0+4,
band_i32(add_i32(add_i32(loc_1,loc_2),4294967295),sub_i32(0,loc_1)))GLOBAL_LIST[
0].value=add_i32(loc_3,16)desired=0 break end if desired then if desired==0 then
desired=nil end break end FUNC_LIST[506](1063064,43,add_i32(loc_3,15),1063108,
1063152)error('out of code bounds')end end FUNC_LIST[486]=function(loc_0,loc_1,
loc_2)local loc_3=0 while true do loc_3=sub_i32(GLOBAL_LIST[0].value,48)
GLOBAL_LIST[0].value=loc_3 store_i32(memory_at_0,loc_3+4,loc_1)store_i32(
memory_at_0,loc_3,loc_0)store_i32(memory_at_0,add_i32(loc_3,44),33)store_i32(
memory_at_0,loc_3+36,33)store_i32(memory_at_0,loc_3+40,add_i32(loc_3,4))
store_i32(memory_at_0,loc_3+32,loc_3)FUNC_LIST[469](add_i32(loc_3,8),1063212,3,
add_i32(loc_3,32),2)FUNC_LIST[490](add_i32(loc_3,8),loc_2)error(
'out of code bounds')end end FUNC_LIST[487]=function(loc_0,loc_1)local reg_0
while true do while true do continue end break end return reg_0 end FUNC_LIST[
488]=function(loc_0)while true do break end end FUNC_LIST[489]=function(loc_0)
while true do break end end FUNC_LIST[490]=function(loc_0,loc_1)local loc_2=0
while true do loc_2=sub_i32(GLOBAL_LIST[0].value,32)GLOBAL_LIST[0].value=loc_2
store_i32(memory_at_0,loc_2+24,loc_0)store_i32(memory_at_0,loc_2+16,1063356)
store_i32(memory_at_0,loc_2+12,1063236)store_i32_n8(memory_at_0,loc_2+28,1)
store_i32(memory_at_0,loc_2+20,loc_1)FUNC_LIST[456](add_i32(loc_2,12))error(
'out of code bounds')end end FUNC_LIST[491]=function(loc_0,loc_1,loc_2)local
loc_3=0 while true do loc_3=sub_i32(GLOBAL_LIST[0].value,48)GLOBAL_LIST[0].value
=loc_3 store_i32(memory_at_0,loc_3,loc_0)store_i32(memory_at_0,loc_3+4,loc_1)
store_i32(memory_at_0,add_i32(loc_3,44),33)store_i32(memory_at_0,loc_3+36,33)
store_i32(memory_at_0,loc_3+40,add_i32(loc_3,4))store_i32(memory_at_0,loc_3+32,
loc_3)FUNC_LIST[497](add_i32(loc_3,8),1064076,2,add_i32(loc_3,32),2)FUNC_LIST[
490](add_i32(loc_3,8),loc_2)error('out of code bounds')end end FUNC_LIST[492]=
function(loc_0,loc_1,loc_2)local loc_3=0 while true do loc_3=sub_i32(GLOBAL_LIST
[0].value,48)GLOBAL_LIST[0].value=loc_3 store_i32(memory_at_0,loc_3+4,loc_1)
store_i32(memory_at_0,loc_3,loc_0)store_i32(memory_at_0,add_i32(loc_3,44),33)
store_i32(memory_at_0,loc_3+36,33)store_i32(memory_at_0,loc_3+40,loc_3)
store_i32(memory_at_0,loc_3+32,add_i32(loc_3,4))FUNC_LIST[497](add_i32(loc_3,8),
1063424,2,add_i32(loc_3,32),2)FUNC_LIST[490](add_i32(loc_3,8),loc_2)error(
'out of code bounds')end end FUNC_LIST[493]=function(loc_0,loc_1,loc_2)local
loc_3=0 while true do loc_3=sub_i32(GLOBAL_LIST[0].value,48)GLOBAL_LIST[0].value
=loc_3 store_i32(memory_at_0,loc_3,loc_0)store_i32(memory_at_0,loc_3+4,loc_1)
store_i32(memory_at_0,add_i32(loc_3,44),33)store_i32(memory_at_0,loc_3+36,33)
store_i32(memory_at_0,loc_3+40,add_i32(loc_3,4))store_i32(memory_at_0,loc_3+32,
loc_3)FUNC_LIST[497](add_i32(loc_3,8),1064108,2,add_i32(loc_3,32),2)FUNC_LIST[
490](add_i32(loc_3,8),loc_2)error('out of code bounds')end end FUNC_LIST[494]=
function(loc_0,loc_1,loc_2)local loc_3=0 local loc_4=0 local loc_5=0 local loc_6
=0 local loc_7=0 local loc_8=0 local loc_9=0 local loc_10=0 local reg_0 local
desired local br_map={}while true do while true do loc_3=load_i32(memory_at_0,
loc_0)loc_4=load_i32(memory_at_0,loc_0+8)if bor_i32(loc_3,loc_4)==0 then break
end while true do if loc_4==0 then break end loc_5=add_i32(loc_1,loc_2)loc_6=
add_i32(load_i32(memory_at_0,add_i32(loc_0,12)),1)loc_7=0 loc_8=loc_1 while true
do while true do loc_4=loc_8 loc_6=add_i32(loc_6,4294967295)if loc_6==0 then
desired=3 break end if loc_4==loc_5 then desired=2 break end while true do while
true do loc_9=load_i32_i8(memory_at_0,loc_4)if le_i32(loc_9,4294967295)then
break end loc_8=add_i32(loc_4,1)loc_9=band_i32(loc_9,255)desired=5 break end if
desired then if desired==5 then desired=nil end break end loc_10=band_i32(
load_i32_u8(memory_at_0,loc_4+1),63)loc_8=band_i32(loc_9,31)while true do if
loc_9>4294967263 then break end loc_9=bor_i32(shl_i32(loc_8,6),loc_10)loc_8=
add_i32(loc_4,2)desired=5 break end if desired then if desired==5 then desired=
nil end break end loc_10=bor_i32(shl_i32(loc_10,6),band_i32(load_i32_u8(
memory_at_0,loc_4+2),63))while true do if loc_9>=4294967280 then break end loc_9
=bor_i32(loc_10,shl_i32(loc_8,12))loc_8=add_i32(loc_4,3)desired=5 break end if
desired then if desired==5 then desired=nil end break end loc_9=bor_i32(bor_i32(
shl_i32(loc_10,6),band_i32(load_i32_u8(memory_at_0,loc_4+3),63)),band_i32(
shl_i32(loc_8,18),1835008))if loc_9==1114112 then desired=2 break end loc_8=
add_i32(loc_4,4)break end if desired then if desired==4 then desired=nil
continue end break end loc_7=add_i32(sub_i32(loc_7,loc_4),loc_8)if loc_9~=
1114112 then continue end desired=2 break end if desired then if desired==3 then
desired=nil end break end break end if desired then if desired==2 then desired=
nil end break end if loc_4==loc_5 then break end while true do loc_8=
load_i32_i8(memory_at_0,loc_4)if gt_i32(loc_8,4294967295)then break end if loc_8
<4294967264 then break end if loc_8<4294967280 then break end if bor_i32(
bor_i32(bor_i32(shl_i32(band_i32(load_i32_u8(memory_at_0,loc_4+2),63),6),
shl_i32(band_i32(load_i32_u8(memory_at_0,loc_4+1),63),12)),band_i32(load_i32_u8(
memory_at_0,loc_4+3),63)),band_i32(shl_i32(band_i32(loc_8,255),18),1835008))==
1114112 then desired=2 break end break end if desired then if desired==2 then
desired=nil end break end while true do while true do if loc_7==0 then break end
while true do if loc_7<loc_2 then break end loc_4=0 if loc_7==loc_2 then desired
=4 break end desired=3 break end if desired then if desired==4 then desired=nil
end break end loc_4=0 if lt_i32(load_i32_i8(memory_at_0,add_i32(loc_1,loc_7)),
4294967232)then desired=3 break end break end if desired then if desired==3 then
desired=nil end break end loc_4=loc_1 break end if desired then if desired==2
then desired=nil end break end loc_2=(if loc_4~=0 then loc_7 else loc_2)loc_1=(
if loc_4~=0 then loc_4 else loc_1)break end if desired then if desired==1 then
desired=nil end break end while true do if loc_3~=0 then break end reg_0=
TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(memory_at_0,add_i32(loc_0,24))+
12)](load_i32(memory_at_0,loc_0+20),loc_1,loc_2)desired=0 break end if desired
then if desired==1 then desired=nil end break end loc_5=load_i32(memory_at_0,
loc_0+4)while true do while true do if loc_2<16 then break end reg_0=FUNC_LIST[
526](loc_1,loc_2)loc_4=reg_0 desired=2 break end if desired then if desired==2
then desired=nil end break end while true do if loc_2~=0 then break end loc_4=0
desired=2 break end if desired then if desired==2 then desired=nil end break end
loc_6=band_i32(loc_2,3)while true do while true do if loc_2>=4 then break end
loc_4=0 loc_9=0 desired=3 break end if desired then if desired==3 then desired=
nil end break end loc_7=band_i32(loc_2,4294967292)loc_4=0 loc_9=0 while true do
loc_8=add_i32(loc_1,loc_9)loc_4=add_i32(add_i32(add_i32(add_i32(loc_4,(if
gt_i32(load_i32_i8(memory_at_0,loc_8),4294967231)then 1 else 0)),(if gt_i32(
load_i32_i8(memory_at_0,add_i32(loc_8,1)),4294967231)then 1 else 0)),(if gt_i32(
load_i32_i8(memory_at_0,add_i32(loc_8,2)),4294967231)then 1 else 0)),(if gt_i32(
load_i32_i8(memory_at_0,add_i32(loc_8,3)),4294967231)then 1 else 0))loc_9=
add_i32(loc_9,4)if loc_7~=loc_9 then continue end break end if desired then if
desired==3 then desired=nil end break end break end if desired then if desired==
2 then desired=nil end break end if loc_6==0 then break end loc_8=add_i32(loc_1,
loc_9)while true do loc_4=add_i32(loc_4,(if gt_i32(load_i32_i8(memory_at_0,loc_8
),4294967231)then 1 else 0))loc_8=add_i32(loc_8,1)loc_6=add_i32(loc_6,4294967295
)if loc_6~=0 then continue end break end if desired then if desired==2 then
desired=nil end break end break end if desired then if desired==1 then desired=
nil end break end while true do while true do if loc_5<=loc_4 then break end
loc_7=sub_i32(loc_5,loc_4)loc_4=0 while true do while true do while true do if
not br_map[1]then br_map[1]=(function()return{[0]=2,0,1,2}end)()end temp=br_map[
1][load_i32_u8(memory_at_0,loc_0+32)]or 2 if temp<1 then break elseif temp>1
then desired=4 break else desired=5 break end end if desired then if desired==5
then desired=nil end break end loc_4=loc_7 loc_7=0 desired=4 break end if
desired then if desired==4 then desired=nil end break end loc_4=shr_u32(loc_7,1)
loc_7=shr_u32(add_i32(loc_7,1),1)break end if desired then if desired==3 then
desired=nil end break end loc_4=add_i32(loc_4,1)loc_8=load_i32(memory_at_0,
add_i32(loc_0,24))loc_6=load_i32(memory_at_0,loc_0+16)loc_9=load_i32(memory_at_0
,loc_0+20)while true do loc_4=add_i32(loc_4,4294967295)if loc_4==0 then desired=
2 break end reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,loc_8+16)](loc_9,loc_6
)if reg_0==0 then continue end break end if desired then if desired==3 then
desired=nil end break end reg_0=1 desired=0 break end if desired then if desired
==2 then desired=nil end break end reg_0=TABLE_LIST[0].data[load_i32(memory_at_0
,load_i32(memory_at_0,add_i32(loc_0,24))+12)](load_i32(memory_at_0,loc_0+20),
loc_1,loc_2)desired=0 break end if desired then if desired==1 then desired=nil
end break end loc_4=1 while true do reg_0=TABLE_LIST[0].data[load_i32(
memory_at_0,loc_8+12)](loc_9,loc_1,loc_2)if reg_0~=0 then break end loc_4=0
while true do while true do while true do if loc_7~=loc_4 then break end loc_4=
loc_7 desired=3 break end if desired then if desired==4 then desired=nil
continue end break end loc_4=add_i32(loc_4,1)reg_0=TABLE_LIST[0].data[load_i32(
memory_at_0,loc_8+16)](loc_9,loc_6)if reg_0==0 then continue end break end if
desired then if desired==3 then desired=nil end break end loc_4=add_i32(loc_4,
4294967295)break end if desired then if desired==2 then desired=nil end break
end loc_4=(if loc_4<loc_7 then 1 else 0)break end if desired then if desired==1
then desired=nil end break end reg_0=loc_4 desired=0 break end if desired then
if desired==0 then desired=nil end break end reg_0=TABLE_LIST[0].data[load_i32(
memory_at_0,load_i32(memory_at_0,add_i32(loc_0,24))+12)](load_i32(memory_at_0,
loc_0+20),loc_1,loc_2)break end return reg_0 end FUNC_LIST[495]=function(loc_0,
loc_1,loc_2)local loc_3=0 while true do loc_3=sub_i32(GLOBAL_LIST[0].value,32)
GLOBAL_LIST[0].value=loc_3 store_i64(memory_at_0,add_i32(loc_3,12),i64_ZERO)
store_i32(memory_at_0,loc_3+4,1)store_i32(memory_at_0,loc_3+8,1063236)store_i32(
memory_at_0,loc_3+28,loc_1)store_i32(memory_at_0,loc_3+24,loc_0)store_i32(
memory_at_0,loc_3,add_i32(loc_3,24))FUNC_LIST[490](loc_3,loc_2)error(
'out of code bounds')end end FUNC_LIST[496]=function(loc_0,loc_1)local reg_0
while true do reg_0=FUNC_LIST[536](load_i64_u32(memory_at_0,loc_0),1,loc_1)break
end return reg_0 end FUNC_LIST[497]=function(loc_0,loc_1,loc_2,loc_3,loc_4)local
loc_5=0 local desired while true do loc_5=sub_i32(GLOBAL_LIST[0].value,32)
GLOBAL_LIST[0].value=loc_5 while true do if loc_2<loc_4 then break end if
add_i32(loc_4,1)<loc_2 then break end store_i32(memory_at_0,loc_0+16,0)
store_i32(memory_at_0,loc_0+4,loc_2)store_i32(memory_at_0,loc_0,loc_1)store_i32(
memory_at_0,loc_0+8,loc_3)store_i32(memory_at_0,add_i32(loc_0,12),loc_4)
GLOBAL_LIST[0].value=add_i32(loc_5,32)desired=0 break end if desired then if
desired==0 then desired=nil end break end store_i64(memory_at_0,add_i32(loc_5,20
),i64_ZERO)store_i32(memory_at_0,loc_5+12,1)store_i32(memory_at_0,loc_5+8,
1063252)store_i32(memory_at_0,loc_5+16,1063236)FUNC_LIST[490](add_i32(loc_5,8),
1063932)error('out of code bounds')end end FUNC_LIST[498]=function(loc_0,loc_1)
local loc_2=0 local loc_3=0 local loc_4=0 local reg_0 local desired while true
do loc_2=sub_i32(GLOBAL_LIST[0].value,128)GLOBAL_LIST[0].value=loc_2 while true
do while true do while true do while true do while true do loc_3=load_i32(
memory_at_0,loc_1+28)if band_i32(loc_3,16)~=0 then break end if band_i32(loc_3,
32)~=0 then desired=4 break end reg_0=FUNC_LIST[536](load_i64_u32(memory_at_0,
loc_0),1,loc_1)loc_0=reg_0 desired=3 break end if desired then if desired==4
then desired=nil end break end loc_0=load_i32(memory_at_0,loc_0)loc_3=0 while
true do loc_4=band_i32(loc_0,15)store_i32_n8(memory_at_0,add_i32(add_i32(loc_2,
loc_3),127),add_i32((if loc_4<10 then 48 else 87),loc_4))loc_3=add_i32(loc_3,
4294967295)loc_4=(if loc_0<16 then 1 else 0)loc_0=shr_u32(loc_0,4)if loc_4==0
then continue end break end if desired then if desired==4 then desired=nil end
break end loc_0=add_i32(loc_3,128)if loc_0>128 then desired=2 break end reg_0=
FUNC_LIST[500](loc_1,1,1063660,2,add_i32(add_i32(loc_2,loc_3),128),sub_i32(0,
loc_3))loc_0=reg_0 desired=3 break end if desired then if desired==3 then
desired=nil end break end loc_0=load_i32(memory_at_0,loc_0)loc_3=0 while true do
loc_4=band_i32(loc_0,15)store_i32_n8(memory_at_0,add_i32(add_i32(loc_2,loc_3),
127),add_i32((if loc_4<10 then 48 else 55),loc_4))loc_3=add_i32(loc_3,4294967295
)loc_4=(if loc_0<16 then 1 else 0)loc_0=shr_u32(loc_0,4)if loc_4==0 then
continue end break end if desired then if desired==3 then desired=nil end break
end loc_0=add_i32(loc_3,128)if loc_0>128 then desired=1 break end reg_0=
FUNC_LIST[500](loc_1,1,1063660,2,add_i32(add_i32(loc_2,loc_3),128),sub_i32(0,
loc_3))loc_0=reg_0 break end if desired then if desired==2 then desired=nil end
break end GLOBAL_LIST[0].value=add_i32(loc_2,128)reg_0=loc_0 desired=0 break end
if desired then if desired==1 then desired=nil end break end FUNC_LIST[491](
loc_0,128,1063692)error('out of code bounds')end if desired then if desired==0
then desired=nil end break end FUNC_LIST[491](loc_0,128,1063692)error(
'out of code bounds')end return reg_0 end FUNC_LIST[499]=function(loc_0,loc_1,
loc_2)local loc_3=0 local loc_4=0 local loc_5=0 local loc_6=0 local loc_7=0
local loc_8=0 local loc_9=0 local loc_10=0 local loc_11=0 local loc_12=0 local
reg_0 local desired local br_map={}while true do loc_3=sub_i32(GLOBAL_LIST[0].
value,48)GLOBAL_LIST[0].value=loc_3 store_i32(memory_at_0,add_i32(loc_3,36),
loc_1)store_i32_n8(memory_at_0,loc_3+44,3)store_i32(memory_at_0,loc_3+28,32)
loc_4=0 store_i32(memory_at_0,loc_3+40,0)store_i32(memory_at_0,loc_3+32,loc_0)
store_i32(memory_at_0,loc_3+20,0)store_i32(memory_at_0,loc_3+12,0)while true do
while true do while true do while true do loc_5=load_i32(memory_at_0,loc_2+16)if
loc_5~=0 then break end loc_0=load_i32(memory_at_0,add_i32(loc_2,12))if loc_0==0
then desired=3 break end loc_1=load_i32(memory_at_0,loc_2+8)loc_6=shl_i32(loc_0,
3)loc_4=add_i32(band_i32(add_i32(loc_0,4294967295),536870911),1)loc_0=load_i32(
memory_at_0,loc_2)while true do while true do loc_7=load_i32(memory_at_0,
add_i32(loc_0,4))if loc_7==0 then break end reg_0=TABLE_LIST[0].data[load_i32(
memory_at_0,load_i32(memory_at_0,loc_3+36)+12)](load_i32(memory_at_0,loc_3+32),
load_i32(memory_at_0,loc_0),loc_7)if reg_0~=0 then desired=2 break end break end
if desired then if desired==5 then desired=nil continue end break end reg_0=
TABLE_LIST[0].data[load_i32(memory_at_0,add_i32(loc_1,4))](load_i32(memory_at_0,
loc_1),add_i32(loc_3,12))if reg_0~=0 then desired=2 break end loc_1=add_i32(
loc_1,8)loc_0=add_i32(loc_0,8)loc_6=add_i32(loc_6,4294967288)if loc_6~=0 then
continue end desired=3 break end if desired then if desired==4 then desired=nil
end break end break end if desired then if desired==3 then desired=nil end break
end loc_1=load_i32(memory_at_0,add_i32(loc_2,20))if loc_1==0 then break end
loc_8=shl_i32(loc_1,5)loc_4=add_i32(band_i32(add_i32(loc_1,4294967295),134217727
),1)loc_9=load_i32(memory_at_0,loc_2+8)loc_0=load_i32(memory_at_0,loc_2)loc_6=0
while true do while true do loc_1=load_i32(memory_at_0,add_i32(loc_0,4))if loc_1
==0 then break end reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(
memory_at_0,loc_3+36)+12)](load_i32(memory_at_0,loc_3+32),load_i32(memory_at_0,
loc_0),loc_1)if reg_0~=0 then desired=2 break end break end if desired then if
desired==4 then desired=nil continue end break end loc_1=add_i32(loc_5,loc_6)
store_i32(memory_at_0,loc_3+28,load_i32(memory_at_0,add_i32(loc_1,16)))
store_i32_n8(memory_at_0,loc_3+44,load_i32_u8(memory_at_0,add_i32(loc_1,28)))
store_i32(memory_at_0,loc_3+40,load_i32(memory_at_0,add_i32(loc_1,24)))loc_10=
load_i32(memory_at_0,add_i32(loc_1,12))loc_11=0 loc_7=0 while true do while true
do while true do if not br_map[1]then br_map[1]=(function()return{[0]=1,0,2}end
)()end temp=br_map[1][load_i32(memory_at_0,add_i32(loc_1,8))]or 1 if temp<1 then
break elseif temp>1 then desired=5 break else desired=6 break end end if desired
then if desired==6 then desired=nil end break end loc_12=shl_i32(loc_10,3)loc_7=
0 loc_12=add_i32(loc_9,loc_12)if load_i32(memory_at_0,loc_12+4)~=215 then
desired=5 break end loc_10=load_i32(memory_at_0,load_i32(memory_at_0,loc_12))
break end if desired then if desired==5 then desired=nil end break end loc_7=1
break end if desired then if desired==4 then desired=nil continue end break end
store_i32(memory_at_0,loc_3+16,loc_10)store_i32(memory_at_0,loc_3+12,loc_7)loc_7
=load_i32(memory_at_0,add_i32(loc_1,4))while true do while true do while true do
if not br_map[2]then br_map[2]=(function()return{[0]=1,0,2}end)()end temp=br_map
[2][load_i32(memory_at_0,loc_1)]or 1 if temp<1 then break elseif temp>1 then
desired=5 break else desired=6 break end end if desired then if desired==6 then
desired=nil end break end loc_10=shl_i32(loc_7,3)loc_10=add_i32(loc_9,loc_10)if
load_i32(memory_at_0,loc_10+4)~=215 then desired=5 break end loc_7=load_i32(
memory_at_0,load_i32(memory_at_0,loc_10))break end if desired then if desired==5
then desired=nil end break end loc_11=1 break end if desired then if desired==4
then desired=nil continue end break end store_i32(memory_at_0,loc_3+24,loc_7)
store_i32(memory_at_0,loc_3+20,loc_11)loc_1=add_i32(loc_9,shl_i32(load_i32(
memory_at_0,add_i32(loc_1,20)),3))reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,
loc_1+4)](load_i32(memory_at_0,loc_1),add_i32(loc_3,12))if reg_0~=0 then desired
=2 break end loc_0=add_i32(loc_0,8)loc_6=add_i32(loc_6,32)if loc_8~=loc_6 then
continue end break end if desired then if desired==3 then desired=nil end break
end break end if desired then if desired==2 then desired=nil end break end while
true do if loc_4>=load_i32(memory_at_0,loc_2+4)then break end loc_1=add_i32(
load_i32(memory_at_0,loc_2),shl_i32(loc_4,3))reg_0=TABLE_LIST[0].data[load_i32(
memory_at_0,load_i32(memory_at_0,loc_3+36)+12)](load_i32(memory_at_0,loc_3+32),
load_i32(memory_at_0,loc_1),load_i32(memory_at_0,loc_1+4))if reg_0~=0 then
desired=2 break end break end if desired then if desired==2 then desired=nil end
break end loc_1=0 desired=1 break end if desired then if desired==1 then desired
=nil end break end loc_1=1 break end GLOBAL_LIST[0].value=add_i32(loc_3,48)reg_0
=loc_1 break end return reg_0 end FUNC_LIST[500]=function(loc_0,loc_1,loc_2,
loc_3,loc_4,loc_5)local loc_6=0 local loc_7=0 local loc_8=0 local loc_9=0 local
loc_10=0 local loc_11=0 local loc_12=0 local reg_0 local desired local br_map={}
while true do while true do while true do if loc_1==0 then break end loc_6=
load_i32(memory_at_0,loc_0+28)loc_1=band_i32(loc_6,1)loc_7=(if loc_1~=0 then 43
else 1114112)loc_8=add_i32(loc_1,loc_5)desired=1 break end if desired then if
desired==1 then desired=nil end break end loc_8=add_i32(loc_5,1)loc_6=load_i32(
memory_at_0,loc_0+28)loc_7=45 break end if desired then if desired==0 then
desired=nil end break end while true do while true do if band_i32(loc_6,4)~=0
then break end loc_2=0 desired=1 break end if desired then if desired==1 then
desired=nil end break end while true do while true do if loc_3<16 then break end
reg_0=FUNC_LIST[526](loc_2,loc_3)loc_1=reg_0 desired=2 break end if desired then
if desired==2 then desired=nil end break end while true do if loc_3~=0 then
break end loc_1=0 desired=2 break end if desired then if desired==2 then desired
=nil end break end loc_9=band_i32(loc_3,3)while true do while true do if loc_3>=
4 then break end loc_1=0 loc_10=0 desired=3 break end if desired then if desired
==3 then desired=nil end break end loc_11=band_i32(loc_3,4294967292)loc_1=0
loc_10=0 while true do loc_12=add_i32(loc_2,loc_10)loc_1=add_i32(add_i32(
add_i32(add_i32(loc_1,(if gt_i32(load_i32_i8(memory_at_0,loc_12),4294967231)then
1 else 0)),(if gt_i32(load_i32_i8(memory_at_0,add_i32(loc_12,1)),4294967231)then
1 else 0)),(if gt_i32(load_i32_i8(memory_at_0,add_i32(loc_12,2)),4294967231)then
1 else 0)),(if gt_i32(load_i32_i8(memory_at_0,add_i32(loc_12,3)),4294967231)then
1 else 0))loc_10=add_i32(loc_10,4)if loc_11~=loc_10 then continue end break end
if desired then if desired==3 then desired=nil end break end break end if
desired then if desired==2 then desired=nil end break end if loc_9==0 then break
end loc_12=add_i32(loc_2,loc_10)while true do loc_1=add_i32(loc_1,(if gt_i32(
load_i32_i8(memory_at_0,loc_12),4294967231)then 1 else 0))loc_12=add_i32(loc_12,
1)loc_9=add_i32(loc_9,4294967295)if loc_9~=0 then continue end break end if
desired then if desired==2 then desired=nil end break end break end if desired
then if desired==1 then desired=nil end break end loc_8=add_i32(loc_1,loc_8)
break end if desired then if desired==0 then desired=nil end break end while
true do while true do if load_i32(memory_at_0,loc_0)~=0 then break end loc_1=1
loc_12=load_i32(memory_at_0,loc_0+20)loc_10=load_i32(memory_at_0,loc_0+24)reg_0=
FUNC_LIST[527](loc_12,loc_10,loc_7,loc_2,loc_3)if reg_0~=0 then desired=1 break
end reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,loc_10+12)](loc_12,loc_4,loc_5
)desired=0 break end if desired then if desired==1 then desired=nil end break
end while true do loc_9=load_i32(memory_at_0,loc_0+4)if loc_9>loc_8 then break
end loc_1=1 loc_12=load_i32(memory_at_0,loc_0+20)loc_10=load_i32(memory_at_0,
loc_0+24)reg_0=FUNC_LIST[527](loc_12,loc_10,loc_7,loc_2,loc_3)if reg_0~=0 then
desired=1 break end reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,loc_10+12)](
loc_12,loc_4,loc_5)desired=0 break end if desired then if desired==1 then
desired=nil end break end while true do if band_i32(loc_6,8)==0 then break end
loc_11=load_i32(memory_at_0,loc_0+16)store_i32(memory_at_0,loc_0+16,48)loc_6=
load_i32_u8(memory_at_0,loc_0+32)loc_1=1 store_i32_n8(memory_at_0,loc_0+32,1)
loc_12=load_i32(memory_at_0,loc_0+20)loc_10=load_i32(memory_at_0,loc_0+24)reg_0=
FUNC_LIST[527](loc_12,loc_10,loc_7,loc_2,loc_3)if reg_0~=0 then desired=1 break
end loc_1=add_i32(sub_i32(loc_9,loc_8),1)while true do while true do loc_1=
add_i32(loc_1,4294967295)if loc_1==0 then desired=3 break end reg_0=TABLE_LIST[0
].data[load_i32(memory_at_0,loc_10+16)](loc_12,48)if reg_0==0 then continue end
break end if desired then if desired==3 then desired=nil end break end reg_0=1
desired=0 break end if desired then if desired==2 then desired=nil end break end
loc_1=1 reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,loc_10+12)](loc_12,loc_4,
loc_5)if reg_0~=0 then desired=1 break end store_i32_n8(memory_at_0,loc_0+32,
loc_6)store_i32(memory_at_0,loc_0+16,loc_11)loc_1=0 desired=1 break end if
desired then if desired==1 then desired=nil end break end loc_8=sub_i32(loc_9,
loc_8)while true do while true do while true do loc_1=load_i32_u8(memory_at_0,
loc_0+32)if not br_map[1]then br_map[1]=(function()return{[0]=2,0,1,0}end)()end
temp=br_map[1][loc_1]or 2 if temp<1 then break elseif temp>1 then desired=2
break else desired=3 break end end if desired then if desired==3 then desired=
nil end break end loc_1=loc_8 loc_8=0 desired=2 break end if desired then if
desired==2 then desired=nil end break end loc_1=shr_u32(loc_8,1)loc_8=shr_u32(
add_i32(loc_8,1),1)break end if desired then if desired==1 then desired=nil end
break end loc_1=add_i32(loc_1,1)loc_12=load_i32(memory_at_0,add_i32(loc_0,24))
loc_9=load_i32(memory_at_0,loc_0+16)loc_10=load_i32(memory_at_0,loc_0+20)while
true do while true do loc_1=add_i32(loc_1,4294967295)if loc_1==0 then desired=2
break end reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,loc_12+16)](loc_10,loc_9
)if reg_0==0 then continue end break end if desired then if desired==2 then
desired=nil end break end reg_0=1 desired=0 break end if desired then if desired
==1 then desired=nil end break end loc_1=1 reg_0=FUNC_LIST[527](loc_10,loc_12,
loc_7,loc_2,loc_3)if reg_0~=0 then break end reg_0=TABLE_LIST[0].data[load_i32(
memory_at_0,loc_12+12)](loc_10,loc_4,loc_5)if reg_0~=0 then break end loc_1=0
while true do while true do if loc_8~=loc_1 then break end reg_0=(if loc_8<loc_8
then 1 else 0)desired=0 break end if desired then if desired==2 then desired=nil
continue end break end loc_1=add_i32(loc_1,1)reg_0=TABLE_LIST[0].data[load_i32(
memory_at_0,loc_12+16)](loc_10,loc_9)if reg_0==0 then continue end break end if
desired then if desired==1 then desired=nil end break end reg_0=(if add_i32(
loc_1,4294967295)<loc_8 then 1 else 0)desired=0 break end if desired then if
desired==0 then desired=nil end break end reg_0=loc_1 break end return reg_0 end
FUNC_LIST[501]=function(loc_0,loc_1)while true do store_i64(memory_at_0,loc_0+8,
i64_from_u32(1229464069,3025884056))store_i64(memory_at_0,loc_0,i64_from_u32(
482422035,4015249626))break end end FUNC_LIST[502]=function(loc_0,loc_1)local
reg_0 while true do reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(
memory_at_0,add_i32(loc_1,24))+12)](load_i32(memory_at_0,loc_1+20),1063287,14)
break end return reg_0 end FUNC_LIST[503]=function(loc_0,loc_1)local loc_2=0
local loc_3=0 local loc_4=0 local reg_0 while true do loc_2=sub_i32(GLOBAL_LIST[
0].value,128)GLOBAL_LIST[0].value=loc_2 loc_3=load_i32_u16(memory_at_0,loc_0)
loc_0=0 while true do loc_4=band_i32(loc_3,15)store_i32_n8(memory_at_0,add_i32(
add_i32(loc_2,loc_0),127),add_i32((if loc_4<10 then 48 else 87),loc_4))loc_0=
add_i32(loc_0,4294967295)loc_4=band_i32(loc_3,65535)loc_3=shr_u32(loc_4,4)if
loc_4>=16 then continue end break end while true do loc_3=add_i32(loc_0,128)if
loc_3<=128 then break end FUNC_LIST[491](loc_3,128,1063692)error(
'out of code bounds')end reg_0=FUNC_LIST[500](loc_1,1,1063660,2,add_i32(add_i32(
loc_2,loc_0),128),sub_i32(0,loc_0))loc_0=reg_0 GLOBAL_LIST[0].value=add_i32(
loc_2,128)reg_0=loc_0 break end return reg_0 end FUNC_LIST[504]=function(loc_0,
loc_1,loc_2)local loc_3=0 local loc_4=0 local loc_5=0 local loc_6=0 local loc_7=
0 local loc_8=i64_ZERO local loc_9=i64_ZERO local loc_10=0 local desired local
br_map={}while true do while true do if loc_2==0 then break end loc_3=add_i32(
loc_2,4294967289)loc_4=(if loc_3>loc_2 then 0 else loc_3)loc_5=sub_i32(band_i32(
add_i32(loc_1,3),4294967292),loc_1)loc_3=0 while true do while true do while
true do while true do loc_6=load_i32_u8(memory_at_0,add_i32(loc_1,loc_3))loc_7=
extend_i32_n8(loc_6)if lt_i32(loc_7,0)then break end while true do if band_i32(
sub_i32(loc_5,loc_3),3)~=0 then break end if loc_3>=loc_4 then desired=4 break
end while true do loc_6=add_i32(loc_1,loc_3)if band_i32(load_i32(memory_at_0,
loc_6),2155905152)~=0 then desired=4 break end if band_i32(load_i32(memory_at_0,
add_i32(loc_6,4)),2155905152)~=0 then desired=4 break end loc_3=add_i32(loc_3,8)
if loc_3>=loc_4 then desired=4 break end continue end if desired then if desired
==6 then desired=nil end break end break end if desired then if desired==5 then
desired=nil end break end loc_3=add_i32(loc_3,1)desired=3 break end if desired
then if desired==4 then desired=nil end break end loc_8=i64_from_u32(0,256)loc_9
=i64_from_u32(0,1)while true do while true do while true do while true do while
true do while true do while true do while true do while true do while true do
while true do while true do if not br_map[1]then br_map[1]=(function()return{[0]
=0,1,2}end)()end temp=br_map[1][add_i32(load_i32_u8(memory_at_0,add_i32(loc_6,
1064124)),4294967294)]or 10 if temp<2 then if temp<1 then break else desired=15
break end elseif temp>2 then desired=6 break else desired=14 break end end if
desired then if desired==15 then desired=nil end break end loc_6=add_i32(loc_3,1
)if loc_6<loc_2 then desired=13 break end loc_8=i64_ZERO loc_9=i64_ZERO desired=
6 break end if desired then if desired==14 then desired=nil end break end loc_8=
i64_ZERO loc_10=add_i32(loc_3,1)if loc_10<loc_2 then desired=12 break end loc_9=
i64_ZERO desired=6 break end if desired then if desired==13 then desired=nil end
break end loc_8=i64_ZERO loc_10=add_i32(loc_3,1)if loc_10<loc_2 then desired=11
break end loc_9=i64_ZERO desired=6 break end if desired then if desired==12 then
desired=nil end break end loc_8=i64_from_u32(0,256)loc_9=i64_from_u32(0,1)if
gt_i32(load_i32_i8(memory_at_0,add_i32(loc_1,loc_6)),4294967231)then desired=6
break end desired=5 break end if desired then if desired==11 then desired=nil
end break end loc_10=load_i32_i8(memory_at_0,add_i32(loc_1,loc_10))while true do
while true do while true do if not br_map[2]then br_map[2]=(function()return{[0]
=0,2,2,2,2,2,2,2,2,2,2,2,2,1}end)()end temp=br_map[2][add_i32(loc_6,4294967072)]
or 2 if temp<1 then break elseif temp>1 then desired=12 break else desired=13
break end end if desired then if desired==13 then desired=nil end break end if
band_i32(loc_10,4294967264)==4294967200 then desired=9 break end desired=10
break end if desired then if desired==12 then desired=nil end break end if
gt_i32(loc_10,4294967199)then desired=10 break end desired=9 break end if
desired then if desired==11 then desired=nil end break end while true do if
band_i32(add_i32(loc_7,31),255)<12 then break end if band_i32(loc_7,4294967294)
~=4294967278 then desired=10 break end if lt_i32(loc_10,4294967232)then desired=
9 break end desired=10 break end if desired then if desired==11 then desired=nil
end break end if lt_i32(loc_10,4294967232)then desired=9 break end desired=10
break end if desired then if desired==10 then desired=nil end break end loc_10=
load_i32_i8(memory_at_0,add_i32(loc_1,loc_10))while true do while true do while
true do while true do if not br_map[3]then br_map[3]=(function()return{[0]=1,0,0
,0,2}end)()end temp=br_map[3][add_i32(loc_6,4294967056)]or 0 if temp<1 then
break elseif temp>1 then desired=12 break else desired=13 break end end if
desired then if desired==13 then desired=nil end break end if band_i32(add_i32(
loc_7,15),255)>2 then desired=10 break end if ge_i32(loc_10,4294967232)then
desired=10 break end desired=11 break end if desired then if desired==12 then
desired=nil end break end if band_i32(add_i32(loc_10,112),255)>=48 then desired=
10 break end desired=11 break end if desired then if desired==11 then desired=
nil end break end if gt_i32(loc_10,4294967183)then desired=10 break end break
end if desired then if desired==10 then desired=nil end break end while true do
loc_6=add_i32(loc_3,2)if loc_6<loc_2 then break end loc_9=i64_ZERO desired=6
break end if desired then if desired==10 then desired=nil end break end if
gt_i32(load_i32_i8(memory_at_0,add_i32(loc_1,loc_6)),4294967231)then desired=8
break end loc_9=i64_ZERO loc_6=add_i32(loc_3,3)if loc_6>=loc_2 then desired=6
break end if le_i32(load_i32_i8(memory_at_0,add_i32(loc_1,loc_6)),4294967231)
then desired=5 break end loc_8=i64_from_u32(0,768)desired=7 break end if desired
then if desired==9 then desired=nil end break end loc_8=i64_from_u32(0,256)
desired=7 break end if desired then if desired==8 then desired=nil end break end
loc_9=i64_ZERO loc_6=add_i32(loc_3,2)if loc_6>=loc_2 then desired=6 break end if
le_i32(load_i32_i8(memory_at_0,add_i32(loc_1,loc_6)),4294967231)then desired=5
break end break end if desired then if desired==7 then desired=nil end break end
loc_8=i64_from_u32(0,512)break end if desired then if desired==6 then desired=
nil end break end loc_9=i64_from_u32(0,1)break end if desired then if desired==5
then desired=nil end break end store_i64(memory_at_0,loc_0+4,bor_i64(bor_i64(
loc_8,extend_i64_u32(loc_3)),loc_9))store_i32(memory_at_0,loc_0,1)desired=0
break end if desired then if desired==4 then desired=nil end break end loc_3=
add_i32(loc_6,1)desired=3 break end if desired then if desired==3 then desired=
nil end break end if loc_3>=loc_2 then break end while true do if lt_i32(
load_i32_i8(memory_at_0,add_i32(loc_1,loc_3)),0)then desired=3 break end loc_3=
add_i32(loc_3,1)if loc_2~=loc_3 then continue end desired=1 break end if desired
then if desired==3 then desired=nil end break end break end if desired then if
desired==2 then desired=nil continue end break end if loc_3<loc_2 then continue
end break end if desired then if desired==1 then desired=nil end break end break
end if desired then if desired==0 then desired=nil end break end store_i32(
memory_at_0,loc_0+4,loc_1)store_i32(memory_at_0,add_i32(loc_0,8),loc_2)
store_i32(memory_at_0,loc_0,0)break end end FUNC_LIST[505]=function(loc_0,loc_1,
loc_2,loc_3,loc_4)local loc_5=0 local loc_6=0 local loc_7=0 local loc_8=0 local
loc_9=0 local loc_10=i64_ZERO local reg_0 local desired while true do loc_5=
sub_i32(GLOBAL_LIST[0].value,64)GLOBAL_LIST[0].value=loc_5 loc_6=1 while true do
if load_i32_u8(memory_at_0,loc_0+4)~=0 then break end loc_7=load_i32_u8(
memory_at_0,loc_0+5)while true do loc_8=load_i32(memory_at_0,loc_0)loc_9=
load_i32(memory_at_0,loc_8+28)if band_i32(loc_9,4)~=0 then break end loc_6=1
loc_7=band_i32(loc_7,255)reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(
memory_at_0,add_i32(loc_8,24))+12)](load_i32(memory_at_0,loc_8+20),(if loc_7~=0
then 1063627 else 1063624),(if loc_7~=0 then 2 else 3))if reg_0~=0 then desired=
1 break end loc_6=1 reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(
memory_at_0,loc_8+24)+12)](load_i32(memory_at_0,loc_8+20),loc_1,loc_2)if reg_0~=
0 then desired=1 break end loc_6=1 reg_0=TABLE_LIST[0].data[load_i32(memory_at_0
,load_i32(memory_at_0,loc_8+24)+12)](load_i32(memory_at_0,loc_8+20),1063576,2)if
reg_0~=0 then desired=1 break end reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,
loc_4+12)](loc_3,loc_8)loc_6=reg_0 desired=1 break end if desired then if
desired==1 then desired=nil end break end while true do if band_i32(loc_7,255)~=
0 then break end loc_6=1 reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(
memory_at_0,add_i32(loc_8,24))+12)](load_i32(memory_at_0,loc_8+20),1063629,3)if
reg_0~=0 then desired=1 break end loc_9=load_i32(memory_at_0,loc_8+28)break end
if desired then if desired==1 then desired=nil end break end loc_6=1
store_i32_n8(memory_at_0,loc_5+27,1)store_i32(memory_at_0,add_i32(loc_5,52),
1063596)store_i64(memory_at_0,loc_5+12,load_i64(memory_at_0,loc_8+20))store_i32(
memory_at_0,loc_5+20,add_i32(loc_5,27))store_i64(memory_at_0,loc_5+36,load_i64(
memory_at_0,loc_8+8))loc_10=load_i64(memory_at_0,loc_8)store_i32(memory_at_0,
loc_5+56,loc_9)store_i32(memory_at_0,loc_5+44,load_i32(memory_at_0,loc_8+16))
store_i32_n8(memory_at_0,loc_5+60,load_i32_u8(memory_at_0,loc_8+32))store_i64(
memory_at_0,loc_5+28,loc_10)store_i32(memory_at_0,loc_5+48,add_i32(loc_5,12))
reg_0=FUNC_LIST[517](add_i32(loc_5,12),loc_1,loc_2)if reg_0~=0 then break end
reg_0=FUNC_LIST[517](add_i32(loc_5,12),1063576,2)if reg_0~=0 then break end
reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,loc_4+12)](loc_3,add_i32(loc_5,28)
)if reg_0~=0 then break end reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,
load_i32(memory_at_0,loc_5+52)+12)](load_i32(memory_at_0,loc_5+48),1063632,2)
loc_6=reg_0 break end store_i32_n8(memory_at_0,loc_0+5,1)store_i32_n8(
memory_at_0,loc_0+4,loc_6)GLOBAL_LIST[0].value=add_i32(loc_5,64)reg_0=loc_0
break end return reg_0 end FUNC_LIST[506]=function(loc_0,loc_1,loc_2,loc_3,loc_4
)local loc_5=0 while true do loc_5=sub_i32(GLOBAL_LIST[0].value,64)GLOBAL_LIST[0
].value=loc_5 store_i32(memory_at_0,loc_5+12,loc_1)store_i32(memory_at_0,loc_5+8
,loc_0)store_i32(memory_at_0,loc_5+20,loc_3)store_i32(memory_at_0,loc_5+16,loc_2
)store_i32(memory_at_0,add_i32(loc_5,60),216)store_i32(memory_at_0,loc_5+52,217)
store_i32(memory_at_0,loc_5+56,add_i32(loc_5,16))store_i32(memory_at_0,loc_5+48,
add_i32(loc_5,8))FUNC_LIST[497](add_i32(loc_5,24),1063580,2,add_i32(loc_5,48),2)
FUNC_LIST[490](add_i32(loc_5,24),loc_4)error('out of code bounds')end end
FUNC_LIST[507]=function(loc_0,loc_1,loc_2)local loc_3=0 while true do loc_3=
sub_i32(GLOBAL_LIST[0].value,48)GLOBAL_LIST[0].value=loc_3 store_i32(memory_at_0
,loc_3+12,loc_1)store_i32(memory_at_0,loc_3+8,loc_0)store_i32(memory_at_0,loc_3+
44,217)store_i32(memory_at_0,loc_3+40,add_i32(loc_3,8))FUNC_LIST[497](add_i32(
loc_3,16),1063304,1,add_i32(loc_3,40),1)FUNC_LIST[490](add_i32(loc_3,16),loc_2)
error('out of code bounds')end end FUNC_LIST[508]=function(loc_0,loc_1)local
reg_0 while true do reg_0=FUNC_LIST[494](loc_1,load_i32(memory_at_0,loc_0),
load_i32(memory_at_0,loc_0+4))break end return reg_0 end FUNC_LIST[509]=function
(loc_0)local reg_0 while true do reg_0=load_i32(memory_at_0,loc_0+12)break end
return reg_0 end FUNC_LIST[510]=function(loc_0)local reg_0 while true do reg_0=
load_i32(memory_at_0,loc_0+8)break end return reg_0 end FUNC_LIST[511]=function(
loc_0)local reg_0 while true do reg_0=load_i32_u8(memory_at_0,loc_0+16)break end
return reg_0 end FUNC_LIST[512]=function(loc_0,loc_1)local loc_2=0 local loc_3=0
local loc_4=0 local loc_5=0 local loc_6=0 local reg_0 local desired while true
do loc_2=sub_i32(GLOBAL_LIST[0].value,64)GLOBAL_LIST[0].value=loc_2 loc_3=1
while true do loc_4=load_i32(memory_at_0,loc_1+20)loc_5=load_i32(memory_at_0,
add_i32(loc_1,24))loc_6=load_i32(memory_at_0,loc_5+12)reg_0=TABLE_LIST[0].data[
loc_6](loc_4,1063340,12)if reg_0~=0 then break end loc_1=load_i32(memory_at_0,
loc_0+8)store_i64(memory_at_0,add_i32(add_i32(loc_2,16),12),i64_from_u32(3,0))
store_i32(memory_at_0,add_i32(loc_2,60),33)store_i32(memory_at_0,add_i32(
add_i32(loc_2,40),12),33)store_i32(memory_at_0,loc_2+20,3)store_i32(memory_at_0,
loc_2+16,1063316)store_i32(memory_at_0,loc_2+56,add_i32(loc_1,12))store_i32(
memory_at_0,loc_2+48,add_i32(loc_1,8))store_i32(memory_at_0,loc_2+44,217)
store_i32(memory_at_0,loc_2+40,loc_1)store_i32(memory_at_0,loc_2+24,add_i32(
loc_2,40))reg_0=FUNC_LIST[499](loc_4,loc_5,add_i32(loc_2,16))if reg_0~=0 then
break end while true do while true do loc_1=load_i32(memory_at_0,loc_0+12)if
loc_1==0 then break end reg_0=TABLE_LIST[0].data[loc_6](loc_4,1063352,2)if reg_0
~=0 then desired=1 break end store_i64(memory_at_0,add_i32(add_i32(loc_2,40),16)
,load_i64(memory_at_0,add_i32(loc_1,16)))store_i64(memory_at_0,add_i32(add_i32(
loc_2,40),8),load_i64(memory_at_0,add_i32(loc_1,8)))store_i64(memory_at_0,loc_2+
40,load_i64(memory_at_0,loc_1))reg_0=FUNC_LIST[499](loc_4,loc_5,add_i32(loc_2,40
))if reg_0~=0 then desired=1 break end desired=2 break end if desired then if
desired==2 then desired=nil end break end loc_1=load_i32(memory_at_0,loc_0)
TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(memory_at_0,loc_0+4)+12)](loc_2
,loc_1)if(if eq_i64(bor_i64(bxor_i64(load_i64(memory_at_0,loc_2),i64_from_u32(
3441327041,3248670876)),bxor_i64(load_i64(memory_at_0,add_i32(loc_2,8)),
i64_from_u32(11661156,4256962177))),i64_ZERO)then 1 else 0)==0 then break end
reg_0=TABLE_LIST[0].data[loc_6](loc_4,1063352,2)if reg_0~=0 then desired=1 break
end reg_0=TABLE_LIST[0].data[loc_6](loc_4,load_i32(memory_at_0,loc_1),load_i32(
memory_at_0,loc_1+4))if reg_0~=0 then desired=1 break end break end if desired
then if desired==1 then desired=nil end break end loc_3=0 break end GLOBAL_LIST[
0].value=add_i32(loc_2,64)reg_0=loc_3 break end return reg_0 end FUNC_LIST[513]=
function(loc_0,loc_1)local loc_2=0 local loc_3=0 local loc_4=0 local reg_0 while
true do loc_2=sub_i32(GLOBAL_LIST[0].value,128)GLOBAL_LIST[0].value=loc_2 loc_0=
load_i32(memory_at_0,loc_0)loc_3=0 while true do loc_4=band_i32(loc_0,15)
store_i32_n8(memory_at_0,add_i32(add_i32(loc_2,loc_3),127),add_i32((if loc_4<10
then 48 else 87),loc_4))loc_3=add_i32(loc_3,4294967295)loc_4=(if loc_0<16 then 1
else 0)loc_0=shr_u32(loc_0,4)if loc_4==0 then continue end break end while true
do loc_0=add_i32(loc_3,128)if loc_0<=128 then break end FUNC_LIST[491](loc_0,128
,1063692)error('out of code bounds')end reg_0=FUNC_LIST[500](loc_1,1,1063660,2,
add_i32(add_i32(loc_2,loc_3),128),sub_i32(0,loc_3))loc_0=reg_0 GLOBAL_LIST[0].
value=add_i32(loc_2,128)reg_0=loc_0 break end return reg_0 end FUNC_LIST[514]=
function(loc_0,loc_1,loc_2,loc_3,loc_4,loc_5,loc_6)local loc_7=0 local desired
local br_map={}while true do loc_7=sub_i32(GLOBAL_LIST[0].value,112)GLOBAL_LIST[
0].value=loc_7 store_i32(memory_at_0,loc_7+12,loc_2)store_i32(memory_at_0,loc_7+
8,loc_1)store_i32(memory_at_0,loc_7+20,loc_4)store_i32(memory_at_0,loc_7+16,
loc_3)while true do while true do while true do while true do if not br_map[1]
then br_map[1]=(function()return{[0]=0,1,2}end)()end temp=br_map[1][band_i32(
loc_0,255)]or 0 if temp<1 then break elseif temp>1 then desired=2 break else
desired=3 break end end if desired then if desired==3 then desired=nil end break
end store_i32(memory_at_0,loc_7+24,1063440)loc_2=2 desired=1 break end if
desired then if desired==2 then desired=nil end break end store_i32(memory_at_0,
loc_7+24,1063442)loc_2=2 desired=1 break end if desired then if desired==1 then
desired=nil end break end store_i32(memory_at_0,loc_7+24,1063444)loc_2=7 break
end store_i32(memory_at_0,loc_7+28,loc_2)while true do if load_i32(memory_at_0,
loc_5)~=0 then break end store_i32(memory_at_0,add_i32(loc_7,76),216)store_i32(
memory_at_0,add_i32(loc_7,68),216)store_i32(memory_at_0,loc_7+60,217)store_i32(
memory_at_0,loc_7+72,add_i32(loc_7,16))store_i32(memory_at_0,loc_7+64,add_i32(
loc_7,8))store_i32(memory_at_0,loc_7+56,add_i32(loc_7,24))FUNC_LIST[497](
add_i32(loc_7,88),1063508,4,add_i32(loc_7,56),3)FUNC_LIST[490](add_i32(loc_7,88)
,loc_6)error('out of code bounds')end store_i64(memory_at_0,add_i32(add_i32(
loc_7,32),16),load_i64(memory_at_0,add_i32(loc_5,16)))store_i64(memory_at_0,
add_i32(add_i32(loc_7,32),8),load_i64(memory_at_0,add_i32(loc_5,8)))store_i64(
memory_at_0,loc_7+32,load_i64(memory_at_0,loc_5))store_i32(memory_at_0,add_i32(
loc_7,84),218)store_i32(memory_at_0,add_i32(loc_7,76),216)store_i32(memory_at_0,
add_i32(loc_7,68),216)store_i32(memory_at_0,loc_7+60,217)store_i32(memory_at_0,
loc_7+80,add_i32(loc_7,32))store_i32(memory_at_0,loc_7+72,add_i32(loc_7,16))
store_i32(memory_at_0,loc_7+64,add_i32(loc_7,8))store_i32(memory_at_0,loc_7+56,
add_i32(loc_7,24))FUNC_LIST[497](add_i32(loc_7,88),1063544,4,add_i32(loc_7,56),4
)FUNC_LIST[490](add_i32(loc_7,88),loc_6)error('out of code bounds')end end
FUNC_LIST[515]=function(loc_0,loc_1)local reg_0 while true do reg_0=TABLE_LIST[0
].data[load_i32(memory_at_0,load_i32(memory_at_0,loc_0+4)+12)](load_i32(
memory_at_0,loc_0),loc_1)break end return reg_0 end FUNC_LIST[516]=function(
loc_0,loc_1)local reg_0 while true do reg_0=FUNC_LIST[499](load_i32(memory_at_0,
loc_1+20),load_i32(memory_at_0,add_i32(loc_1,24)),loc_0)break end return reg_0
end FUNC_LIST[517]=function(loc_0,loc_1,loc_2)local loc_3=0 local loc_4=0 local
loc_5=0 local loc_6=0 local loc_7=0 local loc_8=0 local loc_9=0 local loc_10=0
local loc_11=0 local loc_12=0 local loc_13=0 local reg_0 local desired while
true do loc_3=load_i32(memory_at_0,loc_0+4)loc_4=load_i32(memory_at_0,loc_0)
loc_5=load_i32(memory_at_0,loc_0+8)loc_6=0 loc_7=0 loc_8=0 loc_9=0 while true do
while true do if band_i32(loc_9,255)~=0 then desired=1 break end while true do
while true do if loc_8>loc_2 then break end while true do loc_10=add_i32(loc_1,
loc_8)while true do while true do loc_11=sub_i32(loc_2,loc_8)if loc_11<8 then
break end while true do while true do while true do loc_0=band_i32(add_i32(
loc_10,3),4294967292)if loc_0==loc_10 then break end loc_12=sub_i32(loc_0,loc_10
)if loc_12==0 then break end loc_0=0 while true do if load_i32_u8(memory_at_0,
add_i32(loc_10,loc_0))==10 then desired=6 break end loc_0=add_i32(loc_0,1)if
loc_12~=loc_0 then continue end break end if desired then if desired==10 then
desired=nil end break end loc_13=add_i32(loc_11,4294967288)if loc_12<=loc_13
then desired=9 break end desired=8 break end if desired then if desired==9 then
desired=nil end break end loc_13=add_i32(loc_11,4294967288)loc_12=0 break end if
desired then if desired==8 then desired=nil end break end while true do loc_9=
add_i32(loc_10,loc_12)loc_0=load_i32(memory_at_0,loc_9)if band_i32(band_i32(
bxor_i32(loc_0,4294967295),add_i32(bxor_i32(loc_0,168430090),4278124287)),
2155905152)~=0 then desired=8 break end loc_0=load_i32(memory_at_0,add_i32(loc_9
,4))if band_i32(band_i32(bxor_i32(loc_0,4294967295),add_i32(bxor_i32(loc_0,
168430090),4278124287)),2155905152)~=0 then desired=8 break end loc_12=add_i32(
loc_12,8)if loc_12<=loc_13 then continue end break end if desired then if
desired==8 then desired=nil end break end break end if desired then if desired==
7 then desired=nil end break end while true do if loc_12~=loc_11 then break end
loc_8=loc_2 desired=4 break end if desired then if desired==7 then desired=nil
end break end while true do while true do if load_i32_u8(memory_at_0,add_i32(
loc_10,loc_12))~=10 then break end loc_0=loc_12 desired=6 break end if desired
then if desired==8 then desired=nil continue end break end loc_12=add_i32(loc_12
,1)if loc_11~=loc_12 then continue end break end if desired then if desired==7
then desired=nil end break end loc_8=loc_2 desired=4 break end if desired then
if desired==6 then desired=nil end break end while true do if loc_2~=loc_8 then
break end loc_8=loc_2 desired=4 break end if desired then if desired==6 then
desired=nil end break end loc_0=0 while true do if load_i32_u8(memory_at_0,
add_i32(loc_10,loc_0))==10 then desired=6 break end loc_0=add_i32(loc_0,1)if
loc_11~=loc_0 then continue end break end if desired then if desired==6 then
desired=nil end break end loc_8=loc_2 desired=4 break end if desired then if
desired==5 then desired=nil continue end break end loc_0=add_i32(loc_8,loc_0)
loc_8=add_i32(loc_0,1)while true do if loc_0>=loc_2 then break end if
load_i32_u8(memory_at_0,add_i32(loc_1,loc_0))~=10 then break end loc_9=0 loc_13=
loc_8 loc_0=loc_8 desired=3 break end if desired then if desired==5 then desired
=nil continue end break end if loc_8<=loc_2 then continue end break end if
desired then if desired==4 then desired=nil end break end break end if desired
then if desired==3 then desired=nil end break end loc_9=1 loc_13=loc_7 loc_0=
loc_2 if loc_7==loc_2 then desired=1 break end break end if desired then if
desired==2 then desired=nil continue end break end while true do while true do
if load_i32_u8(memory_at_0,loc_5)==0 then break end reg_0=TABLE_LIST[0].data[
load_i32(memory_at_0,loc_3+12)](loc_4,1063620,4)if reg_0~=0 then desired=3 break
end break end if desired then if desired==3 then desired=nil end break end
loc_12=add_i32(loc_1,loc_7)loc_10=sub_i32(loc_0,loc_7)loc_11=0 while true do if
loc_0==loc_7 then break end loc_11=(if load_i32_u8(memory_at_0,add_i32(add_i32(
loc_10,loc_12),4294967295))==10 then 1 else 0)break end if desired then if
desired==3 then desired=nil end break end store_i32_n8(memory_at_0,loc_5,loc_11)
loc_7=loc_13 reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,loc_3+12)](loc_4,
loc_12,loc_10)if reg_0==0 then desired=2 break end break end if desired then if
desired==2 then desired=nil continue end break end break end if desired then if
desired==1 then desired=nil end break end loc_6=1 break end reg_0=loc_6 break
end return reg_0 end FUNC_LIST[518]=function(loc_0)local loc_1=0 local loc_2=0
local reg_0 local reg_1 local desired while true do loc_1=load_i32_u8(
memory_at_0,loc_0+4)while true do if load_i32_u8(memory_at_0,loc_0+5)~=0 then
break end reg_0=(if band_i32(loc_1,255)~=0 then 1 else 0)desired=0 break end if
desired then if desired==0 then desired=nil end break end loc_2=1 while true do
if band_i32(loc_1,255)~=0 then break end while true do loc_1=load_i32(
memory_at_0,loc_0)if band_i32(load_i32_u8(memory_at_0,loc_1+28),4)~=0 then break
end reg_1=TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(memory_at_0,loc_1+24)
+12)](load_i32(memory_at_0,loc_1+20),1063635,2)loc_1=reg_1 store_i32_n8(
memory_at_0,loc_0+4,loc_1)reg_0=loc_1 desired=0 break end if desired then if
desired==1 then desired=nil end break end reg_0=TABLE_LIST[0].data[load_i32(
memory_at_0,load_i32(memory_at_0,loc_1+24)+12)](load_i32(memory_at_0,loc_1+20),
1063634,1)loc_2=reg_0 break end if desired then if desired==0 then desired=nil
end break end store_i32_n8(memory_at_0,loc_0+4,loc_2)reg_0=loc_2 break end
return reg_0 end FUNC_LIST[519]=function(loc_0,loc_1,loc_2)local loc_3=0 local
loc_4=0 local loc_5=0 local loc_6=0 local loc_7=0 local loc_8=i64_ZERO local
reg_0 local desired while true do loc_3=sub_i32(GLOBAL_LIST[0].value,64)
GLOBAL_LIST[0].value=loc_3 loc_4=load_i32(memory_at_0,loc_0)loc_5=1 while true
do if load_i32_u8(memory_at_0,loc_0+8)~=0 then break end while true do loc_6=
load_i32(memory_at_0,loc_0+4)loc_7=load_i32(memory_at_0,loc_6+28)if band_i32(
loc_7,4)~=0 then break end loc_5=1 reg_0=TABLE_LIST[0].data[load_i32(memory_at_0
,load_i32(memory_at_0,add_i32(loc_6,24))+12)](load_i32(memory_at_0,loc_6+20),(if
loc_4~=0 then 1063627 else 1063637),(if loc_4~=0 then 2 else 1))if reg_0~=0 then
desired=1 break end reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,loc_2+12)](
loc_1,loc_6)loc_5=reg_0 desired=1 break end if desired then if desired==1 then
desired=nil end break end while true do if loc_4~=0 then break end loc_5=1 reg_0
=TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(memory_at_0,add_i32(loc_6,24))
+12)](load_i32(memory_at_0,loc_6+20),1063638,2)if reg_0~=0 then desired=1 break
end loc_7=load_i32(memory_at_0,loc_6+28)break end if desired then if desired==1
then desired=nil end break end loc_5=1 store_i32_n8(memory_at_0,loc_3+27,1)
store_i32(memory_at_0,add_i32(loc_3,52),1063596)store_i64(memory_at_0,loc_3+12,
load_i64(memory_at_0,loc_6+20))store_i32(memory_at_0,loc_3+20,add_i32(loc_3,27))
store_i64(memory_at_0,loc_3+36,load_i64(memory_at_0,loc_6+8))loc_8=load_i64(
memory_at_0,loc_6)store_i32(memory_at_0,loc_3+56,loc_7)store_i32(memory_at_0,
loc_3+44,load_i32(memory_at_0,loc_6+16))store_i32_n8(memory_at_0,loc_3+60,
load_i32_u8(memory_at_0,loc_6+32))store_i64(memory_at_0,loc_3+28,loc_8)
store_i32(memory_at_0,loc_3+48,add_i32(loc_3,12))reg_0=TABLE_LIST[0].data[
load_i32(memory_at_0,loc_2+12)](loc_1,add_i32(loc_3,28))if reg_0~=0 then break
end reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(memory_at_0,loc_3+52)
+12)](load_i32(memory_at_0,loc_3+48),1063632,2)loc_5=reg_0 break end
store_i32_n8(memory_at_0,loc_0+8,loc_5)store_i32(memory_at_0,loc_0,add_i32(loc_4
,1))GLOBAL_LIST[0].value=add_i32(loc_3,64)reg_0=loc_0 break end return reg_0 end
FUNC_LIST[520]=function(loc_0,loc_1)local loc_2=0 local reg_0 local desired
while true do loc_2=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value=loc_2
store_i32(memory_at_0,loc_2+12,0)while true do while true do while true do while
true do if loc_1<128 then break end if loc_1<2048 then desired=3 break end if
loc_1>=65536 then desired=2 break end store_i32_n8(memory_at_0,loc_2+14,bor_i32(
band_i32(loc_1,63),128))store_i32_n8(memory_at_0,loc_2+12,bor_i32(shr_u32(loc_1,
12),224))store_i32_n8(memory_at_0,loc_2+13,bor_i32(band_i32(shr_u32(loc_1,6),63)
,128))loc_1=3 desired=1 break end if desired then if desired==3 then desired=nil
end break end store_i32_n8(memory_at_0,loc_2+12,loc_1)loc_1=1 desired=1 break
end if desired then if desired==2 then desired=nil end break end store_i32_n8(
memory_at_0,loc_2+13,bor_i32(band_i32(loc_1,63),128))store_i32_n8(memory_at_0,
loc_2+12,bor_i32(shr_u32(loc_1,6),192))loc_1=2 desired=1 break end if desired
then if desired==1 then desired=nil end break end store_i32_n8(memory_at_0,loc_2
+15,bor_i32(band_i32(loc_1,63),128))store_i32_n8(memory_at_0,loc_2+14,bor_i32(
band_i32(shr_u32(loc_1,6),63),128))store_i32_n8(memory_at_0,loc_2+13,bor_i32(
band_i32(shr_u32(loc_1,12),63),128))store_i32_n8(memory_at_0,loc_2+12,bor_i32(
band_i32(shr_u32(loc_1,18),7),240))loc_1=4 break end reg_0=FUNC_LIST[517](loc_0,
add_i32(loc_2,12),loc_1)loc_1=reg_0 GLOBAL_LIST[0].value=add_i32(loc_2,16)reg_0=
loc_1 break end return reg_0 end FUNC_LIST[521]=function(loc_0,loc_1)local loc_2
=0 local reg_0 while true do loc_2=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0
].value=loc_2 store_i32(memory_at_0,loc_2+12,loc_0)reg_0=FUNC_LIST[499](add_i32(
loc_2,12),1063908,loc_1)loc_0=reg_0 GLOBAL_LIST[0].value=add_i32(loc_2,16)reg_0=
loc_0 break end return reg_0 end FUNC_LIST[522]=function(loc_0,loc_1,loc_2)local
reg_0 while true do reg_0=FUNC_LIST[517](load_i32(memory_at_0,loc_0),loc_1,loc_2
)break end return reg_0 end FUNC_LIST[523]=function(loc_0,loc_1)local loc_2=0
local reg_0 local desired while true do loc_2=sub_i32(GLOBAL_LIST[0].value,16)
GLOBAL_LIST[0].value=loc_2 loc_0=load_i32(memory_at_0,loc_0)store_i32(
memory_at_0,loc_2+12,0)while true do while true do while true do while true do
if loc_1<128 then break end if loc_1<2048 then desired=3 break end if loc_1>=
65536 then desired=2 break end store_i32_n8(memory_at_0,loc_2+14,bor_i32(
band_i32(loc_1,63),128))store_i32_n8(memory_at_0,loc_2+12,bor_i32(shr_u32(loc_1,
12),224))store_i32_n8(memory_at_0,loc_2+13,bor_i32(band_i32(shr_u32(loc_1,6),63)
,128))loc_1=3 desired=1 break end if desired then if desired==3 then desired=nil
end break end store_i32_n8(memory_at_0,loc_2+12,loc_1)loc_1=1 desired=1 break
end if desired then if desired==2 then desired=nil end break end store_i32_n8(
memory_at_0,loc_2+13,bor_i32(band_i32(loc_1,63),128))store_i32_n8(memory_at_0,
loc_2+12,bor_i32(shr_u32(loc_1,6),192))loc_1=2 desired=1 break end if desired
then if desired==1 then desired=nil end break end store_i32_n8(memory_at_0,loc_2
+15,bor_i32(band_i32(loc_1,63),128))store_i32_n8(memory_at_0,loc_2+14,bor_i32(
band_i32(shr_u32(loc_1,6),63),128))store_i32_n8(memory_at_0,loc_2+13,bor_i32(
band_i32(shr_u32(loc_1,12),63),128))store_i32_n8(memory_at_0,loc_2+12,bor_i32(
band_i32(shr_u32(loc_1,18),7),240))loc_1=4 break end reg_0=FUNC_LIST[517](loc_0,
add_i32(loc_2,12),loc_1)loc_1=reg_0 GLOBAL_LIST[0].value=add_i32(loc_2,16)reg_0=
loc_1 break end return reg_0 end FUNC_LIST[524]=function(loc_0,loc_1)local loc_2
=0 local reg_0 while true do loc_2=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0
].value=loc_2 store_i32(memory_at_0,loc_2+12,load_i32(memory_at_0,loc_0))reg_0=
FUNC_LIST[499](add_i32(loc_2,12),1063908,loc_1)loc_0=reg_0 GLOBAL_LIST[0].value=
add_i32(loc_2,16)reg_0=loc_0 break end return reg_0 end FUNC_LIST[525]=function(
loc_0,loc_1,loc_2)while true do store_i32_n8(memory_at_0,loc_0+32,3)store_i32(
memory_at_0,loc_0+16,32)store_i32(memory_at_0,loc_0+28,0)store_i32(memory_at_0,
loc_0+20,loc_1)store_i32(memory_at_0,loc_0+8,0)store_i32(memory_at_0,loc_0,0)
store_i32(memory_at_0,add_i32(loc_0,24),loc_2)break end end FUNC_LIST[526]=
function(loc_0,loc_1)local loc_2=0 local loc_3=0 local loc_4=0 local loc_5=0
local loc_6=0 local loc_7=0 local loc_8=0 local loc_9=0 local loc_10=0 local
reg_0 local reg_1 local reg_2 local desired while true do while true do while
true do loc_2=band_i32(add_i32(loc_0,3),4294967292)loc_3=sub_i32(loc_2,loc_0)if
loc_1<loc_3 then break end loc_4=sub_i32(loc_1,loc_3)if loc_4<4 then break end
loc_5=band_i32(loc_4,3)loc_6=0 loc_1=0 while true do loc_7=(if loc_2==loc_0 then
1 else 0)if loc_7~=0 then break end loc_1=0 while true do while true do if
add_i32(loc_2,bxor_i32(loc_0,4294967295))>=3 then break end loc_8=0 desired=4
break end if desired then if desired==4 then desired=nil end break end loc_8=0
while true do loc_9=add_i32(loc_0,loc_8)loc_1=add_i32(add_i32(add_i32(add_i32(
loc_1,(if gt_i32(load_i32_i8(memory_at_0,loc_9),4294967231)then 1 else 0)),(if
gt_i32(load_i32_i8(memory_at_0,add_i32(loc_9,1)),4294967231)then 1 else 0)),(if
gt_i32(load_i32_i8(memory_at_0,add_i32(loc_9,2)),4294967231)then 1 else 0)),(if
gt_i32(load_i32_i8(memory_at_0,add_i32(loc_9,3)),4294967231)then 1 else 0))loc_8
=add_i32(loc_8,4)if loc_8~=0 then continue end break end if desired then if
desired==4 then desired=nil end break end break end if desired then if desired==
3 then desired=nil end break end if loc_7~=0 then break end loc_2=sub_i32(loc_0,
loc_2)loc_9=add_i32(loc_0,loc_8)while true do loc_1=add_i32(loc_1,(if gt_i32(
load_i32_i8(memory_at_0,loc_9),4294967231)then 1 else 0))loc_9=add_i32(loc_9,1)
loc_2=add_i32(loc_2,1)if loc_2~=0 then continue end break end if desired then if
desired==3 then desired=nil end break end break end if desired then if desired==
2 then desired=nil end break end loc_8=add_i32(loc_0,loc_3)while true do if
loc_5==0 then break end loc_9=add_i32(loc_8,band_i32(loc_4,4294967292))loc_6=(if
gt_i32(load_i32_i8(memory_at_0,loc_9),4294967231)then 1 else 0)if loc_5==1 then
break end loc_6=add_i32(loc_6,(if gt_i32(load_i32_i8(memory_at_0,loc_9+1),
4294967231)then 1 else 0))if loc_5==2 then break end loc_6=add_i32(loc_6,(if
gt_i32(load_i32_i8(memory_at_0,loc_9+2),4294967231)then 1 else 0))break end if
desired then if desired==2 then desired=nil end break end loc_3=shr_u32(loc_4,2)
loc_2=add_i32(loc_6,loc_1)while true do loc_6=loc_8 if loc_3==0 then desired=1
break end loc_4=(if loc_3<192 then loc_3 else 192)loc_5=band_i32(loc_4,3)loc_7=
shl_i32(loc_4,2)while true do while true do loc_10=band_i32(loc_4,252)if loc_10
~=0 then break end loc_9=0 desired=4 break end if desired then if desired==4
then desired=nil end break end loc_0=add_i32(loc_6,shl_i32(loc_10,2))loc_9=0
loc_1=loc_6 while true do loc_8=load_i32(memory_at_0,add_i32(loc_1,12))reg_0=
band_i32(bor_i32(shr_u32(bxor_i32(loc_8,4294967295),7),shr_u32(loc_8,6)),
16843009)loc_8=load_i32(memory_at_0,add_i32(loc_1,8))reg_1=band_i32(bor_i32(
shr_u32(bxor_i32(loc_8,4294967295),7),shr_u32(loc_8,6)),16843009)loc_8=load_i32(
memory_at_0,add_i32(loc_1,4))reg_2=band_i32(bor_i32(shr_u32(bxor_i32(loc_8,
4294967295),7),shr_u32(loc_8,6)),16843009)loc_8=load_i32(memory_at_0,loc_1)loc_9
=add_i32(reg_0,add_i32(reg_1,add_i32(reg_2,add_i32(band_i32(bor_i32(shr_u32(
bxor_i32(loc_8,4294967295),7),shr_u32(loc_8,6)),16843009),loc_9))))loc_1=
add_i32(loc_1,16)if loc_1~=loc_0 then continue end break end if desired then if
desired==4 then desired=nil end break end break end if desired then if desired==
3 then desired=nil continue end break end loc_3=sub_i32(loc_3,loc_4)loc_8=
add_i32(loc_6,loc_7)loc_2=add_i32(shr_u32(mul_i32(add_i32(band_i32(shr_u32(loc_9
,8),16711935),band_i32(loc_9,16711935)),65537),16),loc_2)if loc_5==0 then
continue end break end if desired then if desired==2 then desired=nil end break
end loc_9=add_i32(loc_6,shl_i32(loc_10,2))loc_1=load_i32(memory_at_0,loc_9)loc_1
=band_i32(bor_i32(shr_u32(bxor_i32(loc_1,4294967295),7),shr_u32(loc_1,6)),
16843009)while true do if loc_5==1 then break end loc_8=load_i32(memory_at_0,
loc_9+4)loc_1=add_i32(band_i32(bor_i32(shr_u32(bxor_i32(loc_8,4294967295),7),
shr_u32(loc_8,6)),16843009),loc_1)if loc_5==2 then break end loc_9=load_i32(
memory_at_0,loc_9+8)loc_1=add_i32(band_i32(bor_i32(shr_u32(bxor_i32(loc_9,
4294967295),7),shr_u32(loc_9,6)),16843009),loc_1)break end if desired then if
desired==2 then desired=nil end break end loc_2=add_i32(shr_u32(mul_i32(add_i32(
band_i32(shr_u32(loc_1,8),459007),band_i32(loc_1,16711935)),65537),16),loc_2)
desired=1 break end if desired then if desired==1 then desired=nil end break end
while true do if loc_1~=0 then break end reg_0=0 desired=0 break end if desired
then if desired==1 then desired=nil end break end loc_8=band_i32(loc_1,3)while
true do while true do if loc_1>=4 then break end loc_2=0 loc_9=0 desired=2 break
end if desired then if desired==2 then desired=nil end break end loc_3=band_i32(
loc_1,4294967292)loc_2=0 loc_9=0 while true do loc_1=add_i32(loc_0,loc_9)loc_2=
add_i32(add_i32(add_i32(add_i32(loc_2,(if gt_i32(load_i32_i8(memory_at_0,loc_1),
4294967231)then 1 else 0)),(if gt_i32(load_i32_i8(memory_at_0,add_i32(loc_1,1)),
4294967231)then 1 else 0)),(if gt_i32(load_i32_i8(memory_at_0,add_i32(loc_1,2)),
4294967231)then 1 else 0)),(if gt_i32(load_i32_i8(memory_at_0,add_i32(loc_1,3)),
4294967231)then 1 else 0))loc_9=add_i32(loc_9,4)if loc_3~=loc_9 then continue
end break end if desired then if desired==2 then desired=nil end break end break
end if desired then if desired==1 then desired=nil end break end if loc_8==0
then break end loc_1=add_i32(loc_0,loc_9)while true do loc_2=add_i32(loc_2,(if
gt_i32(load_i32_i8(memory_at_0,loc_1),4294967231)then 1 else 0))loc_1=add_i32(
loc_1,1)loc_8=add_i32(loc_8,4294967295)if loc_8~=0 then continue end break end
if desired then if desired==1 then desired=nil end break end break end if
desired then if desired==0 then desired=nil end break end reg_0=loc_2 break end
return reg_0 end FUNC_LIST[527]=function(loc_0,loc_1,loc_2,loc_3,loc_4)local
loc_5=0 local reg_0 local desired while true do while true do while true do
while true do if loc_2==1114112 then break end loc_5=1 reg_0=TABLE_LIST[0].data[
load_i32(memory_at_0,loc_1+16)](loc_0,loc_2)if reg_0~=0 then desired=2 break end
break end if desired then if desired==2 then desired=nil end break end if loc_3
~=0 then desired=1 break end loc_5=0 break end if desired then if desired==1
then desired=nil end break end reg_0=loc_5 desired=0 break end if desired then
if desired==0 then desired=nil end break end reg_0=TABLE_LIST[0].data[load_i32(
memory_at_0,loc_1+12)](loc_0,loc_3,loc_4)break end return reg_0 end FUNC_LIST[
528]=function(loc_0,loc_1)local reg_0 while true do reg_0=FUNC_LIST[499](
load_i32(memory_at_0,loc_0+20),load_i32(memory_at_0,add_i32(loc_0,24)),loc_1)
break end return reg_0 end FUNC_LIST[529]=function(loc_0,loc_1,loc_2,loc_3)local
reg_0 while true do reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(
memory_at_0,add_i32(loc_1,24))+12)](load_i32(memory_at_0,loc_1+20),loc_2,loc_3)
loc_3=reg_0 store_i32_n8(memory_at_0,loc_0+5,0)store_i32_n8(memory_at_0,loc_0+4,
loc_3)store_i32(memory_at_0,loc_0,loc_1)break end end FUNC_LIST[530]=function(
loc_0,loc_1)local reg_0 local desired while true do while true do if
load_i32_u8(memory_at_0,loc_0)~=0 then break end reg_0=FUNC_LIST[494](loc_1,
1063948,5)desired=0 break end if desired then if desired==0 then desired=nil end
break end reg_0=FUNC_LIST[494](loc_1,1063953,4)break end return reg_0 end
FUNC_LIST[531]=function(loc_0,loc_1,loc_2)local reg_0 while true do reg_0=
FUNC_LIST[494](loc_2,loc_0,loc_1)break end return reg_0 end FUNC_LIST[532]=
function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=0 local
loc_7=0 local loc_8=0 local desired while true do while true do while true do
while true do while true do loc_4=band_i32(add_i32(loc_2,3),4294967292)if loc_4
==loc_2 then break end loc_4=sub_i32(loc_4,loc_2)loc_4=(if loc_4<loc_3 then
loc_4 else loc_3)if loc_4==0 then break end loc_5=0 loc_6=band_i32(loc_1,255)
loc_7=1 while true do if load_i32_u8(memory_at_0,add_i32(loc_2,loc_5))==loc_6
then desired=1 break end loc_5=add_i32(loc_5,1)if loc_4~=loc_5 then continue end
break end if desired then if desired==4 then desired=nil end break end loc_8=
add_i32(loc_3,4294967288)if loc_4>loc_8 then desired=2 break end desired=3 break
end if desired then if desired==3 then desired=nil end break end loc_8=add_i32(
loc_3,4294967288)loc_4=0 break end if desired then if desired==2 then desired=
nil end break end loc_5=mul_i32(band_i32(loc_1,255),16843009)while true do loc_7
=add_i32(loc_2,loc_4)loc_6=bxor_i32(load_i32(memory_at_0,loc_7),loc_5)if
band_i32(band_i32(bxor_i32(loc_6,4294967295),add_i32(loc_6,4278124287)),
2155905152)~=0 then desired=2 break end loc_6=bxor_i32(load_i32(memory_at_0,
add_i32(loc_7,4)),loc_5)if band_i32(band_i32(bxor_i32(loc_6,4294967295),add_i32(
loc_6,4278124287)),2155905152)~=0 then desired=2 break end loc_4=add_i32(loc_4,8
)if loc_4<=loc_8 then continue end break end if desired then if desired==2 then
desired=nil end break end break end if desired then if desired==1 then desired=
nil end break end loc_7=0 while true do if loc_4==loc_3 then break end loc_5=
band_i32(loc_1,255)while true do while true do if load_i32_u8(memory_at_0,
add_i32(loc_2,loc_4))~=loc_5 then break end loc_5=loc_4 loc_7=1 desired=1 break
end if desired then if desired==3 then desired=nil continue end break end loc_4=
add_i32(loc_4,1)if loc_3~=loc_4 then continue end break end if desired then if
desired==2 then desired=nil end break end break end if desired then if desired==
1 then desired=nil end break end loc_5=loc_3 break end store_i32(memory_at_0,
loc_0+4,loc_5)store_i32(memory_at_0,loc_0,loc_7)break end end FUNC_LIST[533]=
function(loc_0,loc_1,loc_2,loc_3)local loc_4=0 local loc_5=0 local loc_6=0 local
loc_7=0 local loc_8=0 local loc_9=0 local loc_10=0 local desired while true do
loc_4=loc_3 loc_5=loc_3 while true do while true do while true do while true do
while true do loc_6=sub_i32(band_i32(add_i32(loc_2,3),4294967292),loc_2)if loc_3
<loc_6 then break end loc_7=band_i32(sub_i32(loc_3,loc_6),7)loc_4=sub_i32(loc_3,
loc_7)if loc_3<loc_7 then desired=4 break end loc_5=loc_6 break end if desired
then if desired==4 then desired=nil end break end loc_8=sub_i32(0,loc_4)loc_9=
add_i32(loc_2,4294967295)loc_10=band_i32(loc_1,255)loc_6=loc_3 while true do if
add_i32(loc_8,loc_6)==0 then desired=3 break end loc_7=add_i32(loc_9,loc_6)loc_6
=add_i32(loc_6,4294967295)if load_i32_u8(memory_at_0,loc_7)~=loc_10 then
continue end desired=2 break end if desired then if desired==4 then desired=nil
end break end break end if desired then if desired==3 then desired=nil end break
end FUNC_LIST[491](loc_4,loc_3,1064008)error('out of code bounds')end if desired
then if desired==2 then desired=nil end break end loc_7=mul_i32(band_i32(loc_1,
255),16843009)while true do while true do loc_6=loc_4 if loc_6<=loc_5 then
desired=3 break end loc_9=add_i32(loc_2,loc_6)loc_8=bxor_i32(load_i32(
memory_at_0,add_i32(loc_9,4294967288)),loc_7)if band_i32(band_i32(bxor_i32(loc_8
,4294967295),add_i32(loc_8,4278124287)),2155905152)~=0 then desired=3 break end
loc_4=add_i32(loc_6,4294967288)loc_8=bxor_i32(load_i32(memory_at_0,add_i32(loc_9
,4294967292)),loc_7)if band_i32(band_i32(bxor_i32(loc_8,4294967295),add_i32(
loc_8,4278124287)),2155905152)==0 then continue end break end if desired then if
desired==3 then desired=nil end break end break end if desired then if desired==
2 then desired=nil end break end while true do if loc_6>loc_3 then break end
loc_8=add_i32(loc_2,4294967295)loc_9=band_i32(loc_1,255)while true do while true
do if loc_6~=0 then break end loc_7=0 desired=1 break end if desired then if
desired==4 then desired=nil continue end break end loc_7=add_i32(loc_8,loc_6)
loc_6=add_i32(loc_6,4294967295)if load_i32_u8(memory_at_0,loc_7)==loc_9 then
desired=2 break end continue end if desired then if desired==3 then desired=nil
end break end break end if desired then if desired==2 then desired=nil end break
end FUNC_LIST[493](loc_6,loc_3,1063992)error('out of code bounds')end if desired
then if desired==1 then desired=nil end break end loc_7=1 break end store_i32(
memory_at_0,loc_0+4,loc_6)store_i32(memory_at_0,loc_0,loc_7)break end end
FUNC_LIST[534]=function(loc_0,loc_1)local loc_2=0 local loc_3=0 local loc_4=0
local reg_0 while true do loc_2=sub_i32(GLOBAL_LIST[0].value,128)GLOBAL_LIST[0].
value=loc_2 loc_3=load_i32_u8(memory_at_0,loc_0)loc_0=0 while true do loc_4=
band_i32(loc_3,15)store_i32_n8(memory_at_0,add_i32(add_i32(loc_2,loc_0),127),
add_i32((if loc_4<10 then 48 else 55),loc_4))loc_0=add_i32(loc_0,4294967295)
loc_4=band_i32(loc_3,255)loc_3=shr_u32(loc_4,4)if loc_4>=16 then continue end
break end while true do loc_3=add_i32(loc_0,128)if loc_3<=128 then break end
FUNC_LIST[491](loc_3,128,1063692)error('out of code bounds')end reg_0=FUNC_LIST[
500](loc_1,1,1063660,2,add_i32(add_i32(loc_2,loc_0),128),sub_i32(0,loc_0))loc_0=
reg_0 GLOBAL_LIST[0].value=add_i32(loc_2,128)reg_0=loc_0 break end return reg_0
end FUNC_LIST[535]=function(loc_0,loc_1)local loc_2=0 local loc_3=0 local loc_4=
0 local reg_0 local desired while true do loc_2=sub_i32(GLOBAL_LIST[0].value,128
)GLOBAL_LIST[0].value=loc_2 while true do while true do while true do while true
do while true do loc_3=load_i32(memory_at_0,loc_1+28)if band_i32(loc_3,16)~=0
then break end if band_i32(loc_3,32)~=0 then desired=4 break end reg_0=FUNC_LIST
[536](load_i64_u8(memory_at_0,loc_0),1,loc_1)loc_0=reg_0 desired=3 break end if
desired then if desired==4 then desired=nil end break end loc_3=load_i32_u8(
memory_at_0,loc_0)loc_0=0 while true do loc_4=band_i32(loc_3,15)store_i32_n8(
memory_at_0,add_i32(add_i32(loc_2,loc_0),127),add_i32((if loc_4<10 then 48 else
87),loc_4))loc_0=add_i32(loc_0,4294967295)loc_4=band_i32(loc_3,255)loc_3=
shr_u32(loc_4,4)if loc_4>=16 then continue end break end if desired then if
desired==4 then desired=nil end break end loc_3=add_i32(loc_0,128)if loc_3>128
then desired=2 break end reg_0=FUNC_LIST[500](loc_1,1,1063660,2,add_i32(add_i32(
loc_2,loc_0),128),sub_i32(0,loc_0))loc_0=reg_0 desired=3 break end if desired
then if desired==3 then desired=nil end break end loc_3=load_i32_u8(memory_at_0,
loc_0)loc_0=0 while true do loc_4=band_i32(loc_3,15)store_i32_n8(memory_at_0,
add_i32(add_i32(loc_2,loc_0),127),add_i32((if loc_4<10 then 48 else 55),loc_4))
loc_0=add_i32(loc_0,4294967295)loc_4=band_i32(loc_3,255)loc_3=shr_u32(loc_4,4)if
loc_4>=16 then continue end break end if desired then if desired==3 then desired
=nil end break end loc_3=add_i32(loc_0,128)if loc_3>128 then desired=1 break end
reg_0=FUNC_LIST[500](loc_1,1,1063660,2,add_i32(add_i32(loc_2,loc_0),128),
sub_i32(0,loc_0))loc_0=reg_0 break end if desired then if desired==2 then
desired=nil end break end GLOBAL_LIST[0].value=add_i32(loc_2,128)reg_0=loc_0
desired=0 break end if desired then if desired==1 then desired=nil end break end
FUNC_LIST[491](loc_3,128,1063692)error('out of code bounds')end if desired then
if desired==0 then desired=nil end break end FUNC_LIST[491](loc_3,128,1063692)
error('out of code bounds')end return reg_0 end FUNC_LIST[536]=function(loc_0,
loc_1,loc_2)local loc_3=0 local loc_4=0 local loc_5=i64_ZERO local loc_6=0 local
loc_7=0 local loc_8=0 local reg_0 local reg_1 local desired while true do loc_3=
sub_i32(GLOBAL_LIST[0].value,48)GLOBAL_LIST[0].value=loc_3 loc_4=39 while true
do while true do if ge_u64(loc_0,i64_from_u32(10000,0))then break end loc_5=
loc_0 desired=1 break end if desired then if desired==1 then desired=nil end
break end loc_4=39 while true do loc_6=add_i32(add_i32(loc_3,9),loc_4)loc_5=
div_u64(loc_0,i64_from_u32(10000,0))loc_7=wrap_i32_i64(sub_i64(loc_0,mul_i64(
loc_5,i64_from_u32(10000,0))))loc_8=div_u32(band_i32(loc_7,65535),100)
store_i32_n16(memory_at_0,add_i32(loc_6,4294967292),load_i32_u16(memory_at_0,
add_i32(shl_i32(loc_8,1),1063708)))store_i32_n16(memory_at_0,add_i32(loc_6,
4294967294),load_i32_u16(memory_at_0,add_i32(shl_i32(band_i32(sub_i32(loc_7,
mul_i32(loc_8,100)),65535),1),1063708)))loc_4=add_i32(loc_4,4294967292)loc_6=(if
gt_u64(loc_0,i64_from_u32(99999999,0))then 1 else 0)loc_0=loc_5 if loc_6~=0 then
continue end break end if desired then if desired==1 then desired=nil end break
end break end while true do loc_6=wrap_i32_i64(loc_5)if loc_6<=99 then break end
loc_4=add_i32(loc_4,4294967294)loc_6=wrap_i32_i64(loc_5)reg_1=loc_6 loc_6=
div_u32(band_i32(loc_6,65535),100)store_i32_n16(memory_at_0,add_i32(add_i32(
loc_3,9),loc_4),load_i32_u16(memory_at_0,add_i32(shl_i32(band_i32(sub_i32(reg_1,
mul_i32(loc_6,100)),65535),1),1063708)))break end while true do while true do if
loc_6<10 then break end loc_4=add_i32(loc_4,4294967294)store_i32_n16(memory_at_0
,add_i32(add_i32(loc_3,9),loc_4),load_i32_u16(memory_at_0,add_i32(shl_i32(loc_6,
1),1063708)))desired=1 break end if desired then if desired==1 then desired=nil
end break end loc_4=add_i32(loc_4,4294967295)store_i32_n8(memory_at_0,add_i32(
add_i32(loc_3,9),loc_4),add_i32(loc_6,48))break end reg_0=FUNC_LIST[500](loc_2,
loc_1,1063236,0,add_i32(add_i32(loc_3,9),loc_4),sub_i32(39,loc_4))loc_4=reg_0
GLOBAL_LIST[0].value=add_i32(loc_3,48)reg_0=loc_4 break end return reg_0 end
FUNC_LIST[537]=function(loc_0,loc_1)local loc_2=0 local loc_3=0 local loc_4=0
local reg_0 while true do loc_2=sub_i32(GLOBAL_LIST[0].value,128)GLOBAL_LIST[0].
value=loc_2 loc_0=load_i32(memory_at_0,loc_0)loc_3=0 while true do loc_4=
band_i32(loc_0,15)store_i32_n8(memory_at_0,add_i32(add_i32(loc_2,loc_3),127),
add_i32((if loc_4<10 then 48 else 55),loc_4))loc_3=add_i32(loc_3,4294967295)
loc_4=(if loc_0<16 then 1 else 0)loc_0=shr_u32(loc_0,4)if loc_4==0 then continue
end break end while true do loc_0=add_i32(loc_3,128)if loc_0<=128 then break end
FUNC_LIST[491](loc_0,128,1063692)error('out of code bounds')end reg_0=FUNC_LIST[
500](loc_1,1,1063660,2,add_i32(add_i32(loc_2,loc_3),128),sub_i32(0,loc_3))loc_0=
reg_0 GLOBAL_LIST[0].value=add_i32(loc_2,128)reg_0=loc_0 break end return reg_0
end FUNC_LIST[538]=function(loc_0,loc_1)local loc_2=0 local loc_3=i64_ZERO local
loc_4=0 local reg_0 while true do loc_2=sub_i32(GLOBAL_LIST[0].value,128)
GLOBAL_LIST[0].value=loc_2 loc_3=load_i64(memory_at_0,loc_0)loc_0=0 while true
do loc_4=band_i32(wrap_i32_i64(loc_3),15)store_i32_n8(memory_at_0,add_i32(
add_i32(loc_2,loc_0),127),add_i32((if loc_4<10 then 48 else 87),loc_4))loc_0=
add_i32(loc_0,4294967295)loc_4=(if lt_u64(loc_3,i64_from_u32(16,0))then 1 else 0
)loc_3=shr_u64(loc_3,i64_from_u32(4,0))if loc_4==0 then continue end break end
while true do loc_4=add_i32(loc_0,128)if loc_4<=128 then break end FUNC_LIST[491
](loc_4,128,1063692)error('out of code bounds')end reg_0=FUNC_LIST[500](loc_1,1,
1063660,2,add_i32(add_i32(loc_2,loc_0),128),sub_i32(0,loc_0))loc_0=reg_0
GLOBAL_LIST[0].value=add_i32(loc_2,128)reg_0=loc_0 break end return reg_0 end
FUNC_LIST[539]=function(loc_0,loc_1)local loc_2=0 local loc_3=i64_ZERO local
loc_4=0 local reg_0 while true do loc_2=sub_i32(GLOBAL_LIST[0].value,128)
GLOBAL_LIST[0].value=loc_2 loc_3=load_i64(memory_at_0,loc_0)loc_0=0 while true
do loc_4=band_i32(wrap_i32_i64(loc_3),15)store_i32_n8(memory_at_0,add_i32(
add_i32(loc_2,loc_0),127),add_i32((if loc_4<10 then 48 else 55),loc_4))loc_0=
add_i32(loc_0,4294967295)loc_4=(if lt_u64(loc_3,i64_from_u32(16,0))then 1 else 0
)loc_3=shr_u64(loc_3,i64_from_u32(4,0))if loc_4==0 then continue end break end
while true do loc_4=add_i32(loc_0,128)if loc_4<=128 then break end FUNC_LIST[491
](loc_4,128,1063692)error('out of code bounds')end reg_0=FUNC_LIST[500](loc_1,1,
1063660,2,add_i32(add_i32(loc_2,loc_0),128),sub_i32(0,loc_0))loc_0=reg_0
GLOBAL_LIST[0].value=add_i32(loc_2,128)reg_0=loc_0 break end return reg_0 end
FUNC_LIST[540]=function(loc_0,loc_1)local reg_0 local reg_1 while true do loc_0=
load_i32(memory_at_0,loc_0)reg_0=extend_i64_u32(loc_0)reg_1=sub_i64(i64_ZERO,
extend_i64_i32(loc_0))loc_0=(if gt_i32(loc_0,4294967295)then 1 else 0)reg_0=
FUNC_LIST[536]((if loc_0~=0 then reg_0 else reg_1),loc_0,loc_1)break end return
reg_0 end FUNC_LIST[541]=function(loc_0,loc_1)local reg_0 while true do reg_0=
TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(memory_at_0,add_i32(loc_1,24))+
12)](load_i32(memory_at_0,loc_1+20),1064404,5)break end return reg_0 end
FUNC_LIST[542]=function(loc_0,loc_1)local reg_0 while true do reg_0=FUNC_LIST[
535](load_i32(memory_at_0,loc_0),loc_1)break end return reg_0 end FUNC_LIST[543]
=function(loc_0,loc_1)local loc_2=0 local loc_3=0 local reg_0 local reg_1 local
desired while true do loc_2=sub_i32(GLOBAL_LIST[0].value,16)GLOBAL_LIST[0].value
=loc_2 while true do while true do loc_3=load_i32(memory_at_0,loc_0)if
load_i32_u8(memory_at_0,loc_3)~=0 then break end reg_0=TABLE_LIST[0].data[
load_i32(memory_at_0,load_i32(memory_at_0,add_i32(loc_1,24))+12)](load_i32(
memory_at_0,loc_1+20),1064380,4)loc_0=reg_0 desired=1 break end if desired then
if desired==1 then desired=nil end break end loc_0=1 store_i32(memory_at_0,loc_2
,add_i32(loc_3,1))reg_1=TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(
memory_at_0,add_i32(loc_1,24))+12)](load_i32(memory_at_0,loc_1+20),1064384,4)
store_i32_n8(memory_at_0,loc_2+12,reg_1)store_i32(memory_at_0,loc_2+8,loc_1)
store_i32_n8(memory_at_0,loc_2+13,0)store_i32(memory_at_0,loc_2+4,0)reg_0=
FUNC_LIST[519](add_i32(loc_2,4),loc_2,1063644)loc_1=reg_0 loc_3=load_i32_u8(
memory_at_0,loc_2+12)while true do loc_1=load_i32(memory_at_0,loc_1)if loc_1~=0
then break end loc_0=(if band_i32(loc_3,255)~=0 then 1 else 0)desired=1 break
end if desired then if desired==1 then desired=nil end break end if band_i32(
loc_3,255)~=0 then break end loc_3=load_i32(memory_at_0,loc_2+8)while true do if
loc_1~=1 then break end if band_i32(load_i32_u8(memory_at_0,loc_2+13),255)==0
then break end if band_i32(load_i32_u8(memory_at_0,loc_3+28),4)~=0 then break
end loc_0=1 reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(memory_at_0,
add_i32(loc_3,24))+12)](load_i32(memory_at_0,loc_3+20),1063640,1)if reg_0~=0
then desired=1 break end break end if desired then if desired==1 then desired=
nil end break end reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(
memory_at_0,add_i32(loc_3,24))+12)](load_i32(memory_at_0,loc_3+20),1063236,1)
loc_0=reg_0 break end GLOBAL_LIST[0].value=add_i32(loc_2,16)reg_0=loc_0 break
end return reg_0 end FUNC_LIST[544]=function(loc_0,loc_1)local loc_2=0 local
loc_3=0 local reg_0 local desired while true do loc_2=sub_i32(GLOBAL_LIST[0].
value,16)GLOBAL_LIST[0].value=loc_2 store_i32(memory_at_0,loc_2+4,add_i32(loc_0,
4))reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(memory_at_0,add_i32(
loc_1,24))+12)](load_i32(memory_at_0,loc_1+20),1064409,9)loc_3=reg_0
store_i32_n8(memory_at_0,loc_2+13,0)store_i32_n8(memory_at_0,loc_2+12,loc_3)
store_i32(memory_at_0,loc_2+8,loc_1)reg_0=FUNC_LIST[505](add_i32(loc_2,8),
1064418,11,loc_0,1064388)reg_0=FUNC_LIST[505](reg_0,1064429,9,add_i32(loc_2,4),
1064440)loc_3=reg_0 loc_0=load_i32_u8(memory_at_0,loc_2+12)while true do while
true do if load_i32_u8(memory_at_0,loc_2+13)~=0 then break end loc_1=(if
band_i32(loc_0,255)~=0 then 1 else 0)desired=1 break end if desired then if
desired==1 then desired=nil end break end loc_1=1 if band_i32(loc_0,255)~=0 then
break end while true do loc_1=load_i32(memory_at_0,loc_3)if band_i32(
load_i32_u8(memory_at_0,loc_1+28),4)~=0 then break end reg_0=TABLE_LIST[0].data[
load_i32(memory_at_0,load_i32(memory_at_0,loc_1+24)+12)](load_i32(memory_at_0,
loc_1+20),1063635,2)loc_1=reg_0 desired=1 break end if desired then if desired==
1 then desired=nil end break end reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,
load_i32(memory_at_0,loc_1+24)+12)](load_i32(memory_at_0,loc_1+20),1063634,1)
loc_1=reg_0 break end GLOBAL_LIST[0].value=add_i32(loc_2,16)reg_0=loc_1 break
end return reg_0 end FUNC_LIST[545]=function(loc_0,loc_1)local reg_0 while true
do reg_0=TABLE_LIST[0].data[load_i32(memory_at_0,load_i32(memory_at_0,add_i32(
loc_1,24))+12)](load_i32(memory_at_0,loc_1+20),1064456,11)break end return reg_0
end FUNC_LIST[546]=function(loc_0,loc_1,loc_2)local loc_3=0 local loc_4=0 local
loc_5=0 local loc_6=0 local loc_7=0 local loc_8=0 local loc_9=0 local loc_10=0
local reg_0 local reg_1 local desired while true do while true do while true do
if loc_2>15 then break end loc_3=loc_0 desired=1 break end if desired then if
desired==1 then desired=nil end break end loc_4=band_i32(sub_i32(0,loc_0),3)
loc_5=add_i32(loc_0,loc_4)while true do if loc_4==0 then break end loc_3=loc_0
loc_6=loc_1 while true do store_i32_n8(memory_at_0,loc_3,load_i32_u8(memory_at_0
,loc_6))loc_6=add_i32(loc_6,1)loc_3=add_i32(loc_3,1)if loc_3<loc_5 then continue
end break end if desired then if desired==2 then desired=nil end break end break
end if desired then if desired==1 then desired=nil end break end loc_7=sub_i32(
loc_2,loc_4)loc_8=band_i32(loc_7,4294967292)loc_3=add_i32(loc_5,loc_8)while true
do while true do loc_9=add_i32(loc_1,loc_4)if band_i32(loc_9,3)==0 then break
end if lt_i32(loc_8,1)then desired=2 break end loc_6=shl_i32(loc_9,3)loc_2=
band_i32(loc_6,24)loc_10=band_i32(loc_9,4294967292)loc_1=add_i32(loc_10,4)loc_4=
band_i32(sub_i32(0,loc_6),24)loc_6=load_i32(memory_at_0,loc_10)while true do
reg_1=shr_u32(loc_6,loc_2)loc_6=load_i32(memory_at_0,loc_1)store_i32(memory_at_0
,loc_5,bor_i32(reg_1,shl_i32(loc_6,loc_4)))loc_1=add_i32(loc_1,4)loc_5=add_i32(
loc_5,4)if loc_5<loc_3 then continue end desired=2 break end if desired then if
desired==3 then desired=nil end break end break end if desired then if desired==
2 then desired=nil end break end if lt_i32(loc_8,1)then break end loc_1=loc_9
while true do store_i32(memory_at_0,loc_5,load_i32(memory_at_0,loc_1))loc_1=
add_i32(loc_1,4)loc_5=add_i32(loc_5,4)if loc_5<loc_3 then continue end break end
if desired then if desired==2 then desired=nil end break end break end if
desired then if desired==1 then desired=nil end break end loc_2=band_i32(loc_7,3
)loc_1=add_i32(loc_9,loc_8)break end while true do if loc_2==0 then break end
loc_5=add_i32(loc_3,loc_2)while true do store_i32_n8(memory_at_0,loc_3,
load_i32_u8(memory_at_0,loc_1))loc_1=add_i32(loc_1,1)loc_3=add_i32(loc_3,1)if
loc_3<loc_5 then continue end break end if desired then if desired==1 then
desired=nil end break end break end reg_0=loc_0 break end return reg_0 end
FUNC_LIST[547]=function(loc_0,loc_1,loc_2)local loc_3=0 local loc_4=0 local
loc_5=0 local loc_6=0 local loc_7=0 local loc_8=0 local loc_9=0 local loc_10=0
local reg_0 local reg_1 local desired while true do while true do while true do
while true do while true do if sub_i32(loc_0,loc_1)>=loc_2 then break end loc_3=
add_i32(loc_1,loc_2)loc_4=add_i32(loc_0,loc_2)while true do if loc_2>15 then
break end loc_5=loc_0 desired=2 break end if desired then if desired==4 then
desired=nil end break end loc_5=band_i32(loc_4,4294967292)loc_6=band_i32(loc_4,3
)loc_7=sub_i32(0,loc_6)while true do if loc_6==0 then break end loc_8=add_i32(
add_i32(loc_1,loc_2),4294967295)while true do loc_4=add_i32(loc_4,4294967295)
store_i32_n8(memory_at_0,loc_4,load_i32_u8(memory_at_0,loc_8))loc_8=add_i32(
loc_8,4294967295)if loc_5<loc_4 then continue end break end if desired then if
desired==5 then desired=nil end break end break end if desired then if desired==
4 then desired=nil end break end loc_9=sub_i32(loc_2,loc_6)loc_6=band_i32(loc_9,
4294967292)loc_4=sub_i32(loc_5,loc_6)while true do loc_7=add_i32(loc_3,loc_7)if
band_i32(loc_7,3)==0 then break end if lt_i32(loc_6,1)then desired=3 break end
loc_8=shl_i32(loc_7,3)loc_2=band_i32(loc_8,24)loc_10=band_i32(loc_7,4294967292)
loc_1=add_i32(loc_10,4294967292)loc_3=band_i32(sub_i32(0,loc_8),24)loc_8=
load_i32(memory_at_0,loc_10)while true do loc_5=add_i32(loc_5,4294967292)reg_1=
shl_i32(loc_8,loc_3)loc_8=load_i32(memory_at_0,loc_1)store_i32(memory_at_0,loc_5
,bor_i32(reg_1,shr_u32(loc_8,loc_2)))loc_1=add_i32(loc_1,4294967292)if loc_4<
loc_5 then continue end desired=3 break end if desired then if desired==5 then
desired=nil end break end break end if desired then if desired==4 then desired=
nil end break end if lt_i32(loc_6,1)then desired=3 break end loc_1=add_i32(
add_i32(loc_9,loc_1),4294967292)while true do loc_5=add_i32(loc_5,4294967292)
store_i32(memory_at_0,loc_5,load_i32(memory_at_0,loc_1))loc_1=add_i32(loc_1,
4294967292)if loc_4<loc_5 then continue end desired=3 break end if desired then
if desired==4 then desired=nil end break end break end if desired then if
desired==3 then desired=nil end break end while true do while true do if loc_2>
15 then break end loc_4=loc_0 desired=4 break end if desired then if desired==4
then desired=nil end break end loc_3=band_i32(sub_i32(0,loc_0),3)loc_5=add_i32(
loc_0,loc_3)while true do if loc_3==0 then break end loc_4=loc_0 loc_8=loc_1
while true do store_i32_n8(memory_at_0,loc_4,load_i32_u8(memory_at_0,loc_8))
loc_8=add_i32(loc_8,1)loc_4=add_i32(loc_4,1)if loc_4<loc_5 then continue end
break end if desired then if desired==5 then desired=nil end break end break end
if desired then if desired==4 then desired=nil end break end loc_9=sub_i32(loc_2
,loc_3)loc_6=band_i32(loc_9,4294967292)loc_4=add_i32(loc_5,loc_6)while true do
while true do loc_7=add_i32(loc_1,loc_3)if band_i32(loc_7,3)==0 then break end
if lt_i32(loc_6,1)then desired=5 break end loc_8=shl_i32(loc_7,3)loc_2=band_i32(
loc_8,24)loc_10=band_i32(loc_7,4294967292)loc_1=add_i32(loc_10,4)loc_3=band_i32(
sub_i32(0,loc_8),24)loc_8=load_i32(memory_at_0,loc_10)while true do reg_1=
shr_u32(loc_8,loc_2)loc_8=load_i32(memory_at_0,loc_1)store_i32(memory_at_0,loc_5
,bor_i32(reg_1,shl_i32(loc_8,loc_3)))loc_1=add_i32(loc_1,4)loc_5=add_i32(loc_5,4
)if loc_5<loc_4 then continue end desired=5 break end if desired then if desired
==6 then desired=nil end break end break end if desired then if desired==5 then
desired=nil end break end if lt_i32(loc_6,1)then break end loc_1=loc_7 while
true do store_i32(memory_at_0,loc_5,load_i32(memory_at_0,loc_1))loc_1=add_i32(
loc_1,4)loc_5=add_i32(loc_5,4)if loc_5<loc_4 then continue end break end if
desired then if desired==5 then desired=nil end break end break end if desired
then if desired==4 then desired=nil end break end loc_2=band_i32(loc_9,3)loc_1=
add_i32(loc_7,loc_6)break end if desired then if desired==3 then desired=nil end
break end if loc_2==0 then desired=1 break end loc_5=add_i32(loc_4,loc_2)while
true do store_i32_n8(memory_at_0,loc_4,load_i32_u8(memory_at_0,loc_1))loc_1=
add_i32(loc_1,1)loc_4=add_i32(loc_4,1)if loc_4<loc_5 then continue end desired=1
break end if desired then if desired==3 then desired=nil end break end break end
if desired then if desired==2 then desired=nil end break end loc_1=band_i32(
loc_9,3)if loc_1==0 then desired=1 break end loc_3=add_i32(loc_7,sub_i32(0,loc_6
))loc_5=sub_i32(loc_4,loc_1)break end if desired then if desired==1 then desired
=nil end break end loc_1=add_i32(loc_3,4294967295)while true do loc_4=add_i32(
loc_4,4294967295)store_i32_n8(memory_at_0,loc_4,load_i32_u8(memory_at_0,loc_1))
loc_1=add_i32(loc_1,4294967295)if loc_5<loc_4 then continue end break end if
desired then if desired==1 then desired=nil end break end break end reg_0=loc_0
break end return reg_0 end FUNC_LIST[548]=function(loc_0,loc_1,loc_2)local loc_3
=0 local loc_4=0 local loc_5=0 local reg_0 local desired while true do while
true do while true do if loc_2>15 then break end loc_3=loc_0 desired=1 break end
if desired then if desired==1 then desired=nil end break end loc_4=band_i32(
sub_i32(0,loc_0),3)loc_5=add_i32(loc_0,loc_4)while true do if loc_4==0 then
break end loc_3=loc_0 while true do store_i32_n8(memory_at_0,loc_3,loc_1)loc_3=
add_i32(loc_3,1)if loc_3<loc_5 then continue end break end if desired then if
desired==2 then desired=nil end break end break end if desired then if desired==
1 then desired=nil end break end loc_4=sub_i32(loc_2,loc_4)loc_2=band_i32(loc_4,
4294967292)loc_3=add_i32(loc_5,loc_2)while true do if lt_i32(loc_2,1)then break
end loc_2=mul_i32(band_i32(loc_1,255),16843009)while true do store_i32(
memory_at_0,loc_5,loc_2)loc_5=add_i32(loc_5,4)if loc_5<loc_3 then continue end
break end if desired then if desired==2 then desired=nil end break end break end
if desired then if desired==1 then desired=nil end break end loc_2=band_i32(
loc_4,3)break end while true do if loc_2==0 then break end loc_5=add_i32(loc_3,
loc_2)while true do store_i32_n8(memory_at_0,loc_3,loc_1)loc_3=add_i32(loc_3,1)
if loc_3<loc_5 then continue end break end if desired then if desired==1 then
desired=nil end break end break end reg_0=loc_0 break end return reg_0 end
FUNC_LIST[549]=function(loc_0,loc_1,loc_2)local reg_0 while true do reg_0=
FUNC_LIST[547](loc_0,loc_1,loc_2)break end return reg_0 end FUNC_LIST[550]=
function(loc_0,loc_1,loc_2)local reg_0 while true do reg_0=FUNC_LIST[546](loc_0,
loc_1,loc_2)break end return reg_0 end FUNC_LIST[551]=function(loc_0,loc_1,loc_2
)local reg_0 while true do reg_0=FUNC_LIST[548](loc_0,loc_1,loc_2)break end
return reg_0 end FUNC_LIST[552]=function(loc_0,loc_1,loc_2,loc_3,loc_4)local
loc_5=i64_ZERO local loc_6=i64_ZERO local loc_7=i64_ZERO local loc_8=i64_ZERO
local loc_9=i64_ZERO local loc_10=i64_ZERO while true do loc_5=band_i64(loc_3,
i64_from_u32(4294967295,0))loc_6=band_i64(loc_1,i64_from_u32(4294967295,0))loc_7
=mul_i64(loc_5,loc_6)loc_8=shr_u64(loc_3,i64_from_u32(32,0))loc_6=mul_i64(loc_8,
loc_6)loc_9=shr_u64(loc_1,i64_from_u32(32,0))loc_5=add_i64(loc_6,mul_i64(loc_5,
loc_9))loc_10=add_i64(loc_7,shl_i64(loc_5,i64_from_u32(32,0)))store_i64(
memory_at_0,loc_0,loc_10)store_i64(memory_at_0,loc_0+8,add_i64(add_i64(add_i64(
mul_i64(loc_8,loc_9),bor_i64(shl_i64(extend_i64_u32((if lt_u64(loc_5,loc_6)then
1 else 0)),i64_from_u32(32,0)),shr_u64(loc_5,i64_from_u32(32,0)))),
extend_i64_u32((if lt_u64(loc_10,loc_7)then 1 else 0))),add_i64(mul_i64(loc_4,
loc_1),mul_i64(loc_3,loc_2))))break end end local function run_init_code()
TABLE_LIST[0]={min=231,max=231,data={}}MEMORY_LIST[0]=rt.allocator.new(17,65535)
GLOBAL_LIST[0]={value=1048576}GLOBAL_LIST[1]={value=1065632}GLOBAL_LIST[2]={
value=1065632}do local target=TABLE_LIST[0].data local offset=1 local data={
FUNC_LIST[44],FUNC_LIST[39],FUNC_LIST[32],FUNC_LIST[31],FUNC_LIST[544],FUNC_LIST
[35],FUNC_LIST[33],FUNC_LIST[34],FUNC_LIST[40],FUNC_LIST[134],FUNC_LIST[137],
FUNC_LIST[136],FUNC_LIST[135],FUNC_LIST[105],FUNC_LIST[110],FUNC_LIST[107],
FUNC_LIST[100],FUNC_LIST[104],FUNC_LIST[541],FUNC_LIST[103],FUNC_LIST[109],
FUNC_LIST[106],FUNC_LIST[108],FUNC_LIST[101],FUNC_LIST[102],FUNC_LIST[123],
FUNC_LIST[439],FUNC_LIST[122],FUNC_LIST[374],FUNC_LIST[539],FUNC_LIST[538],
FUNC_LIST[121],FUNC_LIST[496],FUNC_LIST[513],FUNC_LIST[307],FUNC_LIST[503],
FUNC_LIST[182],FUNC_LIST[196],FUNC_LIST[324],FUNC_LIST[224],FUNC_LIST[321],
FUNC_LIST[259],FUNC_LIST[202],FUNC_LIST[270],FUNC_LIST[285],FUNC_LIST[251],
FUNC_LIST[265],FUNC_LIST[226],FUNC_LIST[304],FUNC_LIST[212],FUNC_LIST[278],
FUNC_LIST[300],FUNC_LIST[260],FUNC_LIST[250],FUNC_LIST[295],FUNC_LIST[244],
FUNC_LIST[327],FUNC_LIST[222],FUNC_LIST[319],FUNC_LIST[238],FUNC_LIST[276],
FUNC_LIST[183],FUNC_LIST[237],FUNC_LIST[271],FUNC_LIST[280],FUNC_LIST[320],
FUNC_LIST[293],FUNC_LIST[218],FUNC_LIST[267],FUNC_LIST[233],FUNC_LIST[223],
FUNC_LIST[248],FUNC_LIST[192],FUNC_LIST[201],FUNC_LIST[205],FUNC_LIST[217],
FUNC_LIST[328],FUNC_LIST[306],FUNC_LIST[294],FUNC_LIST[210],FUNC_LIST[242],
FUNC_LIST[253],FUNC_LIST[274],FUNC_LIST[227],FUNC_LIST[289],FUNC_LIST[229],
FUNC_LIST[206],FUNC_LIST[286],FUNC_LIST[211],FUNC_LIST[216],FUNC_LIST[254],
FUNC_LIST[322],FUNC_LIST[272],FUNC_LIST[325],FUNC_LIST[194],FUNC_LIST[287],
FUNC_LIST[199],FUNC_LIST[264],FUNC_LIST[269],FUNC_LIST[209],FUNC_LIST[275],
FUNC_LIST[326],FUNC_LIST[221],FUNC_LIST[197],FUNC_LIST[214],FUNC_LIST[232],
FUNC_LIST[207],FUNC_LIST[323],FUNC_LIST[252],FUNC_LIST[290],FUNC_LIST[262],
FUNC_LIST[258],FUNC_LIST[230],FUNC_LIST[284],FUNC_LIST[198],FUNC_LIST[273],
FUNC_LIST[190],FUNC_LIST[203],FUNC_LIST[246],FUNC_LIST[188],FUNC_LIST[243],
FUNC_LIST[263],FUNC_LIST[191],FUNC_LIST[187],FUNC_LIST[283],FUNC_LIST[281],
FUNC_LIST[299],FUNC_LIST[195],FUNC_LIST[296],FUNC_LIST[239],FUNC_LIST[200],
FUNC_LIST[256],FUNC_LIST[279],FUNC_LIST[231],FUNC_LIST[277],FUNC_LIST[288],
FUNC_LIST[228],FUNC_LIST[268],FUNC_LIST[255],FUNC_LIST[215],FUNC_LIST[193],
FUNC_LIST[261],FUNC_LIST[247],FUNC_LIST[245],FUNC_LIST[240],FUNC_LIST[249],
FUNC_LIST[225],FUNC_LIST[266],FUNC_LIST[298],FUNC_LIST[302],FUNC_LIST[241],
FUNC_LIST[301],FUNC_LIST[235],FUNC_LIST[257],FUNC_LIST[303],FUNC_LIST[297],
FUNC_LIST[185],FUNC_LIST[213],FUNC_LIST[305],FUNC_LIST[236],FUNC_LIST[234],
FUNC_LIST[537],FUNC_LIST[534],FUNC_LIST[378],FUNC_LIST[132],FUNC_LIST[131],
FUNC_LIST[390],FUNC_LIST[393],FUNC_LIST[395],FUNC_LIST[396],FUNC_LIST[391],
FUNC_LIST[397],FUNC_LIST[398],FUNC_LIST[399],FUNC_LIST[540],FUNC_LIST[435],
FUNC_LIST[408],FUNC_LIST[440],FUNC_LIST[454],FUNC_LIST[416],FUNC_LIST[431],
FUNC_LIST[423],FUNC_LIST[427],FUNC_LIST[432],FUNC_LIST[426],FUNC_LIST[429],
FUNC_LIST[430],FUNC_LIST[424],FUNC_LIST[428],FUNC_LIST[407],FUNC_LIST[418],
FUNC_LIST[502],FUNC_LIST[421],FUNC_LIST[446],FUNC_LIST[411],FUNC_LIST[413],
FUNC_LIST[447],FUNC_LIST[409],FUNC_LIST[414],FUNC_LIST[419],FUNC_LIST[405],
FUNC_LIST[406],FUNC_LIST[459],FUNC_LIST[460],FUNC_LIST[420],FUNC_LIST[457],
FUNC_LIST[458],FUNC_LIST[404],FUNC_LIST[470],FUNC_LIST[475],FUNC_LIST[472],
FUNC_LIST[474],FUNC_LIST[471],FUNC_LIST[545],FUNC_LIST[487],FUNC_LIST[515],
FUNC_LIST[508],FUNC_LIST[516],FUNC_LIST[489],FUNC_LIST[501],FUNC_LIST[488],
FUNC_LIST[517],FUNC_LIST[520],FUNC_LIST[521],FUNC_LIST[542],FUNC_LIST[522],
FUNC_LIST[523],FUNC_LIST[524],FUNC_LIST[498],FUNC_LIST[543]}table.move(data,1,#
data,offset,target)end rt.store.string(MEMORY_LIST[0],1048576,
'\2\0\0\0\4\0\0\0\4\0\0\0\3\0\0\0\4\0\0\0\4\0\0\0called `Result::unwrap()` on an `Err` value\0\2\0\0\0\b\0\0\0\4\0\0\0\5\0\0\0\6\0\0\0X\u{93}\0\0\b\0\0\0\a\0\0\0\b\0\0\0\n\0\0\0\0\0\0\0linux emulator\n\0 \6\0\0\2\0\0\0\1\0\0\0\t\0\0\0\24\0\0\0\4\0\0\0\n\0\0\0\v\0\0\0\f\0\0\0\r\0\0\0https://takahirox.github.io/riscv-rust/resources/linux/rootfs.imghttps://takahirox.github.io/riscv-rust/resources/linux/opensbi/fw_payload.elfexamples/test.rs\0\06\1\16\0\16\0\0\0>\0\0\06\0\0\0called `Option::unwrap()` on a `None` value./target/wasm32-unknown-unknown/release/build/roblox_rs-b3864986c7f5a702/out/generated.rsTextBoxSurfaceGuiHttpService\u{83}\1\16\0Y\0\0\0\u{90}\u{87}\0\0\1\0\0\0ScriptPartWorkspace\0\u{83}\1\16\0Y\0\0\0\u{d4}\u{87}\0\0\1\0\0\0RunService\0\0\u{83}\1\16\0Y\0\0\0\u{fd}\u{87}\0\0\1\0\0\0\14\0\0\0\f\0\0\0\4\0\0\0\15\0\0\0\16\0\0\0\17\0\0\0a Display implementation returned an error unexpectedly\0\18\0\0\0\0\0\0\0\1\0\0\0\19\0\0\0/rustc/1b198b3a196442e14fb06978166ab46a4618d131/library/alloc/src/string.rs\0\u{a8}\2\16\0K\0\0\0\u{9c}\t\0\0\14\0\0\0\20\0\0\0\4\0\0\0\4\0\0\0\21\0\0\0\22\0\0\0\23\0\0\0\18\0\0\0\0\0\0\0\1\0\0\0\24\0\0\0\25\0\0\0\25\0\0\0cannot access a Thread Local Storage value during or after destruction\0\0\26\0\0\0\0\0\0\0\1\0\0\0\27\0\0\0/rustc/1b198b3a196442e14fb06978166ab46a4618d131/library/std/src/thread/local.rs\0\u{8c}\3\16\0O\0\0\0\u{f6}\0\0\0\26\0\0\0\28\0\0\0\b\0\0\0\4\0\0\0\29\0\0\0~/.cargo/registry/src/index.crates.io-6f17d22bba15001f/riscv_emu_rust-0.2.0/src/default_terminal.rs\0\u{fc}\3\16\0c\0\0\0\25\0\0\0%\0\0\0\u{fc}\3\16\0c\0\0\0$\0\0\0&\0\0\0~/.cargo/registry/src/index.crates.io-6f17d22bba15001f/riscv_emu_rust-0.2.0/src/memory.rs\0\0\0\u{80}\4\16\0Y\0\0\0!\0\0\0\19\0\0\0\u{80}\4\16\0Y\0\0\0,\0\0\0\23\0\0\0\u{80}\4\16\0Y\0\0\0:\0\0\0\23\0\0\0\u{80}\4\16\0Y\0\0\0G\0\0\0\22\0\0\0\u{80}\4\16\0Y\0\0\0d\0\0\0&\0\0\0\u{80}\4\16\0Y\0\0\0d\0\0\0\18\0\0\0\u{80}\4\16\0Y\0\0\0p\0\0\0*\0\0\0\u{80}\4\16\0Y\0\0\0p\0\0\0\22\0\0\0\u{80}\4\16\0Y\0\0\0\127\0\0\0*\0\0\0\u{80}\4\16\0Y\0\0\0\127\0\0\0\22\0\0\0\u{80}\4\16\0Y\0\0\0\u{8d}\0\0\0\22\0\0\0~/.cargo/registry/src/index.crates.io-6f17d22bba15001f/riscv_emu_rust-0.2.0/src/mmu.rsWidth must be 1, 2, 4, or 8. \0\u{e2}\5\16\0\29\0\0\0\u{8c}\5\16\0V\0\0\0\u{f3}\0\0\0\30\0\0\0\u{8c}\5\16\0V\0\0\0\u{e7}\0\0\0\t\0\0\0\u{8c}\5\16\0V\0\0\0U\1\0\0\30\0\0\0\u{8c}\5\16\0V\0\0\0I\1\0\0\t\0\0\0Unknown memory mapping .H\6\16\0\23\0\0\0_\6\16\0\1\0\0\0\u{8c}\5\16\0V\0\0\0\u{9b}\1\0\0\22\0\0\0\u{8c}\5\16\0V\0\0\0\u{96}\1\0\04\0\0\0\u{8c}\5\16\0V\0\0\0\u{ec}\1\0\0\22\0\0\0AddressingMode SV48 is not supported yet.\0\0\0\u{8c}\5\16\0V\0\0\0W\2\0\0\17\0\0\0\u{8c}\5\16\0V\0\0\0c\2\0\03\0\0\0explicit panic\0\0\u{8c}\5\16\0V\0\0\0\u{b3}\2\0\0\22\0\0\0\u{8c}\5\16\0V\0\0\0\u{c3}\2\0\0\22\0\0\0\u{8c}\5\16\0V\0\0\0o\2\0\0\18\0\0\0Memory address must equals to or bigger than DRAM_BASE. ,\a\16\08\0\0\0\u{8c}\5\16\0V\0\0\0\u{ec}\2\0\0\t\0\0\0\u{8c}\5\16\0V\0\0\0\u{f1}\2\0\0\t\0\0\0\u{8c}\5\16\0V\0\0\0\u{f7}\2\0\0\t\0\0\0\u{8c}\5\16\0V\0\0\0\u{fd}\2\0\0\t\0\0\0\u{8c}\5\16\0V\0\0\0\3\3\0\0\t\0\0\0\u{8c}\5\16\0V\0\0\0\b\3\0\0\t\0\0\0\u{8c}\5\16\0V\0\0\0\14\3\0\0\t\0\0\0\u{8c}\5\16\0V\0\0\0\20\3\0\0\t\0\0\0\u{d0}\r\u{fe}\u{ed}\0\0\6>\0\0\08\0\0\5<\0\0\0(\0\0\0\17\0\0\0\16\0\0\0\0\0\0\1\2\0\0\5\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\1\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0\0\0\0\0\2\0\0\0\3\0\0\0\4\0\0\0\15\0\0\0\2\0\0\0\3\0\0\0\r\0\0\0\27riscv-virtio\0\0\0\0\0\0\0\3\0\0\0\18\0\0\0&riscv-virtio,qemu\0\0\0\0\0\0\1chosen\0\0\0\0\0\3\0\0\0\31\0\0\0,root=/dev/vda ro console=tty50\0\0\0\0\0\3\0\0\0\15\0\0\05/uart@10000000\0\0\0\0\0\2\0\0\0\1uart@10000000\0\0\0\0\0\0\3\0\0\0\4\0\0\0A\0\0\0\n\0\0\0\3\0\0\0\4\0\0\0L\0\0\0\3\0\0\0\3\0\0\0\4\0\0\0]\08@\0\0\0\0\3\0\0\0\16\0\0\0m\0\0\0\0\16\0\0\0\0\0\0\0\0\0\1\0\0\0\0\3\0\0\0\t\0\0\0\27ns16550a\0\0\0\0\0\0\0\2\0\0\0\1virtio_mmio@10001000\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0A\0\0\0\1\0\0\0\3\0\0\0\4\0\0\0L\0\0\0\3\0\0\0\3\0\0\0\16\0\0\0m\0\0\0\0\16\0\16\0\0\0\0\0\0\0\16\0\0\0\0\3\0\0\0\f\0\0\0\27virtio,mmio\0\0\0\0\2\0\0\0\1cpus\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0\0\0\0\0\1\0\0\0\3\0\0\0\4\0\0\0\15\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0q\0\u{98}\u{96}\u{80}\0\0\0\1cpu-map\0\0\0\0\1cluster0\0\0\0\0\0\0\0\1core0\0\0\0\0\0\0\3\0\0\0\4\0\0\0\u{84}\0\0\0\1\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\1cpu@0\0\0\0\0\0\0\3\0\0\0\4\0\0\0\u{88}\0\0\0\1\0\0\0\3\0\0\0\4\0\0\0\u{90}cpu\0\0\0\0\3\0\0\0\4\0\0\0m\0\0\0\0\0\0\0\3\0\0\0\5\0\0\0\u{9c}okay\0\0\0\0\0\0\0\3\0\0\0\6\0\0\0\27riscv\0\0\0\0\0\0\3\0\0\0\r\0\0\0\u{a3}rv64imafdcsu\0\0\0\0\0\0\0\3\0\0\0\v\0\0\0\u{ad}riscv,sv39\0\0\0\0\0\1interrupt-controller\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0\u{b6}\0\0\0\1\0\0\0\3\0\0\0\0\0\0\0\u{c7}\0\0\0\3\0\0\0\15\0\0\0\27riscv,cpu-intc\0\0\0\0\0\3\0\0\0\4\0\0\0\u{88}\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\1memory@80000000\0\0\0\0\3\0\0\0\a\0\0\0\u{90}memory\0\0\0\0\0\3\0\0\0\16\0\0\0m\0\0\0\0\u{80}\0\0\0\0\0\0\0\b\0\0\0\0\0\0\2\0\0\0\1soc\0\0\0\0\3\0\0\0\4\0\0\0\0\0\0\0\2\0\0\0\3\0\0\0\4\0\0\0\15\0\0\0\2\0\0\0\3\0\0\0\v\0\0\0\27simple-bus\0\0\0\0\0\3\0\0\0\0\0\0\0\u{dc}\0\0\0\1interrupt-controller@c000000\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0\u{88}\0\0\0\3\0\0\0\3\0\0\0\4\0\0\0\u{e3}\0\0\05\0\0\0\3\0\0\0\16\0\0\0m\0\0\0\0\f\0\0\0\0\0\0\0\4\0\0\0\0\0\0\3\0\0\0\16\0\0\0\u{ee}\0\0\0\2\0\0\0\v\0\0\0\2\0\0\0\t\0\0\0\3\0\0\0\0\0\0\0\u{c7}\0\0\0\3\0\0\0\f\0\0\0\27riscv,plic0\0\0\0\0\3\0\0\0\4\0\0\0\u{b6}\0\0\0\1\0\0\0\3\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\2\0\0\0\1clint@2000000\0\0\0\0\0\0\3\0\0\0\16\0\0\0\u{ee}\0\0\0\2\0\0\0\3\0\0\0\2\0\0\0\a\0\0\0\3\0\0\0\16\0\0\0m\0\0\0\0\2\0\0\0\0\0\0\0\0\1\0\0\0\0\0\3\0\0\0\r\0\0\0\27riscv,clint0\0\0\0\0\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\t#address-cells\0#size-cells\0compatible\0model\0bootargs\0stdout-path\0interrupts\0interrupt-parent\0clock-frequency\0reg\0timebase-frequency\0cpu\0phandle\0device_type\0status\0riscv,isa\0mmu-type\0#interrupt-cells\0interrupt-controller\0ranges\0riscv,ndev\0interrupts-extended\0\0\0\u{8c}\5\16\0V\0\0\0\u{88}\3\0\0\f\0\0\0\u{8c}\5\16\0V\0\0\0\u{89}\3\0\0\f\0\0\0\u{8c}\5\16\0V\0\0\0\u{8a}\3\0\0\f\0\0\0\u{8c}\5\16\0V\0\0\0\u{8b}\3\0\0\f\0\0\0%\0\0\0\u{ff}\u{ff}\u{ff}\u{ff}\u{ff}\u{ff}\u{ff}\u{ff}explicit panic~/.cargo/registry/src/index.crates.io-6f17d22bba15001f/riscv_emu_rust-0.2.0/src/cpu.rs\u{86}\14\16\0V\0\0\0\u{8a}\0\0\0$\0\0\0Unknown instruction PC: WORD:\0\0\0\u{ec}\14\16\0\23\0\0\0\3\15\16\0\6\0\0\0\u{86}\14\16\0V\0\0\0.\1\0\0\17\0\0\0\u{86}\14\16\0V\0\0\0=\1\0\0\25\0\0\0ADDADDIADDIWADDWAMOADD.DAMOADD.WAMOAND.DAMOAND.WAMOMAXU.DAMOMAXU.WAMOOR.DAMOOR.WAMOSWAP.DAMOSWAP.WANDANDIAUIPCBEQBGEBGEUBLTBLTUBNECSRRCCSRRCICSRRSCSRRSICSRRWCSRRWIDIVDIVUDIVUWDIVWEBREAKECALLFADD.DFCVT.D.LFCVT.D.SFCVT.D.WFCVT.D.WUFCVT.S.DFCVT.W.DFDIV.DFENCEFENCE.IFEQ.DFLDFLE.DFLT.DFLWFMADD.DFMUL.DFMV.D.XFMV.X.DFMV.X.WFMV.W.XFNMSUB.DFSDFSGNJ.DFSGNJX.DFSUB.DFSWJALJALRLBLBULDLHLHULR.DLR.WLUILWLWUMULMULHMULHUMULHSUMULWMRETORORIREMREMUREMUWREMWSBSC.DSC.WSDSFENCE.VMASHSLLSLLISLLIWSLLWSLTSLTISLTIUSLTUSRASRAISRAIWSRAWSRETSRLSRLISRLIWSRLWSUBSUBWSWURETWFIXORXORI\0\0\0<\15\16\0\3\0\0\0&\0\0\0\'\0\0\0\127p\0\u{fe}3\0\0\0?\15\16\0\4\0\0\0(\0\0\0)\0\0\0\127p\0\0\19\0\0\0C\15\16\0\5\0\0\0*\0\0\0)\0\0\0\127p\0\0\27\0\0\0H\15\16\0\4\0\0\0+\0\0\0\'\0\0\0\127p\0\u{fe};\0\0\0L\15\16\0\b\0\0\0,\0\0\0\'\0\0\0\127p\0\u{f8}/0\0\0T\15\16\0\b\0\0\0-\0\0\0\'\0\0\0\127p\0\u{f8}/ \0\0\\\15\16\0\b\0\0\0.\0\0\0\'\0\0\0\127p\0\u{f8}/0\0`d\15\16\0\b\0\0\0/\0\0\0\'\0\0\0\127p\0\u{f8}/ \0`l\15\16\0\t\0\0\00\0\0\0\'\0\0\0\127p\0\u{f8}/0\0\u{e0}u\15\16\0\t\0\0\01\0\0\0\'\0\0\0\127p\0\u{f8}/ \0\u{e0}~\15\16\0\a\0\0\02\0\0\0\'\0\0\0\127p\0\u{f8}/0\0@\u{85}\15\16\0\a\0\0\03\0\0\0\'\0\0\0\127p\0\u{f8}/ \0@\u{8c}\15\16\0\t\0\0\04\0\0\0\'\0\0\0\127p\0\u{f8}/0\0\b\u{95}\15\16\0\t\0\0\05\0\0\0\'\0\0\0\127p\0\u{f8}/ \0\b\u{9e}\15\16\0\3\0\0\06\0\0\0\'\0\0\0\127p\0\u{fe}3p\0\0\u{a1}\15\16\0\4\0\0\07\0\0\0)\0\0\0\127p\0\0\19p\0\0\u{a5}\15\16\0\5\0\0\08\0\0\09\0\0\0\127\0\0\0\23\0\0\0\u{aa}\15\16\0\3\0\0\0:\0\0\0;\0\0\0\127p\0\0c\0\0\0\u{ad}\15\16\0\3\0\0\0<\0\0\0;\0\0\0\127p\0\0cP\0\0\u{b0}\15\16\0\4\0\0\0=\0\0\0;\0\0\0\127p\0\0cp\0\0\u{b4}\15\16\0\3\0\0\0>\0\0\0;\0\0\0\127p\0\0c@\0\0\u{b7}\15\16\0\4\0\0\0?\0\0\0;\0\0\0\127p\0\0c`\0\0\u{bb}\15\16\0\3\0\0\0@\0\0\0;\0\0\0\127p\0\0c\16\0\0\u{be}\15\16\0\5\0\0\0A\0\0\0B\0\0\0\127p\0\0s0\0\0\u{c3}\15\16\0\6\0\0\0C\0\0\0B\0\0\0\127p\0\0sp\0\0\u{c9}\15\16\0\5\0\0\0D\0\0\0B\0\0\0\127p\0\0s \0\0\u{ce}\15\16\0\6\0\0\0E\0\0\0B\0\0\0\127p\0\0s`\0\0\u{d4}\15\16\0\5\0\0\0F\0\0\0B\0\0\0\127p\0\0s\16\0\0\u{d9}\15\16\0\6\0\0\0G\0\0\0B\0\0\0\127p\0\0sP\0\0\u{df}\15\16\0\3\0\0\0H\0\0\0\'\0\0\0\127p\0\u{fe}3@\0\2\u{e2}\15\16\0\4\0\0\0I\0\0\0\'\0\0\0\127p\0\u{fe}3P\0\2\u{e6}\15\16\0\5\0\0\0J\0\0\0\'\0\0\0\127p\0\u{fe};P\0\2\u{eb}\15\16\0\4\0\0\0K\0\0\0\'\0\0\0\127p\0\u{fe};@\0\2\u{ef}\15\16\0\6\0\0\0L\0\0\0M\0\0\0\u{ff}\u{ff}\u{ff}\u{ff}s\0\16\0\u{f5}\15\16\0\5\0\0\0N\0\0\0M\0\0\0\u{ff}\u{ff}\u{ff}\u{ff}s\0\0\0\u{fa}\15\16\0\6\0\0\0O\0\0\0\'\0\0\0\127\0\0\u{fe}S\0\0\2\0\16\16\0\b\0\0\0P\0\0\0\'\0\0\0\127\0\u{f0}\u{ff}S\0 \u{d2}\b\16\16\0\b\0\0\0Q\0\0\0\'\0\0\0\127\0\u{f0}\u{ff}S\0\0B\16\16\16\0\b\0\0\0R\0\0\0\'\0\0\0\127\0\u{f0}\u{ff}S\0\0\u{d2}\24\16\16\0\t\0\0\0S\0\0\0\'\0\0\0\127\0\u{f0}\u{ff}S\0\16\u{d2}!\16\16\0\b\0\0\0T\0\0\0\'\0\0\0\127\0\u{f0}\u{ff}S\0\16@)\16\16\0\b\0\0\0U\0\0\0\'\0\0\0\127\0\u{f0}\u{ff}S\0\0\u{c2}1\16\16\0\6\0\0\0V\0\0\0\'\0\0\0\127\0\0\u{fe}S\0\0\267\16\16\0\5\0\0\0L\0\0\0M\0\0\0\127p\0\0\15\0\0\0<\16\16\0\a\0\0\0L\0\0\0M\0\0\0\127p\0\0\15\16\0\0C\16\16\0\5\0\0\0W\0\0\0M\0\0\0\127p\0\u{fe}S \0\u{a2}H\16\16\0\3\0\0\0X\0\0\0)\0\0\0\127p\0\0\a0\0\0K\16\16\0\5\0\0\0Y\0\0\0\'\0\0\0\127p\0\u{fe}S\0\0\u{a2}P\16\16\0\5\0\0\0Z\0\0\0\'\0\0\0\127p\0\u{fe}S\16\0\u{a2}U\16\16\0\3\0\0\0[\0\0\0\\\0\0\0\127p\0\0\a \0\0X\16\16\0\a\0\0\0]\0\0\0^\0\0\0\127\0\0\6C\0\0\2_\16\16\0\6\0\0\0_\0\0\0\'\0\0\0\127\0\0\u{fe}S\0\0\18e\16\16\0\a\0\0\0`\0\0\0\'\0\0\0\127p\u{f0}\u{ff}S\0\0\u{f2}l\16\16\0\a\0\0\0a\0\0\0\'\0\0\0\127p\u{f0}\u{ff}S\0\0\u{e2}s\16\16\0\a\0\0\0b\0\0\0\'\0\0\0\127p\u{f0}\u{ff}S\0\0\u{e0}z\16\16\0\a\0\0\0c\0\0\0\'\0\0\0\127p\u{f0}\u{ff}S\0\0\u{f0}\u{81}\16\16\0\b\0\0\0d\0\0\0^\0\0\0\127\0\0\6K\0\0\2\u{89}\16\16\0\3\0\0\0e\0\0\0f\0\0\0\127p\0\0\'0\0\0\u{8c}\16\16\0\a\0\0\0g\0\0\0\'\0\0\0\127p\0\u{fe}S\0\0"\u{93}\16\16\0\b\0\0\0h\0\0\0\'\0\0\0\127p\0\u{fe}S \0"\u{9b}\16\16\0\6\0\0\0i\0\0\0\'\0\0\0\127\0\0\u{fe}S\0\0\n\u{a1}\16\16\0\3\0\0\0j\0\0\0f\0\0\0\127p\0\0\' \0\0\u{a4}\16\16\0\3\0\0\0k\0\0\0l\0\0\0\127\0\0\0o\0\0\0\u{a7}\16\16\0\4\0\0\0m\0\0\0n\0\0\0\127p\0\0g\0\0\0\u{ab}\16\16\0\2\0\0\0o\0\0\0\\\0\0\0\127p\0\0\3\0\0\0\u{ad}\16\16\0\3\0\0\0p\0\0\0\\\0\0\0\127p\0\0\3@\0\0\u{b0}\16\16\0\2\0\0\0q\0\0\0\\\0\0\0\127p\0\0\30\0\0\u{b2}\16\16\0\2\0\0\0r\0\0\0\\\0\0\0\127p\0\0\3\16\0\0\u{b4}\16\16\0\3\0\0\0s\0\0\0\\\0\0\0\127p\0\0\3P\0\0\u{b7}\16\16\0\4\0\0\0t\0\0\0\'\0\0\0\127p\u{f0}\u{f9}/0\0\16\u{bb}\16\16\0\4\0\0\0u\0\0\0\'\0\0\0\127p\u{f0}\u{f9}/ \0\16\u{bf}\16\16\0\3\0\0\0v\0\0\09\0\0\0\127\0\0\07\0\0\0\u{c2}\16\16\0\2\0\0\0w\0\0\0\\\0\0\0\127p\0\0\3 \0\0\u{c4}\16\16\0\3\0\0\0x\0\0\0\\\0\0\0\127p\0\0\3`\0\0\u{c7}\16\16\0\3\0\0\0y\0\0\0\'\0\0\0\127p\0\u{fe}3\0\0\2\u{ca}\16\16\0\4\0\0\0z\0\0\0\'\0\0\0\127p\0\u{fe}3\16\0\2\u{ce}\16\16\0\5\0\0\0{\0\0\0\'\0\0\0\127p\0\u{fe}30\0\2\u{d3}\16\16\0\6\0\0\0|\0\0\0\'\0\0\0\127p\0\u{fe}3 \0\2\u{d9}\16\16\0\4\0\0\0}\0\0\0\'\0\0\0\127p\0\u{fe};\0\0\2\u{dd}\16\16\0\4\0\0\0~\0\0\0M\0\0\0\u{ff}\u{ff}\u{ff}\u{ff}s\0 0\u{e1}\16\16\0\2\0\0\0\127\0\0\0\'\0\0\0\127p\0\u{fe}3`\0\0\u{e3}\16\16\0\3\0\0\0\u{80}\0\0\0)\0\0\0\127p\0\0\19`\0\0\u{e6}\16\16\0\3\0\0\0\u{81}\0\0\0\'\0\0\0\127p\0\u{fe}3`\0\2\u{e9}\16\16\0\4\0\0\0\u{82}\0\0\0\'\0\0\0\127p\0\u{fe}3p\0\2\u{ed}\16\16\0\5\0\0\0\u{83}\0\0\0\'\0\0\0\127p\0\u{fe};p\0\2\u{f2}\16\16\0\4\0\0\0\u{84}\0\0\0\'\0\0\0\127p\0\u{fe};`\0\2\u{f6}\16\16\0\2\0\0\0\u{85}\0\0\0f\0\0\0\127p\0\0#\0\0\0\u{f8}\16\16\0\4\0\0\0\u{86}\0\0\0\'\0\0\0\127p\0\u{f8}/0\0\24\u{fc}\16\16\0\4\0\0\0\u{87}\0\0\0\'\0\0\0\127p\0\u{f8}/ \0\24\0\17\16\0\2\0\0\0\u{88}\0\0\0f\0\0\0\127p\0\0#0\0\0\2\17\16\0\n\0\0\0L\0\0\0M\0\0\0\u{ff}\127\0\u{fe}s\0\0\18\f\17\16\0\2\0\0\0\u{89}\0\0\0f\0\0\0\127p\0\0#\16\0\0\14\17\16\0\3\0\0\0\u{8a}\0\0\0\'\0\0\0\127p\0\u{fe}3\16\0\0\17\17\16\0\4\0\0\0\u{8b}\0\0\0\'\0\0\0\127p\0\u{fc}\19\16\0\0\21\17\16\0\5\0\0\0\u{8c}\0\0\0\'\0\0\0\127p\0\u{fe}\27\16\0\0\26\17\16\0\4\0\0\0\u{8d}\0\0\0\'\0\0\0\127p\0\u{fe};\16\0\0\30\17\16\0\3\0\0\0\u{8e}\0\0\0\'\0\0\0\127p\0\u{fe}3 \0\0!\17\16\0\4\0\0\0\u{8f}\0\0\0)\0\0\0\127p\0\0\19 \0\0%\17\16\0\5\0\0\0\u{90}\0\0\0)\0\0\0\127p\0\0\190\0\0*\17\16\0\4\0\0\0\u{91}\0\0\0\'\0\0\0\127p\0\u{fe}30\0\0.\17\16\0\3\0\0\0\u{92}\0\0\0\'\0\0\0\127p\0\u{fe}3P\0@1\17\16\0\4\0\0\0\u{93}\0\0\0\'\0\0\0\127p\0\u{fc}\19P\0@5\17\16\0\5\0\0\0\u{94}\0\0\0\'\0\0\0\127p\0\u{fc}\27P\0@:\17\16\0\4\0\0\0\u{95}\0\0\0\'\0\0\0\127p\0\u{fe};P\0@>\17\16\0\4\0\0\0\u{96}\0\0\0M\0\0\0\u{ff}\u{ff}\u{ff}\u{ff}s\0 \16B\17\16\0\3\0\0\0\u{97}\0\0\0\'\0\0\0\127p\0\u{fe}3P\0\0E\17\16\0\4\0\0\0\u{98}\0\0\0\'\0\0\0\127p\0\u{fc}\19P\0\0I\17\16\0\5\0\0\0\u{99}\0\0\0\'\0\0\0\127p\0\u{fc}\27P\0\0N\17\16\0\4\0\0\0\u{9a}\0\0\0\'\0\0\0\127p\0\u{fe};P\0\0R\17\16\0\3\0\0\0\u{9b}\0\0\0\'\0\0\0\127p\0\u{fe}3\0\0@U\17\16\0\4\0\0\0\u{9c}\0\0\0\'\0\0\0\127p\0\u{fe};\0\0@Y\17\16\0\2\0\0\0\u{9d}\0\0\0f\0\0\0\127p\0\0# \0\0[\17\16\0\4\0\0\0\u{9e}\0\0\0M\0\0\0\u{ff}\u{ff}\u{ff}\u{ff}s\0 \0_\17\16\0\3\0\0\0\u{9f}\0\0\0M\0\0\0\u{ff}\u{ff}\u{ff}\u{ff}s\0P\16b\17\16\0\3\0\0\0\u{a0}\0\0\0\'\0\0\0\127p\0\u{fe}3@\0\0e\17\16\0\4\0\0\0\u{a1}\0\0\0)\0\0\0\127p\0\0\19@\0\0\u{86}\14\16\0V\0\0\09\1\0\0\'\0\0\0\u{86}\14\16\0V\0\0\0J\1\0\0\30\0\0\0\u{86}\14\16\0V\0\0\0\u{c1}\1\0\0(\0\0\0\u{86}\14\16\0V\0\0\0\u{cb}\1\0\0,\0\0\0\u{86}\14\16\0V\0\0\0\u{f8}\1\0\00\0\0\0\u{86}\14\16\0V\0\0\09\2\0\0(\0\0\0Not implemented yet\0\u{86}\14\16\0V\0\0\0h\2\0\0\17\0\0\0\u{86}\14\16\0V\0\0\0j\2\0\0(\0\0\0\u{86}\14\16\0V\0\0\0\u{ab}\2\0\0\18\0\0\0Unknown addressing_mode \n\0\0\0\u{f0}\28\16\0\24\0\0\0\b\29\16\0\1\0\0\0\u{86}\14\16\0V\0\0\0\u{f1}\2\0\0\21\0\0\0PC: ,\29\16\0\3\0\0\0/\29\16\0\1\0\0\0x\14\16\0\0\0\0\0/\29\16\0\1\0\0\0x\14\16\0\0\0\0\0, InstructionPageFault Trap!\n\0\0\0,\29\16\0\3\0\0\0X\29\16\0\29\0\0\0:\0\0\0\u{88}\29\16\0\1\0\0\0\u{86}\14\16\0V\0\0\0K\5\0\0 \0\0\0,\0\0\0\u{a4}\29\16\0\1\0\0\0\u{86}\14\16\0V\0\0\0O\5\0\0 \0\0\0\u{86}\14\16\0V\0\0\0q\5\0\0 \0\0\0\u{86}\14\16\0V\0\0\0\u{8f}\5\0\0 \0\0\0\u{86}\14\16\0V\0\0\0\u{93}\5\0\0 \0\0\0\u{86}\14\16\0V\0\0\0\u{9e}\5\0\0 \0\0\0(\0\0\0\u{a4}\29\16\0\1\0\0\0\0\30\16\0\1\0\0\0\u{86}\14\16\0V\0\0\0\u{a2}\5\0\0 \0\0\0)\0\0\0$\30\16\0\1\0\0\0\u{86}\14\16\0V\0\0\0(\6\0\0 \0\0\0\u{86}\14\16\0V\0\0\0,\6\0\0 \0\0\0zeroraspgptpt0t1t2s0s1a0a1a2a3a4a5a6a7s2s3s4s5s6s7s8s9s10s11t3t4t5t6Unknown register num \0\0\0\u{94}\30\16\0\21\0\0\0\u{86}\14\16\0V\0\0\0u\6\0\0\14\0\0\0\u{86}\14\16\0V\0\0\0\u{8e}\6\0\0+\0\0\0\u{86}\14\16\0V\0\0\0\u{8e}\6\0\0\r\0\0\0\u{86}\14\16\0V\0\0\0\u{99}\6\0\0\27\0\0\0\u{86}\14\16\0V\0\0\0\u{99}\6\0\0\r\0\0\0\u{86}\14\16\0V\0\0\0\u{80}\a\0\0+\0\0\0\u{86}\14\16\0V\0\0\0\u{80}\a\0\0\r\0\0\0\u{86}\14\16\0V\0\0\0\u{96}\a\0\0 \0\0\0\u{86}\14\16\0V\0\0\0\u{96}\a\0\0A\0\0\0\u{86}\14\16\0V\0\0\0\u{a3}\a\0\0 \0\0\0\u{86}\14\16\0V\0\0\0\u{a3}\a\0\0A\0\0\0\u{86}\14\16\0V\0\0\0\u{b0}\a\0\0"\0\0\0\u{86}\14\16\0V\0\0\0\u{b0}\a\0\0E\0\0\0\u{86}\14\16\0V\0\0\0\u{bd}\a\0\0 \0\0\0\u{86}\14\16\0V\0\0\0\u{bd}\a\0\0@\0\0\0\u{86}\14\16\0V\0\0\0\u{ca}\a\0\0"\0\0\0\u{86}\14\16\0V\0\0\0\u{ca}\a\0\0D\0\0\0\u{86}\14\16\0V\0\0\0\u{d7}\a\0\0 \0\0\0\u{86}\14\16\0V\0\0\0\u{d7}\a\0\0A\0\0\0Unknown Privilege mode\0\0\u{86}\14\16\0V\0\0\0\u{ae}\b\0\0,\0\0\0\u{86}\14\16\0V\0\0\0E\t\0\09\0\0\0\u{86}\14\16\0V\0\0\0E\t\0\0\r\0\0\0\u{86}\14\16\0V\0\0\0o\t\0\03\0\0\0\u{86}\14\16\0V\0\0\0o\t\0\0\r\0\0\0\u{86}\14\16\0V\0\0\0\u{cc}\t\0\0&\0\0\0\u{86}\14\16\0V\0\0\0\u{cc}\t\0\0O\0\0\0\u{86}\14\16\0V\0\0\0\u{fe}\t\0\0 \0\0\0\u{86}\14\16\0V\0\0\0\u{fe}\t\0\0I\0\0\0\u{86}\14\16\0V\0\0\0\21\n\0\0\23\0\0\0\u{86}\14\16\0V\0\0\0\22\n\0\0\r\0\0\0\u{86}\14\16\0V\0\0\0\30\n\0\0(\0\0\0\u{86}\14\16\0V\0\0\0"\n\0\0(\0\0\0\u{86}\14\16\0V\0\0\0.\n\0\0.\0\0\0\u{86}\14\16\0V\0\0\0.\n\0\0\r\0\0\0\u{86}\14\16\0V\0\0\0<\n\0\0.\0\0\0\u{86}\14\16\0V\0\0\0<\n\0\0\r\0\0\0\u{86}\14\16\0V\0\0\0J\n\0\09\0\0\0\u{86}\14\16\0V\0\0\0J\n\0\0\r\0\0\0\u{86}\14\16\0V\0\0\0X\n\0\07\0\0\0\u{86}\14\16\0V\0\0\0X\n\0\0\r\0\0\0\u{86}\14\16\0V\0\0\0f\n\0\07\0\0\0\u{86}\14\16\0V\0\0\0f\n\0\0\r\0\0\0\u{86}\14\16\0V\0\0\0\u{a5}\n\0\03\0\0\0\u{86}\14\16\0V\0\0\0\u{a5}\n\0\0\r\0\0\0\u{86}\14\16\0V\0\0\0\u{b3}\n\0\03\0\0\0\u{86}\14\16\0V\0\0\0\u{b3}\n\0\0\r\0\0\0\u{86}\14\16\0V\0\0\0\26\v\0\0\22\0\0\0\u{86}\14\16\0V\0\0\02\v\0\0+\0\0\0\u{86}\14\16\0V\0\0\02\v\0\0\r\0\0\0\u{86}\14\16\0V\0\0\0\u{83}\v\0\0\27\0\0\0\u{86}\14\16\0V\0\0\0\u{83}\v\0\0D\0\0\0\u{86}\14\16\0V\0\0\0\u{b7}\v\0\0&\0\0\0\u{86}\14\16\0V\0\0\0\u{b7}\v\0\0O\0\0\0\u{86}\14\16\0V\0\0\0\u{cb}\v\0\0$\0\0\0\u{86}\14\16\0V\0\0\0\u{cb}\v\0\0M\0\0\0\u{86}\14\16\0V\0\0\0\21\f\0\0!\0\0\0\u{86}\14\16\0V\0\0\0\21\f\0\0\r\0\0\0\u{86}\14\16\0V\0\0\0#\f\0\03\0\0\0\u{86}\14\16\0V\0\0\0#\f\0\0\r\0\0\0\u{86}\14\16\0V\0\0\0\u{d7}\f\0\0 \0\0\0\u{86}\14\16\0V\0\0\0\u{d7}\f\0\0I\0\0\0URET instruction is not implemented yet.\u{86}\14\16\0V\0\0\0\u{e1}\f\0\0\r\0\0\0\u{86}\14\16\0V\0\0\0\0\r\0\0+\0\0\0\u{86}\14\16\0V\0\0\0\0\r\0\0\r\0\0\0\u{86}\14\16\0V\0\0\0`\r\0\02\0\0\0\u{86}\14\16\0V\0\0\0a\r\0\02\0\0\0\u{86}\14\16\0V\0\0\0g\r\0\0%\0\0\0\u{86}\14\16\0V\0\0\0i\r\0\0!\0\0\0\u{86}\14\16\0V\0\0\0l\r\0\0!\0\0\0\u{86}\14\16\0V\0\0\0m\r\0\0!\0\0\0\u{86}\14\16\0V\0\0\0n\r\0\0!\0\0\0\u{86}\14\16\0V\0\0\0q\r\0\0"\0\0\0\u{86}\14\16\0V\0\0\0\u{89}\r\0\0\24\0\0\0\u{86}\14\16\0V\0\0\0\u{8a}\r\0\0/\0\0\0\u{86}\14\16\0V\0\0\0\u{8c}\r\0\0\'\0\0\0\u{86}\14\16\0V\0\0\0\u{8d}\r\0\0\21\0\0\0\u{86}\14\16\0V\0\0\0\u{91}\r\0\0\21\0\0\0\u{86}\14\16\0V\0\0\0\u{92}\r\0\0\21\0\0\0\u{86}\14\16\0V\0\0\0\u{93}\r\0\0\21\0\0\0\u{86}\14\16\0V\0\0\0\u{94}\r\0\0\21\0\0\0\u{86}\14\16\0V\0\0\0\u{95}\r\0\0\21\0\0\0\4\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\3\0\0\0\3\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0\2\0\0\0P\30\16\0T\30\16\0V\30\16\0X\30\16\0Z\30\16\0\\\30\16\0^\30\16\0`\30\16\0b\30\16\0d\30\16\0f\30\16\0h\30\16\0j\30\16\0l\30\16\0n\30\16\0p\30\16\0r\30\16\0t\30\16\0v\30\16\0x\30\16\0z\30\16\0|\30\16\0~\30\16\0\u{80}\30\16\0\u{82}\30\16\0\u{84}\30\16\0\u{86}\30\16\0\u{89}\30\16\0\u{8c}\30\16\0\u{8e}\30\16\0\u{90}\30\16\0\u{92}\30\16\0This elf file seems riscv-tests elf file. Running in test mode.\n\4%\16\0@\0\0\0\nTest Passed with \0\0M%\16\0\17\0\0\0L%\16\0\1\0\0\0Test Failed with \0\0\0p%\16\0\17\0\0\0L%\16\0\1\0\0\0~/.cargo/registry/src/index.crates.io-6f17d22bba15001f/riscv_emu_rust-0.2.0/src/lib.rs\0\0\u{94}%\16\0V\0\0\0\u{97}\0\0\0\16\0\0\0\u{94}%\16\0V\0\0\0\u{97}\0\0\0#\0\0\0\u{94}%\16\0V\0\0\0\u{97}\0\0\06\0\0\0\u{94}%\16\0V\0\0\0\u{97}\0\0\0I\0\0\0\u{94}%\16\0V\0\0\0\u{9b}\0\0\0\27\0\0\0\u{94}%\16\0V\0\0\0\u{a3}\0\0\0\29\0\0\0\u{94}%\16\0V\0\0\0\u{a4}\0\0\0"\0\0\0\u{94}%\16\0V\0\0\0\u{a5}\0\0\0\28\0\0\0\u{94}%\16\0V\0\0\0\u{a6}\0\0\0"\0\0\0\u{94}%\16\0V\0\0\0\u{c5}\1\0\07\0\0\0\u{94}%\16\0V\0\0\0\u{c6}\1\0\07\0\0\0\u{94}%\16\0V\0\0\0\u{ef}\1\0\07\0\0\0\u{94}%\16\0V\0\0\0\u{f0}\1\0\09\0\0\0\u{94}%\16\0V\0\0\0\u{f1}\1\0\07\0\0\0\u{94}%\16\0V\0\0\0\u{f4}\1\0\0N\0\0\0No happen\0\0\0\u{94}%\16\0V\0\0\0\u{e1}\1\0\0\18\0\0\0\u{94}%\16\0V\0\0\0\u{c8}\1\0\0=\0\0\0\u{94}%\16\0V\0\0\0\u{c9}\1\0\0;\0\0\0\u{94}%\16\0V\0\0\0\u{cd}\1\0\0;\0\0\0\u{94}%\16\0V\0\0\0\u{cd}\1\0\0[\0\0\0\u{94}%\16\0V\0\0\0\u{98}\1\0\0$\0\0\0\u{94}%\16\0V\0\0\0\u{92}\1\0\0&\0\0\0\u{94}%\16\0V\0\0\0\u{8c}\1\0\0!\0\0\0\u{94}%\16\0V\0\0\0\u{86}\1\0\0!\0\0\0\u{94}%\16\0V\0\0\0\u{80}\1\0\0!\0\0\0\u{94}%\16\0V\0\0\0z\1\0\0#\0\0\0\u{94}%\16\0V\0\0\0t\1\0\0!\0\0\0\u{94}%\16\0V\0\0\0n\1\0\0"\0\0\0\u{94}%\16\0V\0\0\0h\1\0\0!\0\0\0\u{94}%\16\0V\0\0\0b\1\0\0!\0\0\0\u{94}%\16\0V\0\0\0\u{f4}\0\0\0!\0\0\0\u{94}%\16\0V\0\0\0\u{ee}\0\0\0\29\0\0\0\u{94}%\16\0V\0\0\0\u{e8}\0\0\0"\0\0\0\u{94}%\16\0V\0\0\0\u{e2}\0\0\0\30\0\0\0\u{94}%\16\0V\0\0\0\u{dc}\0\0\0"\0\0\0\u{94}%\16\0V\0\0\0\u{d6}\0\0\0\31\0\0\0\u{94}%\16\0V\0\0\0\u{d0}\0\0\0\30\0\0\0\u{94}%\16\0V\0\0\0\u{ca}\0\0\0\29\0\0\0\u{94}%\16\0V\0\0\0\u{c4}\0\0\0\30\0\0\0\u{94}%\16\0V\0\0\0\u{be}\0\0\0\29\0\0\0\u{94}%\16\0V\0\0\0\u{b8}\0\0\0 \0\0\0\u{94}%\16\0V\0\0\0\u{b2}\0\0\0 \0\0\0\u{94}%\16\0V\0\0\0\u{ac}\0\0\0\29\0\0\0Unknown e_class:\u{a8}(\16\0\16\0\0\0\u{94}%\16\0V\0\0\0\u{a0}\0\0\0\18\0\0\0This file does not seem ELF file\u{94}%\16\0V\0\0\0\u{98}\0\0\0\r\0\0\0~/.cargo/registry/src/index.crates.io-6f17d22bba15001f/riscv_emu_rust-0.2.0/src/device/virtio_block_disk.rs\0\0)\16\0k\0\0\0S\0\0\02\0\0\0\0)\16\0k\0\0\0S\0\0\0\26\0\0\0\0)\16\0k\0\0\0]\0\0\0M\0\0\0\0)\16\0k\0\0\0c\0\0\0 \0\0\0Virtio: No multi queue support yet.\0\0)\16\0k\0\0\0\u{db}\0\0\0\21\0\0\0Unknown ack \u{e0})\16\0\f\0\0\0\0)\16\0k\0\0\0\21\1\0\0\21\0\0\0\0)\16\0k\0\0\05\1\0\0G\0\0\0Length should be eight-byte aligned. \0\0\0\20*\16\0%\0\0\0\0)\16\0k\0\0\02\1\0\0\t\0\0\0\0)\16\0k\0\0\0F\1\0\0\26\0\0\0\0)\16\0k\0\0\0C\1\0\0\t\0\0\0\0)\16\0k\0\0\0Q\1\0\0\23\0\0\0\0)\16\0k\0\0\0\\\1\0\0.\0\0\0\0)\16\0k\0\0\0\\\1\0\0\22\0\0\0\0)\16\0k\0\0\0\u{8f}\1\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0attempt to divide by zero\0\0\0\0)\16\0k\0\0\0\u{9a}\1\0\0\28\0\0\0\0\0\0\0attempt to calculate the remainder with a divisor of zeroThird descriptor should be write.\0\0\0)\16\0k\0\0\0\u{f0}\1\0\0\25\0\0\0Third descriptor length should be one.\0\0\0)\16\0k\0\0\0\u{f3}\1\0\0\25\0\0\0\0)\16\0k\0\0\0\a\2\0\0 \0\0\0Descript chain length should be three.\0\0\0)\16\0k\0\0\0\2\2\0\0\r\0\0\0\u{a4}\0\0\0\b\0\0\0\4\0\0\0\u{a5}\0\0\0\u{a6}\0\0\0\u{a7}\0\0\0\4\0\0\0\4\0\0\0\u{a8}\0\0\0\u{a9}\0\0\0\u{aa}\0\0\0\u{ab}\0\0\0\0\0\0\0\1\0\0\0\u{ac}\0\0\0\u{ad}\0\0\0\u{ae}\0\0\0\u{b4}\0\0\0\4\0\0\0\4\0\0\0\u{b5}\0\0\0\u{b6}\0\0\0\u{b7}\0\0\0\u{b4}\0\0\0\4\0\0\0\4\0\0\0\u{b8}\0\0\0\u{b9}\0\0\0\u{ba}\0\0\0\u{b4}\0\0\0\4\0\0\0\4\0\0\0\u{bb}\0\0\0\u{bc}\0\0\0\u{bd}\0\0\0invalid argsh,\16\0\f\0\0\0/rustc/1b198b3a196442e14fb06978166ab46a4618d131/library/core/src/fmt/mod.rs\0|,\16\0K\0\0\05\1\0\0\r\0\0\0\0assertion failed: mid <= self.len()\u{b4}\0\0\0\4\0\0\0\4\0\0\0\u{be}\0\0\0called `Option::unwrap()` on a `None` valuemainlibrary/std/src/rt.rs;-\16\0\21\0\0\0r\0\0\0\r\0\0\0AccessErrorlibrary/std/src/thread/mod.rsfailed to generate unique thread ID: bitspace exhausted\0\u{88}-\16\07\0\0\0k-\16\0\29\0\0\0J\4\0\0\r\0\0\0|,\16\0\0\0\0\0library/std/src/io/buffered/linewritershim.rs\0\0\0\u{e0}-\16\0-\0\0\0\1\1\0\0)\0\0\0entity not foundpermission deniedconnection refusedconnection resethost unreachablenetwork unreachableconnection abortednot connectedaddress in useaddress not availablenetwork downbroken pipeentity already existsoperation would blocknot a directoryis a directorydirectory not emptyread-only filesystem or storage mediumfilesystem loop or indirection limit (e.g. symlink loop)stale network file handleinvalid input parameterinvalid datatimed outwrite zerono storage spaceseek on unseekable filefilesystem quota exceededfile too largeresource busyexecutable file busydeadlockcross-device link or renametoo many linksinvalid filenameargument list too longoperation interruptedunsupportedunexpected end of fileout of memoryother erroruncategorized error (os error )\0\0\0|,\16\0\0\0\0\0\r1\16\0\v\0\0\0\241\16\0\1\0\0\0already borrowed\u{bf}\0\0\0\0\0\0\0\1\0\0\0\u{c0}\0\0\0library/std/src/io/stdio.rs\0T1\16\0\27\0\0\0}\2\0\0\19\0\0\0T1\16\0\27\0\0\0\u{ea}\2\0\0\20\0\0\0failed printing to : \0\0\0\u{90}1\16\0\19\0\0\0\u{a3}1\16\0\2\0\0\0T1\16\0\27\0\0\0\u{fb}\3\0\0\t\0\0\0stdout\0\0\u{c1}\0\0\0\f\0\0\0\4\0\0\0\u{c2}\0\0\0\u{c3}\0\0\0\u{c4}\0\0\0formatter error\0\u{e8}1\16\0\15\0\0\0(\0\0\0\u{c1}\0\0\0\f\0\0\0\4\0\0\0\u{c5}\0\0\0\u{c6}\0\0\0\u{c7}\0\0\0cannot recursively acquire mutex\282\16\0 \0\0\0library/std/src/sys/wasm/../unsupported/locks/mutex.rs\0\0D2\16\06\0\0\0\20\0\0\0\t\0\0\0library/std/src/sync/once.rs\u{8c}2\16\0\28\0\0\0\u{95}\0\0\02\0\0\0\u{8c}2\16\0\28\0\0\0\u{d0}\0\0\0\20\0\0\0\u{8c}2\16\0\28\0\0\0\u{d0}\0\0\01\0\0\0lock count overflow in reentrant mutexlibrary/std/src/sync/remutex.rs\0\0\0\u{fe}2\16\0\31\0\0\0\u{91}\0\0\0\14\0\0\0library/std/src/sys_common/thread_info.rs\0\0\003\16\0)\0\0\0*\0\0\0+\0\0\0memory allocation of  bytes failed\0\0l3\16\0\21\0\0\0\u{81}3\16\0\r\0\0\0library/std/src/alloc.rs\u{a0}3\16\0\24\0\0\0T\1\0\0\t\0\0\0cannot modify the panic hook from a panicking thread\u{c8}3\16\04\0\0\0library/std/src/panicking.rs\44\16\0\28\0\0\0\u{87}\0\0\0\t\0\0\0\44\16\0\28\0\0\0g\2\0\0\31\0\0\0\44\16\0\28\0\0\0h\2\0\0\30\0\0\0\u{c8}\0\0\0\f\0\0\0\4\0\0\0\u{c9}\0\0\0\u{b4}\0\0\0\b\0\0\0\4\0\0\0\u{ca}\0\0\0\u{b4}\0\0\0\b\0\0\0\4\0\0\0\u{cb}\0\0\0\u{cc}\0\0\0\u{cd}\0\0\0\16\0\0\0\4\0\0\0\u{ce}\0\0\0\u{cf}\0\0\0\u{bf}\0\0\0\0\0\0\0\1\0\0\0\u{d0}\0\0\0operation successfulOnce instance has previously been poisoned\0\0\u{bc}4\16\0*\0\0\0one-time initialization may not be performed recursively\u{f0}4\16\08\0\0\0\16\0\0\0\17\0\0\0\18\0\0\0\16\0\0\0\16\0\0\0\19\0\0\0\18\0\0\0\r\0\0\0\14\0\0\0\21\0\0\0\f\0\0\0\v\0\0\0\21\0\0\0\21\0\0\0\15\0\0\0\14\0\0\0\19\0\0\0&\0\0\08\0\0\0\25\0\0\0\23\0\0\0\f\0\0\0\t\0\0\0\n\0\0\0\16\0\0\0\23\0\0\0\25\0\0\0\14\0\0\0\r\0\0\0\20\0\0\0\b\0\0\0\27\0\0\0\14\0\0\0\16\0\0\0\22\0\0\0\21\0\0\0\v\0\0\0\22\0\0\0\r\0\0\0\v\0\0\0\19\0\0\0 .\16\00.\16\0A.\16\0S.\16\0c.\16\0s.\16\0\u{86}.\16\0\u{98}.\16\0\u{a5}.\16\0\u{b3}.\16\0\u{c8}.\16\0\u{d4}.\16\0\u{df}.\16\0\u{f4}.\16\0\t/\16\0\24/\16\0&/\16\09/\16\0_/\16\0\u{97}/\16\0\u{b0}/\16\0\u{c7}/\16\0\u{d3}/\16\0\u{dc}/\16\0\u{e6}/\16\0\u{f6}/\16\0\r0\16\0&0\16\040\16\0A0\16\0U0\16\0]0\16\0x0\16\0\u{86}0\16\0\u{96}0\16\0\u{ac}0\16\0\u{c1}0\16\0\u{cc}0\16\0\u{e2}0\16\0\u{ef}0\16\0\u{fa}0\16\0Hash table capacity overflowx6\16\0\28\0\0\0/cargo/registry/src/index.crates.io-6f17d22bba15001f/hashbrown-0.14.0/src/raw/mod.rs\u{9c}6\16\0T\0\0\0R\0\0\0(\0\0\0\u{d1}\0\0\0\4\0\0\0\4\0\0\0\u{d2}\0\0\0\u{d3}\0\0\0\u{d4}\0\0\0/rustc/1b198b3a196442e14fb06978166ab46a4618d131/library/core/src/fmt/mod.rsinvalid args\0c7\16\0\f\0\0\0\247\16\0K\0\0\05\1\0\0\r\0\0\0library/alloc/src/raw_vec.rscapacity overflow\0\0\0\u{a4}7\16\0\17\0\0\0\u{88}7\16\0\28\0\0\0\22\2\0\0\5\0\0\0called `Option::unwrap()` on a `None` valuelibrary/alloc/src/ffi/c_str.rs\0\0\0\u{fb}7\16\0\30\0\0\0\27\1\0\07\0\0\0a formatting trait implementation returned an error\0\u{d5}\0\0\0\0\0\0\0\1\0\0\0\19\0\0\0library/alloc/src/fmt.rsp8\16\0\24\0\0\0b\2\0\0 \0\0\0called `Result::unwrap()` on an `Err` value\0\u{d5}\0\0\0\0\0\0\0\1\0\0\0\u{d6}\0\0\0library/alloc/src/sync.rs\0\0\0\u{d4}8\16\0\25\0\0\0o\1\0\02\0\0\0) should be < len (is )removal index (is \0\0\0\239\16\0\18\0\0\0\09\16\0\22\0\0\0\229\16\0\1\0\0\0)invalid args\0\0\0E9\16\0\f\0\0\0library/core/src/fmt/mod.rsBorrowMutError\0\0\0D9\16\0\0\0\0\0:\0\0\0D9\16\0\0\0\0\0\u{90}9\16\0\1\0\0\0\u{90}9\16\0\1\0\0\0panicked at :\n\0\0\u{db}\0\0\0\0\0\0\0\1\0\0\0\u{dc}\0\0\0index out of bounds: the len is  but the index is \0\0\u{cc}9\16\0 \0\0\0\u{ec}9\16\0\18\0\0\0==!=matchesassertion failed: `(left  right)`\n  left: ``,\n right: ``\0\27:\16\0\25\0\0\04:\16\0\18\0\0\0F:\16\0\f\0\0\0R:\16\0\1\0\0\0`: \0\27:\16\0\25\0\0\04:\16\0\18\0\0\0F:\16\0\f\0\0\0t:\16\0\3\0\0\0: \0\0D9\16\0\0\0\0\0\u{98}:\16\0\2\0\0\0\u{dd}\0\0\0\f\0\0\0\4\0\0\0\u{de}\0\0\0\u{df}\0\0\0\u{e0}\0\0\0     { ,  {\n,\n} }((\n,\0\0\0\u{dd}\0\0\0\4\0\0\0\4\0\0\0\u{e1}\0\0\00xlibrary/core/src/fmt/num.rs\0\0\0\u{ee}:\16\0\27\0\0\0i\0\0\0\23\0\0\000010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\u{dd}\0\0\0\4\0\0\0\4\0\0\0\u{e2}\0\0\0\u{e3}\0\0\0\u{e4}\0\0\0\\9\16\0\27\0\0\05\1\0\0\r\0\0\0falsetruelibrary/core/src/slice/memchr.rs\0\0\0\21<\16\0 \0\0\0\u{ad}\0\0\0\t\0\0\0\21<\16\0 \0\0\0\u{91}\0\0\0\30\0\0\0range start index  out of range for slice of length X<\16\0\18\0\0\0j<\16\0"\0\0\0range end index \u{9c}<\16\0\16\0\0\0j<\16\0"\0\0\0\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2\2\2\2\2\2\2\2\2\2\2\2\2\2\2\2\2\2\2\2\2\2\2\2\2\2\2\2\2\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\4\4\4\4\0\0\0\0\0\0\0\0\0\0\0NoneSome\u{dd}\0\0\0\4\0\0\0\4\0\0\0\u{e5}\0\0\0ErrorUtf8Errorvalid_up_toerror_len\0\0\u{dd}\0\0\0\4\0\0\0\4\0\0\0\u{e6}\0\0\0LayoutError'
)end return function(wasm)FUNC_LIST[0]=wasm['env'].func_list[
'event_run_service_heartbeat_on_heartbeat']FUNC_LIST[1]=wasm['env'].func_list[
'static_function_vector_3_new_new_with_position']FUNC_LIST[2]=wasm['env'].
func_list['drop_pointer']FUNC_LIST[3]=wasm['env'].func_list[
'static_function_color_3_from_rgb']FUNC_LIST[4]=wasm['env'].func_list[
'static_function_u_dim_2_from_scale']FUNC_LIST[5]=wasm['env'].func_list[
'get_game']FUNC_LIST[6]=wasm['env'].func_list[
'method_service_provider_get_service']FUNC_LIST[7]=wasm['env'].func_list[
'property_setter_gui_object_size_set_size']FUNC_LIST[8]=wasm['env'].func_list[
'property_setter_text_box_font_set_font']FUNC_LIST[9]=wasm['env'].func_list[
'property_getter_text_box_text']FUNC_LIST[10]=wasm['env'].func_list[
'property_setter_text_box_text_set_text']FUNC_LIST[11]=wasm['env'].func_list[
'property_setter_text_box_text_size_set_text_size']FUNC_LIST[12]=wasm['env'].
func_list[ [[property_setter_text_box_text_x_alignment_set_text_x_alignment]]]
FUNC_LIST[13]=wasm['env'].func_list[
[[property_setter_text_box_text_y_alignment_set_text_y_alignment]]]FUNC_LIST[14]
=wasm['env'].func_list['property_setter_surface_gui_base_adornee_set_adornee']
FUNC_LIST[15]=wasm['env'].func_list[
'property_setter_surface_gui_base_face_set_face']FUNC_LIST[16]=wasm['env'].
func_list[ [[property_setter_surface_gui_pixels_per_stud_set_pixels_per_stud]]]
FUNC_LIST[17]=wasm['env'].func_list[
'property_setter_surface_gui_sizing_mode_set_sizing_mode']FUNC_LIST[18]=wasm[
'env'].func_list['method_http_service_get_async']FUNC_LIST[19]=wasm['env'].
func_list['property_setter_base_part_anchored_set_anchored']FUNC_LIST[20]=wasm[
'env'].func_list['property_setter_base_part_can_collide_set_can_collide']
FUNC_LIST[21]=wasm['env'].func_list[
'property_setter_base_part_can_query_set_can_query']FUNC_LIST[22]=wasm['env'].
func_list['property_setter_base_part_color_set_color']FUNC_LIST[23]=wasm['env'].
func_list['property_setter_base_part_material_set_material']FUNC_LIST[24]=wasm[
'env'].func_list['property_setter_base_part_position_set_position']FUNC_LIST[25]
=wasm['env'].func_list['property_setter_base_part_size_set_size']FUNC_LIST[26]=
wasm['env'].func_list['property_setter_instance_parent_set_parent']FUNC_LIST[27]
=wasm['env'].func_list['static_function_internal_new_instance_new']FUNC_LIST[28]
=wasm['env'].func_list['error']run_init_code()memory_at_0=MEMORY_LIST[0]return{
func_list={['main']=FUNC_LIST[47],['__heap_alloc_string']=FUNC_LIST[112],[
'__heap_alloc_vec']=FUNC_LIST[113],['__drop_box_dyn_fn']=FUNC_LIST[114],['hook']
=FUNC_LIST[115]},table_list={},memory_list={['memory']=MEMORY_LIST[0]},
global_list={['__data_end']=GLOBAL_LIST[1],['__heap_base']=GLOBAL_LIST[2]}}end ]=]
_1e7562c94b3398bd31a94c36b90b0c2e.Parent=_c74059b4194a15f07e05845f854df742
getfenv(0).root=_93e9833fd9ee8d362f5ef506d3c82588 do end local runtime={}if
getfenv().__runtime then runtime=getfenv().__runtime else local HttpService=game
:GetService('HttpService')local root=getfenv(0).root local sourceMap=getfenv(0).
sourceMap runtime.loadedModules={}local nilParentedInstance=Instance.new(
'Script')nilParentedInstance.Name='<nil>'nilParentedInstance.Parent=nil
local function wrappedNS(source,parent)if typeof(source)=='string'then return
getfenv().NS(source,parent)elseif typeof(source)=='Instance'then if source:IsA(
'Script')then local accessToken=HttpService:GenerateGUID(false)local sourcePatch
=string.format(
'\t\t\t\t\t\t--- rojo-script environment tampering ---\n\t\t\t\t\t\t(function()\n\t\t\t\t\t\t\trepeat task.wait() until script.Parent:IsA("Actor")\n\t\t\t\t\t\t\tlocal communication = script.Parent\n\t\t\t\t\t\t\tlocal token = "%s"\n\t\t\t\t\t\t\tlocal c\n\t\t\t\t\t\t\tc = communication:BindToMessage(token .. "| runtime::getPatchedEnvironment<return>", function(environment)\n\t\t\t\t\t\t\t\tsetfenv(0, environment);\n\t\t\t\t\t\t\t\tc:Disconnect()\n\t\t\t\t\t\t\tend)\n\t\t\t\t\t\t\tcommunication:SendMessage(token .. "| runtime::getPatchedEnvironment", script)\n\t\t\t\t\t\tend)()\n\n\t\t\t\t\t'
,accessToken)local created=getfenv().NLS(sourcePatch..sourceMap[source],
nilParentedInstance)local connection local communication=Instance.new('Actor')
created.Disabled=true for _,v in source:GetChildren()do v.Parent=created end
created.Disabled=false connection=communication:BindToMessage(accessToken..
'| runtime::getPatchedEnvironment',function(script)if script~=created then
return end communication:SendMessage(accessToken..
'| runtime::getPatchedEnvironment<return>',runtime.getPatchedEnvironment(script)
)created.Parent=parent connection:Disconnect()end)local amplify=table.create(20,
task.defer)created.Parent=parent pcall(amplify,function()created.Parent=
communication end)return created else error('expected class Script'..' but got '
..source.ClassName)end else error('expected type string | Script'..' but got '..
typeof(source))end end local function wrappedNLS(source,parent)if typeof(source)
=='string'then return getfenv().NLS(source,parent)elseif typeof(source)==
'Instance'then if source:IsA('LocalScript')then local created=getfenv().NLS(
sourceMap[source],nilParentedInstance)created.Disabled=true for _,v in source:
GetChildren()do v.Parent=created end created.Disabled=false created.Parent=
parent return created else error('expected class LocalScript'..' but got '..
source.ClassName)end else error('expected type string | LocalScript'..
' but got '..typeof(source))end end function runtime.getPatchedEnvironment(
script)local e e=setmetatable({script=script,getfenv=function()return e end,
require=runtime.require,NLS=wrappedNLS,NS=wrappedNS,__runtime=runtime,realScript
=getfenv(0).script},{__index=getfenv(0),__metatable='The metatable is locked'})
return e end runtime.require=function(script)if typeof(script)=='number'then
return require(script)end if not script:IsA('ModuleScript')then return error(
'Instance is not a ModuleScript')end if runtime.loadedModules[script]then return
unpack(runtime.loadedModules[script])end local source=sourceMap[script]local
environment=runtime.getPatchedEnvironment(script)local fn,e=loadstring(source)if
not fn then error('Error loading module, loadstring failed '..if e then e else
'no error')else setfenv(fn,environment)runtime.loadedModules[script]={fn()}
return unpack(runtime.loadedModules[script])end end local function runScript(
script)local source=sourceMap[script]local fn,e=loadstring(source)local
environment=runtime.getPatchedEnvironment(script)if not fn then error(
'Error running script, loadstring failed',e)end setfenv(fn,environment)coroutine
.wrap(fn)()end local safeContainer=Instance.new('Script')safeContainer.Name=
'Script'root.Parent=safeContainer safeContainer.Parent=workspace function
runtime.main()for _,instance in root:GetDescendants()do if instance:IsA('Script'
)and not instance.Disabled then runScript(instance)end end end runtime.runScript
=runScript runtime.main()end